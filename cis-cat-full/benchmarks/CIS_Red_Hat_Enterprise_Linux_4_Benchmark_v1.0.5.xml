<?xml version="1.0" encoding="UTF-8" standalone="no"?><xccdf:Benchmark xmlns:xccdf="http://checklists.nist.gov/xccdf/1.1" xmlns:cdfp="http://www.cisecurity.org/xccdf/platform/0.2.3" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:ecl="http://cisecurity.org/check" xmlns:oval-def="http://oval.mitre.org/XMLSchema/oval-definitions-5" xmlns:oval4="http://oval.mitre.org/XMLSchema/oval" xmlns:xccdf10="http://checklists.nist.gov/xccdf/1.0" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="cis_redhat_enterprise_linux_4_benchmark" xsi:schemaLocation="http://checklists.nist.gov/xccdf/1.1 ../misc/xsd/xccdf-1.1.4.xsd http://cisecurity.org/check ../misc/xsd/ecl.xsd">
  <xccdf:status date="2007-04-26">accepted</xccdf:status>
  <xccdf:title>CIS Red Hat 4 and Fedora Core 1, 2, 3, 4, 5 Benchmark</xccdf:title>
  <xccdf:description>This benchmark was developed and tested on Red Hat Enterprise Linux (RHEL) including RHEL 2.1, RHEL 3.0, RHEL 4.0, and Fedora Core 1, 2, 3, 4 and 5. It is likely to work for other Linux distributions â€“ especially Red Hat and Fedora derivatives - as well. The scoring tool may not run or may yield inaccurate results on non-RHEL and non-Fedora systems.</xccdf:description>
  <xccdf:notice id="terms-of-use" xml:lang="en">
    BACKGROUND.
    
    The Center for Internet Security ("CIS") provides benchmarks, scoring tools, software, data, information, suggestions, ideas, and other services and materials from the CIS website or elsewhere ("Products") as a public service to Internet users worldwide.  Recommendations contained in the Products ("Recommendations") result from a consensus-building process that involves many security experts and are generally generic in nature.  The Recommendations are intended to provide helpful information to organizations attempting to evaluate or improve the security of their networks, systems, and devices.  Proper use of the Recommendations requires careful analysis and adaptation to specific user requirements.  The Recommendations are not in any way intended to be a "quick fix" for anyone's information security needs.
    
    NO REPRESENTATIONS, WARRANTIES, OR COVENANTS.
    
    CIS makes no representations, warranties, or covenants whatsoever as to (i) the positive or negative effect of the Products or the Recommendations on the operation or the security of any particular network, computer system, network device, software, hardware, or any component of any of the foregoing or (ii) the accuracy, reliability, timeliness, or completeness of  the Products or the Recommendations.  CIS is providing the Products and the Recommendations "as is" and "as available" without representations, warranties, or covenants of any kind.  
    
    USER AGREEMENTS.
    
    By using the Products and/or the Recommendations, I and/or my organization ("We") agree and acknowledge that:
    
    1.	No network, system, device, hardware, software, or component can be made fully secure;
    2.	We are using the Products and the Recommendations solely at our own risk;
    3.	We are not compensating CIS to assume any liabilities associated with our use of the Products or the Recommendations, even risks that result from 		CIS's negligence or failure to perform; 
    4.	We have the sole responsibility to evaluate the risks and benefits of the Products and Recommendations to us and to adapt the Products and the 			Recommendations to our particular circumstances and requirements;
    5.	Neither CIS, nor any CIS Party (defined below) has any responsibility to make any corrections, updates, upgrades, or bug fixes; or to notify us of 		the need for any such corrections, updates, upgrades, or bug fixes; and
    6.	Neither CIS nor any CIS Party has or will have any liability to us whatsoever (whether based in contract, tort, strict liability or otherwise) for 		any direct, indirect, incidental, consequential, or special damages (including without limitation loss of profits, loss of sales, loss of or damage 		to reputation,loss of customers, loss of software, data, information or emails, loss of privacy, loss of use of any computer or other equipment, 	business interruption, wasted management or other staff resources or claims of any kind against us from third parties) arising out of or in any way 	Connected with our use of or our inability to use any of the Products or Recommendations (even if CIS has been advised of the possibility of such 	damages), including without limitation any liability associated with infringement of intellectual property, defects, bugs, errors, omissions, 	viruses, worms, backdoors, Trojan horses or other harmful items.
    
    GRANT OF LIMITED RIGHTS.
    
    CIS hereby grants each user the following rights, but only so long as the user complies with all of the terms of these Agreed Terms of Use:
    
    1.	Except to the extent that we may have received additional authorization pursuant to a written agreement with CIS, each user may download, install and 	use each of the Products on a single computer;
    2.	Each user may print one or more copies of any Product or any component of a Product that is in a .txt, .pdf, .doc, .mcw, or .rtf format, provided 		that all such copies are printed in full and are kept intact, including without limitation the text of this Agreed Terms of Use in its entirety.
    
    RETENTION OF INTELLECTUAL PROPERTY RIGHTS; LIMITATIONS ON DISTRIBUTION.
    
    The Products are protected by copyright and other intellectual property laws and by international treaties.  We acknowledge and agree that we are not acquiring title to any intellectual property rights in the Products and that full title and all ownership rights to the Products will remain the exclusive property of CIS or CIS Parties.  CIS reserves all rights not expressly granted to users in the preceding section entitled "Grant of limited rights."
    Subject to the paragraph entitled "Special Rules" (which includes a waiver, granted to some classes of CIS Members, of certain limitations in this paragraph), and except as we may have otherwise agreed in a written agreement with CIS, we agree that we will not (i) decompile, disassemble, reverse engineer, or otherwise attempt to derive the source code for any software Product that is not already in the form of source code; (ii) distribute, redistribute, encumber, sell, rent, lease, lend, sublicense, or otherwise transfer or exploit rights to any Product or any component of a Product; (iii) post any Product or any component of a Product on any website, bulletin board, ftp server, newsgroup, or other similar mechanism or device, without regard to whether such mechanism or device is internal or external, (iv) remove or alter trademark, logo, copyright or other proprietary notices, legends, symbols or labels in any Product or any component of a Product; (v) remove these Agreed Terms of Use from, or alter these Agreed Terms of Use as they appear in, any Product or any component of a Product; (vi) use any Product or any component of a Product with any derivative works based directly on a Product or any component of a Product; (vii) use any Product or any component of a Product with other products or applications that are directly and specifically dependent on such Product or any component for any part of their functionality, or (viii) represent or claim a particular level of compliance with a CIS Benchmark, scoring tool or other Product.  We will not facilitate or otherwise aid other individuals or entities in any of the activities listed in this paragraph.
    We hereby agree to indemnify, defend, and hold CIS and all of its officers, directors, members, contributors, employees, authors, developers, agents, affiliates, licensors, information and service providers, software suppliers, hardware suppliers, and all other persons who aided CIS in the creation, development, or maintenance of the Products or Recommendations ("CIS Parties") harmless from and against any and all liability, losses, costs, and expenses (including attorneys' fees and court costs) incurred by CIS or any CIS Party in connection with any claim arising out of any violation by us of the preceding paragraph, including without limitation CIS's right, at our expense, to assume the exclusive defense and control of any matter subject to this indemnification, and in such case, we agree to cooperate with CIS in its defense of such claim.  We further agree that all CIS Parties are third-party beneficiaries of our undertakings in these Agreed Terms of Use. 
    
    SPECIAL RULES.
    
    CIS has created and will from time to time create, special rules for its members and for other persons and organizations with which CIS has a written contractual relationship.  Those special rules will override and supersede these Agreed Terms of Use with respect to the users who are covered by the special rules.
    CIS hereby grants each CIS Security Consulting or Software Vendor Member and each CIS Organizational User Member, but only so long as such Member remains in good standing with CIS and complies with all of the terms of these Agreed Terms of Use, the right to distribute the Products and Recommendations within such Member's own organization, whether by manual or electronic means.  Each such Member acknowledges and agrees that the foregoing grant is subject to the terms of such Member's membership arrangement with CIS and may, therefore, be modified or terminated by CIS at any time.
    CHOICE OF LAW; JURISDICTION; VENUE.
    
    We acknowledge and agree that these Agreed Terms of Use will be governed by and construed in accordance with the laws of the State of Maryland, that any action at law or in equity arising out of or relating to these Agreed Terms of Use shall be filed only in the courts located in the State of Maryland, that we hereby consent and submit to the personal jurisdiction of such courts for the purposes of litigating any such action.  If any of these Agreed Terms of Use shall be determined to be unlawful, void, or for any reason unenforceable, then such terms shall be deemed severable and shall not affect the validity and enforceability of any remaining provisions.
    
    BY USING THE PRODUCTS I(WE) ACKNOWLEDGE THAT WE HAVE READ THESE AGREED TERMS OF USE IN THEIR ENTIRETY, UNDERSTAND THEM, AND I(WE) AGREE TO BE BOUND BY THEM IN ALL RESPECTS.      
  </xccdf:notice>
  <xccdf:version>1.0.5.6</xccdf:version>
  <xccdf:Profile id="rhel4-level-1-profile">
    <xccdf:title>Level 1 Profile</xccdf:title>
    <xccdf:description>
      <xhtml:p>This profile contains all Level 1 configuration items</xhtml:p>
    </xccdf:description>
    <xccdf:select idref="pre-installation-and-installation-lockdown" selected="true"/>
    <xccdf:select idref="configure-ssh" selected="true"/>
    <xccdf:select idref="enable-system-accounting" selected="true"/>
    <xccdf:select idref="install-and-run-bastille" selected="true"/>
    <xccdf:select idref="r0201" selected="true"/>
    <xccdf:select idref="tcp-wrappers-and-firewall" selected="true"/>
    <xccdf:select idref="r0203" selected="true"/>
    <xccdf:select idref="r0204" selected="true"/>
    <xccdf:select idref="r0205" selected="true"/>
    <xccdf:select idref="r0206" selected="true"/>
    <xccdf:select idref="r0207" selected="true"/>
    <xccdf:select idref="r0208" selected="true"/>
    <xccdf:select idref="daemon-umask" selected="true"/>
    <xccdf:select idref="disable-xinetd" selected="true"/>
    <xccdf:select idref="disable-sendmail" selected="true"/>
    <xccdf:select idref="disable-gui-login" selected="true"/>
    <xccdf:select idref="disable-xfont-server" selected="true"/>
    <xccdf:select idref="disable-standard-boot-services" selected="true"/>
    <xccdf:select idref="disable-samba-server" selected="true"/>
    <xccdf:select idref="disable-nfs-server" selected="true"/>
    <xccdf:select idref="disable-nfs-client" selected="true"/>
    <xccdf:select idref="disable-nis-client" selected="true"/>
    <xccdf:select idref="disable-nis-server" selected="true"/>
    <xccdf:select idref="disable-rpc-portmap" selected="true"/>
    <xccdf:select idref="disable-netfs-script" selected="true"/>
    <xccdf:select idref="disable-printer-daemon" selected="true"/>
    <xccdf:select idref="disable-apache-server" selected="true"/>
    <xccdf:select idref="disable-snmp-processes" selected="true"/>
    <xccdf:select idref="disable-dns-server" selected="true"/>
    <xccdf:select idref="disable-mysql" selected="true"/>
    <xccdf:select idref="disable-webmin" selected="true"/>
    <xccdf:select idref="disable-squid" selected="true"/>
    <xccdf:select idref="disable-kudzu" selected="true"/>
    <xccdf:select idref="r0401" selected="true"/>
    <xccdf:select idref="r0402" selected="true"/>
    <xccdf:select idref="capture-authpriv-messages" selected="true"/>
    <xccdf:select idref="additional-ftp-logging" selected="true"/>
    <xccdf:select idref="system-log-file-permissions" selected="true"/>
    <xccdf:select idref="remote-logging" selected="true"/>
    <xccdf:select idref="add-nodev-option-to-appropriate-partitions" selected="true"/>
    <xccdf:select idref="add-nosuid-and-nodev-option-for-removable-media" selected="true"/>
    <xccdf:select idref="disable-user-mounted-removable-file-systems-6.3" selected="true"/>
    <xccdf:select idref="passwd-shadow-group-permissions" selected="true"/>
    <xccdf:select idref="world-writable-directories-sticky-bit" selected="true"/>
    <xccdf:select idref="find-unauthorized-world-writable-files-6.6" selected="true"/>
    <xccdf:select idref="find-unauthorized-suid-sgid-system-executables-6.7" selected="true"/>
    <xccdf:select idref="find-all-unowned-files-6.8" selected="true"/>
    <xccdf:select idref="disable-usb-devices-aka-hotplugger" selected="true"/>
    <xccdf:select idref="remove-.rhosts-support-in-pam" selected="true"/>
    <xccdf:select idref="create-ftpusers-files" selected="true"/>
    <xccdf:select idref="x-server-nolisten-tcp" selected="true"/>
    <xccdf:select idref="restrict-at-cron-to-authorized-users" selected="true"/>
    <xccdf:select idref="crontab-permissions" selected="true"/>
    <xccdf:select idref="configure-xinetd-access-control-7.6" selected="true"/>
    <xccdf:select idref="restrict-root-logins-to-system-console" selected="true"/>
    <xccdf:select idref="set-lilo-grub-password" selected="true"/>
    <xccdf:select idref="require-authentication-for-single-user-mode" selected="true"/>
    <xccdf:select idref="restrict-nfs-client-requests-to-privileged-ports" selected="true"/>
    <xccdf:select idref="block-system-accounts" selected="true"/>
    <xccdf:select idref="verify-no-accounts-with-empty-password" selected="true"/>
    <xccdf:select idref="set-account-expiration-parameters" selected="true"/>
    <xccdf:select idref="legacy-plus-entries-in-passwd-shadow-group" selected="true"/>
    <xccdf:select idref="no-.-or-group-world-writable-directory-in-roots-path-8.6" selected="true"/>
    <xccdf:select idref="user-home-directory-permissions" selected="true"/>
    <xccdf:select idref="no-user-dot-files-should-be-world-writable" selected="true"/>
    <xccdf:select idref="remove-user-.netrc-files" selected="true"/>
    <xccdf:select idref="set-default-umask-for-users" selected="true"/>
    <xccdf:select idref="disable-core-dumps" selected="true"/>
    <xccdf:select idref="limit-access-to-the-root-account-from-su" selected="true"/>
    <xccdf:select idref="etc-issue-warnings" selected="true"/>
    <xccdf:select idref="gui-based-warnings" selected="true"/>
    <xccdf:select idref="vsftpd-banner" selected="true"/>
    <xccdf:select idref="apply-latest-os-patches" selected="false"/>
    <xccdf:select idref="validate-your-system-before-making-changes" selected="false"/>
    <xccdf:select idref="syslog-accept-messages" selected="false"/>
  </xccdf:Profile>
  <xccdf:Group id="patches-packages-and-initial-lockdown">
    <xccdf:title>Patches, Packages and Initial Lockdown</xccdf:title>
    <xccdf:description>This group specifies how patches should be scheduled, applied and initial lockdown of a new install.</xccdf:description>
    <xccdf:Rule id="apply-latest-os-patches" role="unscored" selected="false" weight="0.0">
      <xccdf:title>Apply Latest OS Patches</xccdf:title>
      <xccdf:description>
        <xhtml:p>
          <xhtml:strong>Update system per your Enterprise Update procedures. For non-enterprise environments, and or environments
                        without a formal update procedure use either up2date which is typically used for Red Hat Enterprise and yum is
                        commonly used for Fedora Core systems. Red Hat Enterprise: up2date â€“u Fedora Core: yum update</xhtml:strong>
        </xhtml:p>
        <xhtml:br/>
        <xhtml:p>Developing a procedure for keeping up-to-date with vendor patches is critical for the security and reliability of
                    the system. Vendors issue operating system updates when they become aware of security vulnerabilities and other serious
                    functionality issues, but it is up to their customers to actually download and install these patches.</xhtml:p>
        <xhtml:br/>
        <xhtml:p>When Red Hat publishes an update, they include the procedures with it for updating the package. This usually
                    entails downloading the new RPMs from Red Hat, and making them available to the individual servers. Some Enterprises
                    make these packages available over an NFS share or an internal anonymous FTP/HTTP server - your Enterprise may follow
                    this practice or do something different.</xhtml:p>
        <xhtml:br/>
        <xhtml:p>It is also important to observe that your applications work properly after patching. Though problems in patches are
                    quite rare in Red Hat Enterprise Linux, it is generally recommended that any patch be deployed to a non-production
                    system first for testing.</xhtml:p>
        <xhtml:br/>
        <xhtml:p>Some RPMs may need to be installed before others. For the most part, RPM understands and solves dependencies. Red
                    Hat creates separate instructions for special cases, like the replacement of the kernel or the general C library glibc.
                    You may need to examine the list of updates that you have downloaded to check for any of these cases.</xhtml:p>
        <xhtml:br/>
        <xhtml:p>Finally, there is some risk to using a non-patched, non-hardened machine to download the patches, as this involves
                    connecting a system with security vulnerabilities on a network, which is not an Industry Best Practice. Please consider
                    these issues carefully.</xhtml:p>
        <xhtml:br/>
        <xhtml:p>Red Hat offers at least partially automated patch download and installation, via Red
                    Hat<xhtml:code>up2date</xhtml:code>. In lieu of an existing Enterprise Standard, consider installing
                        either<xhtml:code>up2date</xhtml:code>(Red Hat Enterprise Linux) or<xhtml:code>yum</xhtml:code>(Fedora Core) now,
                    and using it whenever Red Hat announces a vulnerability. If your Enterprise has several servers, consider installing an
                    update server that can be used in place of Red Hat's<xhtml:code>up2date</xhtml:code>servers - the updates will go much
                    faster, you will use much less bandwidth from your ISP, and you will reduce the load on Red Hat's servers.
                        If<xhtml:code>up2date</xhtml:code>/<xhtml:code>yum</xhtml:code>is used, it should be used on a lab server and the
                    patches validated and the system regression tested before going to live/production systems. For Fedora Core systems
                    there is a chkconfig script which if enabled, will perform nightly yum updates.</xhtml:p>
        <xhtml:br/>
      </xccdf:description>
    </xccdf:Rule>
    <xccdf:Rule id="validate-your-system-before-making-changes" role="unscored" selected="false" weight="0.0">
      <xccdf:title>Validate Your System Before Making Changes</xccdf:title>
      <xccdf:description>
        <xhtml:p>Ensuring your system is functioning properly before you make a change is a prudent system administration best
                    practice and will save you hours of aggravation. Applying this Benchmark to a system that already has issues makes
                    troubleshooting very difficult and may lead you to believe the Benchmark is at fault.</xhtml:p>
        <xhtml:br/>
        <xhtml:p>Examine the system and application logs (<xhtml:code>/var/log</xhtml:code>). Key words to look for include, but are
                    not limited to, "error", "warning", "critical", and "alert".</xhtml:p>
        <xhtml:br/>
        <xhtml:p>
          <xhtml:strong>
            <xhtml:i>Resolve all issues before continuing.</xhtml:i>
          </xhtml:strong>
        </xhtml:p>
        <xhtml:br/>
      </xccdf:description>
    </xccdf:Rule>
    <xccdf:Rule id="configure-ssh" role="full" selected="false" weight="1.0">
      <xccdf:title>Configure SSH</xccdf:title>
      <xccdf:description>
        <xhtml:p>OpenSSH is a popular free distribution of the standards-track SSH protocols which has become the standard
                    implementation on Linux distributions. For more information on OpenSSH, see<xhtml:a href="http://www.openssh.org">http://www.openssh.org</xhtml:a>.</xhtml:p>
        <xhtml:br/>
        <xhtml:p>The settings in this section attempt to ensure safe defaults for both the client and the server. Specifically, both
                    the ssh client and the sshd server are configured to use only SSH protocol 2, as security vulnerabilities have been
                    found in the first SSH protocol. This may cause compatibility issues at sites still using the vulnerable SSH protocol 1
                    these sites should endeavor to configure all systems to use only SSH protocol 2.</xhtml:p>
        <xhtml:br/>
        <xhtml:p>Note that a banner is added in the<xhtml:code>sshd_config</xhtml:code>file - we will create this banner later and
                    it is discussed in detail in section 9. If you choose not to implement a banner, you will have to remove the reference
                        to<xhtml:code>/etc/issue</xhtml:code>from<xhtml:code>sshd_config</xhtml:code>manually. Please read the section on
                    the legal use of banners before deciding to remove it.</xhtml:p>
        <xhtml:br/>
      </xccdf:description>
      <xccdf:complex-check operator="AND">
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/ssh/ssh_config Protocol 2-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="command test Â«egrep '^[[:space:]]*Protocol[[:space:]]+2[[:space:]]*$' /etc/ssh/ssh_configÂ»" success="pass">
              <ecl:command>egrep '^[[:space:]]*Protocol[[:space:]]+2[[:space:]]*$' /etc/ssh/ssh_config</ecl:command>
              <ecl:line-selection op="pm" value="^.*$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/ssh/sshd_config Protocol 2-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="command test Â«egrep '^[[:space:]]*Protocol[[:space:]]+2[[:space:]]*$' /etc/ssh/sshd_configÂ»" success="pass">
              <ecl:command>egrep '^[[:space:]]*Protocol[[:space:]]+2[[:space:]]*$' /etc/ssh/sshd_config</ecl:command>
              <ecl:line-selection op="pm" value="^.*$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/ssh/sshd_config X11Forwarding yes-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="command test Â«egrep '^X11Forwarding[[:space:]]+yes[[:space:]]*$' /etc/ssh/sshd_configÂ»" success="pass">
              <ecl:command>egrep '^X11Forwarding[[:space:]]+yes[[:space:]]*$' /etc/ssh/sshd_config</ecl:command>
              <ecl:line-selection op="pm" value="^.*$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/ssh/sshd_config IgnoreRhosts yes-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="command test Â«egrep '^IgnoreRhosts[[:space:]]+yes[[:space:]]*$' /etc/ssh/sshd_configÂ»" success="pass">
              <ecl:command>egrep '^IgnoreRhosts[[:space:]]+yes[[:space:]]*$' /etc/ssh/sshd_config</ecl:command>
              <ecl:line-selection op="pm" value="^.*$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/ssh/sshd_config HostbasedAuthentication no-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="command test Â«egrep '^HostbasedAuthentication[[:space:]]+no[[:space:]]*$' /etc/ssh/sshd_configÂ»" success="pass">
              <ecl:command>egrep '^HostbasedAuthentication[[:space:]]+no[[:space:]]*$' /etc/ssh/sshd_config</ecl:command>
              <ecl:line-selection op="pm" value="^.*$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/ssh/sshd_config RhostsAuthentication no-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="command test Â«egrep '^RhostsAuthentication[[:space:]]+no[[:space:]]*$' /etc/ssh/sshd_configÂ»" success="pass">
              <ecl:command>egrep '^RhostsAuthentication[[:space:]]+no[[:space:]]*$' /etc/ssh/sshd_config</ecl:command>
              <ecl:line-selection op="pm" value="^.*$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/ssh/sshd_config RhostsRSAAuthentication no-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="command test Â«egrep '^RhostsRSAAuthentication[[:space:]]+no[[:space:]]*$' /etc/ssh/sshd_configÂ»" success="pass">
              <ecl:command>egrep '^RhostsRSAAuthentication[[:space:]]+no[[:space:]]*$' /etc/ssh/sshd_config</ecl:command>
              <ecl:line-selection op="pm" value="^.*$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/ssh/sshd_config PermitRootLogin no-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="command test Â«egrep '^PermitRootLogin[[:space:]]+no[[:space:]]*$' /etc/ssh/sshd_configÂ»" success="pass">
              <ecl:command>egrep '^PermitRootLogin[[:space:]]+no[[:space:]]*$' /etc/ssh/sshd_config</ecl:command>
              <ecl:line-selection op="pm" value="^.*$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/ssh/sshd_config PermitEmptyPasswords no-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="command test Â«egrep '^PermitEmptyPasswords[[:space:]]+no[[:space:]]*$' /etc/ssh/sshd_configÂ»" success="pass">
              <ecl:command>egrep '^PermitEmptyPasswords[[:space:]]+no[[:space:]]*$' /etc/ssh/sshd_config</ecl:command>
              <ecl:line-selection op="pm" value="^.*$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/ssh/sshd_config Banner /etc/issue.net-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="command test Â«egrep '^Banner[[:space:]]+/etc/issue\.net[[:space:]]*$' /etc/ssh/sshd_configÂ»" success="pass">
              <ecl:command>egrep '^Banner[[:space:]]+/etc/issue\.net[[:space:]]*$' /etc/ssh/sshd_config</ecl:command>
              <ecl:line-selection op="pm" value="^.*$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="enable-system-accounting" role="full" selected="false" weight="1.0">
      <xccdf:title>Enable System Accounting</xccdf:title>
      <xccdf:description>
        <xhtml:p>
          <xhtml:strong>Note: RHEL 2.1 installation includes<xhtml:code>sysstat</xhtml:code>by default.</xhtml:strong>
        </xhtml:p>
        <xhtml:br/>
        <xhtml:p>System accounting gathers baseline system data (CPU utilization, disk I/O, etc.) every 10 minutes. The data may be
                    accessed with the<xhtml:code>sar</xhtml:code>command, or by reviewing the nightly report files
                        named<xhtml:code>/var/log/sa/sar*</xhtml:code>. Once a normal baseline for the system has been established,
                    unauthorized activity (password crackers and other CPU-intensive jobs,and activity outside of normal usage hours) may be
                    detected due to departures from the normal system performance curve. Note that this data is only archived for one week
                    before being automatically removed by the regular nightly cron job. Administrators may wish to archive
                        the<xhtml:code>/var/log/sa/</xhtml:code>directory on a regular basis to preserve this data for longer periods.</xhtml:p>
        <xhtml:br/>
      </xccdf:description>
      <xccdf:fixtext>
        <xhtml:p>Install package<xhtml:code>sysstat</xhtml:code></xhtml:p>
        <xhtml:br/>
      </xccdf:fixtext>
      <xccdf:check system="http://cisecurity.org/check">
        <!--Package Â«sysstatÂ» is installed-->
        <xccdf:check-content>
          <ecl:shell-command check="all" comment="Package Â«sysstatÂ» is installed" success="pass">
            <ecl:command>rpm -q sysstat</ecl:command>
            <ecl:line-selection op="pm" value=".*"/>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </xccdf:Rule>
    <xccdf:Rule id="install-and-run-bastille" role="full" selected="false" weight="1.0">
      <xccdf:title>Install and Run Bastille</xccdf:title>
      <xccdf:description>
        <xhtml:p>Bastille is a series of perl scripts that ask you questions and hardens your machine based on the answers. The
                    Benchmark will then walk you through opening up your system for the services that have a legitimate Business need.</xhtml:p>
        <xhtml:br/>
        <xhtml:p>In this benchmark, it was decided it is better to direct you to use Bastille rather than incorporate their
                    procedures into this document. This provides fair credit to an excellent resource, and reduces the maintenance effort
                    involved to keep this Benchmark up to date.</xhtml:p>
        <xhtml:br/>
        <xhtml:p>Appendix C discusses the rationale behind all of the answers used in the configuration file.</xhtml:p>
        <xhtml:br/>
        <xhtml:p>
          <xhtml:strong>Note Regarding SUID Programs</xhtml:strong>
        </xhtml:p>
        <xhtml:br/>
        <xhtml:p>Bastille will remove the SUID bit from several utilities
                        like<xhtml:code>ping</xhtml:code>,<xhtml:code>mount</xhtml:code>and<xhtml:code>traceroute</xhtml:code>. If your
                    Enterprise has a business need to allow unprivileged users access to these commands, then you will have to restore the
                    SUID bit (<xhtml:code>chmod 4755</xhtml:code>) after running Bastille. A complete list of files changed is in Appendix
                    B.</xhtml:p>
        <xhtml:br/>
      </xccdf:description>
      <xccdf:fixtext>Download and install the Bastille RPM from<xhtml:a href="http://www.bastille-linux.org/#get">http://www.bastille-linux.org/#get</xhtml:a>. As of this writing, the current version is 3.0.9 - install it like so:<xhtml:blockquote><xhtml:code>rpm -ivh Bastille-3.0.9-1.0.noarch.rpm</xhtml:code></xhtml:blockquote><xhtml:p>Note: Bastille is under constant revision. As of August, 2006, the current version of Bastill is 3.0.9. Download
                    and install the current version listed on the site above.</xhtml:p><xhtml:br/><xhtml:p>Installing the perl modules shown at<xhtml:a href="http://www.bastille-linux.org/perl-rpm-chart.html">http://www.bastille-linux.org/perl-rpm-chart.html</xhtml:a>is not required unless you want to rebuild the Bastille
                    configuration file and need the Bastille tutorial to help you with the choices. Before running Bastille, please review
                    Appendix C and understand the changes that it will make.</xhtml:p><xhtml:br/><xhtml:p>After Bastille is installed, copy the<xhtml:code>bastille.CIS.conf</xhtml:code>file provided in the archive
                    containing the PDF version of this document (and in Appendix C) to<xhtml:code>/etc/Bastille/config</xhtml:code>. Run
                    Bastille in batch mode as shown:</xhtml:p><xhtml:blockquote><xhtml:code>cd /etc/Bastille<xhtml:br/>cp /path/to/bastille.CIS.conf config<xhtml:br/>bastille -b<xhtml:br/></xhtml:code></xhtml:blockquote><xhtml:p>At this point, Bastille commits the changes.</xhtml:p><xhtml:br/><xhtml:p><xhtml:i><xhtml:strong>Reboot now.</xhtml:strong></xhtml:i>Then proceed with the Benchmark. Rebooting is required as many services are disabled by Bastille and the
                    remainder of the Benchmark is based on this environment.</xhtml:p><xhtml:br/><xhtml:p><xhtml:strong>Reboot now:</xhtml:strong><xhtml:code>init 6</xhtml:code></xhtml:p></xccdf:fixtext>
      <xccdf:check system="http://cisecurity.org/check">
        <!--Package Â«BastilleÂ» is installed-->
        <xccdf:check-content>
          <ecl:shell-command check="all" comment="Package Â«BastilleÂ» is installed" success="pass">
            <ecl:command>rpm -q Bastille</ecl:command>
            <ecl:line-selection op="pm" value=".*"/>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </xccdf:Rule>
  </xccdf:Group>
  <xccdf:Group id="minimize-xinetd-network-services-2" selected="true">
    <xccdf:title>Minimize xinetd network services</xccdf:title>
    <xccdf:description>
      <xhtml:p>On Linux,<xhtml:code>xinetd</xhtml:code>has outpaced<xhtml:code>inetd</xhtml:code>as the default network superserver.
                Red Hat Enterprise Linux and Fedora continue the Red Hat tradition of using<xhtml:code>xinetd</xhtml:code>.</xhtml:p>
      <xhtml:br/>
      <xhtml:p>The stock<xhtml:code>inetd</xhtml:code>and<xhtml:code>xinetd</xhtml:code>configurations have gotten better and better
                with each major release over the past years. In 1999, at the time of Red Hat 5.2, distributions offered many services which
                were either rarely-used or for which there were more secure alternatives. After enabling SSH, it is possible to nearly do
                away with all<xhtml:code>xinetd</xhtml:code>-based services, since SSH provides both a secure login mechanism and a means of
                transferring files to and from the system. The actions in this group will disable all standard services normally enabled in
                the Red Hat<xhtml:code>xinetd</xhtml:code>configuration.</xhtml:p>
      <xhtml:br/>
      <xhtml:p>The rest of the actions in this section give the administrator the option of re-enabling certain services. Rather than
                disabling and then re-enabling these services, experienced administrators may wish to simply disable only those services
                that they know are unnecessary for their systems. If there is any doubt, it is better to disable everything, then re-enable
                the necessary services based on the function of the server.</xhtml:p>
    </xccdf:description>
    <xccdf:Rule id="r0201" role="full" selected="false" weight="1.0">
      <xccdf:title>Disable Standard Services</xccdf:title>
      <xccdf:description>
        <xhtml:p>On Linux, xinetd has outpaced inetd as the default network superserver.  Red Hat 
        Enterprise Linux and Fedora continue the Red Hat tradition of using xinetd.</xhtml:p>
                
        <xhtml:p>The stock inetd and xinetd configurations have gotten better and better with each 
        major release over the past years. In 1999, at the time of Red Hat 5.2, distributions 
        offered many services which were either rarely-used or for which there were more secure 
        alternatives. After enabling SSH, it is possible to nearly do away with all xinetd-based 
        services, since SSH provides both a secure login mechanism and a means of transferring 
        files to and from the system. The actions above will disable all standard services 
        normally enabled in the Red Hat xinetd configuration.</xhtml:p>
        
        <xhtml:p>When running the above commands, you may receive one or more errors like this: 
        error reading information on service xxx: No such file 
        or directory 
        <xhtml:br/>
        This is perfectly acceptable as all it means is the software for that service was not 
        installed. </xhtml:p>
        <xhtml:p>
        The rest of the actions in this section give the administrator the option of re-enabling 
        certain services. Rather than disabling and then re-enabling these services, experienced 
        administrators may wish to simply disable only those services that they know are 
        unnecessary for their systems. If there is any doubt, it is better to disable everything, then 
        re-enable the necessary services based on the function of the server.</xhtml:p>
              
        <xhtml:p>Note: If you attempt to re-enable a service and get a message like this: 
        error reading information on service xxx: No such file 
        or directory 
        it means that you have not installed the software for that service yet.  Install the software 
        package then proceed with the Benchmark.</xhtml:p> 
      </xccdf:description>
      <xccdf:complex-check operator="AND">
        <xccdf:complex-check operator="OR">
          <!--Service Â«chargenÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«chargenÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«chargenÂ» does not exist">
                <ecl:command>chkconfig --list chargen 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«chargenÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«chargenÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list chargen</ecl:command>
                <ecl:line-selection op="pm" value="^chargen((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«chargen-udpÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«chargen-udpÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«chargen-udpÂ» does not exist">
                <ecl:command>chkconfig --list chargen-udp 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«chargen-udpÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«chargen-udpÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list chargen-udp</ecl:command>
                <ecl:line-selection op="pm" value="^chargen-udp((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«cups-lpdÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«cups-lpdÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«cups-lpdÂ» does not exist">
                <ecl:command>chkconfig --list cups-lpd 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«cups-lpdÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«cups-lpdÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list cups-lpd</ecl:command>
                <ecl:line-selection op="pm" value="^cups-lpd((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«cupsÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«cupsÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«cupsÂ» does not exist">
                <ecl:command>chkconfig --list cups 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«cupsÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«cupsÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list cups</ecl:command>
                <ecl:line-selection op="pm" value="^cups((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«daytimeÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«daytimeÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«daytimeÂ» does not exist">
                <ecl:command>chkconfig --list daytime 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«daytimeÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«daytimeÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list daytime</ecl:command>
                <ecl:line-selection op="pm" value="^daytime((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«daytime-udpÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«daytime-udpÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«daytime-udpÂ» does not exist">
                <ecl:command>chkconfig --list daytime-udp 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«daytime-udpÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«daytime-udpÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list daytime-udp</ecl:command>
                <ecl:line-selection op="pm" value="^daytime-udp((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«echoÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«echoÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«echoÂ» does not exist">
                <ecl:command>chkconfig --list echo 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«echoÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«echoÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list echo</ecl:command>
                <ecl:line-selection op="pm" value="^echo((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«echo-udpÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«echo-udpÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«echo-udpÂ» does not exist">
                <ecl:command>chkconfig --list echo-udp 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«echo-udpÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«echo-udpÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list echo-udp</ecl:command>
                <ecl:line-selection op="pm" value="^echo-udp((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«ekloginÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«ekloginÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«ekloginÂ» does not exist">
                <ecl:command>chkconfig --list eklogin 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«ekloginÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«ekloginÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list eklogin</ecl:command>
                <ecl:line-selection op="pm" value="^eklogin((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«ekrb-telnetÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«ekrb-telnetÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«ekrb-telnetÂ» does not exist">
                <ecl:command>chkconfig --list ekrb-telnet 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«ekrb-telnetÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«ekrb-telnetÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list ekrb-telnet</ecl:command>
                <ecl:line-selection op="pm" value="^ekrb-telnet((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«fingerÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«fingerÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«fingerÂ» does not exist">
                <ecl:command>chkconfig --list finger 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«fingerÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«fingerÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list finger</ecl:command>
                <ecl:line-selection op="pm" value="^finger((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«gssftpÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«gssftpÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«gssftpÂ» does not exist">
                <ecl:command>chkconfig --list gssftp 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«gssftpÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«gssftpÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list gssftp</ecl:command>
                <ecl:line-selection op="pm" value="^gssftp((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«imapÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«imapÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«imapÂ» does not exist">
                <ecl:command>chkconfig --list imap 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«imapÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«imapÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list imap</ecl:command>
                <ecl:line-selection op="pm" value="^imap((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«imapsÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«imapsÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«imapsÂ» does not exist">
                <ecl:command>chkconfig --list imaps 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«imapsÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«imapsÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list imaps</ecl:command>
                <ecl:line-selection op="pm" value="^imaps((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«ipop2Â» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«ipop2Â» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«ipop2Â» does not exist">
                <ecl:command>chkconfig --list ipop2 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«ipop2Â» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«ipop2Â» is Â«offÂ»">
                <ecl:command>chkconfig --list ipop2</ecl:command>
                <ecl:line-selection op="pm" value="^ipop2((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«ipop3Â» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«ipop3Â» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«ipop3Â» does not exist">
                <ecl:command>chkconfig --list ipop3 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«ipop3Â» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«ipop3Â» is Â«offÂ»">
                <ecl:command>chkconfig --list ipop3</ecl:command>
                <ecl:line-selection op="pm" value="^ipop3((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«krb5-telnetÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«krb5-telnetÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«krb5-telnetÂ» does not exist">
                <ecl:command>chkconfig --list krb5-telnet 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«krb5-telnetÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«krb5-telnetÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list krb5-telnet</ecl:command>
                <ecl:line-selection op="pm" value="^krb5-telnet((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«kloginÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«kloginÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«kloginÂ» does not exist">
                <ecl:command>chkconfig --list klogin 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«kloginÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«kloginÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list klogin</ecl:command>
                <ecl:line-selection op="pm" value="^klogin((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«kshellÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«kshellÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«kshellÂ» does not exist">
                <ecl:command>chkconfig --list kshell 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«kshellÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«kshellÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list kshell</ecl:command>
                <ecl:line-selection op="pm" value="^kshell((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«ktalkÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«ktalkÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«ktalkÂ» does not exist">
                <ecl:command>chkconfig --list ktalk 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«ktalkÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«ktalkÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list ktalk</ecl:command>
                <ecl:line-selection op="pm" value="^ktalk((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«ntalkÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«ntalkÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«ntalkÂ» does not exist">
                <ecl:command>chkconfig --list ntalk 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«ntalkÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«ntalkÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list ntalk</ecl:command>
                <ecl:line-selection op="pm" value="^ntalk((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«pop3sÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«pop3sÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«pop3sÂ» does not exist">
                <ecl:command>chkconfig --list pop3s 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«pop3sÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«pop3sÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list pop3s</ecl:command>
                <ecl:line-selection op="pm" value="^pop3s((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«rexecÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«rexecÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«rexecÂ» does not exist">
                <ecl:command>chkconfig --list rexec 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«rexecÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«rexecÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list rexec</ecl:command>
                <ecl:line-selection op="pm" value="^rexec((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«rloginÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«rloginÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«rloginÂ» does not exist">
                <ecl:command>chkconfig --list rlogin 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«rloginÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«rloginÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list rlogin</ecl:command>
                <ecl:line-selection op="pm" value="^rlogin((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«rshÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«rshÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«rshÂ» does not exist">
                <ecl:command>chkconfig --list rsh 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«rshÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«rshÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list rsh</ecl:command>
                <ecl:line-selection op="pm" value="^rsh((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«rsyncÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«rsyncÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«rsyncÂ» does not exist">
                <ecl:command>chkconfig --list rsync 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«rsyncÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«rsyncÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list rsync</ecl:command>
                <ecl:line-selection op="pm" value="^rsync((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«serversÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«serversÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«serversÂ» does not exist">
                <ecl:command>chkconfig --list servers 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«serversÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«serversÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list servers</ecl:command>
                <ecl:line-selection op="pm" value="^servers((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«servicesÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«servicesÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«servicesÂ» does not exist">
                <ecl:command>chkconfig --list services 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«servicesÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«servicesÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list services</ecl:command>
                <ecl:line-selection op="pm" value="^services((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«sgi_famÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«sgi_famÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«sgi_famÂ» does not exist">
                <ecl:command>chkconfig --list sgi_fam 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«sgi_famÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«sgi_famÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list sgi_fam</ecl:command>
                <ecl:line-selection op="pm" value="^sgi_fam((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«talkÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«talkÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«talkÂ» does not exist">
                <ecl:command>chkconfig --list talk 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«talkÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«talkÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list talk</ecl:command>
                <ecl:line-selection op="pm" value="^talk((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«telnetÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«telnetÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«telnetÂ» does not exist">
                <ecl:command>chkconfig --list telnet 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«telnetÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«telnetÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list telnet</ecl:command>
                <ecl:line-selection op="pm" value="^telnet((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«tftpÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«tftpÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«tftpÂ» does not exist">
                <ecl:command>chkconfig --list tftp 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«tftpÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«tftpÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list tftp</ecl:command>
                <ecl:line-selection op="pm" value="^tftp((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«timeÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«timeÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«timeÂ» does not exist">
                <ecl:command>chkconfig --list time 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«timeÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«timeÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list time</ecl:command>
                <ecl:line-selection op="pm" value="^time((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«time-udpÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«time-udpÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«time-udpÂ» does not exist">
                <ecl:command>chkconfig --list time-udp 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«time-udpÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«time-udpÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list time-udp</ecl:command>
                <ecl:line-selection op="pm" value="^time-udp((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«vsftpdÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«vsftpdÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«vsftpdÂ» does not exist">
                <ecl:command>chkconfig --list vsftpd 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«vsftpdÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«vsftpdÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list vsftpd</ecl:command>
                <ecl:line-selection op="pm" value="^vsftpd((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«wu-ftpdÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«wu-ftpdÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«wu-ftpdÂ» does not exist">
                <ecl:command>chkconfig --list wu-ftpd 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«wu-ftpdÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«wu-ftpdÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list wu-ftpd</ecl:command>
                <ecl:line-selection op="pm" value="^wu-ftpd((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="tcp-wrappers-and-firewall" role="full" selected="false" weight="1.0">
      <xccdf:title>Configure TCP Wrappers and Firewall to Limit Access</xccdf:title>
      <xccdf:description>
        <xhtml:p>TCP Wrappers and Host-Based Firewalls are presented together as they are similar and complementary in
                    functionality.</xhtml:p>
        <xhtml:br/>
        <xhtml:p>
          <xhtml:u>TCP Wrappers</xhtml:u>
        </xhtml:p>
        <xhtml:br/>
        <xhtml:p>By limiting access to the server, you reduce your exposure to threats from attackers on remote systems. For
                    Internet-connected servers that provide service to the whole Internet, limiting access may not make sense. Intranet
                    servers, limited-access servers, and workstations should limit access to only authorized networks.</xhtml:p>
        <xhtml:br/>
        <xhtml:p>Many daemons (SSH for example) are compiled with TCP Wrapper support, so you can
                        use<xhtml:code>/etc/hosts.allow</xhtml:code>and<xhtml:code>/etc/hosts.deny</xhtml:code>to limit SSH access to your
                    systems. The portmap daemon also uses TCP wrappers and there is a specific note to this effect in the default TCP
                    wrappers config files.</xhtml:p>
        <xhtml:br/>
        <xhtml:p>It is important to note that TCP wrappers looks at<xhtml:code>hosts.allow</xhtml:code>first,
                        then<xhtml:code>hosts.deny</xhtml:code>, and controls access based on the first match. If you omit entries
                        in<xhtml:code>hosts.allow</xhtml:code>and deny access to ALL in<xhtml:code>hosts.deny</xhtml:code>, you will block
                    network access to all network clients.</xhtml:p>
        <xhtml:br/>
        <xhtml:p>
          <xhtml:u>Host-Based Firewalls</xhtml:u>
        </xhtml:p>
        <xhtml:br/>
        <xhtml:p>Host-based firewalls (also known as personal firewalls) have the following benefits:</xhtml:p>
        <xhtml:blockquote>Protection from compromised systems on the local network;</xhtml:blockquote>
        <xhtml:blockquote>Defense in depth where an attacker must overcome both the border firewall and the host-based firewall to
                    attack a system;</xhtml:blockquote>
        <xhtml:blockquote>Extremely fine tuned control over what systems may or may not access the system.</xhtml:blockquote>
        <xhtml:p>The Center for Internet Security recommends installing a host-based firewall on workstations, and suggests
                    end-users consider installing them on servers as well.</xhtml:p>
        <xhtml:br/>
        <xhtml:p>Workstations are defined as Linux systems that offer no services to any external network or system. For example, a
                    workstation that is running Apache and serving up content to the local network segment is not a workstation.</xhtml:p>
        <xhtml:br/>
        <xhtml:p>Host-based firewalls are available in iptables (installed by default) or via commercial offerings. The Center for
                    Internet Security makes no recommendations for a vendor or even a specific firewall configuration as firewalls are very
                    complex systems. Entire books have been written on iptables and are outside the scope of this benchmark. The default Red
                    Hat iptables configuration or the default Bastille Linux iptables configuration are suitable for workstations and are
                    good starting points for servers. The Center for Internet Security does recommend using a tool (graphical- or
                    text-based) to configure the firewall as manual rule configuration is extremely error-prone and you may end up with a
                    false sense of security and have less secure system.</xhtml:p>
        <xhtml:br/>
        <xhtml:p>See the following iptables resources:</xhtml:p>
        <xhtml:br/>
        <xhtml:p>
          <xhtml:strong>
            <xhtml:i>Web-Based</xhtml:i>
          </xhtml:strong>
        </xhtml:p>
        <xhtml:br/>
        <xhtml:p>Linux Firewall Design Tool -<xhtml:a href="http://linux-firewall-tools.com/linux/firewall/index.html">http://linux-firewall-tools.com/linux/firewall/index.html</xhtml:a></xhtml:p>
        <xhtml:br/>
        <xhtml:p>
          <xhtml:strong>
            <xhtml:i>Package-Based</xhtml:i>
          </xhtml:strong>
        </xhtml:p>
        <xhtml:br/>
        <xhtml:p>FireHOL -<xhtml:a href="http://firehol.sourceforge.net/">http://firehol.sourceforge.net/</xhtml:a></xhtml:p>
        <xhtml:br/>
        <xhtml:p>Firewall Builder -<xhtml:a href="http://sourceforge.net/projects/fwbuilder/">http://sourceforge.net/projects/fwbuilder/</xhtml:a></xhtml:p>
        <xhtml:br/>
        <xhtml:p>GuardDog -<xhtml:a href="http://www.simonzone.com/software/guarddog/">http://www.simonzone.com/software/guarddog/</xhtml:a></xhtml:p>
        <xhtml:br/>
        <xhtml:p>
          <xhtml:i>Note: Inclusion of a tool on this list is not an endorsement or recommendation by the Center for Internet
                        Security.</xhtml:i>
        </xhtml:p>
        <xhtml:br/>
      </xccdf:description>
      <xccdf:complex-check operator="AND">
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/hosts.deny ALL:ALL-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="command test Â«egrep '^ALL[[:space:]]*:[[:space:]]*ALL$' /etc/hosts.denyÂ»" success="pass">
              <ecl:command>egrep '^ALL[[:space:]]*:[[:space:]]*ALL$' /etc/hosts.deny</ecl:command>
              <ecl:line-selection op="pm" value="^.*$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/hosts.allow ALL: localhost-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="command test Â«egrep '^ALL[[:space:]]*:[[:space:]]*localhost.*$' /etc/hosts.allowÂ»" success="pass">
              <ecl:command>egrep '^ALL[[:space:]]*:[[:space:]]*localhost.*$' /etc/hosts.allow</ecl:command>
              <ecl:line-selection op="pm" value="^.*$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="r0203" role="full" selected="false" weight="1.0">
      <xccdf:title>Only Enable telnet If Absolutely Necessary</xccdf:title>
      <xccdf:description>
        <xhtml:p>telnet uses an unencrypted network protocol, which means data from the login session 
        (such as passwords and all other data transmitted during the session) can be stolen by 
        eavesdroppers on the network, and also that the session can be hijacked by outsiders to 
        gain access to the remote system. The freely-available SSH utilities that ship with Red 
        Hat Linux (see http://www.openssh.com/) provide encrypted network logins and should 
        be used instead.</xhtml:p>

        <xhtml:p>To aid in the migration to SSH, there is a freely available SSH client for Windows called 
        putty, which is available from Simon Tatham (see 
        http://www.chiark.greenend.org.uk/~sgtatham/putty/).  There are numerous commercially 
        supported SSH clients as well â€“ check to see if your Enterprise already has an Enterprise 
        SSH client.</xhtml:p>
        
        <xhtml:p>Some Enterprises are using telnet over SSL, however, the simpler and more standard 
        solution is to use SSH.  Configuring telnet over SSL is beyond the scope of a Level 1 
        Benchmark and will not be addressed here.</xhtml:p>
        
        <xhtml:p>It is understood that large Enterprises deeply entrenched in using telnet may take 
        12 CIS Red Hat Enterprise Linux Benchmark  
        considerable effort in migrating from telnet to ssh, so telnet may have to be 
        enabled.  When it can be disabled, simply run chkconfig telnet off to turn it off 
        again.</xhtml:p>
      </xccdf:description>
      <xccdf:complex-check operator="OR">
        <!--Service Â«telnetÂ» does not exist or is disabled-->
        <xccdf:check system="http://cisecurity.org/check">
          <!--Service Â«telnetÂ» does not exist-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="Service Â«telnetÂ» does not exist">
              <ecl:command>chkconfig --list telnet 2&gt;/dev/null</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--Service Â«telnetÂ» is Â«offÂ»-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="Service Â«telnetÂ» is Â«offÂ»">
              <ecl:command>chkconfig --list telnet</ecl:command>
              <ecl:line-selection op="pm" value="^telnet((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="r0204" role="full" selected="false" weight="1.0">
      <xccdf:title>Only Enable FTP If Absolutely Necessary</xccdf:title>
      <xccdf:description>
        <xhtml:p>Note: Red Hat switched from distributing wu-ftpd to vsftpd after RHEL2.1 was 
        released.  For security reasons, as well as consistency with future Red Hat versions, you 
        should consider replacing wu-ftpd with vsftpd.  vsftpd is available from the Red 
        Hat Enterprise Linux updates as well as from the Fedora Core distribution.</xhtml:p>
        
        <xhtml:p>Like telnet, the FTP protocol is unencrypted, which means passwords and other data 
        transmitted during the session can be captured by sniffing the network, and that the FTP 
        session itself can be hijacked by an external attacker.  Anonymous FTP servers are 
        common are for providing fast and easy downloading of publicly available files, however 
        anonymous access should be configured to not allow uploading of files to the ftp server. 
        FTP servers are also commonly used for Web Servers, but should be replaced by sftp if 
        possible.  Ftp / sftp access should be chrooted to include the document root of the web 
        site or the portion of the web site that the individual is responsible for.  Of course access 
        to the system configuration files and other web files is to be excluded from the chrooted 
        environment. This is especially important if there are multiple web sites.</xhtml:p>
        
        <xhtml:p>SSH provides two different encrypted file transfer mechanisms â€“ scp and sftp â€“ which 
        should be used instead. Even if FTP is required, consider requiring non-anonymous users 
        on the system to transfer files via SSH-based protocols. For further information on 
        restricting FTP access to the system, see section 7.2 below.</xhtml:p>
        
        <xhtml:p>Note: Any directory writable by an anonymous FTP server should have its own partition. 
        This helps prevent an FTP server from filling a hard drive used by other services.  
        To aid in the migration away from FTP, there are a number of freely available scp and 
        sftp client for Windows, such as  FileZilla from  http://sourceforge.net/projects/filezilla  
        and WinSCP available from http://winscp.sourceforge.net/eng/index.php which provides 
        for a Graphical interface to putty, and pscp, which is a part of the previously mentioned 
        putty package.</xhtml:p>
        
        <xhtml:p>Some Enterprises are using FTP over SSL, however, the simpler and more standard 
        solution is to use SSH.  Configuring FTP over SSL is beyond the scope of a Level 1 
        Benchmark and will not be addressed here.</xhtml:p> 
      </xccdf:description>
      <xccdf:complex-check operator="AND">
        <xccdf:complex-check operator="OR">
          <!--Service Â«wu-ftpdÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«wu-ftpdÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«wu-ftpdÂ» does not exist">
                <ecl:command>chkconfig --list wu-ftpd 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«wu-ftpdÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«wu-ftpdÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list wu-ftpd</ecl:command>
                <ecl:line-selection op="pm" value="^wu-ftpd((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«vsftpdÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«vsftpdÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«vsftpdÂ» does not exist">
                <ecl:command>chkconfig --list vsftpd 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«vsftpdÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«vsftpdÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list vsftpd</ecl:command>
                <ecl:line-selection op="pm" value="^vsftpd((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="r0205" role="full" selected="false" weight="1.0">
      <xccdf:title>Only Enable rlogin/rsh/rcp If Absolutely Necessary</xccdf:title>
      <xccdf:description>
        <xhtml:p>The r-commands suffer from the same hijacking and sniffing issues as telnet and ftp, and 
          in addition have a number of well-known weaknesses in their authentication scheme.  
          SSH was designed to be a drop-in replacement for these protocols. Given the wide 
          availability of free SSH implementations, it seems unlikely that there is ever a case where 
          these tools cannot be replaced with SSH (again, see http://www.openssh.com/).  
          If these protocols are left enabled, please also see section 7.1 for additional security-
          related configuration settings.</xhtml:p>
      </xccdf:description>
      <xccdf:complex-check operator="AND">
        <xccdf:complex-check operator="OR">
          <!--Service Â«shellÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«shellÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«shellÂ» does not exist">
                <ecl:command>chkconfig --list shell 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«shellÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«shellÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list shell</ecl:command>
                <ecl:line-selection op="pm" value="^shell((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«rshÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«rshÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«rshÂ» does not exist">
                <ecl:command>chkconfig --list rsh 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«rshÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«rshÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list rsh</ecl:command>
                <ecl:line-selection op="pm" value="^rsh((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«loginÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«loginÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«loginÂ» does not exist">
                <ecl:command>chkconfig --list login 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«loginÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«loginÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list login</ecl:command>
                <ecl:line-selection op="pm" value="^login((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«rloginÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«rloginÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«rloginÂ» does not exist">
                <ecl:command>chkconfig --list rlogin 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«rloginÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«rloginÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list rlogin</ecl:command>
                <ecl:line-selection op="pm" value="^rlogin((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="r0206" role="full" selected="false" weight="1.0">
      <xccdf:title>Only Enable TFTP Server if Absolutely Necessary</xccdf:title>
      <xccdf:description>
        <xhtml:p>TFTP is typically used for network booting of diskless workstations, X-terminals, and 
          other similar devices. Routers and other network devices may copy configuration data to 
          remote systems via TFTP for backup. However, unless this system is needed in one of 
          these roles, it is best to leave the TFTP service disabled.</xhtml:p>
        
        <xhtml:p>Note: The tftp-server software is not installed by default on Red Hat Enterprise Linux.  
          You will have to install it if you need to use it.  After installing it, perform the actions 
          above. </xhtml:p>
      </xccdf:description>
      <xccdf:complex-check operator="OR">
        <!--Service Â«tftpÂ» does not exist or is disabled-->
        <xccdf:check system="http://cisecurity.org/check">
          <!--Service Â«tftpÂ» does not exist-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="Service Â«tftpÂ» does not exist">
              <ecl:command>chkconfig --list tftp 2&gt;/dev/null</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--Service Â«tftpÂ» is Â«offÂ»-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="Service Â«tftpÂ» is Â«offÂ»">
              <ecl:command>chkconfig --list tftp</ecl:command>
              <ecl:line-selection op="pm" value="^tftp((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="r0207" role="full" selected="false" weight="1.0">
      <xccdf:title>Only Enable IMAP If Absolutely Necessary</xccdf:title>
      <xccdf:description>
        <xhtml:p>Remote mail clients (like Eudora, Netscape Mail and Kmail) may retrieve mail from 
        remote mail servers using IMAP, the Internet Message Access Protocol, or POP, the Post 
        Office Protocol. If this system is a mail server that must offer this protocol, imaps may be activated.</xhtml:p>
        
        <xhtml:p>IMAPs activates an SSL-encrypted, and thus much safer, version of IMAP. Standard 
        IMAP is not encrypted and allows an attacker to eavesdrop on e-mails being transferred 
        or to take over the connection. It may, based on which authentication method is used, 
        allow an attacker to steal user passwords as well. IMAP-SSL suffers none of these 
        problems.</xhtml:p>  
        <xhtml:p>You may wish to generate a new SSL certificate. For more information, consult 
        http://www.redhat.com/docs/manuals/linux/RHL-9-Manual/ref-guide/s1-email-
        mua.html#S2-EMAIL-SECURITY.</xhtml:p>  
        <xhtml:p>Should you have an absolute need to reactivate the insecure IMAP server without 
          encrypting SSL, you may apply the above action with imap in place of imaps.</xhtml:p>  
      </xccdf:description>
      <xccdf:complex-check operator="OR">
        <!--Service Â«imapsÂ» does not exist or is disabled-->
        <xccdf:check system="http://cisecurity.org/check">
          <!--Service Â«imapsÂ» does not exist-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="Service Â«imapsÂ» does not exist">
              <ecl:command>chkconfig --list imaps 2&gt;/dev/null</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--Service Â«imapsÂ» is Â«offÂ»-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="Service Â«imapsÂ» is Â«offÂ»">
              <ecl:command>chkconfig --list imaps</ecl:command>
              <ecl:line-selection op="pm" value="^imaps((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="r0208" role="full" selected="false" weight="1.0">
      <xccdf:title>Only Enable POP If Absolutely Necessary</xccdf:title>
      <xccdf:description>
        <xhtml:p>Remote mail clients (like Eudora, Netscape Mail and Kmail) may retrieve mail from 
        remote mail servers using IMAP, the Internet Message Access Protocol, or POP, the Post 
        Office Protocol. If this system is a mail server that must offer the POP protocol, pop3s 
        may be activated.</xhtml:p>  
        
        <xhtml:p>pop3s activates an SSL-encrypted, and thus much safer, version of POP. Standard POP 
        is not encrypted and thus allows an attacker to eavesdrop on e-mails being transferred or 
        to take over the connection. It may â€“ based on which authentication method is used â€“ 
        allow an attacker to steal user passwords as well. POP-SSL suffers none of these 
        problems. You may wish to generate a new SSL certificate. For more information, 
        consult http://www.redhat.com/docs/manuals/linux/RHL-9-Manual/ref-guide/s1-email-
        mua.html#S2-EMAIL-SECURITY. Should you have an absolute need to reactivate the 
        insecure POP server without encrypting SSL, you may apply the above action with pop3 
        in place of pop3s.</xhtml:p>  
      </xccdf:description>
      <xccdf:complex-check operator="OR">
        <!--Service Â«pop3sÂ» does not exist or is disabled-->
        <xccdf:check system="http://cisecurity.org/check">
          <!--Service Â«pop3sÂ» does not exist-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="Service Â«pop3sÂ» does not exist">
              <ecl:command>chkconfig --list pop3s 2&gt;/dev/null</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--Service Â«pop3sÂ» is Â«offÂ»-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="Service Â«pop3sÂ» is Â«offÂ»">
              <ecl:command>chkconfig --list pop3s</ecl:command>
              <ecl:line-selection op="pm" value="^pop3s((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </xccdf:Rule>
  </xccdf:Group>
  <xccdf:Group id="minimize-boot-services" selected="true">
    <xccdf:title>Minimize boot services</xccdf:title>
    <xccdf:description>This group specifies suggestions for disabling or enabling boot services to minimize attack surface.</xccdf:description>
    <xccdf:Rule id="daemon-umask" role="full" selected="false" weight="1.0">
      <xccdf:title>Set Daemon Umask</xccdf:title>
      <xccdf:description>The system default<xhtml:code>umask</xhtml:code>should be set to at least 027 in order to prevent daemon
                processes (such as the<xhtml:code>syslog</xhtml:code>daemon) from creating world-writable files by default. If a particular
                daemon needs a less restrictive<xhtml:code>umask</xhtml:code>, consider editing the daemon startup script to grant that
                daemon the required<xhtml:code>umask</xhtml:code>while maintaining the increased server security posture.</xccdf:description>
      <xccdf:check system="http://cisecurity.org/check">
        <!--/etc/init.d/functions umask 027-->
        <xccdf:check-content>
          <ecl:shell-command check="all" comment="command test Â«egrep '^umask[[:space:]]+027[[:space:]]*$' /etc/init.d/functionsÂ»" success="pass">
            <ecl:command>egrep '^umask[[:space:]]+027[[:space:]]*$' /etc/init.d/functions</ecl:command>
            <ecl:line-selection op="pm" value="^.*$"/>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </xccdf:Rule>
    <xccdf:Rule id="disable-xinetd" role="full" selected="false" weight="1.0">
      <xccdf:title>Disable xinetd, If Possible</xccdf:title>
      <xccdf:description>
        <xhtml:p>If the actions in Section 2 of this benchmark resulted in no services being enabled in the inet super
                        daemon<xhtml:code>/etc/xinetd.d</xhtml:code>, then the<xhtml:code>xinetd</xhtml:code>service may be disabled
                    completely on this system.</xhtml:p>
        <xhtml:br/>
        <xhtml:p>Experienced SysAdmins will note that the inet super daemon is usually restarted after a change to its configuration
                    file. This is not necessary in this case as the system will be rebooted and the change will take effect at that time.</xhtml:p>
        <xhtml:br/>
      </xccdf:description>
      <xccdf:fixtext>Action:<xhtml:code><!--                   THE FOLLOWING REQURES CHANGES TO OVAL -->cd /etc/xinetd.d for FILE in chargen chargen-udp
                    cups-lpd cups daytime \ daytime-udp echo echo-udp eklogin ekrb5-telnet finger \ gssftp imap imaps ipop2 ipop3
                    krb5-telnet klogin kshell \ ktalk ntalk pop3s rexec rlogin rsh rsync servers services \ sgi_fam talk telnet tftp time
                    time-udp vsftpd wu-ftpd do chkconfig ${FILE} off done</xhtml:code></xccdf:fixtext>
      <xccdf:complex-check operator="OR">
        <!--Service Â«xinetdÂ» does not exist or is disabled-->
        <xccdf:check system="http://cisecurity.org/check">
          <!--Service Â«xinetdÂ» does not exist-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="Service Â«xinetdÂ» does not exist">
              <ecl:command>chkconfig --list xinetd 2&gt;/dev/null</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--Service Â«xinetdÂ» is Â«offÂ»-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="Service Â«xinetdÂ» is Â«offÂ»">
              <ecl:command>chkconfig --list xinetd</ecl:command>
              <ecl:line-selection op="pm" value="^xinetd((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="disable-sendmail" role="full" selected="false" weight="1.0">
      <xccdf:title>disable sendmail</xccdf:title>
      <xccdf:description>
        <xhtml:p>It is possible to run a Unix system with the Sendmail daemon disabled and still allow 
          users on that system to send email out from that machine. Running Sendmail in "daemon 
          mode" (with the -bd command-line option) is only required on machines that act as mail 
          servers, receiving and processing email from other hosts on the network. Note that if the 
          system is an email server, the administrator is encouraged to search the Web for 
          additional documentation on Sendmail security issues. Some information is available at 
          http://www.deer-run.com/~hal/dns-sendmail/DNSandSendmail.pdf and at 
          http://www.sendmail.org.</xhtml:p>
        
         <xhtml:p>Although recent versions of Red Hat have set Sendmail to listen only to the loopback 
          network interface, this document still deactivates "daemon mode."  Listening on the 
          loopback interface still presents a slightly higher level of exposure to attack than not 
          listening at all.  Experienced administrators will understand that a chroot-jailed user or 
          program can still interact with a Sendmail process listening on the loopback interface.</xhtml:p>
      </xccdf:description>
      <xccdf:fix>
        <!--              THIS REQUIRES OVAL CHANGES -->cd if [ `grep -ci "daemon=yes" sendmail` -ne 0 ]; then cat
                &lt;&lt;END_ENTRIES &gt; sendmail DAEMON=no QUEUE=1h END_ENTRIES chown root:root sendmail chmod 644 sendmail
                chkconfig sendmail off fi diff sendmail-preCIS sendmail fi</xccdf:fix>
      <xccdf:complex-check operator="AND">
        <xccdf:complex-check operator="OR">
          <!--Service Â«sendmailÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«sendmailÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«sendmailÂ» does not exist">
                <ecl:command>chkconfig --list sendmail 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«sendmailÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«sendmailÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list sendmail</ecl:command>
                <ecl:line-selection op="pm" value="^sendmail((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="AND">
          <xccdf:complex-check operator="AND">
            <!--alter /etc/sysconfig/sendmail-->
            <xccdf:check system="http://cisecurity.org/check">
              <!--Disable remote mail-->
              <xccdf:check-content>
                <ecl:shell-command check="all" comment="command test Â«egrep '^DAEMON=no[[:space:]]*$' /etc/sysconfig/sendmailÂ»" success="pass">
                  <ecl:command>egrep '^DAEMON=no[[:space:]]*$' /etc/sysconfig/sendmail</ecl:command>
                  <ecl:line-selection op="pm" value="^.*$"/>
                </ecl:shell-command>
              </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
              <!--command test Â«egrep '^QUEUE=1h[[:space:]]*$' /etc/sysconfig/sendmailÂ»-->
              <xccdf:check-content>
                <ecl:shell-command check="all" comment="command test Â«egrep '^QUEUE=1h[[:space:]]*$' /etc/sysconfig/sendmailÂ»" success="pass">
                  <ecl:command>egrep '^QUEUE=1h[[:space:]]*$' /etc/sysconfig/sendmail</ecl:command>
                  <ecl:line-selection op="pm" value="^.*$"/>
                </ecl:shell-command>
              </xccdf:check-content>
            </xccdf:check>
          </xccdf:complex-check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--/etc/sysconfig/sendmail ownership and permissions-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="/etc/sysconfig/sendmail ownership and permission">
                <ecl:command>find /etc/sysconfig/sendmail -follow -maxdepth 0 ! \( -user root -group root -perm u=rw,g=r,o=r
                                    \) -ls</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="disable-gui-login" role="full" selected="false" weight="1.0">
      <xccdf:title>disable gui login</xccdf:title>
      <xccdf:description>
        <xhtml:p>There is usually no reason to run X Windows on a dedicated server machine, like a 
          dedicated web server. This action disables the graphical login, if present, leaving the user 
          to login via SSH or a normal text-based console. If you elect to deactivate the GUI login 
          screen, users can still run X Windows by typing startx at the shell prompt. In Red Hat 
          Enterprise Linux, there are two main runlevels that the system runs in. Runlevel 5 boots 
          directly into X Windows, so as to allow graphical login or easy use of specialized X 
          terminals. Otherwise, for normal text-based console login, runlevel 3 is desirable. GUI 
          login is activated or deactivated by changing this runlevel in /etc/inittab. Again, 
          note that runlevel 3 still allows the user to run X Windows by typing startx at the shell 
          prompt.</xhtml:p>
      </xccdf:description>
      <xccdf:fixtext>
        <xhtml:code>cp /etc/inittab /etc/inittab-preCIS sed -e 's/id:5:initdefault:/id:3:initdefault:/' \ &lt;
                    /etc/inittab-preCIS &gt; /etc/inittab chown root:root /etc/inittab chmod 0600 /etc/inittab</xhtml:code>
      </xccdf:fixtext>
      <xccdf:check system="http://cisecurity.org/check">
        <!--Default runlevel is 3-->
        <xccdf:check-content>
          <ecl:shell-command check="all" comment="command test Â«egrep '^id:3:initdefault:' /etc/inittabÂ»" success="pass">
            <ecl:command>egrep '^id:3:initdefault:' /etc/inittab</ecl:command>
            <ecl:line-selection op="pm" value="^.*$"/>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </xccdf:Rule>
    <xccdf:Rule id="disable-xfont-server" role="full" selected="false" weight="1.0">
      <xccdf:title>disable xfont server</xccdf:title>
      <xccdf:description>
        <xhtml:p>There's usually no reason to run X Windows on a dedicated server machine, like a 
        dedicated web server. If you won't be using an X server on this machine, this action 
        will deactivate the font server.</xhtml:p>  
      </xccdf:description>
      <xccdf:fixtext>
        <xhtml:code>chkconfig xfs off</xhtml:code>
      </xccdf:fixtext>
      <xccdf:complex-check operator="OR">
        <!--Service Â«xfsÂ» does not exist or is disabled-->
        <xccdf:check system="http://cisecurity.org/check">
          <!--Service Â«xfsÂ» does not exist-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="Service Â«xfsÂ» does not exist">
              <ecl:command>chkconfig --list xfs 2&gt;/dev/null</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--Service Â«xfsÂ» is Â«offÂ»-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="Service Â«xfsÂ» is Â«offÂ»">
              <ecl:command>chkconfig --list xfs</ecl:command>
              <ecl:line-selection op="pm" value="^xfs((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="disable-standard-boot-services" role="full" selected="false" weight="1.0">
      <xccdf:title>Disable Standard Boot Services</xccdf:title>
      <xccdf:description>
        <xhtml:p>Every system daemon that does not have a clear and necessary purpose on the host should be deactivated. This
                    greatly reduces the chances that the machine will be running a vulnerable daemon when the next vulnerability is
                    discovered in its operating system.</xhtml:p>
        <xhtml:br/>
        <xhtml:p>Red Hat Linux uses a facility called<xhtml:code>chkconfig</xhtml:code>to manage all the SysV
                        rc-scripts.<xhtml:code>chkconfig</xhtml:code>adds or deletes links in each of the appropriate runlevel directories
                        (<xhtml:code>/etc/rc.d/rc*.d</xhtml:code>) to activate or deactivate each of the rc-scripts.</xhtml:p>
        <xhtml:br/>
        <xhtml:p>This process "<xhtml:code>chkconfig</xhtml:code>'s" all of the rc-scripts off, so that the local administrator can
                    easily reactivate any of these scripts upon discovery of a mission-critical need for one of these services. One could
                    reactivate the daemon script by typing<xhtml:code>chkconfig daemon</xhtml:code>on in most cases, which activates it in
                    runlevels 2 through 5. If one of these runlevels is undesirable, like runlevel 2 for the NFS script, or the script needs
                    to run in one of the other available runlevels,<xhtml:code>chkconfig</xhtml:code>takes the argument "level
                    &lt;levels&gt;" where one can explicitly specify runlevels that it should act on.</xhtml:p>
        <xhtml:br/>
        <xhtml:p>Note that vendor patches may restore some of the original entries in the startup script
                        directories<xhtml:code>/etc/rc.d/rc*.d</xhtml:code>- it is always a good idea to check these boot directories and
                    remove any scripts that may have been added by the patch installation process. This would be a good time to ensure this
                    check is in your Enterprise OS Upgrade Procedure.</xhtml:p>
        <xhtml:br/>
        <xhtml:p>The rest of the actions in this section give the administrator the option of re-enabling certain services - in
                    particular, the services that are disabled in the second loop in the "Action" section above. Rather than disabling and
                    then re-enabling these services, experienced administrators may wish to simply disable only those services that they
                    know are unnecessary for their systems.</xhtml:p>
        <xhtml:br/>
        <xhtml:p>The third loop in the "Action" section locks daemon-user accounts related to servers that we examine by setting a
                    lockout password. This will not prevent a given daemon from running as these users - it simply confirms that these users
                    are not available for human login. It also changes the shell to<xhtml:code>/dev/null</xhtml:code>for an additional layer
                    of security as long as shell access is not necessary. Bear in mind that some packages
                    (<xhtml:code>find-utils</xhtml:code>up to version 4.1.20, for example) do not work properly without a shell for
                        the<xhtml:code>nobody</xhtml:code>account - be sure you test this thoroughly if you choose to invalidate the daemon
                    shells.</xhtml:p>
        <xhtml:br/>
        <xhtml:p>Note: Not all of the scripts listed above will exist on all systems, as this is a superset of the available
                    rc-scripts in the various Red Hat distribution versions. The benchmark's recommended action will register some trivial
                    errors on each distribution version as a result - these are not cause for alarm.</xhtml:p>
        <xhtml:br/>
      </xccdf:description>
      <xccdf:fixtext>
        <xhtml:code>
          <!-- REQUIRES OVAL CHANGES -->for FILE in apmd avahi-daemon canna cups-config-daemon \ FreeWnn gpm hidd hpoj hplip innd
                    irda isdn kdcrotate \ lvs mars-nwe messagebus oki4daemon privoxy rstatd \ rusersd rwalld rwhod spamassassin wine; do
                    service $FILE stop chkconfig $FILE off done for FILE in nfs nfslock autofs ypbind ypserv yppasswdd \ portmap smb netfs
                    lpd apache httpd tux snmpd \ named postgresql mysqld webmin kudzu squid cups \ ip6tables iptables pcmcia bluetooth
                    mDNSResponder; do service $FILE stop chkconfig $FILE off done</xhtml:code>
      </xccdf:fixtext>
      <xccdf:complex-check operator="AND">
        <xccdf:complex-check operator="OR">
          <!--Service Â«FreeWnnÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«FreeWnnÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«FreeWnnÂ» does not exist">
                <ecl:command>chkconfig --list FreeWnn 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«FreeWnnÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«FreeWnnÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list FreeWnn</ecl:command>
                <ecl:line-selection op="pm" value="^FreeWnn((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«apacheÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«apacheÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«apacheÂ» does not exist">
                <ecl:command>chkconfig --list apache 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«apacheÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«apacheÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list apache</ecl:command>
                <ecl:line-selection op="pm" value="^apache((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«apmdÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«apmdÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«apmdÂ» does not exist">
                <ecl:command>chkconfig --list apmd 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«apmdÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«apmdÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list apmd</ecl:command>
                <ecl:line-selection op="pm" value="^apmd((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«autofsÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«autofsÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«autofsÂ» does not exist">
                <ecl:command>chkconfig --list autofs 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«autofsÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«autofsÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list autofs</ecl:command>
                <ecl:line-selection op="pm" value="^autofs((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«avahi-daemonÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«avahi-daemonÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«avahi-daemonÂ» does not exist">
                <ecl:command>chkconfig --list avahi-daemon 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«avahi-daemonÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«avahi-daemonÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list avahi-daemon</ecl:command>
                <ecl:line-selection op="pm" value="^avahi-daemon((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«bluetoothÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«bluetoothÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«bluetoothÂ» does not exist">
                <ecl:command>chkconfig --list bluetooth 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«bluetoothÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«bluetoothÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list bluetooth</ecl:command>
                <ecl:line-selection op="pm" value="^bluetooth((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«cannaÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«cannaÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«cannaÂ» does not exist">
                <ecl:command>chkconfig --list canna 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«cannaÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«cannaÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list canna</ecl:command>
                <ecl:line-selection op="pm" value="^canna((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«cupsÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«cupsÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«cupsÂ» does not exist">
                <ecl:command>chkconfig --list cups 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«cupsÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«cupsÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list cups</ecl:command>
                <ecl:line-selection op="pm" value="^cups((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«cups-config-daemonÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«cups-config-daemonÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«cups-config-daemonÂ» does not exist">
                <ecl:command>chkconfig --list cups-config-daemon 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«cups-config-daemonÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«cups-config-daemonÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list cups-config-daemon</ecl:command>
                <ecl:line-selection op="pm" value="^cups-config-daemon((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«gpmÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«gpmÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«gpmÂ» does not exist">
                <ecl:command>chkconfig --list gpm 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«gpmÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«gpmÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list gpm</ecl:command>
                <ecl:line-selection op="pm" value="^gpm((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«hiddÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«hiddÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«hiddÂ» does not exist">
                <ecl:command>chkconfig --list hidd 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«hiddÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«hiddÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list hidd</ecl:command>
                <ecl:line-selection op="pm" value="^hidd((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«hplipÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«hplipÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«hplipÂ» does not exist">
                <ecl:command>chkconfig --list hplip 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«hplipÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«hplipÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list hplip</ecl:command>
                <ecl:line-selection op="pm" value="^hplip((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«hpojÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«hpojÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«hpojÂ» does not exist">
                <ecl:command>chkconfig --list hpoj 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«hpojÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«hpojÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list hpoj</ecl:command>
                <ecl:line-selection op="pm" value="^hpoj((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«httpdÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«httpdÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«httpdÂ» does not exist">
                <ecl:command>chkconfig --list httpd 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«httpdÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«httpdÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list httpd</ecl:command>
                <ecl:line-selection op="pm" value="^httpd((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«inndÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«inndÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«inndÂ» does not exist">
                <ecl:command>chkconfig --list innd 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«inndÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«inndÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list innd</ecl:command>
                <ecl:line-selection op="pm" value="^innd((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«ip6tablesÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«ip6tablesÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«ip6tablesÂ» does not exist">
                <ecl:command>chkconfig --list ip6tables 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«ip6tablesÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«ip6tablesÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list ip6tables</ecl:command>
                <ecl:line-selection op="pm" value="^ip6tables((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«iptablesÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«iptablesÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«iptablesÂ» does not exist">
                <ecl:command>chkconfig --list iptables 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«iptablesÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«iptablesÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list iptables</ecl:command>
                <ecl:line-selection op="pm" value="^iptables((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«irdaÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«irdaÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«irdaÂ» does not exist">
                <ecl:command>chkconfig --list irda 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«irdaÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«irdaÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list irda</ecl:command>
                <ecl:line-selection op="pm" value="^irda((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«isdnÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«isdnÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«isdnÂ» does not exist">
                <ecl:command>chkconfig --list isdn 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«isdnÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«isdnÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list isdn</ecl:command>
                <ecl:line-selection op="pm" value="^isdn((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«kdcrotateÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«kdcrotateÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«kdcrotateÂ» does not exist">
                <ecl:command>chkconfig --list kdcrotate 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«kdcrotateÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«kdcrotateÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list kdcrotate</ecl:command>
                <ecl:line-selection op="pm" value="^kdcrotate((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«kudzuÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«kudzuÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«kudzuÂ» does not exist">
                <ecl:command>chkconfig --list kudzu 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«kudzuÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«kudzuÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list kudzu</ecl:command>
                <ecl:line-selection op="pm" value="^kudzu((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«lpdÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«lpdÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«lpdÂ» does not exist">
                <ecl:command>chkconfig --list lpd 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«lpdÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«lpdÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list lpd</ecl:command>
                <ecl:line-selection op="pm" value="^lpd((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«lvsÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«lvsÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«lvsÂ» does not exist">
                <ecl:command>chkconfig --list lvs 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«lvsÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«lvsÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list lvs</ecl:command>
                <ecl:line-selection op="pm" value="^lvs((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«mDNSResponderÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«mDNSResponderÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«mDNSResponderÂ» does not exist">
                <ecl:command>chkconfig --list mDNSResponder 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«mDNSResponderÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«mDNSResponderÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list mDNSResponder</ecl:command>
                <ecl:line-selection op="pm" value="^mDNSResponder((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«mars-nweÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«mars-nweÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«mars-nweÂ» does not exist">
                <ecl:command>chkconfig --list mars-nwe 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«mars-nweÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«mars-nweÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list mars-nwe</ecl:command>
                <ecl:line-selection op="pm" value="^mars-nwe((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«messagebusÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«messagebusÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«messagebusÂ» does not exist">
                <ecl:command>chkconfig --list messagebus 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«messagebusÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«messagebusÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list messagebus</ecl:command>
                <ecl:line-selection op="pm" value="^messagebus((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«mysqldÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«mysqldÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«mysqldÂ» does not exist">
                <ecl:command>chkconfig --list mysqld 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«mysqldÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«mysqldÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list mysqld</ecl:command>
                <ecl:line-selection op="pm" value="^mysqld((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«namedÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«namedÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«namedÂ» does not exist">
                <ecl:command>chkconfig --list named 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«namedÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«namedÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list named</ecl:command>
                <ecl:line-selection op="pm" value="^named((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«netfsÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«netfsÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«netfsÂ» does not exist">
                <ecl:command>chkconfig --list netfs 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«netfsÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«netfsÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list netfs</ecl:command>
                <ecl:line-selection op="pm" value="^netfs((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«nfsÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«nfsÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«nfsÂ» does not exist">
                <ecl:command>chkconfig --list nfs 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«nfsÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«nfsÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list nfs</ecl:command>
                <ecl:line-selection op="pm" value="^nfs((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«nfslockÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«nfslockÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«nfslockÂ» does not exist">
                <ecl:command>chkconfig --list nfslock 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«nfslockÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«nfslockÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list nfslock</ecl:command>
                <ecl:line-selection op="pm" value="^nfslock((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«oki4daemonÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«oki4daemonÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«oki4daemonÂ» does not exist">
                <ecl:command>chkconfig --list oki4daemon 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«oki4daemonÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«oki4daemonÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list oki4daemon</ecl:command>
                <ecl:line-selection op="pm" value="^oki4daemon((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«pcmciaÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«pcmciaÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«pcmciaÂ» does not exist">
                <ecl:command>chkconfig --list pcmcia 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«pcmciaÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«pcmciaÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list pcmcia</ecl:command>
                <ecl:line-selection op="pm" value="^pcmcia((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«portmapÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«portmapÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«portmapÂ» does not exist">
                <ecl:command>chkconfig --list portmap 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«portmapÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«portmapÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list portmap</ecl:command>
                <ecl:line-selection op="pm" value="^portmap((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«postgresqlÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«postgresqlÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«postgresqlÂ» does not exist">
                <ecl:command>chkconfig --list postgresql 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«postgresqlÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«postgresqlÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list postgresql</ecl:command>
                <ecl:line-selection op="pm" value="^postgresql((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«privoxyÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«privoxyÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«privoxyÂ» does not exist">
                <ecl:command>chkconfig --list privoxy 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«privoxyÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«privoxyÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list privoxy</ecl:command>
                <ecl:line-selection op="pm" value="^privoxy((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«rstatdÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«rstatdÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«rstatdÂ» does not exist">
                <ecl:command>chkconfig --list rstatd 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«rstatdÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«rstatdÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list rstatd</ecl:command>
                <ecl:line-selection op="pm" value="^rstatd((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«rusersdÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«rusersdÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«rusersdÂ» does not exist">
                <ecl:command>chkconfig --list rusersd 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«rusersdÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«rusersdÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list rusersd</ecl:command>
                <ecl:line-selection op="pm" value="^rusersd((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«rwalldÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«rwalldÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«rwalldÂ» does not exist">
                <ecl:command>chkconfig --list rwalld 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«rwalldÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«rwalldÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list rwalld</ecl:command>
                <ecl:line-selection op="pm" value="^rwalld((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«rwhodÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«rwhodÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«rwhodÂ» does not exist">
                <ecl:command>chkconfig --list rwhod 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«rwhodÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«rwhodÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list rwhod</ecl:command>
                <ecl:line-selection op="pm" value="^rwhod((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«smbÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«smbÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«smbÂ» does not exist">
                <ecl:command>chkconfig --list smb 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«smbÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«smbÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list smb</ecl:command>
                <ecl:line-selection op="pm" value="^smb((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«snmpdÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«snmpdÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«snmpdÂ» does not exist">
                <ecl:command>chkconfig --list snmpd 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«snmpdÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«snmpdÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list snmpd</ecl:command>
                <ecl:line-selection op="pm" value="^snmpd((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«spamassassinÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«spamassassinÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«spamassassinÂ» does not exist">
                <ecl:command>chkconfig --list spamassassin 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«spamassassinÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«spamassassinÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list spamassassin</ecl:command>
                <ecl:line-selection op="pm" value="^spamassassin((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«squidÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«squidÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«squidÂ» does not exist">
                <ecl:command>chkconfig --list squid 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«squidÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«squidÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list squid</ecl:command>
                <ecl:line-selection op="pm" value="^squid((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«tuxÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«tuxÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«tuxÂ» does not exist">
                <ecl:command>chkconfig --list tux 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«tuxÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«tuxÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list tux</ecl:command>
                <ecl:line-selection op="pm" value="^tux((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«webminÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«webminÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«webminÂ» does not exist">
                <ecl:command>chkconfig --list webmin 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«webminÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«webminÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list webmin</ecl:command>
                <ecl:line-selection op="pm" value="^webmin((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«wineÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«wineÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«wineÂ» does not exist">
                <ecl:command>chkconfig --list wine 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«wineÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«wineÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list wine</ecl:command>
                <ecl:line-selection op="pm" value="^wine((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«ypbindÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«ypbindÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«ypbindÂ» does not exist">
                <ecl:command>chkconfig --list ypbind 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«ypbindÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«ypbindÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list ypbind</ecl:command>
                <ecl:line-selection op="pm" value="^ypbind((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«yppasswddÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«yppasswddÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«yppasswddÂ» does not exist">
                <ecl:command>chkconfig --list yppasswdd 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«yppasswddÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«yppasswddÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list yppasswdd</ecl:command>
                <ecl:line-selection op="pm" value="^yppasswdd((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«ypservÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«ypservÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«ypservÂ» does not exist">
                <ecl:command>chkconfig --list ypserv 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«ypservÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«ypservÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list ypserv</ecl:command>
                <ecl:line-selection op="pm" value="^ypserv((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="disable-samba-server" role="full" selected="false" weight="1.0">
      <xccdf:title>disable samba server</xccdf:title>
      <xccdf:description>
        <xhtml:p>Red Hat Linux includes the popular Open Source Samba server for providing file and 
          print services to Windows-based systems. This allows a Unix system to act as a file or 
          print server in on a Windows network, and even act as a Domain Controller 
          (authentication server) to older Windows operating systems. However, if this 
          functionality is not required by the site, the service should be disabled.</xhtml:p>
        
        <xhtml:p>This section removes the SMB client software as well.  If there is some business reason 
          to mount Windows Shares, do not remove the packages: samba-client and samba-
          common.</xhtml:p>
      </xccdf:description>
      <xccdf:fixtext>
        <xhtml:code>chkconfig smb off</xhtml:code>
      </xccdf:fixtext>
      <xccdf:complex-check operator="OR">
        <!--Service Â«smbÂ» does not exist or is disabled-->
        <xccdf:check system="http://cisecurity.org/check">
          <!--Service Â«smbÂ» does not exist-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="Service Â«smbÂ» does not exist">
              <ecl:command>chkconfig --list smb 2&gt;/dev/null</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--Service Â«smbÂ» is Â«offÂ»-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="Service Â«smbÂ» is Â«offÂ»">
              <ecl:command>chkconfig --list smb</ecl:command>
              <ecl:line-selection op="pm" value="^smb((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="disable-nfs-server" role="full" selected="false" weight="1.0">
      <xccdf:title>disable nfs server</xccdf:title>
      <xccdf:description>
        <xhtml:p>NFS is frequently exploited to gain unauthorized access to files and systems. Clearly 
          there is no need to run the NFS server-related daemons on hosts that are not NFS servers. 
          If the system is an NFS server, the administrator should take reasonable precautions when 
          exporting file systems, including restricting NFS access to a specific range of local IP 
          addresses and exporting file systems "read-only" where appropriate. For more 
          information, consult the exports manual page.</xhtml:p>
      </xccdf:description>
      <xccdf:fixtext>
        <xhtml:code>chkconfig nfs off</xhtml:code>
      </xccdf:fixtext>
      <xccdf:complex-check operator="OR">
        <!--Service Â«nfsÂ» does not exist or is disabled-->
        <xccdf:check system="http://cisecurity.org/check">
          <!--Service Â«nfsÂ» does not exist-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="Service Â«nfsÂ» does not exist">
              <ecl:command>chkconfig --list nfs 2&gt;/dev/null</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--Service Â«nfsÂ» is Â«offÂ»-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="Service Â«nfsÂ» is Â«offÂ»">
              <ecl:command>chkconfig --list nfs</ecl:command>
              <ecl:line-selection op="pm" value="^nfs((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="disable-nfs-client" role="full" selected="false" weight="1.0">
      <xccdf:title>disable nfs client</xccdf:title>
      <xccdf:description>
        <xhtml:p>Again, unless there is a significant need for this system to acquire data via NFS, 
          administrators should disable NFS-related services. Note that other file transfer schemes 
          (such as rdist via SSH) can often be preferable to NFS for certain applications.</xhtml:p>
      </xccdf:description>
      <xccdf:fixtext>
        <xhtml:code>chkconfig nfslock off chkconfig autofs off</xhtml:code>
      </xccdf:fixtext>
      <xccdf:complex-check operator="AND">
        <xccdf:complex-check operator="OR">
          <!--Service Â«nfslockÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«nfslockÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«nfslockÂ» does not exist">
                <ecl:command>chkconfig --list nfslock 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«nfslockÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«nfslockÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list nfslock</ecl:command>
                <ecl:line-selection op="pm" value="^nfslock((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«autofsÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«autofsÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«autofsÂ» does not exist">
                <ecl:command>chkconfig --list autofs 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«autofsÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«autofsÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list autofs</ecl:command>
                <ecl:line-selection op="pm" value="^autofs((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="disable-nis-client" role="full" selected="false" weight="1.0">
      <xccdf:title>disable nis client</xccdf:title>
      <xccdf:description>
        <xhtml:p>Unless this site must use NIS, it should really be avoided. While it can be very useful for 
        transparently scaling the number of workstations, it's not well designed for security.  Sun 
        Microsystems is now phasing out NIS+ in favor of LDAP for naming services â€“ NIS and 
        NIS+ are now reaching end of life.</xhtml:p> 
      </xccdf:description>
      <xccdf:fixtext>
        <xhtml:code>chkconfig ypbind off</xhtml:code>
      </xccdf:fixtext>
      <xccdf:complex-check operator="OR">
        <!--Service Â«ypbindÂ» does not exist or is disabled-->
        <xccdf:check system="http://cisecurity.org/check">
          <!--Service Â«ypbindÂ» does not exist-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="Service Â«ypbindÂ» does not exist">
              <ecl:command>chkconfig --list ypbind 2&gt;/dev/null</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--Service Â«ypbindÂ» is Â«offÂ»-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="Service Â«ypbindÂ» is Â«offÂ»">
              <ecl:command>chkconfig --list ypbind</ecl:command>
              <ecl:line-selection op="pm" value="^ypbind((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="disable-nis-server" role="full" selected="false" weight="1.0">
      <xccdf:title>disable nis server</xccdf:title>
      <xccdf:description>
        <xhtml:p>Unless this site must use NIS, it should be avoided. While it can be very useful for 
          transparently scaling the number of workstations, it is not well designed for security.</xhtml:p>
      </xccdf:description>
      <xccdf:fixtext>
        <xhtml:code>chkconfig ypserv off chkconfig yppasswdd off</xhtml:code>
      </xccdf:fixtext>
      <xccdf:complex-check operator="AND">
        <xccdf:complex-check operator="OR">
          <!--Service Â«ypservÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«ypservÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«ypservÂ» does not exist">
                <ecl:command>chkconfig --list ypserv 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«ypservÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«ypservÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list ypserv</ecl:command>
                <ecl:line-selection op="pm" value="^ypserv((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«yppasswdÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«yppasswdÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«yppasswdÂ» does not exist">
                <ecl:command>chkconfig --list yppasswd 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«yppasswdÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«yppasswdÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list yppasswd</ecl:command>
                <ecl:line-selection op="pm" value="^yppasswd((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="disable-rpc-portmap" role="full" selected="false" weight="1.0">
      <xccdf:title>disable rpc portmap</xccdf:title>
      <xccdf:description>
        <xhtml:p>RPC-based services typically use very weak or non-existent authentication and yet may 
          share very sensitive information. Unless one of the services listed above is required on 
          this machine, best to disable RPC-based tools completely. If there is uncertainty in 
          whether or not a particular third-party application requires RPC services, consult with the 
          application vendor.</xhtml:p>
      </xccdf:description>
      <xccdf:fixtext>
        <xhtml:code>chkconfig portmap off</xhtml:code>
      </xccdf:fixtext>
      <xccdf:complex-check operator="OR">
        <!--Service Â«portmapÂ» does not exist or is disabled-->
        <xccdf:check system="http://cisecurity.org/check">
          <!--Service Â«portmapÂ» does not exist-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="Service Â«portmapÂ» does not exist">
              <ecl:command>chkconfig --list portmap 2&gt;/dev/null</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--Service Â«portmapÂ» is Â«offÂ»-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="Service Â«portmapÂ» is Â«offÂ»">
              <ecl:command>chkconfig --list portmap</ecl:command>
              <ecl:line-selection op="pm" value="^portmap((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="disable-netfs-script" role="full" selected="false" weight="1.0">
      <xccdf:title>disable netfs script</xccdf:title>
      <xccdf:description>
        <xhtml:p>If there are no network file sharing protocols being used, one can deactivate the netfs 
          script. This script mounts network drives on the client. Though this is not a persistent 
          daemon and thus not so dangerous, thinning out the /etc/rc.d/rcN.d directories 
          makes the system much easier to audit.</xhtml:p>
      </xccdf:description>
      <xccdf:fixtext>
        <xhtml:code>chkconfig netfs off</xhtml:code>
      </xccdf:fixtext>
      <xccdf:complex-check operator="OR">
        <!--Service Â«netfsÂ» does not exist or is disabled-->
        <xccdf:check system="http://cisecurity.org/check">
          <!--Service Â«netfsÂ» does not exist-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="Service Â«netfsÂ» does not exist">
              <ecl:command>chkconfig --list netfs 2&gt;/dev/null</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--Service Â«netfsÂ» is Â«offÂ»-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="Service Â«netfsÂ» is Â«offÂ»">
              <ecl:command>chkconfig --list netfs</ecl:command>
              <ecl:line-selection op="pm" value="^netfs((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="disable-printer-daemon" role="full" selected="false" weight="1.0">
      <xccdf:title>disable printer daemon</xccdf:title>
      <xccdf:description>
        <xhtml:p>If users will never print files from this machine and the system will never be used as a 
          print server by other hosts on the network, then it is safe to disable the print daemon, lpd 
          or cupsd. The Unix print servers have generally had a poor security record â€“ be sure to 
          keep up-to-date on vendor patches.</xhtml:p>
        
        <xhtml:p>Note that this item also sets cupsd, when present, to run as a non-root user and group, 
          namely user lp and group sys.</xhtml:p>
      </xccdf:description>
      <xccdf:fixtext>
        <xhtml:code>chkconfig hpoj off chkconfig lpd off chkconfig cups off</xhtml:code>
      </xccdf:fixtext>
      <xccdf:complex-check operator="AND">
        <xccdf:complex-check operator="OR">
          <!--Service Â«lpdÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«lpdÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«lpdÂ» does not exist">
                <ecl:command>chkconfig --list lpd 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«lpdÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«lpdÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list lpd</ecl:command>
                <ecl:line-selection op="pm" value="^lpd((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«cupsÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«cupsÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«cupsÂ» does not exist">
                <ecl:command>chkconfig --list cups 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«cupsÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«cupsÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list cups</ecl:command>
                <ecl:line-selection op="pm" value="^cups((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«hpojÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«hpojÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«hpojÂ» does not exist">
                <ecl:command>chkconfig --list hpoj 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«hpojÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«hpojÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list hpoj</ecl:command>
                <ecl:line-selection op="pm" value="^hpoj((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="disable-apache-server" role="full" selected="false" weight="1.0">
      <xccdf:title>disable apache server</xccdf:title>
      <xccdf:description>
        <xhtml:p>Even if this machine is a web server, the local site may choose not to use the web server 
        provided with Linux in favor of a locally developed and supported Web environment.</xhtml:p>
            
        <xhtml:p>The TUX server is a new kernel-based web server, only available on the most recent 
          Linux distributions, which gains performance while sacrificing the flexibility offered by a 
          full-featured web server like Apache. Even with this performance advantage, for security 
          reasons, services should not be placed in the kernel space â€“ they should remain in the 
          user space.  When an exploit is found for Tux, and it is used against your server, it is 
          much easier to maintain control over your systems if the kernel is not being impacted 
          during the attack.</xhtml:p>
      </xccdf:description>
      <xccdf:fix>chkconfig apache off</xccdf:fix>
      <xccdf:complex-check operator="AND">
        <xccdf:complex-check operator="OR">
          <!--Service Â«apacheÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«apacheÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«apacheÂ» does not exist">
                <ecl:command>chkconfig --list apache 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«apacheÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«apacheÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list apache</ecl:command>
                <ecl:line-selection op="pm" value="^apache((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«httpdÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«httpdÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«httpdÂ» does not exist">
                <ecl:command>chkconfig --list httpd 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«httpdÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«httpdÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list httpd</ecl:command>
                <ecl:line-selection op="pm" value="^httpd((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«tuxÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«tuxÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«tuxÂ» does not exist">
                <ecl:command>chkconfig --list tux 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«tuxÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«tuxÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list tux</ecl:command>
                <ecl:line-selection op="pm" value="^tux((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="disable-snmp-processes" role="full" selected="false" weight="1.0">
      <xccdf:title>disable snmpd</xccdf:title>
      <xccdf:description>
        <xhtml:p>If SNMP is used to monitor the hosts on this network, experts recommend changing the 
          default community string used to access data via SNMP. On Red Hat Enterprise Linux 
          systems, this parameter has already been changed to a reasonably secure setting in the file 
          /etc/snmp/snmpd.conf:
          <xhtml:br/>          
          com2sec notConfigUser default public
        </xhtml:p>          
        <xhtml:p>No further action is required.</xhtml:p> 
        <xhtml:p>Note: In a large Enterprise that relied heavily on SNMP, it was discovered during the 
          Linux rollout that SNMP was not a critical service, and not having it enabled increased 
          the security posture of the servers. </xhtml:p>
      </xccdf:description>
      <xccdf:fixtext>
        <xhtml:code>chkconfig snmpd on</xhtml:code>
      </xccdf:fixtext>
      <xccdf:complex-check operator="OR">
        <!--Service Â«snmpdÂ» does not exist or is disabled-->
        <xccdf:check system="http://cisecurity.org/check">
          <!--Service Â«snmpdÂ» does not exist-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="Service Â«snmpdÂ» does not exist">
              <ecl:command>chkconfig --list snmpd 2&gt;/dev/null</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--Service Â«snmpdÂ» is Â«offÂ»-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="Service Â«snmpdÂ» is Â«offÂ»">
              <ecl:command>chkconfig --list snmpd</ecl:command>
              <ecl:line-selection op="pm" value="^snmpd((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="disable-dns-server" role="full" selected="false" weight="1.0">
      <xccdf:title>disable dns server</xccdf:title>
      <xccdf:description>
        <xhtml:p>Most of the machines in the organization do not need a DNS server running on the box. 
        Unless this is one of the organization's name servers, it is safe to shut this down.</xhtml:p>
        
        <xhtml:p>If this must be left active, please patch often and security harden the configuration 
          according to the CIS BIND benchmark which provides detailed implementation and 
          configurations recommendations. Two highly suggested configuration is to bind the DNS 
          server program in a chroot environment, and run it as a non-root user. This significantly 
          restricts the resources that the DNS server has access to on the system, reducing this set 
          to the minimum required for the program to function properly. Carefully consider the 
          consequences that if a name server is compromised then traffic that depends on the name 
          service such as web, ftp and e-mail can be redirected to malicious servers.</xhtml:p>
        
        <xhtml:p>Additionally, consider the use of Access Control Lists (ACL's) in /etc/named.conf 
          to limit who can query your name server.  For example, Internal name servers should not 
          respond to outside requests.  Large Enterprises run multiple name servers so this should 
          not be an issue.  However, smaller organizations may not be able to deploy both internal 
          and external name servers and should instead use an reputable externally hosted DNS 
          service.  Details on how to accomplish this are provided in the CIS BIND benchmark, 
          available at http://www.cisecurity.org/bench_bind.html</xhtml:p>
      </xccdf:description>
      <xccdf:fixtext>
        <xhtml:code>chkconfig named off</xhtml:code>
      </xccdf:fixtext>
      <xccdf:complex-check operator="OR">
        <!--Service Â«namedÂ» does not exist or is disabled-->
        <xccdf:check system="http://cisecurity.org/check">
          <!--Service Â«namedÂ» does not exist-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="Service Â«namedÂ» does not exist">
              <ecl:command>chkconfig --list named 2&gt;/dev/null</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--Service Â«namedÂ» is Â«offÂ»-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="Service Â«namedÂ» is Â«offÂ»">
              <ecl:command>chkconfig --list named</ecl:command>
              <ecl:line-selection op="pm" value="^named((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="disable-mysql" role="full" selected="false" weight="1.0">
      <xccdf:title>disable mysql server</xccdf:title>
      <xccdf:description>
        <xhtml:p>If this machine does not need to run the mainstream database (SQL) servers Postgres or 
          MySQL, it is safe to deactivate them.  If you need to enable them, issue the command 
          (above) for the database that you installed.</xhtml:p>
      </xccdf:description>
      <xccdf:fix>chkconfig mysqld off</xccdf:fix>
      <xccdf:complex-check operator="AND">
        <xccdf:complex-check operator="OR">
          <!--Service Â«postgresqlÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«postgresqlÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«postgresqlÂ» does not exist">
                <ecl:command>chkconfig --list postgresql 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«postgresqlÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«postgresqlÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list postgresql</ecl:command>
                <ecl:line-selection op="pm" value="^postgresql((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--Service Â«mysqldÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«mysqldÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«mysqldÂ» does not exist">
                <ecl:command>chkconfig --list mysqld 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«mysqldÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«mysqldÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list mysqld</ecl:command>
                <ecl:line-selection op="pm" value="^mysqld((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="disable-webmin" role="full" selected="false" weight="1.0">
      <xccdf:title>disable webmin</xccdf:title>
      <xccdf:description>
        <xhtml:p>One can remotely administer a system through the relatively safe SSH remote shell 
          system. Webmin, and other tools like it, can be dangerous as they have a history of bad 
          authentication or session management. Red Hat Enterprise Linux does not include this 
          tool â€“ if it has been added after the installation, the organization should research and 
          consider this decision carefully.</xhtml:p>
      </xccdf:description>
      <xccdf:fixtext>
        <xhtml:code>rpm -e webmin</xhtml:code>
      </xccdf:fixtext>
      <xccdf:complex-check operator="OR">
        <xccdf:complex-check operator="OR">
          <!--Service Â«webminÂ» does not exist or is disabled-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«webminÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«webminÂ» does not exist">
                <ecl:command>chkconfig --list webmin 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«webminÂ» is Â«offÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="Service Â«webminÂ» is Â«offÂ»">
                <ecl:command>chkconfig --list webmin</ecl:command>
                <ecl:line-selection op="pm" value="^webmin((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--Package webmin is not installed-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="Package Â«webminÂ» does not exist" success="pass">
              <ecl:command>rpm -q webmin</ecl:command>
              <ecl:line-selection op="pm" value=".*"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="disable-squid" role="full" selected="false" weight="1.0">
      <xccdf:title>disable squid server</xccdf:title>
      <xccdf:description>
        <xhtml:p>Squid can actually be beneficial to security, as it imposes a proxy between the client and 
          server. On the other hand, if it is not being used, it should be deactivated and removed. 
          This deactivation decreases the risk of system compromise should a security vulnerability 
          later be discovered in Squid. Finally, if your site uses Squid, configure it carefully. Many 
          Squid caches are badly configured to either allow outsider attackers to probe internal 
          machines through the firewall or to use the cache to hide their true source IP address from 
          their target hosts. Each site should configure Squid to not allow people outside their 
          perimeter to use the cache without authentication of some sort. A better deployment for 
          squid is on a server with no external-facing network interface (unless you are using it for 
          a reverse web proxy, which is a very specific installation, and beyond the scope of this 
          benchmark).</xhtml:p>
      </xccdf:description>
      <xccdf:fix>chkconfig squid off</xccdf:fix>
      <xccdf:complex-check operator="OR">
        <!--Service Â«squidÂ» does not exist or is disabled-->
        <xccdf:check system="http://cisecurity.org/check">
          <!--Service Â«squidÂ» does not exist-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="Service Â«squidÂ» does not exist">
              <ecl:command>chkconfig --list squid 2&gt;/dev/null</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--Service Â«squidÂ» is Â«offÂ»-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="Service Â«squidÂ» is Â«offÂ»">
              <ecl:command>chkconfig --list squid</ecl:command>
              <ecl:line-selection op="pm" value="^squid((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="disable-kudzu" role="full" selected="false" weight="1.0">
      <xccdf:title>disable kudzu hardware monitor</xccdf:title>
      <xccdf:description>
        <xhtml:p>Kudzu is Red Hat's hardware detection program, which is normally set to run during 
          system startup. It detects changes in hardware and, without demanding authentication of 
          any sort, allows the user at the console to configure that hardware. This lack of 
          authentication presents the primary danger â€“ any user sitting at the console during a 
          reboot can configure any new devices added to the system.</xhtml:p>
        
        <xhtml:p>This configuration is an unnecessary risk for most sites, with the exception of those that 
          need to allow users to easily make hardware changes without having a root password. 
          Sites in the exception class might need to allow students to connect external hard drives, 
          backup drives or other potentially common external devices.</xhtml:p>  
        
        <xhtml:p>If you deactivate this rc-script, Kudzu is still accessible.  To run Kudzu after installing 
          new hardware, run /etc/rc.d/init.d/kudzu start at the shell prompt while 
          logged in as root.</xhtml:p>
      </xccdf:description>
      <xccdf:fix>chkconfig kudzu off</xccdf:fix>
      <xccdf:complex-check operator="OR">
        <!--Service Â«kudzuÂ» does not exist or is disabled-->
        <xccdf:check system="http://cisecurity.org/check">
          <!--Service Â«kudzuÂ» does not exist-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="Service Â«kudzuÂ» does not exist">
              <ecl:command>chkconfig --list kudzu 2&gt;/dev/null</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--Service Â«kudzuÂ» is Â«offÂ»-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="Service Â«kudzuÂ» is Â«offÂ»">
              <ecl:command>chkconfig --list kudzu</ecl:command>
              <ecl:line-selection op="pm" value="^kudzu((\s+off)|(\s+0:off\s+1:off\s+2:off\s+3:off\s+4:off\s+5:off\s+6:off))$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </xccdf:Rule>
  </xccdf:Group>
  <xccdf:Group id="network-parameter-modifications">
    <xccdf:title>Kernel Tuning/Network Parameter Modifications</xccdf:title>
    <xccdf:description>For an explanation of some of these parameters,
            see<xhtml:code>/Documentation/networking/ip-sysctl.txt</xhtml:code>in your local copy of the kernel source or read the latest
            from the cross-referencing Linux site:<xhtml:a href="http://lxr.linux.no/source/Documentation/networking/ip-sysctl.txt">http://lxr.linux.no/source/Documentation/networking/ip-sysctl.txt</xhtml:a>.<xhtml:br/><xhtml:br/>See also SN.9 for additional security-related tunings that you may want to consider.</xccdf:description>
    <xccdf:Rule id="r0401" role="full" selected="false" weight="1.0">
      <xccdf:title>Network Parameter Modifications</xccdf:title>
      <xccdf:description>
        <xhtml:p>For an explanation of some of these parameters, see /Documentation/networking/ip-sysctl.txt in your local copy of the 
          kernel source or read the latest from the cross-referencing Linux site: 
          http://lxr.linux.no/source/Documentation/networking/ip-sysctl.txt.</xhtml:p>
        <xhtml:p>See also SN.9 for additional security-related tunings that you may want to consider. </xhtml:p>
      </xccdf:description>
      <xccdf:complex-check operator="AND">
        <xccdf:check system="http://cisecurity.org/check">
          <!--sysctl variable net.ipv4.tcp_max_syn_backlog equals Â«4096Â».-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="sysctl variable net.ipv4.tcp_max_syn_backlog equals Â«4096Â»." success="pass">
              <ecl:command>test `sysctl -n net.ipv4.tcp_max_syn_backlog` = 4096 || sysctl net.ipv4.tcp_max_syn_backlog</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--sysctl variable net.ipv4.tcp_syncookies equals Â«1Â».-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="sysctl variable net.ipv4.tcp_syncookies equals Â«1Â»." success="pass">
              <ecl:command>test `sysctl -n net.ipv4.tcp_syncookies` = 1 || sysctl net.ipv4.tcp_syncookies</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--sysctl variable net.ipv4.conf.all.rp_filter equals Â«1Â».-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="sysctl variable net.ipv4.conf.all.rp_filter equals Â«1Â»." success="pass">
              <ecl:command>test `sysctl -n net.ipv4.conf.all.rp_filter` = 1 || sysctl net.ipv4.conf.all.rp_filter</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--sysctl variable net.ipv4.conf.all.accept_source_route equals Â«0Â».-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="sysctl variable net.ipv4.conf.all.accept_source_route equals Â«0Â»." success="pass">
              <ecl:command>test `sysctl -n net.ipv4.conf.all.accept_source_route` = 0 || sysctl
                                net.ipv4.conf.all.accept_source_route</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--sysctl variable net.ipv4.conf.all.accept_redirects equals Â«0Â».-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="sysctl variable net.ipv4.conf.all.accept_redirects equals Â«0Â»." success="pass">
              <ecl:command>test `sysctl -n net.ipv4.conf.all.accept_redirects` = 0 || sysctl
                                net.ipv4.conf.all.accept_redirects</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--sysctl variable net.ipv4.conf.all.secure_redirects equals Â«0Â».-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="sysctl variable net.ipv4.conf.all.secure_redirects equals Â«0Â»." success="pass">
              <ecl:command>test `sysctl -n net.ipv4.conf.all.secure_redirects` = 0 || sysctl
                                net.ipv4.conf.all.secure_redirects</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--sysctl variable net.ipv4.conf.default.rp_filter equals Â«1Â».-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="sysctl variable net.ipv4.conf.default.rp_filter equals Â«1Â»." success="pass">
              <ecl:command>test `sysctl -n net.ipv4.conf.default.rp_filter` = 1 || sysctl net.ipv4.conf.default.rp_filter</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--sysctl variable net.ipv4.conf.default.accept_source_route equals Â«0Â».-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="sysctl variable net.ipv4.conf.default.accept_source_route equals Â«0Â»." success="pass">
              <ecl:command>test `sysctl -n net.ipv4.conf.default.accept_source_route` = 0 || sysctl
                                net.ipv4.conf.default.accept_source_route</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--sysctl variable net.ipv4.conf.default.accept_redirects equals Â«0Â».-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="sysctl variable net.ipv4.conf.default.accept_redirects equals Â«0Â»." success="pass">
              <ecl:command>test `sysctl -n net.ipv4.conf.default.accept_redirects` = 0 || sysctl
                                net.ipv4.conf.default.accept_redirects</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--sysctl variable net.ipv4.conf.default.secure_redirects equals Â«0Â».-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="sysctl variable net.ipv4.conf.default.secure_redirects equals Â«0Â»." success="pass">
              <ecl:command>test `sysctl -n net.ipv4.conf.default.secure_redirects` = 0 || sysctl
                                net.ipv4.conf.default.secure_redirects</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--sysctl variable net.ipv4.icmp_echo_ignore_broadcasts equals Â«1Â».-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="sysctl variable net.ipv4.icmp_echo_ignore_broadcasts equals Â«1Â»." success="pass">
              <ecl:command>test `sysctl -n net.ipv4.icmp_echo_ignore_broadcasts` = 1 || sysctl
                                net.ipv4.icmp_echo_ignore_broadcasts</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:complex-check operator="AND">
          <xccdf:check system="http://cisecurity.org/check">
            <!--/etc/sysctl.conf ownership and permission-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="/etc/sysctl.conf ownership and permission">
                <ecl:command>find /etc/sysctl.conf -follow -maxdepth 0 ! \( -user root -group root -perm u=rw,g=,o= \) -ls</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="r0402" role="full" selected="false" weight="1.0">
      <xccdf:title>Additional Network Parameter Modifications</xccdf:title>
      <xccdf:description>
        <xhtml:p>For an explanation of some of these parameters, see  
          /Documentation/networking/ip-sysctl.txt in your local copy of the 
          kernel source or read the latest from the cross-referencing Linux site: 
          http://lxr.linux.no/source/Documentation/networking/ip-sysctl.txt.</xhtml:p>
      </xccdf:description>
      <xccdf:complex-check operator="AND">
        <xccdf:check system="http://cisecurity.org/check">
          <!--sysctl variable net.ipv4.ip_forward equals Â«0Â».-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="sysctl variable net.ipv4.ip_forward equals Â«0Â»." success="pass">
              <ecl:command>test `sysctl -n net.ipv4.ip_forward` = 0 || sysctl net.ipv4.ip_forward</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--sysctl variable net.ipv4.conf.all.send_redirects equals Â«0Â».-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="sysctl variable net.ipv4.conf.all.send_redirects equals Â«0Â»." success="pass">
              <ecl:command>test `sysctl -n net.ipv4.conf.all.send_redirects` = 0 || sysctl net.ipv4.conf.all.send_redirects</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--sysctl variable net.ipv4.conf.default.send_redirects equals Â«0Â».-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="sysctl variable net.ipv4.conf.default.send_redirects equals Â«0Â»." success="pass">
              <ecl:command>test `sysctl -n net.ipv4.conf.default.send_redirects` = 0 || sysctl
                                net.ipv4.conf.default.send_redirects</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:complex-check operator="AND">
          <xccdf:check system="http://cisecurity.org/check">
            <!--/etc/sysctl.conf ownership and permission-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="/etc/sysctl.conf ownership and permission">
                <ecl:command>find /etc/sysctl.conf -follow -maxdepth 0 ! \( -user root -group root -perm u=rw,g=,o= \) -ls</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
      </xccdf:complex-check>
    </xccdf:Rule>
  </xccdf:Group>
  <xccdf:Group id="logging" selected="true">
    <xccdf:title>Logging</xccdf:title>
    <xccdf:description>The items in this section cover enabling various different forms of system logging in order to keep track of
            activity on the system. Because it is often necessary to correlate log information from many different systems (particularly
            after a security incident) experts recommend establishing some form of time synchronization among systems and devices connected
            to the local network. The standard Internet protocol for time synchronization is the Network Time Protocol (NTP), which is
            supported by most network-ready devices. More information on NTP can be found at<xhtml:a href="http://www.ntp.org">http://www.ntp.org</xhtml:a>and<xhtml:a href="http://www.ibiblio.org/pub/Linux/docs/HOWTO/otherformats/html_single/TimePrecision-HOWTO.html">http://www.ibiblio.org/pub/Linux/docs/HOWTO/otherformats/html_single/TimePrecision-HOWTO.html</xhtml:a>.</xccdf:description>
    <xccdf:Rule id="capture-authpriv-messages" role="full" selected="false" weight="1.0">
      <xccdf:title>Capture Messages Sent To Syslog AUTHPRIV Facility</xccdf:title>
      <xccdf:description>
        <xhtml:p>The default installation of Red Hat Enterprise Linux already has this enabled. It is included in case it had been
                    previously disabled.</xhtml:p>
        <xhtml:br/>
        <xhtml:p>Not all Linux distributions, especially the older ones, capture logging information which is sent to the
                    LOG_AUTHPRIV facilities. This is unfortunate, since a great deal of important security-related information is sent via
                    these channels (e.g., successful and failed su attempts, failed login attempts, root login attempts, etc). The above
                    action causes this information to be captured in the<xhtml:code>/var/log/secure</xhtml:code>file (which is only readable
                    by the superuser). This file should be reviewed and archived on a regular basis.</xhtml:p>
        <xhtml:br/>
      </xccdf:description>
      <xccdf:fix>echo -e "authpriv.*\t\t\t\t/var/log/secure" &gt;&gt; /etc/syslog.conf touch /var/log/secure chown root:root
                /var/log/secure chmod 600 /var/log/secure</xccdf:fix>
      <xccdf:complex-check operator="AND">
        <xccdf:check system="http://cisecurity.org/check">
          <!--command test Â«egrep '^authpriv\.\*[[:space:]]+/var/log/secure$' /etc/syslog.confÂ»-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="command test Â«egrep '^authpriv\.\*[[:space:]]+/var/log/secure$' /etc/syslog.confÂ»" success="pass">
              <ecl:command>egrep '^authpriv\.\*[[:space:]]+/var/log/secure$' /etc/syslog.conf</ecl:command>
              <ecl:line-selection op="pm" value="^.*$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:complex-check operator="AND">
          <xccdf:check system="http://cisecurity.org/check">
            <!--/var/log/secure ownership and permission-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="/var/log/secure ownership and permission">
                <ecl:command>find /var/log/secure -follow -maxdepth 0 ! \( -user root -group root -perm u=rw,g=,o= \) -ls</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="additional-ftp-logging" role="full" selected="false" weight="1.0">
      <xccdf:title>Turn On Additional Logging For FTP Daemon</xccdf:title>
      <xccdf:description>
        <xhtml:p>Red Hat Enterprise Linux already logs connections and all files transferred in WU-FTPd. Some installations might
                    prefer vsftpd over WU-FTPd.</xhtml:p>
        <xhtml:br/>
        <xhtml:p>These modifications ensure that all commands sent to the server are logged. In WUFTPd, this group also requires the
                    server to log all security violations or policy boundary conditions and to ensure that file transfers are logged to
                    syslog, in addition to the default<xhtml:code>/var/log/xferlog</xhtml:code>.</xhtml:p>
        <xhtml:br/>
      </xccdf:description>
      <xccdf:complex-check operator="AND">
        <xccdf:complex-check operator="OR">
          <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
              <!--/etc/ftpaccess does not exist-->
              <xccdf:check-content>
                <ecl:shell-command check="none exist" comment="/etc/ftpaccess does not exist">
                  <ecl:command>find /etc/ftpaccess -follow -maxdepth 0 -ls 2&gt;/dev/null</ecl:command>
                  <ecl:line-selection op="pm" value=".+"/>
                </ecl:shell-command>
              </xccdf:check-content>
            </xccdf:check>
          </xccdf:complex-check>
          <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
              <!--command test Â«egrep 'server_args = -l -a -d' /etc/xinetd.d/wu-ftpdÂ»-->
              <xccdf:check-content>
                <ecl:shell-command check="all" comment="command test Â«egrep 'server_args = -l -a -d' /etc/xinetd.d/wu-ftpdÂ»" success="pass">
                  <ecl:command>egrep 'server_args = -l -a -d' /etc/xinetd.d/wu-ftpd</ecl:command>
                  <ecl:line-selection op="pm" value="^.*$"/>
                </ecl:shell-command>
              </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
              <!--/etc/xinetd.d/wu-ftpd ownership and permission-->
              <xccdf:check-content>
                <ecl:shell-command check="none exist" comment="/etc/xinetd.d/wu-ftpd ownership and permission">
                  <ecl:command>find /etc/xinetd.d/wu-ftpd -follow -maxdepth 0 ! \( -user root -group root -perm
                                        u=rw,g=r,o=r \) -ls</ecl:command>
                  <ecl:line-selection op="pm" value=".+"/>
                </ecl:shell-command>
              </xccdf:check-content>
            </xccdf:check>
          </xccdf:complex-check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
              <!--/etc/vsftpd/vsftpd.conf does not exist-->
              <xccdf:check-content>
                <ecl:shell-command check="none exist" comment="/etc/vsftpd/vsftpd.conf does not exist">
                  <ecl:command>find /etc/vsftpd/vsftpd.conf -follow -maxdepth 0 -ls 2&gt;/dev/null</ecl:command>
                  <ecl:line-selection op="pm" value=".+"/>
                </ecl:shell-command>
              </xccdf:check-content>
            </xccdf:check>
          </xccdf:complex-check>
          <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
              <!--command test Â«egrep '^xferlog_std_format=NO$' /etc/vsftpd/vsftpd.confÂ»-->
              <xccdf:check-content>
                <ecl:shell-command check="all" comment="command test Â«egrep '^xferlog_std_format=NO$' /etc/vsftpd/vsftpd.confÂ»" success="pass">
                  <ecl:command>egrep '^xferlog_std_format=NO$' /etc/vsftpd/vsftpd.conf</ecl:command>
                  <ecl:line-selection op="pm" value="^.*$"/>
                </ecl:shell-command>
              </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
              <!--command test Â«egrep '^log_ftp_protocol=YES$' /etc/vsftpd/vsftpd.confÂ»-->
              <xccdf:check-content>
                <ecl:shell-command check="all" comment="command test Â«egrep '^log_ftp_protocol=YES$' /etc/vsftpd/vsftpd.confÂ»" success="pass">
                  <ecl:command>egrep '^log_ftp_protocol=YES$' /etc/vsftpd/vsftpd.conf</ecl:command>
                  <ecl:line-selection op="pm" value="^.*$"/>
                </ecl:shell-command>
              </xccdf:check-content>
            </xccdf:check>
          </xccdf:complex-check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
              <!--/etc/vsftpd/vsftpd.conf does not exist-->
              <xccdf:check-content>
                <ecl:shell-command check="none exist" comment="/etc/vsftpd/vsftpd.conf does not exist">
                  <ecl:command>find /etc/vsftpd/vsftpd.conf -follow -maxdepth 0 -ls 2&gt;/dev/null</ecl:command>
                  <ecl:line-selection op="pm" value=".+"/>
                </ecl:shell-command>
              </xccdf:check-content>
            </xccdf:check>
          </xccdf:complex-check>
          <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
              <!--command test Â«egrep '^xferlog_std_format=NO$' /etc/vsftpd/vsftpd.confÂ»-->
              <xccdf:check-content>
                <ecl:shell-command check="all" comment="command test Â«egrep '^xferlog_std_format=NO$' /etc/vsftpd/vsftpd.confÂ»" success="pass">
                  <ecl:command>egrep '^xferlog_std_format=NO$' /etc/vsftpd/vsftpd.conf</ecl:command>
                  <ecl:line-selection op="pm" value="^.*$"/>
                </ecl:shell-command>
              </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
              <!--command test Â«egrep '^log_ftp_protocol=YES$' /etc/vsftpd/vsftpd.confÂ»-->
              <xccdf:check-content>
                <ecl:shell-command check="all" comment="command test Â«egrep '^log_ftp_protocol=YES$' /etc/vsftpd/vsftpd.confÂ»" success="pass">
                  <ecl:command>egrep '^log_ftp_protocol=YES$' /etc/vsftpd/vsftpd.conf</ecl:command>
                  <ecl:line-selection op="pm" value="^.*$"/>
                </ecl:shell-command>
              </xccdf:check-content>
            </xccdf:check>
          </xccdf:complex-check>
        </xccdf:complex-check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="system-log-file-permissions" role="full" selected="false" weight="1.0">
      <xccdf:title>Confirm Permissions On System Log Files</xccdf:title>
      <xccdf:description>
        <xhtml:p>It is critical to protect system log files from being modified by unauthorized individuals. Also, certain logs
                    contain sensitive data that should only be available to the system administrator.</xhtml:p>
        <xhtml:br/>
        <xhtml:p>If you should add any of the services that affect the above logs, please revisit this section to ensure the logs
                    have the correct/secure permissions.</xhtml:p>
        <xhtml:br/>
      </xccdf:description>
      <xccdf:complex-check operator="AND">
        <xccdf:check system="http://cisecurity.org/check">
          <!--chmod o-rwx boot.log* cron* dmesg ksyms* httpd/* maillog* messages* news/* pgsql rpmpkgs* samba/* sa/* scrollkeeper.log secure* spooler* squid/* vbox/* wtmp-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="command test Â«(cd /var/log;for f in boot.log* cron* dmesg ksyms* httpd/* maillog* messages* news/* pgsql rpmpkgs* samba/* sa/* scrollkeeper.log secure* spooler* squid/* vbox/* utmp; do find $f -maxdepth 0 -perm /o=rwx -ls 2&gt;/dev/null; done)Â»">
              <ecl:command>(cd /var/log;for f in boot.log* cron* dmesg ksyms* httpd/* maillog* messages* news/* pgsql rpmpkgs*
                                samba/* sa/* scrollkeeper.log secure* spooler* squid/* vbox/* utmp; do find $f -maxdepth 0 -perm /o=rwx -ls
                                2&gt;/dev/null; done)</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--chmod o-rx boot.log* cron* maillog* messages* pgsql secure* spooler* squid/* sa/*-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="command test Â«(cd /var/log;for f in boot.log* cron* maillog* messages* pgsql secure* spooler* squid/* sa/*; do find $f -maxdepth 0 -perm /o=rx -ls 2&gt;/dev/null; done)Â»">
              <ecl:command>(cd /var/log;for f in boot.log* cron* maillog* messages* pgsql secure* spooler* squid/* sa/*; do
                                find $f -maxdepth 0 -perm /o=rx -ls 2&gt;/dev/null; done)</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--chmod g-w boot.log* cron* dmesg httpd/* ksyms* maillog* messages* pgsql rpmpkgs* samba/* sa/* scrollkeeper.log secure* spooler*-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="command test Â«(cd /var/log;for f in boot.log* cron* dmesg httpd/* ksyms* maillog* messages* pgsql rpmpkgs* samba/* sa/* scrollkeeper.log secure* spooler*; do find $f -maxdepth 0 -perm /g=w -ls 2&gt;/dev/null; done)Â»">
              <ecl:command>(cd /var/log;for f in boot.log* cron* dmesg httpd/* ksyms* maillog* messages* pgsql rpmpkgs*
                                samba/* sa/* scrollkeeper.log secure* spooler*; do find $f -maxdepth 0 -perm /g=w -ls 2&gt;/dev/null;
                                done)</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--chmod g-rx boot.log* cron* maillog* messages* pgsql secure* spooler*-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="command test Â«(cd /var/log;for f in boot.log* cron* maillog* messages* pgsql secure* spooler*; do find $f -maxdepth 0 -perm /g=rx -ls 2&gt;/dev/null; done)Â»">
              <ecl:command>(cd /var/log;for f in boot.log* cron* maillog* messages* pgsql secure* spooler*; do find $f
                                -maxdepth 0 -perm /g=rx -ls 2&gt;/dev/null; done)</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--chmod o-w gdm/ httpd/ news/ samba/ squid/ sa/ vbox/-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="command test Â«(cd /var/log;for f in gdm/ httpd/ news/ samba/ squid/ sa/ vbox/; do find $f -maxdepth 0 -perm /o=w -ls 2&gt;/dev/null; done)Â»">
              <ecl:command>(cd /var/log;for f in gdm/ httpd/ news/ samba/ squid/ sa/ vbox/; do find $f -maxdepth 0 -perm /o=w
                                -ls 2&gt;/dev/null; done)</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--chmod o-rx httpd/ samba/ squid/ sa/-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="command test Â«(cd /var/log;for f in httpd/ samba/ squid/ sa/; do find $f -maxdepth 0 -perm /o=rx -ls 2&gt;/dev/null; done)Â»">
              <ecl:command>(cd /var/log;for f in httpd/ samba/ squid/ sa/; do find $f -maxdepth 0 -perm /o=rx -ls
                                2&gt;/dev/null; done)</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--chmod g-w gdm/ httpd/ news/ samba/ squid/ sa/ vbox/-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="command test Â«(cd /var/log;for f in gdm/ httpd/ news/ samba/ squid/ sa/ vbox/; do find $f -maxdepth 0 -perm /g=w -ls 2&gt;/dev/null; done)Â»">
              <ecl:command>(cd /var/log;for f in gdm/ httpd/ news/ samba/ squid/ sa/ vbox/; do find $f -maxdepth 0 -perm /g=w
                                -ls 2&gt;/dev/null; done)</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--chmod g-rx httpd/ samba/ sa/-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="command test Â«(cd /var/log;for f in httpd/ samba/ sa/; do find $f -maxdepth 0 -perm /g=rx -ls 2&gt;/dev/null; done)Â»">
              <ecl:command>(cd /var/log;for f in httpd/ samba/ sa/; do find $f -maxdepth 0 -perm /g=rx -ls 2&gt;/dev/null;
                                done)</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--chmod u-x kernel syslog loginlog-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="command test Â«(cd /var/log;for f in kernel syslog loginlog; do find $f -maxdepth 0 -perm /u=x -ls 2&gt;/dev/null; done)Â»">
              <ecl:command>(cd /var/log;for f in kernel syslog loginlog; do find $f -maxdepth 0 -perm /u=x -ls
                                2&gt;/dev/null; done)</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/var/log ownership and permission-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="/var/log ownership and permission">
              <ecl:command>find /var/log -follow -maxdepth 0 ! \( -user root -group root \) -ls</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/var/log/wtmp ownership and permission-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="/var/log/wtmp ownership and permission">
              <ecl:command>find /var/log/wtmp -follow -maxdepth 0 ! \( -group utmp \) -ls</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:complex-check operator="OR">
          <xccdf:check system="http://cisecurity.org/check">
            <!--/var/log/news does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="/var/log/news does not exist" success="pass">
                <ecl:command>find /var/log/news -follow -maxdepth 0 -ls 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--command test Â«find /var/log/news ! \( -user news -a -group news \) -lsÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="command test Â«find /var/log/news ! \( -user news -a -group news \) -lsÂ»">
                <ecl:command>find /var/log/news ! \( -user news -a -group news \) -ls</ecl:command>
                <ecl:line-selection op="pm" value="^.+$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <xccdf:check system="http://cisecurity.org/check">
            <!--/var/log/pgsql does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="/var/log/pgsql does not exist" success="pass">
                <ecl:command>find /var/log/pgsql -follow -maxdepth 0 -ls 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--/var/log/pgsql ownership and permission-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="/var/log/pgsql ownership and permission">
                <ecl:command>find /var/log/pgsql -follow -maxdepth 0 ! \( -user postgres -group postgres \) -ls</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <xccdf:check system="http://cisecurity.org/check">
            <!--/var/log/squid does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="/var/log/squid does not exist" success="pass">
                <ecl:command>find /var/log/squid -follow -maxdepth 0 -ls 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--command test Â«find /var/log/squid ! \( -user squid -a -group squid \) -lsÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="command test Â«find /var/log/squid ! \( -user squid -a -group squid \) -lsÂ»">
                <ecl:command>find /var/log/squid ! \( -user squid -a -group squid \) -ls</ecl:command>
                <ecl:line-selection op="pm" value="^.+$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="remote-logging" role="full" selected="false" weight="1.0">
      <xccdf:title>Configure syslogd to Send Logs to a Remote LogHost</xccdf:title>
      <xccdf:description>Remote logging is essential in detecting intrusion and monitoring several servers operating in concert. An
                intruder - once he/she has obtained root - can edit the system logs to remove all traces of the attack. If the logs are
                stored off the machine, those logs can be analyzed for anomalies and used for prosecuting the attacker.</xccdf:description>
      <xccdf:fixtext>Note: Bastille configuration set to 'No' as this is system/site specific.<xhtml:br/><xhtml:br/>Action: In the script below, replace loghost with the proper name (FQDN, if necessary) of your
                    loghost.<xhtml:code>printf "### Following lines added by CISecurity \ RHEL Benchmark Section 5.4\n\
                    kern.warning;*.err;authpriv.none\t@loghost\n\ *.info;mail.none;authpriv.none;cron.none\t@loghost\n\ *.emerg\t@loghost\n\
                    local7.*\t@loghost\n" &gt;&gt; /etc/syslog.conf</xhtml:code></xccdf:fixtext>
      <xccdf:complex-check operator="AND">
        <xccdf:check system="http://cisecurity.org/check">
          <!--kern.warning;*.err;authpriv.none @loghost-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="command test Â«egrep '^kern.warning;\*\.err;authpriv\.none[[:space:]]+@' /etc/syslog.confÂ»" success="pass">
              <ecl:command>egrep '^kern.warning;\*\.err;authpriv\.none[[:space:]]+@' /etc/syslog.conf</ecl:command>
              <ecl:line-selection op="pm" value="^.*$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--*.info;mail.none;authpriv.none;cron.none @loghost-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="command test Â«egrep '^\*\.info;mail\.none;authpriv\.none;cron\.none[[:space:]]+@' /etc/syslog.confÂ»" success="pass">
              <ecl:command>egrep '^\*\.info;mail\.none;authpriv\.none;cron\.none[[:space:]]+@' /etc/syslog.conf</ecl:command>
              <ecl:line-selection op="pm" value="^.*$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--*.emerg @loghost-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="command test Â«egrep '^\*\.emerg[[:space:]]+@l' /etc/syslog.confÂ»" success="pass">
              <ecl:command>egrep '^\*\.emerg[[:space:]]+@' /etc/syslog.conf</ecl:command>
              <ecl:line-selection op="pm" value="^.*$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--local7.*\t@loghost-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="command test Â«egrep '^local7\.\*[[:space:]]+@' /etc/syslog.confÂ»" success="pass">
              <ecl:command>egrep '^local7\.\*[[:space:]]+@' /etc/syslog.conf</ecl:command>
              <ecl:line-selection op="pm" value="^.*$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </xccdf:Rule>
  </xccdf:Group>
  <xccdf:Group id="file-directory-permissions-access" selected="true">
    <xccdf:title>File/Directory Permissions/Access</xccdf:title>
    <xccdf:description>This group specifies the file/directory permissions for many of the sensitive files.</xccdf:description>
    <xccdf:Rule id="add-nodev-option-to-appropriate-partitions" role="full" selected="false" weight="1.0">
      <xccdf:title>Add 'nodev' Option To Appropriate Partitions In /etc/fstab</xccdf:title>
      <xccdf:description>
        <xhtml:p>Placing "<xhtml:code>nodev</xhtml:code>" on these partitions prevents users from mounting unauthorized devices on
                    any partitions that we know should not contain devices. There should be little need to mount devices on any partitions
                    other than<xhtml:code>/dev</xhtml:code>.</xhtml:p>
        <xhtml:br/>
        <xhtml:p>One notable exception, of course, is the case where system programs are being placed into
                    "<xhtml:code>chroot</xhtml:code>jails"- these often require that several devices be created in
                    the<xhtml:code>chroot</xhtml:code>directory. If you are using<xhtml:code>chroot</xhtml:code>jails on your machines, you
                    should be careful with the<xhtml:code>nodev</xhtml:code>option.</xhtml:p>
        <xhtml:br/>
      </xccdf:description>
      <xccdf:fixtext>cp -p /etc/fstab /etc/fstab.tmp awk '($3 ~ /^ext[23]$/ &amp;&amp; $2 != "/") \ { $4 = $4 ",nodev" }; \ {
                print }' /etc/fstab.tmp &gt; /etc/fstab chown root:root /etc/fstab chmod 0644 /etc/fstab rm -f /etc/fstab.tmp</xccdf:fixtext>
      <xccdf:complex-check operator="AND">
        <xccdf:check system="http://cisecurity.org/check">
          <!--Add 'nodev' Option To Appropriate Partitions In /etc/fstab-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="Add 'nodev' Option To Appropriate Partitions In /etc/fstab">
              <ecl:command>egrep '^[^[:space:]]+[[:space:]]+/[^[:space:]]+[[:space:]]+ext[23][[:space:]]+' /etc/fstab|egrep -v
                                '([^\s]+\s+){3}.*nodev.*\s+'</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/fstab ownership and permission-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="/etc/fstab ownership and permission">
              <ecl:command>find /etc/fstab -follow -maxdepth 0 ! \( -user root -group root -perm u=rw,g=r,o=r \) -ls</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="add-nosuid-and-nodev-option-for-removable-media" role="full" selected="false" weight="1.0">
      <xccdf:title>Add 'nosuid' and 'nodev' Option For Removable Media In /etc/fstab</xccdf:title>
      <xccdf:description>
        <xhtml:p>Removable media is one vector by which malicious software can be introduced onto the system. By forcing these file
                    systems to be mounted with the nosuid option, the administrator prevents users from bringing set-UID programs onto the
                    system via CDROMs and floppy disks. We also force these filesystems to mount with the nodev option, as explained in item
                    6.1.</xhtml:p>
        <xhtml:br/>
        <xhtml:p>If this machine has multiple CD-ROM or floppy drives, additional action must be taken. Simply
                    add<xhtml:code>nosuid</xhtml:code>to the fourth field for the<xhtml:code>/etc/fstab</xhtml:code>lines that reference
                    those drives.</xhtml:p>
        <xhtml:br/>
      </xccdf:description>
      <xccdf:fixtext>cp -p /etc/fstab /etc/fstab.tmp awk '($2 ~ /^\/m.*\/(floppy|cdrom)$/) \ { $4 = $4 ",nosuid,nodev" }; \ { print }'
                /etc/fstab.tmp &gt; /etc/fstab chown root:root /etc/fstab chmod 0644 /etc/fstab rm -f /etc/fstab.tmp</xccdf:fixtext>
      <xccdf:complex-check operator="AND">
        <xccdf:check system="http://cisecurity.org/check">
          <!--Add 'nosuid' and 'nodev' Option For Removable Media In /etc/fstab-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="command test Â«grep 'media/' /etc/fstab|grep -v 'nosuid';grep 'media/' /etc/fstab|grep -v 'nodev'Â»">
              <ecl:command>grep 'media/' /etc/fstab|grep -v 'nosuid';grep 'media/' /etc/fstab|grep -v 'nodev'</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--chattr +i /etc/fstab-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="command test Â«lsattr /etc/fstabÂ»">
              <ecl:command>lsattr /etc/fstab</ecl:command>
              <ecl:line-selection op="pm" value="^----i"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/fstab ownership and permission-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="/etc/fstab ownership and permission">
              <ecl:command>find /etc/fstab -follow -maxdepth 0 ! \( -user root -group root -perm u=rw,g=r,o=r \) -ls</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="disable-user-mounted-removable-file-systems-6.3" role="full" selected="false" weight="1.0">
      <xccdf:title>Disable User-Mounted Removable File Systems</xccdf:title>
      <xccdf:description>In Red Hat Linux, the<xhtml:code>pam_console</xhtml:code>PAM module gives the user at console (the machine's
                true physical keyboard) temporarily enhanced privileges. This is configured through
                    the<xhtml:code>/etc/security/console.perms</xhtml:code>file. Under the Red Hat-shipped settings, the console user is
                given ownership of the floppy and CD-ROM drive, along with a host of other devices. Many of these devices correspond to
                removable media and thus represent a security risk. This item disables the enhanced privileges on these devices. Be aware
                that allowing users to mount and access data from removable media drives makes it easier for malicious programs and data to
                be imported onto the network or data to be removed from the server.</xccdf:description>
      <xccdf:fixtext>cd /etc/security awk '($1 == "&lt;console&gt;") &amp;&amp; ($3 !~ \
                /sound|fb|kbd|joystick|v4l|mainboard|gpm|scanner/) \ { $1 = "#&amp;console&gt;" }; \ { print }' console.perms-preCIS
                &gt; console.perms chown root:root console.perms chmod 0600 console.perms diff console.perms-preCIS console.perms</xccdf:fixtext>
      <xccdf:complex-check operator="AND">
        <xccdf:complex-check operator="AND">
          <xccdf:complex-check operator="OR">
            <!--/etc/security/console.perms-->
            <xccdf:check system="http://cisecurity.org/check">
              <!--/etc/security/console.perms does not exist-->
              <xccdf:check-content>
                <ecl:shell-command check="all" comment="/etc/security/console.perms does not exist" success="pass">
                  <ecl:command>find /etc/security/console.perms -follow -maxdepth 0 -ls 2&gt;/dev/null</ecl:command>
                  <ecl:line-selection op="pm" value=".+"/>
                </ecl:shell-command>
              </xccdf:check-content>
            </xccdf:check>
            <xccdf:complex-check operator="AND">
              <xccdf:check system="http://cisecurity.org/check">
                <!--/etc/security/console.perms text content-->
                <xccdf:check-content>
                  <ecl:file-content check="none exist" comment="/etc/security/console.perms text content">
                    <ecl:path>/etc/security/console.perms</ecl:path>
                    <ecl:line-selection op="pm" value="^&lt;console&gt;.*&lt;(sound|fb|kbd|joystick|v4l|mainboard|gpm|scanner)&gt;"/>
                  </ecl:file-content>
                </xccdf:check-content>
              </xccdf:check>
              <xccdf:check system="http://cisecurity.org/check">
                <!--/etc/security/console.perms ownership and permission-->
                <xccdf:check-content>
                  <ecl:shell-command check="none exist" comment="/etc/security/console.perms ownership and permission">
                    <ecl:command>find /etc/security/console.perms -follow -maxdepth 0 ! \( -user root -group root -perm
                                            u=r,g=,o= \) -ls</ecl:command>
                    <ecl:line-selection op="pm" value=".+"/>
                  </ecl:shell-command>
                </xccdf:check-content>
              </xccdf:check>
            </xccdf:complex-check>
          </xccdf:complex-check>
          <xccdf:complex-check operator="OR">
            <!--/etc/security/console.perms.d/50-default.perms-->
            <xccdf:complex-check operator="OR">
              <xccdf:check system="http://cisecurity.org/check">
                <!--/etc/security/console.perms.d/50-default.perms does not exist-->
                <xccdf:check-content>
                  <ecl:shell-command check="none exist" comment="/etc/security/console.perms.d/50-default.perms does not exist">
                    <ecl:command>find /etc/security/console.perms.d/50-default.perms -follow -maxdepth 0 -ls
                                            2&gt;/dev/null</ecl:command>
                    <ecl:line-selection op="pm" value=".+"/>
                  </ecl:shell-command>
                </xccdf:check-content>
              </xccdf:check>
              <xccdf:check system="http://cisecurity.org/check">
                <!--/etc/security/console.perms.d/50-default.perms text content-->
                <xccdf:check-content>
                  <ecl:file-content check="none exist" comment="/etc/security/console.perms.d/50-default.perms text content">
                    <ecl:path>/etc/security/console.perms.d/50-default.perms</ecl:path>
                    <ecl:line-selection op="pm" value="^&lt;console&gt;.*&lt;(sound|fb|kbd|joystick|v4l|mainboard|gpm|scanner)&gt;"/>
                  </ecl:file-content>
                </xccdf:check-content>
              </xccdf:check>
              <xccdf:check system="http://cisecurity.org/check">
                <!--/etc/security/console.perms.d/50-default.perms ownership and permission-->
                <xccdf:check-content>
                  <ecl:shell-command check="none exist" comment="/etc/security/console.perms.d/50-default.perms ownership and permission">
                    <ecl:command>find /etc/security/console.perms.d/50-default.perms -follow -maxdepth 0 ! \( -user root
                                            -group root -perm u=r,g=,o= \) -ls</ecl:command>
                    <ecl:line-selection op="pm" value=".+"/>
                  </ecl:shell-command>
                </xccdf:check-content>
              </xccdf:check>
            </xccdf:complex-check>
          </xccdf:complex-check>
        </xccdf:complex-check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="passwd-shadow-group-permissions" role="full" selected="false" weight="1.0">
      <xccdf:title>Verify passwd, shadow, and group File Permissions</xccdf:title>
      <xccdf:description>These are the default owners and access permissions for these files. It is worthwhile to periodically check
                these file permissions as there have been package defects that changed<xhtml:code>/etc/shadow</xhtml:code>permissions
                    to<xhtml:code>644</xhtml:code>. Tripwire (<xhtml:a href="http://www.tripwire.org/downloads/index.php">http://www.tripwire.org/downloads/index.php</xhtml:a>) and AIDE (<xhtml:a href="http://sourceforge.net/projects/aide">http://sourceforge.net/projects/aide</xhtml:a>) - the successor to Tripwire - are excellent products for alerting you
                to changes in these files. Whereas AIDE is an improvement to Tripwire, it is still listed as Beta software, and may not be
                suitable for Enterprise Production systems.</xccdf:description>
      <xccdf:complex-check operator="AND">
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/passwd ownership and permission-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="/etc/passwd ownership and permission">
              <ecl:command>find /etc/passwd -follow -maxdepth 0 ! \( -user root -group root -perm u=rw,g=r,o=r \) -ls</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/group ownership and permission-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="/etc/group ownership and permission">
              <ecl:command>find /etc/group -follow -maxdepth 0 ! \( -user root -group root -perm u=rw,g=r,o=r \) -ls</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/shadow ownership and permission-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="/etc/shadow ownership and permission">
              <ecl:command>find /etc/shadow -follow -maxdepth 0 ! \( -user root -group root -perm u=r,g=,o= \) -ls</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="world-writable-directories-sticky-bit" role="full" selected="false" weight="1.0">
      <xccdf:title>World-Writable Directories Should Have Their Sticky Bit Set</xccdf:title>
      <xccdf:description>When the so-called "sticky bit" is set on a directory, then only the owner of a file may remove that file
                from the directory (as opposed to the usual behavior where anybody with write access to that directory may remove the file).
                Setting the sticky bit prevents users from overwriting each other's files, whether accidentally or maliciously, and is
                generally appropriate for most world-writable directories. However, consult appropriate vendor documentation before blindly
                applying the sticky bit to any world writable directories found in order to avoid breaking any application dependencies on a
                given directory.</xccdf:description>
      <xccdf:fixtext>Action:<xhtml:br/>The automated tool supplied with this benchmark will flag world-writable directories that do
                not have the sticky bit set.<xhtml:br/><xhtml:br/>Administrators who wish to obtain a list of these directories may execute the following commands:<xhtml:br/><xhtml:br/><xhtml:code>for PART in `awk '($3 == "ext2" || $3 == "ext3") \ { print $2 }' /etc/fstab`; do find $PART -xdev -type d \ \(
                    -perm -0002 -a ! -perm -1000 \) -print done</xhtml:code></xccdf:fixtext>
      <xccdf:check system="http://cisecurity.org/check">
        <!--World-Writable Directories Should Have Their Sticky Bit Set-->
        <xccdf:check-content>
          <ecl:shell-command check="none exist" comment="command test Â«for PART in `awk '($3 ~ &quot;ext2|ext3|reiserfs&quot;) { print $2 }' /etc/fstab`; do find $PART -xdev -type d \( -perm -0002 -a ! -perm -1000 \) -ls; doneÂ»">
            <ecl:command>for PART in `awk '($3 ~ "ext2|ext3|reiserfs") { print $2 }' /etc/fstab`; do find $PART -xdev -type d \(
                            -perm -0002 -a ! -perm -1000 \) -ls; done</ecl:command>
            <ecl:line-selection op="pm" value=".+"/>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </xccdf:Rule>
    <xccdf:Rule id="find-unauthorized-world-writable-files-6.6" role="full" selected="false" weight="1.0">
      <xccdf:title>Find Unauthorized World-Writable Files</xccdf:title>
      <xccdf:description>Data in world-writable files can be modified and compromised by any user on the system. World-writable files
                may also indicate an incorrectly written script or program that could potentially be the cause of a larger compromise to the
                system's integrity. Generally removing write access for the "other" category (<xhtml:code>chmod o-w
                &lt;filename&gt;</xhtml:code>) is advisable, but always consult relevant vendor documentation in order to avoid
                breaking any application dependencies on a given file.</xccdf:description>
      <xccdf:fixtext>The automated testing tool supplied with this benchmark will flag unexpected world-writable files on the system.<xhtml:br/><xhtml:br/>Administrators who wish to obtain a list of the world-writable files currently installed on the system may run
                the following commands:<xhtml:br/><xhtml:br/>Action:<xhtml:code>for PART in `awk '($6 != "0") { print $2 }' /etc/fstab`; do find $PART -xdev -type f \ \(
                    -perm -0002 -a ! -perm -1000 \) -print done</xhtml:code>There should be no entries returned. If grub.conf shows up, its
                permissions will be adjusted in step 7.8.</xccdf:fixtext>
      <xccdf:check system="http://cisecurity.org/check">
        <!--Unauthorized World-Writable Files-->
        <xccdf:check-content>
          <ecl:shell-command check="none exist" comment="command test Â«for PART in `awk '(!/^#/ &amp;&amp; $6 != &quot;0&quot;) { print $2 }' /etc/fstab`; do find $PART -xdev -type f \( -perm -0002 -a ! -perm -1000 \) -ls 2&gt;/dev/null; doneÂ»">
            <ecl:command>for PART in `awk '(!/^#/ &amp;&amp; $6 != "0") { print $2 }' /etc/fstab`; do find $PART -xdev
                            -type f \( -perm -0002 -a ! -perm -1000 \) -ls 2&gt;/dev/null; done</ecl:command>
            <ecl:line-selection op="pm" value=".+"/>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </xccdf:Rule>
    <xccdf:Rule id="find-unauthorized-suid-sgid-system-executables-6.7" role="full" selected="false" weight="1.0">
      <xccdf:title>Find Unauthorized SUID/SGID System Executables</xccdf:title>
      <xccdf:description>The administrator should take care to ensure that no rogue set-UID programs have been introduced into the
                system. In addition, if possible, the administrator should attempt a Set-UID audit and reduction.</xccdf:description>
      <xccdf:fixtext>The automated testing tool supplied with this benchmark will flag unexpected set-UID and set-GID applications on
                the system.<xhtml:br/><xhtml:br/>Administrators who wish to obtain a list of the set-UID and set-GID programs currently installed on the system
                may run the following commands:<xhtml:br/><xhtml:br/>Action:<xhtml:code>for PART in `awk '($6 != "0") { print $2 }' /etc/fstab`; do find $PART \( -perm -04000 -o
                    -perm -02000 \) \ -type f -xdev -print done</xhtml:code></xccdf:fixtext>
      <xccdf:check system="http://cisecurity.org/check">
        <!--Unauthorized SUID/SGID System Executables-->
        <xccdf:check-content>
          <ecl:shell-command check="none exist" comment="command test Â«for PART in `awk '(!/^#/ &amp;&amp; $6 != &quot;0&quot;) { print $2 }' /etc/fstab`; do find $PART \( -perm -04000 -o -perm -02000 \) -type f -xdev -ls 2&gt;/dev/null; doneÂ»">
            <ecl:command>for PART in `awk '(!/^#/ &amp;&amp; $6 != "0") { print $2 }' /etc/fstab`; do find $PART \(
                            -perm -04000 -o -perm -02000 \) -type f -xdev -ls 2&gt;/dev/null; done</ecl:command>
            <ecl:line-selection op="pm" value=".+"/>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </xccdf:Rule>
    <xccdf:Rule id="find-all-unowned-files-6.8" role="full" selected="false" weight="1.0">
      <xccdf:title>Find All Unowned Files</xccdf:title>
      <xccdf:description>
        <xhtml:p>Do not allow any unowned files on your system. Unowned files may be an indication an intruder has accessed your
                    system or improper package maintenance/installation. Sometimes a package removal results in unowned files or directories
                    related to this software as the user/group associated with that package is removed, but that user's files (i.e., files
                    changed after the package was installed) are left behind. Another common cause is the installation of software that does
                    not properly set file ownerships.</xhtml:p>
        <xhtml:br/>
        <xhtml:p>Files in any NFS mounts may be ignored as the user ID mapping between systems may be out of sync. If your
                    Enterprise uses a central user management system (NIS or LDAP), the presence of unowned files may indicate another
                    problem and should be investigated.</xhtml:p>
        <xhtml:br/>
      </xccdf:description>
      <xccdf:fixtext>Action:<xhtml:code>for PART in `awk '($6 != "0") { print $2 }' /etc/fstab`; do find $PART -nouser -o -nogroup
                    -print done</xhtml:code>There should be no entries returned.</xccdf:fixtext>
      <xccdf:check system="http://cisecurity.org/check">
        <!--Unowned Files-->
        <xccdf:check-content>
          <ecl:shell-command check="none exist" comment="command test Â«for PART in `awk '(!/^#/ &amp;&amp; $6 != &quot;0&quot;) { print $2 }' /etc/fstab`; do find $PART -xdev \( -nouser -o -nogroup \) -ls 2&gt;/dev/null; doneÂ»">
            <ecl:command>for PART in `awk '(!/^#/ &amp;&amp; $6 != "0") { print $2 }' /etc/fstab`; do find $PART -xdev
                            \( -nouser -o -nogroup \) -ls 2&gt;/dev/null; done</ecl:command>
            <ecl:line-selection op="pm" value="^.+$"/>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </xccdf:Rule>
    <xccdf:Rule id="disable-usb-devices-aka-hotplugger" role="full" selected="false" weight="1.0">
      <xccdf:title>Disable USB Devices (AKA Hotplugger)</xccdf:title>
      <xccdf:description>
        <xhtml:p>PCMCIA cards, USB drives and memory devices represent another attack vector against 
          your systems.  The prices for a 512MB or even 1GB USB memory device have become 
          very affordable, and is enough storage to transport vast quantities of data off a system.  
          Few servers have any need for PCMCIA or USB devices and this whole avenue should 
          be disabled.</xhtml:p> 
        <xhtml:p>Another possible attack would be to have a bootable Linux system installed on the USB 
          device.  Most modern BIOS' allow booting from USB devices, so this would let a person 
          with physical access to a server an extremely easy way take over a system and bypass 
          some of the security you are setting up.  See the discussion regarding floppy and CD-
          ROM drives in section 6.2.</xhtml:p> 
        <xhtml:p>For these reasons, you should also disable USB in the BIOS if possible. 
          Note: For RHEL4 and Fedora Core 4, hotplugger is required by udev, which is required 
          by several other required packages, making very unlikely that you will be able to remove 
          it.  Therefore for new RedHat versions (RHEL4 and Fedora Core 4-5) the nousb kernel 
          boot argument should be to disable usb devices.  The script above uses grubby to add the 
          nousb kernel boot argument to the default kernel image. Adding nousb to other kernel 
          images is also recommended.   The /etc/grub.conf symbolic link may also be viewed or 
          edited as well.  The nousb  argument is placed at the end of the lines starting with 
          kernel, as shown below.</xhtml:p> 
        <xhtml:p>kernel/vmlinuz-2.6.xx_FC5 ro root=LABEL=/ rhgb quiet nousb </xhtml:p>
      </xccdf:description>
      <xccdf:fixtext>rpm -e hotplug rpm -e pcmcia-cs rpm -e kernel-pcmcia-cs</xccdf:fixtext>
      <xccdf:complex-check operator="AND">
        <xccdf:complex-check operator="OR">
          <xccdf:check system="http://cisecurity.org/check">
            <!--Package Â«hotplugÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Package Â«hotplugÂ» does not exist" success="pass">
                <ecl:command>rpm -q hotplug</ecl:command>
                <ecl:line-selection op="pm" value=".*"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!-- nousb option is specified for all kernels in grub.conf-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="nousb option is specified for all kernels in /etc/grub.conf" success="pass">
                <ecl:command>egrep '^[[:space:]]*kernel[[:space:]]+' /etc/grub.conf | grep -v nousb</ecl:command>
                <ecl:line-selection op="pm" value=".*"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--Package Â«pcmciaÂ» does not exist-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="Package Â«pcmciaÂ» does not exist" success="fail">
              <ecl:command>rpm -q pcmcia</ecl:command>
              <ecl:line-selection op="pm" value="."/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </xccdf:Rule>
  </xccdf:Group>
  <xccdf:Group id="system-access-authentication-and-authorization">
    <xccdf:title>System Access, Authentication, and Authorization</xccdf:title>
    <xccdf:description>This group specifies the system access, authentication and authorization recommendations that can help lock down the system.</xccdf:description>
    <xccdf:Rule id="remove-.rhosts-support-in-pam" role="full" selected="false" weight="1.0">
      <xccdf:title>Remove .rhosts Support In PAM Configuration Files</xccdf:title>
      <xccdf:description>
        <xhtml:p>Used in conjunction with the BSD-style "r-commands" (<xhtml:code>rlogin, rsh, rcp</xhtml:code>),
                        the<xhtml:code>.rhosts</xhtml:code>files implement a weak form of authentication based on the network address or
                    host name of the remote computer (which can be spoofed by a potential attacker to exploit the local system).
                        Disabling<xhtml:code>.rhosts</xhtml:code>support helps prevent users from subverting the system's normal access
                    control mechanisms.</xhtml:p>
        <xhtml:br/>
        <xhtml:p>If<xhtml:code>.rhosts</xhtml:code>support is required for some reason, some basic precautions should be taken when
                    creating and managing<xhtml:code>.rhosts</xhtml:code>files. Never use the "+" wildcard character
                    in<xhtml:code>.rhosts</xhtml:code>files. In fact,<xhtml:code>.rhosts</xhtml:code>entries should always specify a
                    specific trusted host name along with the user name of the trusted account on that system (e.g.,
                        "<xhtml:code>trustedhost alice</xhtml:code>" and not just "<xhtml:code>trustedhost</xhtml:code>"). Avoid
                    establishing trust relationships with systems outside of the organization's security perimeter and/or systems not
                    controlled by the local administrative staff. Firewalls and other network security elements should actually
                        block<xhtml:code>rlogin/rsh/rcp</xhtml:code>access from external hosts.</xhtml:p>
        <xhtml:br/>
        <xhtml:p>Finally, make sure that<xhtml:code>.rhosts</xhtml:code>files are only readable by the owner of the file (i.e.,
                    these files should be mode<xhtml:code>600</xhtml:code>).</xhtml:p>
        <xhtml:br/>
      </xccdf:description>
      <xccdf:fixtext>Action:<xhtml:code>for FILE in /etc/pam.d/*; do grep -v rhosts_auth $FILE &gt; ${FILE}.tmp mv -f ${FILE}.tmp
                    $FILE chown root:root $FILE chmod 644 $FILE done</xhtml:code></xccdf:fixtext>
      <xccdf:check system="http://cisecurity.org/check">
        <!--no PAM rhosts_auth-->
        <xccdf:check-content>
          <ecl:file-content check="none exist" comment="/etc/pam.d/^.+$ text content">
            <ecl:path>/etc/pam.d/^.+$</ecl:path>
            <ecl:line-selection op="pm" value="^[^#].*rhosts_auth"/>
          </ecl:file-content>
        </xccdf:check-content>
      </xccdf:check>
    </xccdf:Rule>
    <xccdf:Rule id="create-ftpusers-files" role="full" selected="false" weight="1.0">
      <xccdf:title>Create ftpusers Files</xccdf:title>
      <xccdf:description>
        <xhtml:code>/etc/ftpusers</xhtml:code>and<xhtml:code>/etc/vsftp.ftpusers</xhtml:code>contain a list of users who<xhtml:i>are
                    not</xhtml:i>allowed to access the system via WU-FTPd and vsftpd, respectively. Generally, only normal users should ever
                access the system via FTP-there should be no reason for "system" type accounts to be transferring information via this
                mechanism. Certainly the root account should never be allowed to transfer files directly via FTP.</xccdf:description>
      <xccdf:check system="http://cisecurity.org/check">
        <!--/etc/ftpusers ownership and permission-->
        <xccdf:check-content>
          <ecl:shell-command check="none exist" comment="/etc/ftpusers ownership and permission">
            <ecl:command>find /etc/ftpusers -follow -maxdepth 0 ! \( -user root -group root -perm u=rw,g=,o= \) -ls</ecl:command>
            <ecl:line-selection op="pm" value=".+"/>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </xccdf:Rule>
    <xccdf:Rule id="x-server-nolisten-tcp" role="full" selected="false" weight="1.0">
      <xccdf:title>Prevent X Server From Listening On Port 6000/tcp</xccdf:title>
      <xccdf:description>X servers listen on port<xhtml:code>6000/tcp</xhtml:code>for messages from remote clients running on other
                systems. However, X Windows uses a relatively insecure authentication protocol and an attacker who is able to gain
                unauthorized access to the local X server can easily compromise the system. Invoking the "<xhtml:code>-nolisten
                tcp</xhtml:code>" option causes the X server not to listen on port 6000/tcp by default. This prevents authorized remote X
                clients from displaying windows on the local system as well. However, the forwarding of X events via SSH will still happen
                normally. This is the preferred and more secure method transmitting results from remote X clients in any event.</xccdf:description>
      <xccdf:fixtext>Action:<xhtml:code>if [ -e /etc/X11/xdm/Xservers ]; then cd /etc/X11/xdm awk '($1 !~ /^#/ &amp;&amp; $3
                    == "/usr/X11R6X") \ { $3 = $3 " -nolisten tcp" }; { print }' Xservers-preCIS &gt; Xservers chown root:root Xservers
                    chmod 444 Xservers diff Xservers-preCIS Xservers fi if [ -e /etc/X11/gdm/gdm.conf ]; then cd /etc/X11/gdm awk -F= '($2 ~
                    /\/X$/) \ { printf("%s -nolisten tcp\n", $0); next }; { print }' gdm.conf-preCIS &gt; gdm.conf diff gdm.conf-preCIS
                    gdm.conf chown root:root gdm.conf chmod 644 gdm.conf fi if [ -d /etc/X11/xinit ]; then cd /etc/X11/xinit if [ -e
                    xserverrc ]; then awk '/X/ &amp;&amp; !/^#/ \ { print $0 " :0 -nolisten tcp \$@"; next }; \ { print }'
                    xserverrc-preCIS &gt; xserverrc else cat &lt;&lt; END &gt; xserverrc #!/bin/bash exec X :0 -nolisten tcp
                    \$@ END fi chown root:root xserverrc chmod 755 xserverrc diff xserverrc-preCIS xserverrc fi</xhtml:code></xccdf:fixtext>
      <xccdf:complex-check operator="AND">
        <xccdf:complex-check operator="AND">
          <!--/etc/X11/xdm/Xservers-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--/etc/X11/xdm/Xservers text content-->
            <xccdf:check-content>
              <ecl:file-content check="all" comment="/etc/X11/xdm/Xservers text content">
                <ecl:path>/etc/X11/xdm/Xservers</ecl:path>
                <ecl:line-selection op="pm" value="(^#.*$)|(^\s*$)|(^.*/usr/X11R6/bin/X -nolisten tcp.*$)"/>
              </ecl:file-content>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--/etc/X11/xdm/Xservers ownership and permission-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="/etc/X11/xdm/Xservers ownership and permission">
                <ecl:command>find /etc/X11/xdm/Xservers -follow -maxdepth 0 ! \( -user root -group root -perm u=r,g=r,o=r \)
                                    -ls</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="AND">
          <!--/etc/X11/gdm/gdm.conf-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--/etc/X11/gdm/gdm.conf ownership and permission-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="/etc/X11/gdm/gdm.conf ownership and permission">
                <ecl:command>find /etc/X11/gdm/gdm.conf -follow -maxdepth 0 ! \( -user root -group root -perm u=rw,g=r,o=r
                                    \) -ls</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="AND">
          <!--/etc/X11/xinit/xserverrc-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--/etc/X11/xinit/xserverrc ownership and permission-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="/etc/X11/xinit/xserverrc ownership and permission">
                <ecl:command>find /etc/X11/xinit/xserverrc -follow -maxdepth 0 ! \( -user root -group root -perm
                                    u=rwx,g=rx,o=rx \) -ls</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--command test Â«egrep '^exec[[:space:]]+X[[:space:]]+:0[[:space:]]+-nolisten[[:space:]]+tcp[[:space:]]+' /etc/X11/xinit/xserverrcÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="command test Â«egrep '^exec[[:space:]]+X[[:space:]]+:0[[:space:]]+-nolisten[[:space:]]+tcp[[:space:]]+' /etc/X11/xinit/xserverrcÂ»" success="pass">
                <ecl:command>egrep '^exec[[:space:]]+X[[:space:]]+:0[[:space:]]+-nolisten[[:space:]]+tcp[[:space:]]+'
                                    /etc/X11/xinit/xserverrc</ecl:command>
                <ecl:line-selection op="pm" value="^.*$"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="restrict-at-cron-to-authorized-users" role="full" selected="false" weight="1.0">
      <xccdf:title>Restrict at/cron To Authorized Users</xccdf:title>
      <xccdf:description>The<xhtml:code>cron.allow</xhtml:code>and<xhtml:code>at.allow</xhtml:code>files are a list of users who are
                allowed to run the<xhtml:code>crontab</xhtml:code>and at commands to submit jobs to be run at scheduled intervals. On many
                systems, only the system administrator needs the ability to schedule jobs. Note that even though a given user is not listed
                    in<xhtml:code>cron.allow</xhtml:code>, cron jobs can still be run as that user.<xhtml:code>cron.allow</xhtml:code>only
                controls administrative access to the<xhtml:code>crontab</xhtml:code>command for scheduling and modifying cron jobs.</xccdf:description>
      <xccdf:complex-check operator="AND">
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/cron.deny does not exist-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="/etc/cron.deny does not exist">
              <ecl:command>find /etc/cron.deny -follow -maxdepth 0 -ls 2&gt;/dev/null</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/at.deny does not exist-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="/etc/at.deny does not exist">
              <ecl:command>find /etc/at.deny -follow -maxdepth 0 -ls 2&gt;/dev/null</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--command test Â«egrep -v root /etc/cron.allowÂ»-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="command test Â«egrep -v root /etc/cron.allowÂ»">
              <ecl:command>egrep -v root /etc/cron.allow</ecl:command>
              <ecl:line-selection op="pm" value="^.+$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--command test Â«egrep -v root /etc/at.allowÂ»-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="command test Â«egrep -v root /etc/at.allowÂ»">
              <ecl:command>egrep -v root /etc/at.allow</ecl:command>
              <ecl:line-selection op="pm" value="^.+$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/cron.allow ownership and permission-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="/etc/cron.allow ownership and permission">
              <ecl:command>find /etc/cron.allow -follow -maxdepth 0 ! \( -user root -group root -perm u=r,g=,o= \) -ls</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/at.allow ownership and permission-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="/etc/at.allow ownership and permission">
              <ecl:command>find /etc/at.allow -follow -maxdepth 0 ! \( -user root -group root -perm u=r,g=,o= \) -ls</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="crontab-permissions" role="full" selected="false" weight="1.0">
      <xccdf:title>Restrict Permissions On crontab Files</xccdf:title>
      <xccdf:description>The system crontab files are accessed only by the<xhtml:code>cron</xhtml:code>daemon (which runs with
                superuser privileges) and the<xhtml:code>crontab</xhtml:code>command (which is set-UID to root). Allowing unprivileged users
                to read or (even worse) modify system<xhtml:code>crontab</xhtml:code>files can create the potential for a local user on the
                system to gain elevated privileges.</xccdf:description>
      <xccdf:complex-check operator="AND">
        <xccdf:complex-check operator="AND">
          <!--/etc/crontab-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--/etc/crontab ownership and permission-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="/etc/crontab ownership and permission">
                <ecl:command>find /etc/crontab -follow -maxdepth 0 ! \( -user root -group root -perm u=r,g=,o= \) -ls</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="AND">
          <!--/var/spool/cron-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--command test Â«find /var/spool/cron ! \( -user root -group root \) -lsÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="command test Â«find /var/spool/cron ! \( -user root -group root \) -lsÂ»">
                <ecl:command>find /var/spool/cron ! \( -user root -group root \) -ls</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="AND">
          <!--/etc/*cron*-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--command test Â«find /etc -maxdepth 0 -name '*cron*' ! \( -user root -group root -perm g=,o= \) -lsÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="command test Â«find /etc -maxdepth 0 -name '*cron*' ! \( -user root -group root -perm g=,o= \) -lsÂ»">
                <ecl:command>find /etc -maxdepth 0 -name '*cron*' ! \( -user root -group root -perm g=,o= \) -ls</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="configure-xinetd-access-control-7.6" role="full" selected="false" weight="1.0">
      <xccdf:title>Configure xinetd Access Control</xccdf:title>
      <xccdf:description>This item configures<xhtml:code>xinetd</xhtml:code>to use simple IP-based access control and log connections.
                Just as<xhtml:code>xinetd</xhtml:code>'s access control mechanisms are used to monitor illicit connection attempts, the
                popular PortSentry tool (<xhtml:a href="http://www.psionic.com/products/portsentry.html">http://www.psionic.com/products/portsentry.html</xhtml:a>) can be used to monitor access attempts on unused ports. Note
                that running PortSentry may result in the CIS testing tools reporting "false positives" for "active" ports that are actually
                being held by the PortSentry daemon. Consider replacing the PortSentry daemon with PSAD, short for Port Scan Attack
                Detector, available from<xhtml:a href="http://www.cipherdyne.com/psad/">http://www.cipherdyne.com/psad/</xhtml:a>. Unlike
                PortSentry, PSAD doesn't have to hold open ports -- instead, it communicates directly with the kernel.</xccdf:description>
      <xccdf:fixtext>Action: Insert the following line into the "defaults" block in /etc/xinetd.conf :<xhtml:code>only_from =
                    &lt;net&gt;/&lt;num_bits&gt; &lt;net&gt;/&lt;num_bits&gt;</xhtml:code>where
                    each<xhtml:code>&lt;net&gt; / &lt; num_bits&gt;</xhtml:code>combination represents one network block in
                use by your organization.<xhtml:br/><xhtml:br/>For example:<xhtml:code>only_from = 192.168.1.0/24</xhtml:code>would restrict connections to only the
                192.168.1.0/24 network, with the netmask 255.255.255.0.<xhtml:br/><xhtml:br/>Note: There are two TAB's between the only_from and the = in the above lines.</xccdf:fixtext>
      <xccdf:check system="http://cisecurity.org/check">
        <!--command test Â«egrep '^[[:space:]]+only_from' /etc/xinetd.confÂ»-->
        <xccdf:check-content>
          <ecl:shell-command check="all" comment="command test Â«egrep '^[[:space:]]+only_from' /etc/xinetd.confÂ»" success="pass">
            <ecl:command>egrep '^[[:space:]]+only_from' /etc/xinetd.conf</ecl:command>
            <ecl:line-selection op="pm" value="^.*$"/>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </xccdf:Rule>
    <xccdf:Rule id="restrict-root-logins-to-system-console" role="full" selected="false" weight="1.0">
      <xccdf:title>Restrict Root Logins To System Console</xccdf:title>
      <xccdf:description>
        <xhtml:p>anonymous root logins should never be allowed, except on the system console in emergency situations. At all other
                    times, the administrator should access the system via an unprivileged account and use some authorized mechanism (such as
                        the<xhtml:code>su</xhtml:code>command, or the freely-available<xhtml:code>sudo</xhtml:code>package) to gain
                    additional privileges. These mechanisms provide at least some audit trail in the event of problems.</xhtml:p>
        <xhtml:br/>
        <xhtml:p>Many Enterprises - who use serial port concentrators to connect to a server in a data center without physically
                    having to use the keyboard - consider the serial port a console. This is in keeping with the Unix server tradition of
                    controlling headless Unix machines using a serial port console. Just like the virtual consoles, this one needs protected
                    as well. If this applies to your organization, you may execute these lines:</xhtml:p>
        <xhtml:blockquote>
          <xhtml:code>echo ttyS0 &gt;&gt; /etc/securetty<xhtml:br/>echo ttyS1 &gt;&gt; /etc/securetty</xhtml:code>
        </xhtml:blockquote>
        <xhtml:p>Be advised that doing so will reduce your CIS Scoring Tool score and reduce your security posture.</xhtml:p>
        <xhtml:br/>
      </xccdf:description>
      <xccdf:complex-check operator="AND">
        <xccdf:complex-check operator="AND">
          <xccdf:check system="http://cisecurity.org/check">
            <!--/etc/securetty text content-->
            <xccdf:check-content>
              <ecl:file-content check="at least one" comment="/etc/securetty text content">
                <ecl:path>/etc/securetty</ecl:path>
                <ecl:line-selection op="pm" value="^(.+)$">
                  <ecl:regex-group group="1" op="eq" value="console"/>
                </ecl:line-selection>
              </ecl:file-content>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/securetty ownership and permission-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="/etc/securetty ownership and permission">
              <ecl:command>find /etc/securetty -follow -maxdepth 0 ! \( -user root -group root -perm u=r,g=,o= \) -ls</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="set-lilo-grub-password" role="full" selected="false" weight="1.0">
      <xccdf:title>Set LILO/GRUB Password</xccdf:title>
      <xccdf:description>By default on most Linux systems, the boot loader prompt allows an attacker to subvert the normal boot
                process very easily. The action above will allow the system to boot normally, only requiring a password when the user
                attempts to modify the boot process by passing commands to LILO or GRUB. Make sure to replace &lt;password&gt; in
                the actions above with a good password.</xccdf:description>
      <xccdf:fixtext>Note: Bastille configuration set to 'No'<xhtml:br/>Action (if you have an /etc/lilo.conf file):<xhtml:br/>1. Add
                the following lines to the beginning of /etc/lilo.conf<xhtml:br/><xhtml:code>restricted password= &lt;password&gt;</xhtml:code>Replace &lt;password&gt; with an appropriate
                password for your organization.<xhtml:br/><xhtml:br/>2. Execute the following commands as root:<xhtml:br/><xhtml:code>chown root:root /etc/lilo.conf chmod 600 /etc/lilo.conf lilo</xhtml:code><xhtml:br/><xhtml:br/>Action (if you have an /etc/grub.conf file):<xhtml:br/>1. Add this line to /etc/grub.conf before the first
                uncommented line.<xhtml:code>password &lt;password&gt;</xhtml:code>Replace &lt;password&gt; with an
                appropriate password for your organization.<xhtml:br/><xhtml:br/>2. Execute the following commands as root:<xhtml:br/><xhtml:br/><xhtml:code>chown root:root /etc/grub.conf chmod 600 /etc/grub.conf</xhtml:code></xccdf:fixtext>
      <xccdf:complex-check operator="AND">
        <xccdf:complex-check operator="OR">
          <!--LILO-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--/etc/lilo.conf does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="/etc/lilo.conf does not exist">
                <ecl:command>find /etc/lilo.conf -follow -maxdepth 0 -ls 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
              <!--/etc/lilo.conf text content-->
              <xccdf:check-content>
                <ecl:file-content check="at least one" comment="/etc/lilo.conf text content">
                  <ecl:path>/etc/lilo.conf</ecl:path>
                  <ecl:line-selection op="pm" value="^restricted$"/>
                </ecl:file-content>
              </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
              <!--/etc/lilo.conf text content-->
              <xccdf:check-content>
                <ecl:file-content check="at least one" comment="/etc/lilo.conf text content">
                  <ecl:path>/etc/lilo.conf</ecl:path>
                  <ecl:line-selection op="pm" value="^password=.+$"/>
                </ecl:file-content>
              </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
              <!--/etc/lilo.conf ownership and permission-->
              <xccdf:check-content>
                <ecl:shell-command check="none exist" comment="/etc/lilo.conf ownership and permission">
                  <ecl:command>find /etc/lilo.conf -follow -maxdepth 0 ! \( -user root -group root -perm u=rw,g=,o= \) -ls</ecl:command>
                  <ecl:line-selection op="pm" value=".+"/>
                </ecl:shell-command>
              </xccdf:check-content>
            </xccdf:check>
          </xccdf:complex-check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--GRUB-->
          <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
              <!--/etc/grub.conf does not exist-->
              <xccdf:check-content>
                <ecl:shell-command check="none exist" comment="/etc/grub.conf does not exist">
                  <ecl:command>find /etc/grub.conf -follow -maxdepth 0 -ls 2&gt;/dev/null</ecl:command>
                  <ecl:line-selection op="pm" value=".+"/>
                </ecl:shell-command>
              </xccdf:check-content>
            </xccdf:check>
          </xccdf:complex-check>
          <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
              <!--/etc/grub.conf text content-->
              <xccdf:check-content>
                <ecl:file-content check="at least one" comment="/etc/grub.conf text content">
                  <ecl:path>/etc/grub.conf</ecl:path>
                  <ecl:line-selection op="pm" value="^password\s+[^\s]+.*$"/>
                </ecl:file-content>
              </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
              <!--/etc/grub.conf ownership and permission-->
              <xccdf:check-content>
                <ecl:shell-command check="none exist" comment="/etc/grub.conf ownership and permission">
                  <ecl:command>find /etc/grub.conf -follow -maxdepth 0 ! \( -user root -group root -perm u=rw,g=,o= \) -ls</ecl:command>
                  <ecl:line-selection op="pm" value=".+"/>
                </ecl:shell-command>
              </xccdf:check-content>
            </xccdf:check>
          </xccdf:complex-check>
        </xccdf:complex-check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="require-authentication-for-single-user-mode" role="full" selected="false" weight="1.0">
      <xccdf:title>Require Authentication For Single-User Mode</xccdf:title>
      <xccdf:description>
        <xhtml:p>By default on Red Hat Linux, you can enter single user mode simply by typing "linux single" at the LILO prompt or
                    in the GRUB boot-editing menu. Some believe that this is left in to ease support of users with lost root passwords. In
                    any case, it represents a clear security risk - authentication should always be required for root-level access. It
                    should be noted that it is extremely difficult to prevent compromise by any attacker who has knowledge, tools, and full
                    physical access to a system. This kind of measure simply increases the difficulty of compromise by requiring more of
                    each of these factors.</xhtml:p>
        <xhtml:br/>
        <xhtml:p>These last two items have attempted to address concerns of physical/boot security. To make these preparations more
                    complete, one should consider setting the BIOS to boot only from the main hard disk and locking this setting with a BIOS
                    password. For more information on reducing the threat posed by an attacker with physical/boot access, consider the
                    article "Anyone with a Screwdriver Can Break In," available at<xhtml:a href="http://www.bastille-linux.org/jay/anyone-with-a-screwdriver.html">http://www.bastille-linux.org/jay/anyone-with-a-screwdriver.html</xhtml:a>.</xhtml:p>
        <xhtml:br/>
        <xhtml:p>Note: Even though this topic is addressed by Bastille, it performs a step not executed by Bastille and should be
                    completed even if Bastille was used.</xhtml:p>
        <xhtml:br/>
      </xccdf:description>
      <xccdf:fixtext>Action:<xhtml:code>cd /etc if [ "`grep -l sulogin inittab`" = "" ]; then awk '{ print };
                    /^id:[0123456sS]:initdefault:/ \ { print "~:S:wait:/sbin/sulogin" }' \ inittab &gt; inittab.tmp mv -f inittab.tmp
                    inittab chown root:root inittab chmod 644 inittab fi</xhtml:code></xccdf:fixtext>
      <xccdf:complex-check operator="AND">
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/inittab text content-->
          <xccdf:check-content>
            <ecl:file-content check="at least one" comment="/etc/inittab text content">
              <ecl:path>/etc/inittab</ecl:path>
              <ecl:line-selection op="pm" value="^[~]+:S:wait:/sbin/sulogin$"/>
            </ecl:file-content>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/inittab ownership and permission-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="/etc/inittab ownership and permission">
              <ecl:command>find /etc/inittab -follow -maxdepth 0 ! \( -user root -group root -perm u=rw,g=r,o=r \) -ls</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="restrict-nfs-client-requests-to-privileged-ports" role="full" selected="false" weight="1.0">
      <xccdf:title>Restrict NFS Client Requests To Privileged Ports</xccdf:title>
      <xccdf:description>Setting the secure parameter causes the NFS server process on the local system to ignore NFS client requests
                that do not originate from the privileged port range (ports less than 1024). This should not hinder normal NFS operations
                but may block some automated NFS attacks that are run by unprivileged users.</xccdf:description>
      <xccdf:fixtext>Add the<xhtml:code>secure</xhtml:code>option to all entries in the<xhtml:code>/etc/exports</xhtml:code>file. The
                following Perl code will perform this action automatically.<xhtml:br/><xhtml:br/>Action:<xhtml:code>if [ -s /etc/exports ]; then perl -i.orig -pe \ 'next if (/^\s*#/ || /^\s*$/); ($res, @hst) =
                    split(" "); foreach $ent (@hst) { undef(%set); ($optlist) = $ent =~ /\((.*?)\)/; foreach $opt (split(/,/, $optlist)) {
                    $set{$opt} = 1; } delete($set{"insecure"}); $set{"secure"} = 1; $ent =~ s/\(.*?\)//; $ent .= "(" . join(",", keys(%set))
                    . ")"; } $hst[0] = "(secure)" unless (@hst); $_ = "$res\t" . join(" ", @hst) . "\n";' \ /etc/exports fi</xhtml:code></xccdf:fixtext>
      <xccdf:check system="http://cisecurity.org/check">
        <!--command test Â«egrep -v '(^#.*$)|(^$)' /etc/exports|egrep -v 'secure'Â»-->
        <xccdf:check-content>
          <ecl:shell-command check="none exist" comment="command test Â«egrep -v '(^#.*$)|(^$)' /etc/exports|egrep -v 'secure'Â»">
            <ecl:command>egrep -v '(^#.*$)|(^$)' /etc/exports|egrep -v 'secure'</ecl:command>
            <ecl:line-selection op="pm" value="^.+$"/>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </xccdf:Rule>
    <xccdf:Rule id="syslog-accept-messages" role="full" selected="false" weight="1.0">
      <xccdf:title>Only Enable syslog To Accept Messages If Absolutely Necessary</xccdf:title>
      <xccdf:description>
        <xhtml:p>By default the system logging daemon, syslogd, does not listen for log messages from 
        other systems on network port 514/udp (Solaris, by contrast, does listen by default). </xhtml:p>
        
        <xhtml:p>It is considered good practice to set up one or more machines as central "log servers" to 
          aggregate log traffic from all machines at a site. However, unless a system is set up to be 
          one of these "log server" systems, it should not be listening on 514/udp for incoming log 
          messages as the protocol used to transfer these messages does not include any form of 
          authentication, so a malicious outsider could simply barrage the local system's Syslog 
          port with spurious traffic either as a denial-of- service attack on the system, or to fill up 
          the local system's logging file systems so that subsequent attacks will not be logged.</xhtml:p>
      </xccdf:description>
      <xccdf:fixtext>Read<xhtml:code>syslog</xhtml:code>manpage for
                    the<xhtml:code>-l</xhtml:code>,<xhtml:code>-r</xhtml:code>and<xhtml:code>-s</xhtml:code>options.<xhtml:br/><xhtml:br/>Edit<xhtml:code>/etc/init.d/syslog</xhtml:code>and look for the line that says:<xhtml:code>SYSLOGD_OPTIONS="-m
                0"</xhtml:code>and add the entries that are appropriate for your site. An example entry would look like
                    this:<xhtml:code>SYSLOGD="-m 0 -l loghost -r -s mydomain.com"</xhtml:code></xccdf:fixtext>
      <xccdf:complex-check operator="AND">
        <xccdf:complex-check operator="OR">
          <xccdf:complex-check operator="OR">
            <xccdf:check system="http://cisecurity.org/check">
              <!--/etc/sysconfig/syslog does not exist-->
              <xccdf:check-content>
                <ecl:shell-command check="none exist" comment="/etc/sysconfig/syslog does not exist" success="pass">
                  <ecl:command>find /etc/sysconfig/syslog -follow -maxdepth 0 -ls 2&gt;/dev/null</ecl:command>
                  <ecl:line-selection op="pm" value=".+"/>
                </ecl:shell-command>
              </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
              <!--/etc/sysconfig/syslog text content-->
              <xccdf:check-content>
                <ecl:file-content check="at least one" comment="/etc/sysconfig/syslog text content">
                  <ecl:path>/etc/sysconfig/syslog</ecl:path>
                  <ecl:line-selection op="pm" value="^SYSLOGD_PARAMS=&quot;[^&quot;]*-r[^&quot;]*&quot;.*$"/>
                </ecl:file-content>
              </xccdf:check-content>
            </xccdf:check>
          </xccdf:complex-check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--/etc/init.d/syslog text content-->
            <xccdf:check-content>
              <ecl:file-content check="at least one" comment="/etc/init.d/syslog text content">
                <ecl:path>/etc/init.d/syslog</ecl:path>
                <ecl:line-selection op="pm" value="^\s+SYSLOGD_OPTIONS=&quot;[^&quot;]*-r[^&quot;]*&quot;.*$"/>
              </ecl:file-content>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
      </xccdf:complex-check>
    </xccdf:Rule>
  </xccdf:Group>
  <xccdf:Group id="user-accounts-and-environment" selected="true">
    <xccdf:title>User Accounts and Environment</xccdf:title>
    <xccdf:description>Note that the items in this section are tasks that the local administrator should undertake on a regular, ongoing
            basis perhaps in an automated fashion via cron. The automated host-based scanning tools provided from the Center for Internet
            Security can be used for this purpose. These scanning tools are typically provided with this document, but are also available
            for free download from<xhtml:a href="http://www.CISecurity.org/">http://www.CISecurity.org/</xhtml:a>.</xccdf:description>
    <xccdf:Rule id="block-system-accounts" role="full" selected="false" weight="1.0">
      <xccdf:title>Block System Accounts</xccdf:title>
      <xccdf:description>These accounts are non-human system accounts that should be made less useful to an attacker by locking them
                and setting the shell to a shell not in /etc/shells. They can even be deleted if the machines does not use the
                daemon/service that each is responsible for, though it is safest to simply deactivate them as is done here. To deactivate
                them, lock the password and set the login shell to an invalid shell. /dev/null is a good choice because it is not a valid
                login shell, and should an attacker attempt to replace it with a copy of a valid shell the system will not operate properly.<xhtml:br/><xhtml:br/>This section expands upon section 3.6 for locking out users.</xccdf:description>
      <xccdf:fixtext>Action:<xhtml:code>for NAME in `cut -d: -f1 /etc/passwd`; do MyUID=`id -u $NAME` if [ $MyUID -lt 500 -a $NAME !=
                    'root' ]; then usermod -L -s /dev/null $NAME fi done</xhtml:code></xccdf:fixtext>
      <xccdf:check system="http://cisecurity.org/check">
        <!--command test Â«awk -F: '($1!="root" && $3<500 && $7!="/dev/null") {print}' /etc/passwdÂ»-->
        <xccdf:check-content>
          <ecl:shell-command check="none exist" comment="command test Â«awk -F: '($1!=&quot;root&quot; &amp;&amp; $3&lt;500 &amp;&amp; $7!=&quot;/dev/null&quot;) {print}' /etc/passwdÂ»">
            <ecl:command>awk -F: '($1!="root" &amp;&amp; $3&lt;500 &amp;&amp; $7!="/dev/null") {print}'
                            /etc/passwd</ecl:command>
            <ecl:line-selection op="pm" value=".+"/>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </xccdf:Rule>
    <xccdf:Rule id="verify-no-accounts-with-empty-password" role="full" selected="false" weight="1.0">
      <xccdf:title>Verify That There Are No Accounts With Empty Password Fields</xccdf:title>
      <xccdf:description>An account with an empty password field means that anybody may log in as that user without providing a
                password at all. All accounts should have strong passwords or should be locked by using a password string like
                    "<xhtml:code>NP</xhtml:code>" or "<xhtml:code>*LOCKED*</xhtml:code>".</xccdf:description>
      <xccdf:fixtext>Action:<xhtml:br/>The command:<xhtml:code>awk -F: '($2 == "") { print $1 }' /etc/shadow</xhtml:code>should return
                no lines of output.</xccdf:fixtext>
      <xccdf:check system="http://cisecurity.org/check">
        <!--command test Â«awk -F: '(!$2) {print}' /etc/shadowÂ»-->
        <xccdf:check-content>
          <ecl:shell-command check="none exist" comment="command test Â«awk -F: '(!$2) {print}' /etc/shadowÂ»">
            <ecl:command>awk -F: '(!$2) {print}' /etc/shadow</ecl:command>
            <ecl:line-selection op="pm" value=".+"/>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </xccdf:Rule>
    <xccdf:Rule id="set-account-expiration-parameters" role="full" selected="false" weight="1.0">
      <xccdf:title>Set Account Expiration Parameters On Active Accounts</xccdf:title>
      <xccdf:description>It is a good idea to force users to change passwords on a regular basis. The commands above will set all
                active accounts (except the root account) to force password changes every 90 days, and then prevent password changes for
                seven days thereafter. Users will begin receiving warnings 28 days before their password expires. The Enterprise also has
                the option of expiring idle accounts after a certain number of days (see the on-line manual page for
                the<xhtml:code>usermod</xhtml:code>command, particularly the<xhtml:code>-f</xhtml:code>option). Finally, the instructions
                above set a minimum password length of 6 characters.<xhtml:br/><xhtml:br/>These are recommended starting values. Some regulated industries require more restrictive values - ensure they
                comply with your Enterprise security policy.</xccdf:description>
      <xccdf:complex-check operator="AND">
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/login.defs text content-->
          <xccdf:check-content>
            <ecl:file-content check="all" comment="/etc/login.defs PASS_MAX_DAYS le 90">
              <ecl:path>/etc/login.defs</ecl:path>
              <ecl:line-selection op="pm" value="^PASS_MAX_DAYS\s+(\d+)$">
                <ecl:regex-group dt="xs:integer" group="1" op="le" value="90"/>
              </ecl:line-selection>
            </ecl:file-content>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/login.defs text content-->
          <xccdf:check-content>
            <ecl:file-content check="all" comment="/etc/login.defs PASS_MIN_DAYS ge 7">
              <ecl:path>/etc/login.defs</ecl:path>
              <ecl:line-selection op="pm" value="^PASS_MIN_DAYS\s+(\d+)$">
                <ecl:regex-group dt="xs:integer" group="1" op="ge" value="7"/>
              </ecl:line-selection>
            </ecl:file-content>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/login.defs text content-->
          <xccdf:check-content>
            <ecl:file-content check="all" comment="/etc/login.defs PASS_WARN_AGE eq 28">
              <ecl:path>/etc/login.defs</ecl:path>
              <ecl:line-selection op="pm" value="^PASS_WARN_AGE\s+(\d+)$">
                <ecl:regex-group dt="xs:integer" group="1" op="eq" value="28"/>
              </ecl:line-selection>
            </ecl:file-content>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/login.defs text content-->
          <xccdf:check-content>
            <ecl:file-content check="all" comment="/etc/login.defs PASS_MIN_LEN ge 6">
              <ecl:path>/etc/login.defs</ecl:path>
              <ecl:line-selection op="pm" value="^PASS_MIN_LEN\s+(\d+)$">
                <ecl:regex-group dt="xs:integer" group="1" op="ge" value="6"/>
              </ecl:line-selection>
            </ecl:file-content>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/login.defs ownership and permission-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="/etc/login.defs ownership and permission">
              <ecl:command>find /etc/login.defs -follow -maxdepth 0 ! \( -user root -group root -perm u=rw,g=r,o= \) -ls</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--useradd -D -f 7-->
          <xccdf:check-content>
            <ecl:file-content check="all" comment="/etc/default/useradd INACTIVE le 7">
              <ecl:path>/etc/default/useradd</ecl:path>
              <ecl:line-selection op="pm" value="^INACTIVE=(\d+)$">
                <ecl:regex-group dt="xs:integer" group="1" op="le" value="7"/>
              </ecl:line-selection>
            </ecl:file-content>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--chage -m 7 -M 90 -W 28 -I 7 all user accounts-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="command test Â«for u in `awk -F: '($3&gt;500 &amp;&amp; $3&lt;65534) {print $1}' /etc/passwd`; do egrep ^$u: /etc/shadow; done|awk -F: '($2!~/[!*]+/ &amp;&amp; ($4&gt;=7 || $5&gt;90 || $6&gt;28 || $7&gt;7)) {print}'Â»">
              <ecl:command>for u in `awk -F: '($3&gt;500 &amp;&amp; $3&lt;65534) {print $1}' /etc/passwd`; do
                                egrep ^$u: /etc/shadow; done|awk -F: '($2!~/[!*]+/ &amp;&amp; ($4&gt;=7 || $5&gt;90 ||
                                $6&gt;28 || $7&gt;7)) {print}'</ecl:command>
              <ecl:line-selection op="pm" value="^.+$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="legacy-plus-entries-in-passwd-shadow-group" role="full" selected="false" weight="1.0">
      <xccdf:title>Verify No Legacy '+' Entries Exist In passwd, shadow, And group Files</xccdf:title>
      <xccdf:description>'+' entries in various files used to be markers for systems to insert data from NIS maps at a certain point
                in a system configuration file. These entries may provide an avenue 41 for attackers to gain privileged access on the
                system, and should be deleted if they exist.</xccdf:description>
      <xccdf:fixtext>Action:<xhtml:br/>The command:<xhtml:code>grep ^+: /etc/passwd /etc/shadow /etc/group</xhtml:code>should return
                no lines of output.</xccdf:fixtext>
      <xccdf:check system="http://cisecurity.org/check">
        <!--/etc/^(passwd|shadow|group)$ text content-->
        <xccdf:check-content>
          <ecl:file-content check="none exist" comment="/etc/^(passwd|shadow|group)$ text content">
            <ecl:path>/etc/^(passwd|shadow|group)$</ecl:path>
            <ecl:line-selection op="pm" value="^+:.*$"/>
          </ecl:file-content>
        </xccdf:check-content>
      </xccdf:check>
    </xccdf:Rule>
    <!--     MOVED TO APPENDIX??f
    <xccdf:Rule id="no-uid-0-accounts-other-than-root">
            <xccdf:title>Verify That No UID 0 Accounts Exist Other Than Root</xccdf:title>
            <xccdf:description>Any account with UID 0 has superuser privileges on the system. The only superuser account on the machine
                should be the root account, and it should be accessed by logging in as an unprivileged user and using
                the<xhtml:code>su</xhtml:code>command (or equivalent) to gain additional privilege.<xhtml:br/>
                <xhtml:br/>Finer granularity access control for administrative access can be obtained by using the -
                    freely-available<xhtml:code>sudo</xhtml:code>program (<xhtml:a href="http://www.courtesan.com/sudo/"
                    >http://www.courtesan.com/sudo/</xhtml:a>).</xccdf:description>
            <xccdf:fixtext>Action:<xhtml:br/>The command:<xhtml:code>awk -F: '($3 == 0) { print $1 }' /etc/passwd</xhtml:code>should return
                only the word "root".</xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <!- -command test Â«awk -F: '($3==0 && $1!="root") {print}' /etc/passwdÂ»
                <xccdf:check-content>
                    <ecl:shell-command check="none exist"
                        comment="command test Â«awk -F: '($3==0 &amp;&amp; $1!=&#34;root&#34;) {print}' /etc/passwdÂ»">
                        <ecl:command>awk -F: '($3==0 &amp;&amp; $1!="root") {print}' /etc/passwd</ecl:command>
                        <ecl:line-selection op="pm" value="^.+$"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>-->
    <xccdf:Rule id="no-.-or-group-world-writable-directory-in-roots-path-8.6" role="full" selected="false" weight="1.0">
      <xccdf:title>No '.' or Group/World-Writable Directory In Root's $PATH</xccdf:title>
      <xccdf:description>Including the current working directory ('.') or other writable directory in root's executable path makes it
                likely that an attacker can gain superuser access by forcing an administrator operating as root to execute a Trojan horse
                program.</xccdf:description>
      <xccdf:complex-check operator="AND">
        <xccdf:check system="http://cisecurity.org/check">
          <!--command test Â«echo $PATHÂ»-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="command test Â«echo $PATHÂ»">
              <ecl:command>echo $PATH</ecl:command>
              <ecl:line-selection op="pm" value="^\.:|:\.:|:\.$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--command test Â«find `echo $PATH|sed "s/:/ /g"` -prune -type d \( -perm -g+w -o -perm -o+w \) 2>/dev/nullÂ»-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="command test Â«find `echo $PATH|sed &quot;s/:/ /g&quot;` -prune -type d \( -perm -g+w -o -perm -o+w \) 2&gt;/dev/nullÂ»">
              <ecl:command>find `echo $PATH|sed "s/:/ /g"` -prune -type d \( -perm -g+w -o -perm -o+w \) 2&gt;/dev/null</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="user-home-directory-permissions" role="full" selected="false" weight="1.0">
      <xccdf:title>User Home Directories Should Be Mode 750 or More Restrictive</xccdf:title>
      <xccdf:description>Group or world-writable user home directories may enable malicious users to steal or modify other users' data
                or to gain another user's system privileges. Disabling "read" and "execute" access for users who are not members of the same
                group (the "other" access category) allows for appropriate use of discretionary access control by each user. While the above
                modifications are relatively benign, making global modifications to user home directories without alerting the user
                community can result in unexpected outages and unhappy users.</xccdf:description>
      <xccdf:fixtext>Action:<xhtml:code>for DIR in \ `awk -F: '($3 &gt;= 500) { print $6 }' /etc/passwd`; do chmod g-w $DIR chmod
                    o-rwx $DIR done</xhtml:code></xccdf:fixtext>
      <xccdf:check system="http://cisecurity.org/check">
        <!--command test Â«find `awk -F: '($3 >= 500 && $1 != "nobody") {print $6}' /etc/passwd` -maxdepth 1 -type d -prune \( -perm -g+w -o -perm -o+r -o -perm -o+w -o -perm -o+x \) -lsÂ»-->
        <xccdf:check-content>
          <ecl:shell-command check="none exist" comment="command test Â«find `awk -F: '($3 &gt;= 500 &amp;&amp; $1 != &quot;nobody&quot;) {print $6}' /etc/passwd` -maxdepth 1 -type d -prune \( -perm -g+w -o -perm -o+r -o -perm -o+w -o -perm -o+x \) -lsÂ»">
            <ecl:command>find `awk -F: '($3 &gt;= 500 &amp;&amp; $1 != "nobody") {print $6}' /etc/passwd` -maxdepth
                            1 -type d -prune \( -perm -g+w -o -perm -o+r -o -perm -o+w -o -perm -o+x \) -ls</ecl:command>
            <ecl:line-selection op="pm" value=".+"/>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </xccdf:Rule>
    <xccdf:Rule id="no-user-dot-files-should-be-world-writable" role="full" selected="false" weight="1.0">
      <xccdf:title>No User Dot-Files Should Be World-Writable</xccdf:title>
      <xccdf:description>World-writable user configuration files may enable malicious users to steal or modify other users' data or to
                gain another user's system privileges. While the above modifications are relatively benign, making global modifications to
                user home directories without alerting the user community can result in unexpected outages and unhappy users.</xccdf:description>
      <xccdf:fixtext>
        <xhtml:code>for DIR in \ `awk -F: '($3 &gt;= 500) { print $6 }' /etc/passwd`; do for FILE in $DIR/.[A-Za-z0-9]*; do if [
                    ! -h "$FILE" -a -f "$FILE" ]; then chmod go-w "$FILE" fi done done</xhtml:code>
      </xccdf:fixtext>
      <xccdf:check system="http://cisecurity.org/check">
        <!--command test Â«find `cut -f6 -d: /etc/passwd` -maxdepth 1 -type f -name '\.*' -prune \( -perm -g+w -o -perm -o+w \) 2>/dev/nullÂ»-->
        <xccdf:check-content>
          <ecl:shell-command check="none exist" comment="command test Â«find `cut -f6 -d: /etc/passwd` -maxdepth 1 -type f -name '\.*' -prune \( -perm -g+w -o -perm -o+w \) 2&gt;/dev/nullÂ»">
            <ecl:command>find `cut -f6 -d: /etc/passwd` -maxdepth 1 -type f -name '\.*' -prune \( -perm -g+w -o -perm -o+w \)
                            2&gt;/dev/null</ecl:command>
            <ecl:line-selection op="pm" value="^.+$"/>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </xccdf:Rule>
    <xccdf:Rule id="remove-user-.netrc-files" role="full" selected="false" weight="1.0">
      <xccdf:title>Remove User .netrc Files</xccdf:title>
      <xccdf:description>
        <xhtml:code>.netrc</xhtml:code>files may contain unencrypted passwords which may be used to attack other systems. While the
                above modifications are relatively benign, making global modifications to user home directories without alerting the user
                community can result in unexpected outages and unhappy users. If the first command returns any results, carefully evaluate
                the ramifications of removing those files before executing the remaining commands as you may end up impacting an application
                that has not had time to revise its architecture to a more secure design.</xccdf:description>
      <xccdf:fixtext>
        <xhtml:code>for DIR in `cut -f6 -d: /etc/passwd`; do if [ -e $DIR/.netrc ]; then echo "Removing $DIR/.netrc" rm -f
                    $DIR/.netrc fi done</xhtml:code>
      </xccdf:fixtext>
      <xccdf:check system="http://cisecurity.org/check">
        <!--command test Â«find `cut -f6 -d: /etc/passwd` -maxdepth 1 -type f -name '.netrc' 2>/dev/nullÂ»-->
        <xccdf:check-content>
          <ecl:shell-command check="none exist" comment="command test Â«find `cut -f6 -d: /etc/passwd` -maxdepth 1 -type f -name '.netrc' 2&gt;/dev/nullÂ»">
            <ecl:command>find `cut -f6 -d: /etc/passwd` -maxdepth 1 -type f -name '.netrc' 2&gt;/dev/null</ecl:command>
            <ecl:line-selection op="pm" value="^.+$"/>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </xccdf:Rule>
    <xccdf:Rule id="set-default-umask-for-users" role="full" selected="false" weight="1.0">
      <xccdf:title>Set Default umask For Users</xccdf:title>
      <xccdf:description>With a default<xhtml:code>umask</xhtml:code>setting of<xhtml:code>077</xhtml:code>- a setting agreed to as
                part of the consensus process with DISA and NSA - files and directories created by users will not be readable by any other
                user on the system. The user creating the file has the discretion of making their files and directories readable by others
                via the<xhtml:code>chmod</xhtml:code>command. Users who wish to allow their files and directories to be readable by others
                by default may choose a different default<xhtml:code>umask</xhtml:code>by inserting the<xhtml:code>umask</xhtml:code>command
                into the standard shell configuration files (<xhtml:code>.profile</xhtml:code>,<xhtml:code>.cshrc</xhtml:code>, etc.) in
                their home directories. A<xhtml:code>umask</xhtml:code>of<xhtml:code>027</xhtml:code>would make files and directories
                readable by users in the same Unix group, while a<xhtml:code>umask</xhtml:code>of<xhtml:code>022</xhtml:code>would make
                files readable by every user on the system.<xhtml:br/><xhtml:br/>We adjust root's<xhtml:code>umask</xhtml:code>setting separately in this item, as root shells don't necessarily
                read the system-wide configuration files. For example, root sessions using bash doesn't
                get<xhtml:code>umask</xhtml:code>settings from<xhtml:code>/etc/profile</xhtml:code>.<xhtml:br/><xhtml:br/>Note: This is been shown to cause problems with the installation of software packages where the installation
                script uses the default<xhtml:code>umask</xhtml:code>- the directories are owned by root
                with<xhtml:code>700</xhtml:code>permissions, and then the application and/or daemon cannot read its files. A simple fix to
                this problem is to manually issue a less restrictive<xhtml:code>umask</xhtml:code>(such as<xhtml:code>umask
                022</xhtml:code>) for the shell session doing the installation, or place such a<xhtml:code>umask</xhtml:code>command in the
                beginning to a less restrictive value before the installation, or in the beginning of the installation script.</xccdf:description>
      <xccdf:fixtext>
        <xhtml:code>cd /etc for FILE in profile csh.login csh.cshrc bashrc; do if ! egrep -q 'umask.*77' $FILE ; then echo "umask
                    077" &gt;&gt; $FILE fi chown root:root $FILE chmod 444 $FILE diff ${FILE}-preCIS $FILE done</xhtml:code>
      </xccdf:fixtext>
      <xccdf:complex-check operator="AND">
        <xccdf:complex-check operator="AND">
          <xccdf:check system="http://cisecurity.org/check">
            <!--command test Â«egrep '^umask[[:space:]]+077$' /etc/profileÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="command test Â«egrep '^umask[[:space:]]+077$' /etc/profileÂ»" success="pass">
                <ecl:command>egrep '^umask[[:space:]]+077$' /etc/profile</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--command test Â«egrep '^umask[[:space:]]+077$' /etc/csh.loginÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="command test Â«egrep '^umask[[:space:]]+077$' /etc/csh.loginÂ»" success="pass">
                <ecl:command>egrep '^umask[[:space:]]+077$' /etc/csh.login</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--command test Â«egrep '^umask[[:space:]]+077$' /etc/csh.cshrcÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="command test Â«egrep '^umask[[:space:]]+077$' /etc/csh.cshrcÂ»" success="pass">
                <ecl:command>egrep '^umask[[:space:]]+077$' /etc/csh.cshrc</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--command test Â«egrep '^umask[[:space:]]+077$' /etc/bashÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="command test Â«egrep '^umask[[:space:]]+077$' /etc/bashrcÂ»" success="pass">
                <ecl:command>egrep '^umask[[:space:]]+077$' /etc/bashrc</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="AND">
          <xccdf:check system="http://cisecurity.org/check">
            <!--command test Â«egrep '^umask[[:space:]]+077$' /root/.bash_profileÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="command test Â«egrep '^umask[[:space:]]+077$' /root/.bash_profileÂ»" success="pass">
                <ecl:command>egrep '^umask[[:space:]]+077$' /root/.bash_profile</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--command test Â«egrep '^umask[[:space:]]+077$' /root/.bashrcÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="command test Â«egrep '^umask[[:space:]]+077$' /root/.bashrcÂ»" success="pass">
                <ecl:command>egrep '^umask[[:space:]]+077$' /root/.bashrc</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--command test Â«egrep '^umask[[:space:]]+077$' /root/.cshrcÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="command test Â«egrep '^umask[[:space:]]+077$' /root/.cshrcÂ»" success="pass">
                <ecl:command>egrep '^umask[[:space:]]+077$' /root/.cshrc</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--command test Â«egrep '^umask[[:space:]]+077$' /root/.tcshrcÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="command test Â«egrep '^umask[[:space:]]+077$' /root/.tcshrcÂ»" success="pass">
                <ecl:command>egrep '^umask[[:space:]]+077$' /root/.tcshrc</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="disable-core-dumps" role="full" selected="false" weight="1.0">
      <xccdf:title>Disable Core Dumps</xccdf:title>
      <xccdf:description>Core dumps can consume large amounts of disk space and may contain sensitive data. On the other hand,
                developers using this system may require core files in order to aid in debugging.
                The<xhtml:code>limits.conf</xhtml:code>file can be used to grant core dump ability to individual users or groups of users.</xccdf:description>
      <xccdf:fixtext>
        <xhtml:code>cd /etc/security cat &lt;&lt;END_ENTRIES&gt;&gt; limits.conf # Following 9 lines added by
                    CISecurity Benchmark sec 8.11 * soft core 0 * hard core 0 END_ENTRIES</xhtml:code>
      </xccdf:fixtext>
      <xccdf:complex-check operator="AND">
        <xccdf:check system="http://cisecurity.org/check">
          <!--command test Â«egrep '^\*[[:space:]]+soft[[:space:]]+core[[:space:]]+0$' /etc/security/limits.confÂ»-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="command test Â«egrep '^\*[[:space:]]+soft[[:space:]]+core[[:space:]]+0$' /etc/security/limits.confÂ»" success="pass">
              <ecl:command>egrep '^\*[[:space:]]+soft[[:space:]]+core[[:space:]]+0$' /etc/security/limits.conf</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--command test Â«egrep '^\*[[:space:]]+hard[[:space:]]+core[[:space:]]+0$' /etc/security/limits.confÂ»-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="command test Â«egrep '^\*[[:space:]]+hard[[:space:]]+core[[:space:]]+0$' /etc/security/limits.confÂ»" success="pass">
              <ecl:command>egrep '^\*[[:space:]]+hard[[:space:]]+core[[:space:]]+0$' /etc/security/limits.conf</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="limit-access-to-the-root-account-from-su" role="full" selected="false" weight="1.0">
      <xccdf:title>Limit Access To The Root Account From su</xccdf:title>
      <xccdf:description>The<xhtml:code>su</xhtml:code>command allows you to become other users on the system. This is commonly used
                to become "root" and execute commands as the super-user. If you do not want certain users to<xhtml:code>su</xhtml:code>to
                root then uncomment the following line in<xhtml:code>/etc/pam.d/su</xhtml:code>:<xhtml:blockquote><xhtml:code>auth required /lib/security/$ISA/pam_wheel.so use_uid</xhtml:code></xhtml:blockquote>Uncommenting this line allows only the users in the wheel group to become root by using
                the<xhtml:code>su</xhtml:code>command and entering the root password. All other users will receive a message stating the
                password is incorrect. By limiting access to the root account, even if a user knows the root password, they will not be able
                to become root unless that user has physical access to the server's console, or they are added to the wheel group. This adds
                another layer of security to the system and prevents unauthorized system access.</xccdf:description>
      <xccdf:fixtext>Action:<xhtml:code>cd /etc/pam.d/ awk '($1=="#auth" &amp;&amp; $2=="required" &amp;&amp; \
                    $3=="/lib/security/$ISA/pam_wheel.so") \ { print "auth required / lib/security/$ISA/pam_wheel.so use_uid"; next }; {
                    print }' /etc/pam.d-preCIS/su &gt; su</xhtml:code></xccdf:fixtext>
      <xccdf:check system="http://cisecurity.org/check">
        <!--command test Â«egrep '^auth[[:space:]]+required[[:space:]]+pam_wheel\.so[[:space:]]+use_uid$' /etc/pam.d/suÂ»-->
        <xccdf:check-content>
          <ecl:shell-command check="all" comment="command test Â«egrep '^auth[[:space:]]+required[[:space:]]+pam_wheel\.so[[:space:]]+use_uid$' /etc/pam.d/suÂ»" success="pass">
            <ecl:command>egrep '^auth[[:space:]]+required[[:space:]].*pam_wheel\.so[[:space:]]+use_uid$' /etc/pam.d/su</ecl:command>
            <ecl:line-selection op="pm" value=".+"/>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </xccdf:Rule>
  </xccdf:Group>
  <xccdf:Group id="warning-banners">
    <xccdf:title>Warning Banners</xccdf:title>
    <xccdf:description>Presenting some sort of statutory warning message prior to the normal user logon may assist the prosecution of
            trespassers on the computer system. Changing some of these login banners also has the side effect of hiding OS version
            information and other detailed system information from attackers attempting to target specific attacks at a system (though there
            are other mechanisms available for acquiring this information). Guidelines published by the US Department of Defense require
            that warning messages include at least the name of the organization that owns the system, the fact that the system is subject to
            monitoring and that such monitoring is in compliance with local statutes, and that use of the system implies consent to such
            monitoring. Clearly, the organization's local legal counsel and/or site security administrator should review the content of all
            messages before any system modifications are made, as these warning messages are inherently site- specific.<xhtml:br/><xhtml:br/>More information (including citations of relevant case law) can be found at<xhtml:a href="http://www.usdoj.gov/criminal/cybercrime/s%26sappendix2002.htm">http://www.usdoj.gov/criminal/cybercrime/s%26sappendix2002.htm</xhtml:a>.</xccdf:description>
    <xccdf:Rule id="etc-issue-warnings" role="full" selected="false" weight="1.0">
      <xccdf:title>Create Warnings For Network And Physical Access Services</xccdf:title>
      <xccdf:description>The contents of the<xhtml:code>/etc/issue</xhtml:code>file are displayed prior to the login prompt on the
                system's console and serial devices.<xhtml:code>/etc/motd</xhtml:code>is generally displayed after all successful logins, no
                matter where the user is logging in from, but is thought to be less useful because it only provides notification to the user
                after the machine has been accessed.</xccdf:description>
      <xccdf:complex-check operator="AND">
        <xccdf:check system="http://cisecurity.org/check">
          <!--command test Â«cat /etc/issueÂ»-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="command test Â«cat /etc/issueÂ»" success="pass">
              <ecl:command>cat /etc/issue</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--command test Â«cat /etc/issue.netÂ»-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="command test Â«cat /etc/issue.netÂ»" success="pass">
              <ecl:command>cat /etc/issue.net</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--command test Â«cat /etc/motdÂ»-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="command test Â«cat /etc/motdÂ»" success="pass">
              <ecl:command>cat /etc/motd</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/issue ownership and permission-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="/etc/issue ownership and permission">
              <ecl:command>find /etc/issue -follow -maxdepth 0 ! \( -user root -group root -perm u=rw,g=r,o=r \) -ls</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/issue.net ownership and permission-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="/etc/issue.net ownership and permission">
              <ecl:command>find /etc/issue.net -follow -maxdepth 0 ! \( -user root -group root -perm u=rw,g=r,o=r \) -ls</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/motd ownership and permission-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="/etc/motd ownership and permission">
              <ecl:command>find /etc/motd -follow -maxdepth 0 ! \( -user root -group root -perm u=rw,g=r,o=r \) -ls</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="gui-based-warnings" role="full" selected="false" weight="1.0">
      <xccdf:title>Create Warnings For GUI-Based Logins</xccdf:title>
      <xccdf:description>The standard graphical login program for Red Hat Enterprise Linux is gdm, which requires the user to enter
                their username in one text box and their password in a second text box. This section sets the warning message on xdm, kdm
                and/or gdm - in case something other than the default X login GUI was installed.</xccdf:description>
      <xccdf:complex-check operator="AND">
        <xccdf:complex-check operator="OR">
          <!--/etc/X11/xdm/Xresources either does not exist or contains a warning banner-->
          <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
              <!--/etc/X11/xdm/Xresources does not exist-->
              <xccdf:check-content>
                <ecl:shell-command check="none exist" comment="command test Â«find /etc/X11/xdm/XresourcesÂ»" success="pass">
                  <ecl:command>find /etc/X11/xdm/Xresources</ecl:command>
                  <ecl:line-selection op="pm" value=".+"/>
                </ecl:shell-command>
              </xccdf:check-content>
            </xccdf:check>
          </xccdf:complex-check>
          <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
              <!--command test Â«egrep '^xlogin\*greeting:[[:space:]]*Authorized' /etc/X11/xdm/XresourcesÂ»-->
              <xccdf:check-content>
                <ecl:shell-command check="all" comment="command test Â«egrep '^xlogin\*greeting:[[:space:]]*Authorized' /etc/X11/xdm/XresourcesÂ»" success="pass">
                  <ecl:command>egrep '^xlogin\*greeting:[[:space:]]*Authorized' /etc/X11/xdm/Xresources</ecl:command>
                  <ecl:line-selection op="pm" value=".*"/>
                </ecl:shell-command>
              </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
              <!--/etc/X11/xdm/Xresources ownership and permission-->
              <xccdf:check-content>
                <ecl:shell-command check="none exist" comment="/etc/X11/xdm/Xresources ownership and permission">
                  <ecl:command>find /etc/X11/xdm/Xresources -follow -maxdepth 0 ! \( -user root -group root -perm
                                        u=rw,g=r,o=r \) -ls</ecl:command>
                  <ecl:line-selection op="pm" value=".+"/>
                </ecl:shell-command>
              </xccdf:check-content>
            </xccdf:check>
          </xccdf:complex-check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--/etc/X11/xdm/kdmrc either does not exist or contains a warning banner-->
          <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
              <!--/etc/X11/xdm/kdmrc does not exist-->
              <xccdf:check-content>
                <ecl:shell-command check="none exist" comment="command test Â«find /etc/X11/xdm/kdmrcÂ»" success="pass">
                  <ecl:command>find /etc/X11/xdm/kdmrc</ecl:command>
                  <ecl:line-selection op="pm" value=".+"/>
                </ecl:shell-command>
              </xccdf:check-content>
            </xccdf:check>
          </xccdf:complex-check>
          <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
              <!--command test Â«egrep '^GreetString=Authorized' /etc/X11/xdm/kdmrcÂ»-->
              <xccdf:check-content>
                <ecl:shell-command check="all" comment="command test Â«egrep '^GreetString=Authorized' /etc/X11/xdm/kdmrcÂ»" success="pass">
                  <ecl:command>egrep '^GreetString=Authorized' /etc/X11/xdm/kdmrc</ecl:command>
                  <ecl:line-selection op="pm" value=".*"/>
                </ecl:shell-command>
              </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
              <!--/etc/X11/xdm/kdmrc ownership and permission-->
              <xccdf:check-content>
                <ecl:shell-command check="none exist" comment="/etc/X11/xdm/kdmrc ownership and permission">
                  <ecl:command>find /etc/X11/xdm/kdmrc -follow -maxdepth 0 ! \( -user root -group root -perm u=rw,g=r,o=r
                                        \) -ls</ecl:command>
                  <ecl:line-selection op="pm" value=".+"/>
                </ecl:shell-command>
              </xccdf:check-content>
            </xccdf:check>
          </xccdf:complex-check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <!--/etc/X11/gdm/gdm.conf-->
          <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
              <!--/etc/X11/gdm/gdm.conf does not exist-->
              <xccdf:check-content>
                <ecl:shell-command check="none exist" comment="command test Â«find /etc/X11/gdm/gdm.confÂ»" success="pass">
                  <ecl:command>find /etc/X11/gdm/gdm.conf</ecl:command>
                  <ecl:line-selection op="pm" value=".+"/>
                </ecl:shell-command>
              </xccdf:check-content>
            </xccdf:check>
          </xccdf:complex-check>
          <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
              <!--command test Â«egrep '^Greeter=gdmlogin$' /etc/X11/gdm/gdm.confÂ»-->
              <xccdf:check-content>
                <ecl:shell-command check="all" comment="command test Â«egrep '^Greeter=gdmlogin$' /etc/X11/gdm/gdm.confÂ»" success="pass">
                  <ecl:command>egrep '^Greeter=.*gdmlogin$' /etc/X11/gdm/gdm.conf</ecl:command>
                  <ecl:line-selection op="pm" value=".*"/>
                </ecl:shell-command>
              </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
              <!--command test Â«egrep '^Welcome=Authorized' /etc/X11/gdm/gdm.confÂ»-->
              <xccdf:check-content>
                <ecl:shell-command check="all" comment="command test Â«egrep '^Welcome=Authorized' /etc/X11/gdm/gdm.confÂ»" success="pass">
                  <ecl:command>egrep '^Welcome=Authorized' /etc/X11/gdm/gdm.conf</ecl:command>
                  <ecl:line-selection op="pm" value=".*"/>
                </ecl:shell-command>
              </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
              <!--/etc/X11/xdm/gdm.conf ownership and permission-->
              <xccdf:check-content>
                <ecl:shell-command check="none exist" comment="/etc/X11/xdm/gdm.conf ownership and permission">
                  <ecl:command>find /etc/X11/gdm/gdm.conf -follow -maxdepth 0 ! \( -user root -group root -perm
                                        u=rw,g=r,o=r \) -ls</ecl:command>
                  <ecl:line-selection op="pm" value=".+"/>
                </ecl:shell-command>
              </xccdf:check-content>
            </xccdf:check>
          </xccdf:complex-check>
        </xccdf:complex-check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Rule id="vsftpd-banner" role="full" selected="false" weight="1.0">
      <xccdf:title>Create "authorized only" Banners For vsftpd, If Applicable</xccdf:title>
      <xccdf:description>This item configure's<xhtml:code>vsftpd</xhtml:code>"authorized users only" banner messages.</xccdf:description>
      <xccdf:fix>echo "ftpd_banner=Authorized users only. All activity \ may be monitored and reported." &gt;&gt;<xccdf:sub idref="vsftpd-conf-file"/></xccdf:fix>
      <xccdf:complex-check operator="AND">
        <xccdf:complex-check operator="OR">
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«vsftpdÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«vsftpdÂ» does not exist">
                <ecl:command>chkconfig --list vsftpd 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--command test Â«egrep '^ftpd_banner=Authorized users only. All activity may be monitored and reported\.$' /etc/vsftpd/vsftpd.confÂ»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="command test Â«egrep '^ftpd_banner=Authorized users only. All activity may be monitored and reported\.$' /etc/vsftpd/vsftpd.confÂ»" success="pass">
                <ecl:command>egrep '^ftpd_banner=Authorized users only. All activity may be monitored and reported\.$'
                                    /etc/vsftpd/vsftpd.conf</ecl:command>
                <ecl:line-selection op="pm" value=".*"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="OR">
          <xccdf:check system="http://cisecurity.org/check">
            <!--Service Â«proftpdÂ» does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Service Â«proftpdÂ» does not exist">
                <ecl:command>chkconfig --list proftpd 2&gt;/dev/null</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
              <!--command test Â«egrep '^DisplayConnect[[:space:]]+/etc/issue.net$' /etc/proftpd.confÂ»-->
              <xccdf:check-content>
                <ecl:shell-command check="all" comment="command test Â«egrep '^DisplayConnect[[:space:]]+/etc/issue.net$' /etc/proftpd.confÂ»" success="pass">
                  <ecl:command>egrep '^DisplayConnect[[:space:]]+/etc/issue.net$' /etc/proftpd.conf</ecl:command>
                  <ecl:line-selection op="pm" value=".*"/>
                </ecl:shell-command>
              </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
              <!--command test Â«egrep '^DisplayLogin[[:space:]]+/etc/motd$' /etc/proftpd.confÂ»-->
              <xccdf:check-content>
                <ecl:shell-command check="all" comment="command test Â«egrep '^DisplayLogin[[:space:]]+/etc/motd$' /etc/proftpd.confÂ»" success="pass">
                  <ecl:command>egrep '^DisplayLogin[[:space:]]+/etc/motd$' /etc/proftpd.conf</ecl:command>
                  <ecl:line-selection op="pm" value=".*"/>
                </ecl:shell-command>
              </xccdf:check-content>
            </xccdf:check>
          </xccdf:complex-check>
        </xccdf:complex-check>
      </xccdf:complex-check>
    </xccdf:Rule>
    <xccdf:Group id="reboot">
      <xccdf:title>Reboot</xccdf:title>
      <xccdf:description>Whenever you make substantial changes to a system, reboot. Some System Administrators believe any change to
                the init scripts warrant a reboot to ensure the system comes up as expected. Hours of lost productivity with extensive
                troubleshooting (not to mention lost revenue) have occurred because a system did not start up as expected. The root cause
                was an init problem that would have been detected had the reboot taken place.<xhtml:br/><xhtml:br/>Action:<xhtml:code>init 6</xhtml:code></xccdf:description>
    </xccdf:Group>
  </xccdf:Group>
  <xccdf:Group id="anti-virus-consideration-10" selected="true">
    <xccdf:title>Anti-Virus Consideration</xccdf:title>
    <xccdf:description>
      <xhtml:strong>Anti-Virus Products</xhtml:strong>
      <xhtml:br/>
      <xhtml:br/>Certain systems - such as mail servers and file servers - should have anti-virus software installed to protect the
            Windows clients that use the server. The following table summarizes the popular anti-virus offerings for the Linux platform. The
            Center for Internet security makes no endorsement for any product.<xhtml:br/><xhtml:br/><xhtml:table border="1" cellpadding="1" cellspacing="1"><xhtml:tr><xhtml:th>Vendor</xhtml:th><xhtml:th>Product</xhtml:th></xhtml:tr><xhtml:tr><xhtml:td>Sophos<xhtml:br/><xhtml:a href="http://www.sophos.com/">http://www.sophos.com/</xhtml:a></xhtml:td><xhtml:td>Commercial</xhtml:td></xhtml:tr><xhtml:tr><xhtml:td>NAI Virus Scan<xhtml:br/></xhtml:td><xhtml:td>Commercial</xhtml:td></xhtml:tr><xhtml:tr><xhtml:td>ClamAV<xhtml:br/><xhtml:a href="http://www.clamav.net/">http://www.clamav.net/</xhtml:a></xhtml:td><xhtml:td>Open Source</xhtml:td></xhtml:tr><xhtml:tr><xhtml:td>McAfee<xhtml:br/><xhtml:a href="http://www.mcafee.com/">http://www.mcafee.com/</xhtml:a></xhtml:td><xhtml:td>Commercial</xhtml:td></xhtml:tr><xhtml:tr><xhtml:td>CyberSoft Vfind<xhtml:br/><xhtml:a href="http://www.cyber.com/products/masterprice.html">http://www.cyber.com/products/masterprice.html</xhtml:a></xhtml:td><xhtml:td/></xhtml:tr><xhtml:tr><xhtml:td>H+B edv (hbedv)<xhtml:br/></xhtml:td><xhtml:td/></xhtml:tr><xhtml:tr><xhtml:td>f-prot Antivirus<xhtml:br/><xhtml:a href="http://www.f-prot.com/products/corporate_users/unix/">http://www.f-prot.com/products/corporate_users/unix/</xhtml:a></xhtml:td><xhtml:td>Commercial</xhtml:td></xhtml:tr><xhtml:tr><xhtml:td>Trend Micro<xhtml:br/></xhtml:td><xhtml:td>Commercial</xhtml:td></xhtml:tr><xhtml:tr><xhtml:td>Computer Associates InoculateIT<xhtml:br/><xhtml:a href="http://www.cai.com/">http://www.cai.com/</xhtml:a></xhtml:td><xhtml:td>Commercial</xhtml:td></xhtml:tr></xhtml:table></xccdf:description>
  </xccdf:Group>
  <xccdf:Group id="remove-backup-files-11" selected="true">
    <xccdf:title>Remove Backup Files</xccdf:title>
    <xccdf:description>When you are certain your changes are successful, remove the backup files as they will have insecure contents
            and/or permissions/ownerships. By leaving these files on your system, an attacker can use the backup files as if they were the
            originals thereby defeating much of your efforts.<xhtml:br/><xhtml:br/>Action:<xhtml:br/><xhtml:code>find / -xdev | grep preCIS | xargs rm -rf</xhtml:code></xccdf:description>
  </xccdf:Group>
<xccdf:signature><ds:Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
<ds:SignedInfo>
<ds:CanonicalizationMethod Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315"/>
<ds:SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1"/>
<ds:Reference URI="">
<ds:Transforms>
<ds:Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature"/>
<ds:Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"/>
</ds:Transforms>
<ds:DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/>
<ds:DigestValue>cKuSHqOm418HV/ItEid0fCX001A=</ds:DigestValue>
</ds:Reference>
</ds:SignedInfo>
<ds:SignatureValue>
www/g3Jiw6L+jU3GAqx0pL2OrKPOnZJb8FxCVI+X0E7XtjyJnmmRjvmbi57FvR0Zuwxy52msuZJ4
YOnQb8ZtPQLUX9S1+6+OtHlQhTdU62zdW1VIOHU45ICQbiZAzsIr78UO16RPyLTyVagHFf8vNGwp
dJV1HnfqKnx6i7OEno4D3N0lYUrtQfSqXlTBL0fefOpJsq+sVn1HGv0CRsfsA/wQh2a+vtKpoJA2
yl+NrvK66reqQnfSlbmgWYmKBScP8lhmDSaoY+27/ovdyBgYL+nITyJcRcJ8AK6JCa+wDB8p5O/v
CUU2SKnx2G1CiUCISXyR52L3XX23op2D2S6I4w==
</ds:SignatureValue>
<ds:KeyInfo>
<ds:X509Data>
<ds:X509Certificate>
MIIFRzCCBC+gAwIBAgIHTwpN/4tOfDANBgkqhkiG9w0BAQsFADCBtDELMAkGA1UEBhMCVVMxEDAO
BgNVBAgTB0FyaXpvbmExEzARBgNVBAcTClNjb3R0c2RhbGUxGjAYBgNVBAoTEUdvRGFkZHkuY29t
LCBJbmMuMS0wKwYDVQQLEyRodHRwOi8vY2VydHMuZ29kYWRkeS5jb20vcmVwb3NpdG9yeS8xMzAx
BgNVBAMTKkdvIERhZGR5IFNlY3VyZSBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkgLSBHMjAeFw0xNDA5
MTgxNDM0MjFaFw0xNzEwMjAxODU3NDRaMIGTMQswCQYDVQQGEwJVUzERMA8GA1UECBMITmV3IFlv
cmsxFzAVBgNVBAcTDkVhc3QgR3JlZW5idXNoMSswKQYDVQQKEyJDZW50ZXIgZm9yIEludGVybmV0
IFNlY3VyaXR5LCBJbmMuMSswKQYDVQQDEyJDZW50ZXIgZm9yIEludGVybmV0IFNlY3VyaXR5LCBJ
bmMuMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0MGnj6yX2QHklGadAfTBxssvP+2f
YegPpNGXfEmPXZXrWeME2BqIbO+hKXTuwUucRK6RvQJTjgzNgOhQx3HcclRwQB4xj/14hOoZSeQ3
haw/Xjl4WofsWizM5j/g1iWBgxi3xk/aREfKKb0ulBMtP/WYFpSRjZ/Z7m5QKii0feJPxbf+wrZ+
UvNZ8uBdO+SEmbhS/DVESsEWzXn6StbQpa2dno2aIOGZXQKcUY2d3WZ4Zk+zawFcRUYslVIrOhMb
0e3+hbJEtFwm5ekehdNimSozYyyLGZJonLlvr8PfmvQ1ceu7enWCRfZrRWAlDHFaouLdtU/OmXc+
Um7cLwz8VQIDAQABo4IBezCCAXcwDAYDVR0TAQH/BAIwADATBgNVHSUEDDAKBggrBgEFBQcDAzAO
BgNVHQ8BAf8EBAMCB4AwNQYDVR0fBC4wLDAqoCigJoYkaHR0cDovL2NybC5nb2RhZGR5LmNvbS9n
ZGlnMnM1LTAuY3JsMFMGA1UdIARMMEowSAYLYIZIAYb9bQEHFwIwOTA3BggrBgEFBQcCARYraHR0
cDovL2NlcnRpZmljYXRlcy5nb2RhZGR5LmNvbS9yZXBvc2l0b3J5LzB2BggrBgEFBQcBAQRqMGgw
JAYIKwYBBQUHMAGGGGh0dHA6Ly9vY3NwLmdvZGFkZHkuY29tLzBABggrBgEFBQcwAoY0aHR0cDov
L2NlcnRpZmljYXRlcy5nb2RhZGR5LmNvbS9yZXBvc2l0b3J5L2dkaWcyLmNydDAfBgNVHSMEGDAW
gBRAwr0njsw0gzCiM9f7bLPwtCyAzjAdBgNVHQ4EFgQU+3zn+CEg6a2xPqlBXvn64hUyoB4wDQYJ
KoZIhvcNAQELBQADggEBAEh76h1GtJ0pj04in+RUymB7fqPh6HFILkOLlTPnveyXCoHYT2M46DET
EA/NKYkoF2KA3QiZ1b+PMViuTYG2pDs71eFVPADuBCGf9IFufCDY9mPvjQiFDlLNMknXxACD8TjC
hqz+uZT2uLPw/YxkJIsCxrTQJ//ga/fHfZDrKgQfbVzxjD/4WKDe8HktjKcn+NWGPJNMgmO+IHrK
if6TB1xTo32W9QzwoXvBdLnziAUGZZghEulq6h3RCMzKPzpx5JiLlOz6JzqXHvrua+yUbr4A29Vy
vkwWgJWjyvJd2uq9MQ9l49kkrD84m41PSwpaHO99nEHRgRykopxIt8AHsIQ=
</ds:X509Certificate>
</ds:X509Data>
<ds:KeyValue>
<ds:RSAKeyValue>
<ds:Modulus>
0MGnj6yX2QHklGadAfTBxssvP+2fYegPpNGXfEmPXZXrWeME2BqIbO+hKXTuwUucRK6RvQJTjgzN
gOhQx3HcclRwQB4xj/14hOoZSeQ3haw/Xjl4WofsWizM5j/g1iWBgxi3xk/aREfKKb0ulBMtP/WY
FpSRjZ/Z7m5QKii0feJPxbf+wrZ+UvNZ8uBdO+SEmbhS/DVESsEWzXn6StbQpa2dno2aIOGZXQKc
UY2d3WZ4Zk+zawFcRUYslVIrOhMb0e3+hbJEtFwm5ekehdNimSozYyyLGZJonLlvr8PfmvQ1ceu7
enWCRfZrRWAlDHFaouLdtU/OmXc+Um7cLwz8VQ==
</ds:Modulus>
<ds:Exponent>AQAB</ds:Exponent>
</ds:RSAKeyValue>
</ds:KeyValue>
</ds:KeyInfo>
</ds:Signature></xccdf:signature></xccdf:Benchmark>