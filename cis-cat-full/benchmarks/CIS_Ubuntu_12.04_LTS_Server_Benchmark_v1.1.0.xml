<?xml version="1.0" encoding="UTF-8" standalone="no"?><xccdf:Benchmark xmlns:xccdf="http://checklists.nist.gov/xccdf/1.1" xmlns="http://checklists.nist.gov/xccdf/1.1" xmlns:ae="http://benchmarks.cisecurity.org/ae/0.5" xmlns:ciscf="https://benchmarks.cisecurity.org/ciscf/1.0" xmlns:ecl="http://cisecurity.org/check" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="xccdf_org.cisecurity.benchmarks_benchmark_1.1.0_CIS_Ubuntu_12.04_LTS_Server_Benchmark" xsi:schemaLocation="http://checklists.nist.gov/xccdf/1.1 ../misc/xsd/xccdf-1.1.xsd http://cisecurity.org/check ../misc/xsd/ecl.xsd">
    <xccdf:status date="2015-01-05">incomplete</xccdf:status>
    <xccdf:title xml:lang="en">CIS Ubuntu 12.04 LTS Server Benchmark</xccdf:title>
    <xccdf:description xml:lang="en">
        <xhtml:p>This document provides prescriptive guidance for establishing a secure configuration posture for Ubuntu 12.04 LTS Server. To obtain the latest version of this guide, please visit <xhtml:a href="http://benchmarks.cisecurity.org">http://benchmarks.cisecurity.org</xhtml:a>. If you have questions, comments, or have identified ways to improve this guide, please write us at <xhtml:a href="mailto:feedback@cisecurity.org">feedback@cisecurity.org</xhtml:a>.</xhtml:p>
    </xccdf:description>
    <xccdf:notice id="terms-of-use" xml:lang="en"> BACKGROUND. The Center for Internet Security ("CIS") provides benchmarks, scoring tools, software, data, information, suggestions, ideas, and other services and
        materials from the CIS website or elsewhere ("Products") as a public service to Internet users worldwide. Recommendations contained in the Products ("Recommendations") result from a consensus-building process
        that involves many security experts and are generally generic in nature. The Recommendations are intended to provide helpful information to organizations attempting to evaluate or improve the security of their
        networks, systems, and devices. Proper use of the Recommendations requires careful analysis and adaptation to specific user requirements. The Recommendations are not in any way intended to be a "quick fix" for
        anyone's information security needs. NO REPRESENTATIONS, WARRANTIES, OR COVENANTS. CIS makes no representations, warranties, or covenants whatsoever as to (i) the positive or negative effect of the Products or
        the Recommendations on the operation or the security of any particular network, computer system, network device, software, hardware, or any component of any of the foregoing or (ii) the accuracy, reliability,
        timeliness, or completeness of the Products or the Recommendations. CIS is providing the Products and the Recommendations "as is" and "as available" without representations, warranties, or covenants of any kind.
        USER AGREEMENTS. By using the Products and/or the Recommendations, I and/or my organization ("We") agree and acknowledge that: 1. No network, system, device, hardware, software, or component can be made fully
        secure; 2. We are using the Products and the Recommendations solely at our own risk; 3. We are not compensating CIS to assume any liabilities associated with our use of the Products or the Recommendations, even
        risks that result from CIS's negligence or failure to perform; 4. We have the sole responsibility to evaluate the risks and benefits of the Products and Recommendations to us and to adapt the Products and the
        Recommendations to our particular circumstances and requirements; 5. Neither CIS, nor any CIS Party (defined below) has any responsibility to make any corrections, updates, upgrades, or bug fixes; or to notify us
        of the need for any such corrections, updates, upgrades, or bug fixes; and 6. Neither CIS nor any CIS Party has or will have any liability to us whatsoever (whether based in contract, tort, strict liability or
        otherwise) for any direct, indirect, incidental, consequential, or special damages (including without limitation loss of profits, loss of sales, loss of or damage to reputation,loss of customers, loss of
        software, data, information or emails, loss of privacy, loss of use of any computer or other equipment, business interruption, wasted management or other staff resources or claims of any kind against us from
        third parties) arising out of or in any way Connected with our use of or our inability to use any of the Products or Recommendations (even if CIS has been advised of the possibility of such damages), including
        without limitation any liability associated with infringement of intellectual property, defects, bugs, errors, omissions, viruses, worms, backdoors, Trojan horses or other harmful items. GRANT OF LIMITED RIGHTS.
        CIS hereby grants each user the following rights, but only so long as the user complies with all of the terms of these Agreed Terms of Use: 1. Except to the extent that we may have received additional
        authorization pursuant to a written agreement with CIS, each user may download, install and use each of the Products on a single computer; 2. Each user may print one or more copies of any Product or any component
        of a Product that is in a .txt, .pdf, .doc, .mcw, or .rtf format, provided that all such copies are printed in full and are kept intact, including without limitation the text of this Agreed Terms of Use in its
        entirety. RETENTION OF INTELLECTUAL PROPERTY RIGHTS; LIMITATIONS ON DISTRIBUTION. The Products are protected by copyright and other intellectual property laws and by international treaties. We acknowledge and
        agree that we are not acquiring title to any intellectual property rights in the Products and that full title and all ownership rights to the Products will remain the exclusive property of CIS or CIS Parties. CIS
        reserves all rights not expressly granted to users in the preceding section entitled "Grant of limited rights." Subject to the paragraph entitled "Special Rules" (which includes a waiver, granted to some classes
        of CIS Members, of certain limitations in this paragraph), and except as we may have otherwise agreed in a written agreement with CIS, we agree that we will not (i) decompile, disassemble, reverse engineer, or
        otherwise attempt to derive the source code for any software Product that is not already in the form of source code; (ii) distribute, redistribute, encumber, sell, rent, lease, lend, sublicense, or otherwise
        transfer or exploit rights to any Product or any component of a Product; (iii) post any Product or any component of a Product on any website, bulletin board, ftp server, newsgroup, or other similar mechanism or
        device, without regard to whether such mechanism or device is internal or external, (iv) remove or alter trademark, logo, copyright or other proprietary notices, legends, symbols or labels in any Product or any
        component of a Product; (v) remove these Agreed Terms of Use from, or alter these Agreed Terms of Use as they appear in, any Product or any component of a Product; (vi) use any Product or any component of a
        Product with any derivative works based directly on a Product or any component of a Product; (vii) use any Product or any component of a Product with other products or applications that are directly and
        specifically dependent on such Product or any component for any part of their functionality, or (viii) represent or claim a particular level of compliance with a CIS Benchmark, scoring tool or other Product. We
        will not facilitate or otherwise aid other individuals or entities in any of the activities listed in this paragraph. We hereby agree to indemnify, defend, and hold CIS and all of its officers, directors,
        members, contributors, employees, authors, developers, agents, affiliates, licensors, information and service providers, software suppliers, hardware suppliers, and all other persons who aided CIS in the
        creation, development, or maintenance of the Products or Recommendations ("CIS Parties") harmless from and against any and all liability, losses, costs, and expenses (including attorneys' fees and court costs)
        incurred by CIS or any CIS Party in connection with any claim arising out of any violation by us of the preceding paragraph, including without limitation CIS's right, at our expense, to assume the exclusive
        defense and control of any matter subject to this indemnification, and in such case, we agree to cooperate with CIS in its defense of such claim. We further agree that all CIS Parties are third-party
        beneficiaries of our undertakings in these Agreed Terms of Use. SPECIAL RULES. CIS has created and will from time to time create, special rules for its members and for other persons and organizations with which
        CIS has a written contractual relationship. Those special rules will override and supersede these Agreed Terms of Use with respect to the users who are covered by the special rules. CIS hereby grants each CIS
        Security Consulting or Software Vendor Member and each CIS Organizational User Member, but only so long as such Member remains in good standing with CIS and complies with all of the terms of these Agreed Terms of
        Use, the right to distribute the Products and Recommendations within such Member's own organization, whether by manual or electronic means. Each such Member acknowledges and agrees that the foregoing grant is
        subject to the terms of such Member's membership arrangement with CIS and may, therefore, be modified or terminated by CIS at any time. CHOICE OF LAW; JURISDICTION; VENUE. We acknowledge and agree that these
        Agreed Terms of Use will be governed by and construed in accordance with the laws of the State of Maryland, that any action at law or in equity arising out of or relating to these Agreed Terms of Use shall be
        filed only in the courts located in the State of Maryland, that we hereby consent and submit to the personal jurisdiction of such courts for the purposes of litigating any such action. If any of these Agreed
        Terms of Use shall be determined to be unlawful, void, or for any reason unenforceable, then such terms shall be deemed severable and shall not affect the validity and enforceability of any remaining provisions.
        BY USING THE PRODUCTS I(WE) ACKNOWLEDGE THAT WE HAVE READ THESE AGREED TERMS OF USE IN THEIR ENTIRETY, UNDERSTAND THEM, AND I(WE) AGREE TO BE BOUND BY THEM IN ALL RESPECTS.</xccdf:notice>
    <xccdf:platform idref="cpe:/o:ubuntu:linux:12.04"/>
    <xccdf:version>1.1.0</xccdf:version>
    <xccdf:Profile id="xccdf_org.cisecurity.benchmarks_profile_Level_1">
        <xccdf:title xml:lang="en">Level 1</xccdf:title>
        <xccdf:description xml:lang="en">
            <xhtml:p>Items in this profile intend to:</xhtml:p>
            <xhtml:ul>
                <xhtml:li>be practical and prudent;</xhtml:li>
                <xhtml:li>provide a clear security benefit; and</xhtml:li>
                <xhtml:li>not inhibit the utility of the technology beyond acceptable means.</xhtml:li>
            </xhtml:ul>
        </xccdf:description>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.1_Install_Updates_Patches_and_Additional_Security_Software" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.1_Create_Separate_Partition_for_tmp" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.2_Set_nodev_option_for_tmp_Partition" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.3_Set_nosuid_option_for_tmp_Partition" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.4_Set_noexec_option_for_tmp_Partition" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.5_Create_Separate_Partition_for_var" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.6_Bind_Mount_the_vartmp_directory_to_tmp" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.7_Create_Separate_Partition_for_varlog" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.8_Create_Separate_Partition_for_varlogaudit" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.9_Create_Separate_Partition_for_home" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.10_Add_nodev_Option_to_home" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.11_Add_nodev_Option_to_Removable_Media_Partitions" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.12_Add_noexec_Option_to_Removable_Media_Partitions" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.13_Add_nosuid_Option_to_Removable_Media_Partitions" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.14_Add_nodev_Option_to_runshm_Partition" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.15_Add_nosuid_Option_to_runshm_Partition" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.16_Add_noexec_Option_to_runshm_Partition" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.17_Set_Sticky_Bit_on_All_World-Writable_Directories" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.25_Disable_Automounting" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1_Set_UserGroup_Owner_on_bootloader_config" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.2_Set_Permissions_on_bootloader_config" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.3_Set_Boot_Loader_Password" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.4_Require_Authentication_for_Single-User_Mode" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.1_Restrict_Core_Dumps" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.2_Enable_XDNX_Support_on_32-bit_x86_Systems" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.3_Enable_Randomized_Virtual_Memory_Region_Placement" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.4_Disable_Prelink" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.1.1_Ensure_NIS_is_not_installed" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.1.2_Ensure_rsh_server_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.1.3_Ensure_rsh_client_is_not_installed" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.1.4_Ensure_talk_server_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.1.5_Ensure_talk_client_is_not_installed" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.1.6_Ensure_telnet_server_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.1.7_Ensure_tftp-server_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.1.8_Ensure_xinetd_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.2_Ensure_chargen_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.3_Ensure_daytime_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.4_Ensure_echo_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.5_Ensure_discard_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.6_Ensure_time_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.1_Ensure_the_X_Window_system_is_not_installed" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.2_Ensure_Avahi_Server_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.3_Ensure_print_server_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.4_Ensure_DHCP_Server_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.5_Configure_Network_Time_Protocol_NTP" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.6_Ensure_LDAP_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.7_Ensure_NFS_and_RPC_are_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.8_Ensure_DNS_Server_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.9_Ensure_FTP_Server_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.10_Ensure_HTTP_Server_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.11_Ensure_IMAP_and_POP_server_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.12_Ensure_Samba_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.13_Ensure_HTTP_Proxy_Server_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.14_Ensure_SNMP_Server_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.15_Configure_Mail_Transfer_Agent_for_Local-Only_Mode" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.16_Ensure_rsync_service_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.17_Ensure_Biosdevname_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.1.1_Disable_IP_Forwarding" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.1.2_Disable_Send_Packet_Redirects" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.2.1_Disable_Source_Routed_Packet_Acceptance" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.2.2_Disable_ICMP_Redirect_Acceptance" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.2.3_Disable_Secure_ICMP_Redirect_Acceptance" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.2.4_Log_Suspicious_Packets" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.2.5_Enable_Ignore_Broadcast_Requests" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.2.6_Enable_Bad_Error_Message_Protection" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.2.7_Enable_RFC-recommended_Source_Route_Validation" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.2.8_Enable_TCP_SYN_Cookies" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.3.1_Disable_IPv6_Router_Advertisements" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.3.2_Disable_IPv6_Redirect_Acceptance" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.3.3_Disable_IPv6" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.4.1_Install_TCP_Wrappers" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.4.2_Create_etchosts.allow" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.4.3_Verify_Permissions_on_etchosts.allow" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.4.4_Create_etchosts.deny" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.4.5_Verify_Permissions_on_etchosts.deny" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.5.1_Disable_DCCP" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.5.2_Disable_SCTP" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.5.3_Disable_RDS" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.5.4_Disable_TIPC" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.6_Deactivate_Wireless_Interfaces" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.7_Ensure_Firewall_is_active" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.2.1_Install_the_rsyslog_package" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.2.2_Ensure_the_rsyslog_Service_is_activated" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.2.3_Configure_etcrsyslog.conf" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.2.4_Create_and_Set_Permissions_on_rsyslog_Log_Files" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.2.5_Configure_rsyslog_to_Send_Logs_to_a_Remote_Log_Host" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.2.6_Accept_Remote_rsyslog_Messages_Only_on_Designated_Log_Hosts" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.4_Configure_logrotate" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.1.1_Enable_cron_Daemon" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.1.2_Set_UserGroup_Owner_and_Permission_on_etccrontab" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.1.3_Set_UserGroup_Owner_and_Permission_on_etccron.hourly" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.1.4_Set_UserGroup_Owner_and_Permission_on_etccron.daily" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.1.5_Set_UserGroup_Owner_and_Permission_on_etccron.weekly" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.1.6_Set_UserGroup_Owner_and_Permission_on_etccron.monthly" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.1.7_Set_UserGroup_Owner_and_Permission_on_etccron.d" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.1.8_Restrict_atcron_to_Authorized_Users" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.2.1_Set_Password_Creation_Requirement_Parameters_Using_pam_cracklib" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.2.2_Set_Lockout_for_Failed_Password_Attempts" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.2.3_Limit_Password_Reuse" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.3.1_Set_SSH_Protocol_to_2" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.3.2_Set_LogLevel_to_INFO" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.3.3_Set_Permissions_on_etcsshsshd_config" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.3.4_Disable_SSH_X11_Forwarding" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.3.5_Set_SSH_MaxAuthTries_to_4_or_Less" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.3.6_Set_SSH_IgnoreRhosts_to_Yes" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.3.7_Set_SSH_HostbasedAuthentication_to_No" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.3.8_Disable_SSH_Root_Login" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.3.9_Set_SSH_PermitEmptyPasswords_to_No" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.3.10_Do_Not_Allow_Users_to_Set_Environment_Options" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.3.11_Use_Only_Approved_Cipher_in_Counter_Mode" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.3.12_Set_Idle_Timeout_Interval_for_User_Login" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.3.13_Limit_Access_via_SSH" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.3.14_Set_SSH_Banner" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.4_Restrict_root_Login_to_System_Console" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.5_Restrict_Access_to_the_su_Command" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_10.1.1_Set_Password_Expiration_Days" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_10.1.2_Set_Password_Change_Minimum_Number_of_Days" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_10.1.3_Set_Password_Expiring_Warning_Days" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_10.2_Disable_System_Accounts" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_10.3_Set_Default_Group_for_root_Account" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_10.4_Set_Default_umask_for_Users" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_10.5_Lock_Inactive_User_Accounts" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_11.1_Set_Warning_Banner_for_Standard_Login_Services" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_11.2_Remove_OS_Information_from_Login_Warning_Banners" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_11.3_Set_Graphical_Warning_Banner" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_12.1_Verify_Permissions_on_etcpasswd" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_12.2_Verify_Permissions_on_etcshadow" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_12.3_Verify_Permissions_on_etcgroup" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_12.4_Verify_UserGroup_Ownership_on_etcpasswd" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_12.5_Verify_UserGroup_Ownership_on_etcshadow" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_12.6_Verify_UserGroup_Ownership_on_etcgroup" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_12.7_Find_World_Writable_Files" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_12.8_Find_Un-owned_Files_and_Directories" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_12.9_Find_Un-grouped_Files_and_Directories" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_12.10_Find_SUID_System_Executables" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_12.11_Find_SGID_System_Executables" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_13.1_Ensure_Password_Fields_are_Not_Empty" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_13.2_Verify_No_Legacy__Entries_Exist_in_etcpasswd_File" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_13.3_Verify_No_Legacy__Entries_Exist_in_etcshadow_File" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_13.4_Verify_No_Legacy__Entries_Exist_in_etcgroup_File" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_13.5_Verify_No_UID_0_Accounts_Exist_Other_Than_root" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_13.6_Ensure_root_PATH_Integrity" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_13.7_Check_Permissions_on_User_Home_Directories" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_13.8_Check_User_Dot_File_Permissions" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_13.9_Check_Permissions_on_User_.netrc_Files" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_13.10_Check_for_Presence_of_User_.rhosts_Files" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_13.11_Check_Groups_in_etcpasswd" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_13.12_Check_That_Users_Are_Assigned_Valid_Home_Directories" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_13.13_Check_User_Home_Directory_Ownership" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_13.14_Check_for_Duplicate_UIDs" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_13.15_Check_for_Duplicate_GIDs" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_13.16_Check_for_Duplicate_User_Names" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_13.17_Check_for_Duplicate_Group_Names" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_13.18_Check_for_Presence_of_User_.netrc_Files" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_13.19_Check_for_Presence_of_User_.forward_Files" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_13.20_Ensure_shadow_group_is_empty" selected="true"/>
    </xccdf:Profile>
    <xccdf:Profile id="xccdf_org.cisecurity.benchmarks_profile_Level_2">
        <xccdf:title xml:lang="en">Level 2</xccdf:title>
        <xccdf:description xml:lang="en">
            <xhtml:p>This profile extends the "Level 1" profile. Items in this profile exhibit one or more of the following characteristics:</xhtml:p>
            <xhtml:ul>
                <xhtml:li>are intended for environments or use cases where security is paramount.</xhtml:li>
                <xhtml:li>acts as defense in depth measure.</xhtml:li>
                <xhtml:li>may negatively inhibit the utility or performance of the technology.</xhtml:li>
            </xhtml:ul>
        </xccdf:description>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.1_Install_Updates_Patches_and_Additional_Security_Software" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.1_Create_Separate_Partition_for_tmp" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.2_Set_nodev_option_for_tmp_Partition" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.3_Set_nosuid_option_for_tmp_Partition" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.4_Set_noexec_option_for_tmp_Partition" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.5_Create_Separate_Partition_for_var" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.6_Bind_Mount_the_vartmp_directory_to_tmp" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.7_Create_Separate_Partition_for_varlog" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.8_Create_Separate_Partition_for_varlogaudit" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.9_Create_Separate_Partition_for_home" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.10_Add_nodev_Option_to_home" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.11_Add_nodev_Option_to_Removable_Media_Partitions" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.12_Add_noexec_Option_to_Removable_Media_Partitions" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.13_Add_nosuid_Option_to_Removable_Media_Partitions" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.14_Add_nodev_Option_to_runshm_Partition" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.15_Add_nosuid_Option_to_runshm_Partition" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.16_Add_noexec_Option_to_runshm_Partition" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.17_Set_Sticky_Bit_on_All_World-Writable_Directories" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.18_Disable_Mounting_of_cramfs_Filesystems" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.19_Disable_Mounting_of_freevxfs_Filesystems" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.20_Disable_Mounting_of_jffs2_Filesystems" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.21_Disable_Mounting_of_hfs_Filesystems" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.22_Disable_Mounting_of_hfsplus_Filesystems" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.23_Disable_Mounting_of_squashfs_Filesystems" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.24_Disable_Mounting_of_udf_Filesystems" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.25_Disable_Automounting" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1_Set_UserGroup_Owner_on_bootloader_config" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.2_Set_Permissions_on_bootloader_config" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.3_Set_Boot_Loader_Password" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.4_Require_Authentication_for_Single-User_Mode" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.1_Restrict_Core_Dumps" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.2_Enable_XDNX_Support_on_32-bit_x86_Systems" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.3_Enable_Randomized_Virtual_Memory_Region_Placement" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.4_Disable_Prelink" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.5_Activate_AppArmor" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.1.1_Ensure_NIS_is_not_installed" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.1.2_Ensure_rsh_server_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.1.3_Ensure_rsh_client_is_not_installed" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.1.4_Ensure_talk_server_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.1.5_Ensure_talk_client_is_not_installed" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.1.6_Ensure_telnet_server_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.1.7_Ensure_tftp-server_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.1.8_Ensure_xinetd_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.2_Ensure_chargen_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.3_Ensure_daytime_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.4_Ensure_echo_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.5_Ensure_discard_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.6_Ensure_time_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.1_Ensure_the_X_Window_system_is_not_installed" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.2_Ensure_Avahi_Server_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.3_Ensure_print_server_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.4_Ensure_DHCP_Server_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.5_Configure_Network_Time_Protocol_NTP" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.6_Ensure_LDAP_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.7_Ensure_NFS_and_RPC_are_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.8_Ensure_DNS_Server_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.9_Ensure_FTP_Server_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.10_Ensure_HTTP_Server_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.11_Ensure_IMAP_and_POP_server_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.12_Ensure_Samba_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.13_Ensure_HTTP_Proxy_Server_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.14_Ensure_SNMP_Server_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.15_Configure_Mail_Transfer_Agent_for_Local-Only_Mode" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.16_Ensure_rsync_service_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.17_Ensure_Biosdevname_is_not_enabled" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.1.1_Disable_IP_Forwarding" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.1.2_Disable_Send_Packet_Redirects" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.2.1_Disable_Source_Routed_Packet_Acceptance" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.2.2_Disable_ICMP_Redirect_Acceptance" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.2.3_Disable_Secure_ICMP_Redirect_Acceptance" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.2.4_Log_Suspicious_Packets" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.2.5_Enable_Ignore_Broadcast_Requests" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.2.6_Enable_Bad_Error_Message_Protection" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.2.7_Enable_RFC-recommended_Source_Route_Validation" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.2.8_Enable_TCP_SYN_Cookies" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.3.1_Disable_IPv6_Router_Advertisements" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.3.2_Disable_IPv6_Redirect_Acceptance" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.3.3_Disable_IPv6" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.4.1_Install_TCP_Wrappers" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.4.2_Create_etchosts.allow" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.4.3_Verify_Permissions_on_etchosts.allow" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.4.4_Create_etchosts.deny" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.4.5_Verify_Permissions_on_etchosts.deny" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.5.1_Disable_DCCP" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.5.2_Disable_SCTP" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.5.3_Disable_RDS" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.5.4_Disable_TIPC" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.6_Deactivate_Wireless_Interfaces" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.7_Ensure_Firewall_is_active" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.1.1.1_Configure_Audit_Log_Storage_Size" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.1.1.2_Disable_System_on_Audit_Log_Full" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.1.1.3_Keep_All_Auditing_Information" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.1.2_Install_and_Enable_auditd_Service" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.1.3_Enable_Auditing_for_Processes_That_Start_Prior_to_auditd" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.1.4_Record_Events_That_Modify_Date_and_Time_Information" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.1.5_Record_Events_That_Modify_UserGroup_Information" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.1.6_Record_Events_That_Modify_the_Systems_Network_Environment" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.1.7_Record_Events_That_Modify_the_Systems_Mandatory_Access_Controls" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.1.8_Collect_Login_and_Logout_Events" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.1.9_Collect_Session_Initiation_Information" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.1.10_Collect_Discretionary_Access_Control_Permission_Modification_Events" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.1.11_Collect_Unsuccessful_Unauthorized_Access_Attempts_to_Files" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.1.12_Collect_Use_of_Privileged_Commands" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.1.13_Collect_Successful_File_System_Mounts" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.1.14_Collect_File_Deletion_Events_by_User" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.1.15_Collect_Changes_to_System_Administration_Scope_sudoers" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.1.16_Collect_System_Administrator_Actions_sudolog" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.1.17_Collect_Kernel_Module_Loading_and_Unloading" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.1.18_Make_the_Audit_Configuration_Immutable" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.2.1_Install_the_rsyslog_package" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.2.2_Ensure_the_rsyslog_Service_is_activated" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.2.3_Configure_etcrsyslog.conf" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.2.4_Create_and_Set_Permissions_on_rsyslog_Log_Files" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.2.5_Configure_rsyslog_to_Send_Logs_to_a_Remote_Log_Host" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.2.6_Accept_Remote_rsyslog_Messages_Only_on_Designated_Log_Hosts" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.3.1_Install_AIDE" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.3.2_Implement_Periodic_Execution_of_File_Integrity" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.4_Configure_logrotate" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.1.1_Enable_cron_Daemon" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.1.2_Set_UserGroup_Owner_and_Permission_on_etccrontab" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.1.3_Set_UserGroup_Owner_and_Permission_on_etccron.hourly" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.1.4_Set_UserGroup_Owner_and_Permission_on_etccron.daily" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.1.5_Set_UserGroup_Owner_and_Permission_on_etccron.weekly" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.1.6_Set_UserGroup_Owner_and_Permission_on_etccron.monthly" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.1.7_Set_UserGroup_Owner_and_Permission_on_etccron.d" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.1.8_Restrict_atcron_to_Authorized_Users" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.2.1_Set_Password_Creation_Requirement_Parameters_Using_pam_cracklib" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.2.2_Set_Lockout_for_Failed_Password_Attempts" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.2.3_Limit_Password_Reuse" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.3.1_Set_SSH_Protocol_to_2" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.3.2_Set_LogLevel_to_INFO" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.3.3_Set_Permissions_on_etcsshsshd_config" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.3.4_Disable_SSH_X11_Forwarding" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.3.5_Set_SSH_MaxAuthTries_to_4_or_Less" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.3.6_Set_SSH_IgnoreRhosts_to_Yes" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.3.7_Set_SSH_HostbasedAuthentication_to_No" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.3.8_Disable_SSH_Root_Login" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.3.9_Set_SSH_PermitEmptyPasswords_to_No" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.3.10_Do_Not_Allow_Users_to_Set_Environment_Options" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.3.11_Use_Only_Approved_Cipher_in_Counter_Mode" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.3.12_Set_Idle_Timeout_Interval_for_User_Login" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.3.13_Limit_Access_via_SSH" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.3.14_Set_SSH_Banner" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.4_Restrict_root_Login_to_System_Console" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.5_Restrict_Access_to_the_su_Command" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_10.1.1_Set_Password_Expiration_Days" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_10.1.2_Set_Password_Change_Minimum_Number_of_Days" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_10.1.3_Set_Password_Expiring_Warning_Days" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_10.2_Disable_System_Accounts" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_10.3_Set_Default_Group_for_root_Account" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_10.4_Set_Default_umask_for_Users" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_10.5_Lock_Inactive_User_Accounts" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_11.1_Set_Warning_Banner_for_Standard_Login_Services" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_11.2_Remove_OS_Information_from_Login_Warning_Banners" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_11.3_Set_Graphical_Warning_Banner" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_12.1_Verify_Permissions_on_etcpasswd" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_12.2_Verify_Permissions_on_etcshadow" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_12.3_Verify_Permissions_on_etcgroup" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_12.4_Verify_UserGroup_Ownership_on_etcpasswd" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_12.5_Verify_UserGroup_Ownership_on_etcshadow" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_12.6_Verify_UserGroup_Ownership_on_etcgroup" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_12.7_Find_World_Writable_Files" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_12.8_Find_Un-owned_Files_and_Directories" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_12.9_Find_Un-grouped_Files_and_Directories" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_12.10_Find_SUID_System_Executables" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_12.11_Find_SGID_System_Executables" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_13.1_Ensure_Password_Fields_are_Not_Empty" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_13.2_Verify_No_Legacy__Entries_Exist_in_etcpasswd_File" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_13.3_Verify_No_Legacy__Entries_Exist_in_etcshadow_File" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_13.4_Verify_No_Legacy__Entries_Exist_in_etcgroup_File" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_13.5_Verify_No_UID_0_Accounts_Exist_Other_Than_root" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_13.6_Ensure_root_PATH_Integrity" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_13.7_Check_Permissions_on_User_Home_Directories" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_13.8_Check_User_Dot_File_Permissions" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_13.9_Check_Permissions_on_User_.netrc_Files" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_13.10_Check_for_Presence_of_User_.rhosts_Files" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_13.11_Check_Groups_in_etcpasswd" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_13.12_Check_That_Users_Are_Assigned_Valid_Home_Directories" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_13.13_Check_User_Home_Directory_Ownership" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_13.14_Check_for_Duplicate_UIDs" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_13.15_Check_for_Duplicate_GIDs" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_13.16_Check_for_Duplicate_User_Names" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_13.17_Check_for_Duplicate_Group_Names" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_13.18_Check_for_Presence_of_User_.netrc_Files" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_13.19_Check_for_Presence_of_User_.forward_Files" selected="true"/>
        <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_13.20_Ensure_shadow_group_is_empty" selected="true"/>
    </xccdf:Profile>
    <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_1_Patching_and_Software_Updates">
        <xccdf:title xml:lang="en">Patching and Software Updates</xccdf:title>
        <xccdf:description xml:lang="en">
            <xhtml:p> </xhtml:p>
        </xccdf:description>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_1.1_Install_Updates_Patches_and_Additional_Security_Software" role="unscored" selected="false" weight="0.0">
            <xccdf:title xml:lang="en">Install Updates, Patches and Additional Security Software</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:div>
                    <xhtml:div>
                        <xhtml:p>Periodically patches are released for included software either due to security flaws or to include additional functionality.</xhtml:p>
                    </xhtml:div>
                </xhtml:div>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:div>
                    <xhtml:div>
                        <xhtml:div>
                            <xhtml:p>Newer patches may contain security enhancements that would not be available through the latest full update. As a result, it is recommended that the latest software patches be used to
                                take advantage of the latest functionality. As with any software installation, organizations need to determine if a given update meets their requirements and verify the compatibility and
                                supportability of any additional software against the update revision that is selected.</xhtml:p>
                        </xhtml:div>
                    </xhtml:div>
                </xhtml:div>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Run the following command to update all packages on the system:</xhtml:p>
                        <xhtml:code class="code_block"># apt-get upgrade</xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
        </xccdf:Rule>
    </xccdf:Group>
    <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_2_Filesystem_Configuration">
        <xccdf:title xml:lang="en">Filesystem Configuration</xccdf:title>
        <xccdf:description xml:lang="en">
            <xhtml:p>Directories that are used for system-wide functions can be further protected by placing them on separate partitions. This provides protection for resource exhaustion and enables the use of mounting
                options that are applicable to the directory's intended use. User's data can be stored on separate partitions and have stricter mount options. A user partition is a filesystem that has been established
                for use by the users and does not contain software for system operations. The directives in this section are easier to perform during initial system installation. If the system is already installed, it is
                recommended that a full backup be performed before repartitioning the system.</xhtml:p>
            <xhtml:p>
                <xhtml:strong>Note:</xhtml:strong> If you are repartitioning a system that has already been installed, make sure the data has been copied over to the new partition, unmount it and then remove the data
                from the directory that was in the old partition. Otherwise it will still consume space in the old partition that will be masked when the new filesystem is mounted. For example, if a system is in
                single-user mode with no filesystems mounted and the administrator adds a lot of data to the <xhtml:span class="inline_block">/tmp</xhtml:span> directory, this data will still consume space in <xhtml:span class="inline_block">/</xhtml:span> once the <xhtml:span class="inline_block">/tmp</xhtml:span> filesystem is mounted unless it is removed first.</xhtml:p>
        </xccdf:description>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.1_Create_Separate_Partition_for_tmp" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Create Separate Partition for /tmp</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The <xhtml:span class="inline_block">/tmp </xhtml:span>directory is a world-writable directory used for temporary storage by all users and some applications.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Since the <xhtml:span class="inline_block">/tmp </xhtml:span>directory is intended to be world-writable, there is a risk of resource exhaustion if it is not bound to a separate partition. In
                    addition, making <xhtml:span class="inline_block">/tmp </xhtml:span>its own file system allows an administrator to set the <xhtml:span class="inline_block">noexec </xhtml:span>option on the mount,
                    making <xhtml:span class="inline_block">/tmp </xhtml:span>useless for an attacker to install executable code. It would also prevent an attacker from establishing a hardlink to a system <xhtml:span class="inline_block">setuid </xhtml:span>program and wait for it to be updated. Once the program was updated, the hardlink would be broken and the attacker would have his own copy of the program.
                    If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>For new installations, during installation create a custom partition setup and specify a separate partition for <xhtml:span class="inline_block">/tmp</xhtml:span>.</xhtml:p>
                        <xhtml:p>For systems that were previously installed, use the Logical Volume Manager (LVM) to create partitions.</xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="at least one" comment="Ensure separate /tmp partition is exists">
                        <ecl:command>egrep "^[^#]" /etc/fstab | awk '{print $2}'</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="^/tmp$"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.2_Set_nodev_option_for_tmp_Partition" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Set nodev option for /tmp Partition</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The <xhtml:span class="inline_block">nodev </xhtml:span>mount option specifies that the filesystem cannot contain special devices.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Since the <xhtml:span class="inline_block">/tmp </xhtml:span>filesystem is not intended to support devices, set this option to ensure that users cannot attempt to create block or character
                    special devices in <xhtml:span class="inline_block">/tmp</xhtml:span>.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Edit the <xhtml:span class="inline_block">/etc/fstab </xhtml:span>file and add <xhtml:span class="inline_block">nodev </xhtml:span>to the fourth field (mounting options). See the
                                <xhtml:span class="inline_block">fstab(5) </xhtml:span>manual page for more information. </xhtml:p>
                        <xhtml:code class="code_block"># mount -o remount,nodev /tmp </xhtml:code>
                        <xhtml:p>
                            <xhtml:br/>
                        </xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="at least one" comment="Ensure nodev set on /tmp partition">
                        <ecl:command>egrep "^[^#]" /etc/fstab | awk '($2 == "/tmp") { print $4 }'</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="nodev"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.3_Set_nosuid_option_for_tmp_Partition" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Set nosuid option for /tmp Partition</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The <xhtml:span class="inline_block">nosuid </xhtml:span>mount option specifies that the filesystem cannot contain set userid files.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Since the <xhtml:span class="inline_block">/tmp </xhtml:span>filesystem is only intended for temporary file storage, set this option to ensure that users cannot create set userid files in
                        <xhtml:span class="inline_block">/tmp</xhtml:span>.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Edit the <xhtml:span class="inline_block">/etc/fstab</xhtml:span> file and add <xhtml:span class="inline_block">nosuid </xhtml:span>to the fourth field (mounting options). See the
                                <xhtml:span class="inline_block">fstab(5) </xhtml:span>manual page for more information.</xhtml:p>
                        <xhtml:code class="code_block"># mount -o remount,nosuid /tmp</xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="at least one" comment="Ensure nosuid set on /tmp partition">
                        <ecl:command>egrep "^[^#]" /etc/fstab | awk '($2 == "/tmp") { print $4 }'</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="nosuid"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.4_Set_noexec_option_for_tmp_Partition" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Set noexec option for /tmp Partition</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The <xhtml:span class="inline_block">noexec </xhtml:span>mount option specifies that the filesystem cannot contain executable binaries.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Since the <xhtml:span class="inline_block">/tmp</xhtml:span> filesystem is only intended for temporary file storage, set this option to ensure that users cannot run executable binaries from
                        <xhtml:span class="inline_block">/tmp</xhtml:span>.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Edit the <xhtml:span class="inline_block">/etc/fstab </xhtml:span>file and add <xhtml:span class="inline_block">noexec </xhtml:span>to the fourth field (mounting options). See the
                                <xhtml:span class="inline_block">fstab(5) </xhtml:span>manual page for more information.</xhtml:p>
                        <xhtml:code class="code_block"># mount -o remount,noexec /tmp </xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="at least one" comment="Ensure noexec set on /tmp partition">
                        <ecl:command>egrep "^[^#]" /etc/fstab | awk '($2 == "/tmp") { print $4 }'</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="noexec"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.5_Create_Separate_Partition_for_var" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Create Separate Partition for /var</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The <xhtml:span class="inline_block">/var</xhtml:span> directory is used by daemons and other system services to temporarily store dynamic data. Some directories created by these processes may be
                    world-writable.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Since the <xhtml:span class="inline_block">/var </xhtml:span>directory may contain world-writable files and directories, there is a risk of resource exhaustion if it is not bound to a separate
                    partition.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>For new installations, during installation create a custom partition setup and specify a separate partition for <xhtml:span class="inline_block">/var</xhtml:span>.</xhtml:p>
                        <xhtml:p>For systems that were previously installed, use the Logical Volume Manager (LVM) to create partitions.</xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="at least one" comment="Ensure separate /var partition configured">
                        <ecl:command>egrep "^[^#]" /etc/fstab | awk '{print $2}'</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="^/var$"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.6_Bind_Mount_the_vartmp_directory_to_tmp" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Bind Mount the /var/tmp directory to /tmp</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The <xhtml:span class="inline_block">/var/tmp</xhtml:span> directory is normally a standalone directory in the <xhtml:span class="inline_block">/var</xhtml:span> file system. Binding <xhtml:span class="inline_block">/var/tmp</xhtml:span> to <xhtml:span class="inline_block">/tmp</xhtml:span> establishes an unbreakable link to <xhtml:span class="inline_block">/tmp</xhtml:span> that cannot
                    be removed (even by the root user). It also allows <xhtml:span class="inline_block">/var/tmp</xhtml:span> to inherit the same mount options that <xhtml:span class="inline_block">/tmp</xhtml:span>
                    owns, allowing <xhtml:span class="inline_block">/var/tmp</xhtml:span> to be protected in the same manner <xhtml:span class="inline_block">/tmp</xhtml:span> is protected. It will also prevent
                        <xhtml:span class="inline_block">/var</xhtml:span> from filling up with temporary files as the contents of <xhtml:span class="inline_block">/var/tmp</xhtml:span> will actually reside in the file
                    system containing <xhtml:span class="inline_block">/tmp</xhtml:span>.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>All programs that use <xhtml:span class="inline_block">/var/tmp</xhtml:span> and <xhtml:span class="inline_block">/tmp</xhtml:span> to read/write temporary files will always be written to the
                        <xhtml:span class="inline_block">/tmp</xhtml:span> file system, preventing a user from running the <xhtml:span class="inline_block">/var</xhtml:span> file system out of space or trying to perform
                    operations that have been blocked in the <xhtml:span class="inline_block">/tmp</xhtml:span> filesystem.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:code class="code_block"># mount --bind /tmp /var/tmp </xhtml:code>
                        <xhtml:p>and edit the <xhtml:span class="inline_block">/etc/fstab </xhtml:span>file to contain the following line:</xhtml:p>
                        <xhtml:code class="code_block">/tmp /var/tmp none bind 0 0 </xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="at least one" comment="Ensure /var/tmp is bound to /tmp">
                        <ecl:command>egrep "^[^#]" /etc/fstab | awk '($2 == "/var/tmp") { print $4 }'</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="bind"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.7_Create_Separate_Partition_for_varlog" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Create Separate Partition for /var/log</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The <xhtml:span class="inline_block">/var/log</xhtml:span> directory is used by system services to store log data .</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>There are two important reasons to ensure that system logs are stored on a separate partition: protection against resource exhaustion (since logs can grow quite large) and protection of audit
                    data.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>For new installations, during installation create a custom partition setup and specify a separate partition for <xhtml:span class="inline_block">/var/log</xhtml:span>.</xhtml:p>
                        <xhtml:p>For systems that were previously installed, use the Logical Volume Manager (LVM) to create partitions.</xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="at least one" comment="Ensure separate /var/log partition configured">
                        <ecl:command>egrep "^[^#]" /etc/fstab | awk '{print $2}'</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="^/var/log$"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.8_Create_Separate_Partition_for_varlogaudit" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Create Separate Partition for /var/log/audit</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The auditing daemon, <xhtml:span class="inline_block">auditd</xhtml:span>, stores log data in the <xhtml:span class="inline_block">/var/log/audit </xhtml:span>directory.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>There are two important reasons to ensure that data gathered by <xhtml:span class="inline_block">auditd </xhtml:span>is stored on a separate partition: protection against resource exhaustion
                    (since the <xhtml:span class="inline_block">audit.log </xhtml:span>file can grow quite large) and protection of audit data. The audit daemon calculates how much free space is left and performs actions
                    based on the results. If other processes (such as <xhtml:span class="inline_block">syslog</xhtml:span>) consume space in the same partition as <xhtml:span class="inline_block">auditd</xhtml:span>, it
                    may not perform as desired.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>For new installations, during installation create a custom partition setup and specify a separate partition for <xhtml:span class="inline_block">/var/log/audit</xhtml:span>.</xhtml:p>
                        <xhtml:p>For systems that were previously installed, use the Logical Volume Manager (LVM) to create partitions.</xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="at least one" comment="Ensure separate /var/log/audit partition configured">
                        <ecl:command>egrep "^[^#]" /etc/fstab | awk '{print $2}'</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="^/var/log/audit$"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.9_Create_Separate_Partition_for_home" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Create Separate Partition for /home</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The <xhtml:span class="inline_block">/home</xhtml:span> directory is used to support disk storage needs of local users.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>If the system is intended to support local users, create a separate partition for the <xhtml:span class="inline_block">/home</xhtml:span> directory to protect against resource exhaustion and
                    restrict the type of files that can be stored under <xhtml:span class="inline_block">/home</xhtml:span>.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>For new installations, during installation create a custom partition setup and specify a separate partition for <xhtml:span class="inline_block">/home</xhtml:span>.</xhtml:p>
                        <xhtml:p>For systems that were previously installed, use the Logical Volume Manager (LVM) to create partitions.</xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="at least one" comment="Ensure separate /home partition configured">
                        <ecl:command>egrep "^[^#]" /etc/fstab | awk '{print $2}'</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="^/home$"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.10_Add_nodev_Option_to_home" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Add nodev Option to /home</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>When set on a file system, this option prevents character and block special devices from being defined, or if they exist, from being used as character and block special devices.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Since the user partitions are not intended to support devices, set this option to ensure that users cannot attempt to create block or character special devices.</xhtml:p>
                <xhtml:p>
                    <xhtml:strong>Note:</xhtml:strong> The actions in the item refer to the <xhtml:span class="inline_block">/home </xhtml:span>partition, which is the default user partition that is defined in many
                    distributions. If you have created other user partitions, it is recommended that the Remediation and Audit steps be applied to these partitions as well.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Edit the <xhtml:span class="inline_block">/etc/fstab </xhtml:span>file and add <xhtml:span class="inline_block">nodev </xhtml:span>to the fourth field (mounting options). See the
                                <xhtml:span class="inline_block">fstab(5) </xhtml:span>manual page for more information.</xhtml:p>
                        <xhtml:code class="code_block"># mount -o remount,nodev /home </xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="at least one" comment="Ensure nodev set on /home partition">
                        <ecl:command>egrep "^[^#]" /etc/fstab | awk '($2 == "/home") { print $4 }'</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="nodev"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.11_Add_nodev_Option_to_Removable_Media_Partitions" role="unscored" selected="false" weight="0.0">
            <xccdf:title xml:lang="en">Add nodev Option to Removable Media Partitions</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>Set <xhtml:span class="inline_block">nodev </xhtml:span>on removable media to prevent character and block special devices that are present on the removable media from being treated as device
                    files.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Removable media containing character and block special devices could be used to circumvent security controls by allowing non-root users to access sensitive device files such as <xhtml:span class="inline_block">/dev/kmem </xhtml:span>or the raw disk partitions.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Edit the <xhtml:span class="inline_block">/etc/fstab </xhtml:span>file and add "<xhtml:span class="inline_block">nodev</xhtml:span>" to the fourth field (mounting options). Look for
                            entries that have mount points that contain words such as floppy or cdrom. See the <xhtml:span class="inline_block">fstab(5) </xhtml:span>manual page for more information.</xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.12_Add_noexec_Option_to_Removable_Media_Partitions" role="unscored" selected="false" weight="0.0">
            <xccdf:title xml:lang="en">Add noexec Option to Removable Media Partitions</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>Set <xhtml:span class="inline_block">noexec </xhtml:span>on removable media to prevent programs from executing from the removable media.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Setting this option on a file system prevents users from executing programs from the removable media. This deters users from being able to introduce potentially malicious software on the
                    system.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Edit the <xhtml:span class="inline_block">/etc/fstab </xhtml:span>file and add <xhtml:span class="inline_block">noexec </xhtml:span>to the fourth field (mounting options). Look for
                            entries that have mount points that contain words such as floppy or cdrom. See the <xhtml:span class="inline_block">fstab(5) </xhtml:span>manual page for more information.</xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.13_Add_nosuid_Option_to_Removable_Media_Partitions" role="unscored" selected="false" weight="0.0">
            <xccdf:title xml:lang="en">Add nosuid Option to Removable Media Partitions</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>Set <xhtml:span class="inline_block">nosuid </xhtml:span>on removable media to prevent <xhtml:span class="inline_block">setuid </xhtml:span>and <xhtml:span class="inline_block">setgid
                    </xhtml:span>executable files that are on that media from being executed as <xhtml:span class="inline_block">setuid </xhtml:span>and <xhtml:span class="inline_block">setgid</xhtml:span>.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Setting this option on a file system prevents users from introducing privileged programs onto the system and allowing non-root users to execute them.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Edit the <xhtml:span class="inline_block">/etc/fstab </xhtml:span>file and add <xhtml:span class="inline_block">nosuid </xhtml:span>to the fourth field (mounting options). Look for
                            entries that have mount points that contain words such as floppy or cdrom. See the <xhtml:span class="inline_block">fstab(5) </xhtml:span>manual page for more information.</xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.14_Add_nodev_Option_to_runshm_Partition" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Add nodev Option to /run/shm Partition</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The <xhtml:span class="inline_block">nodev </xhtml:span>mount option specifies that the <xhtml:span class="inline_block">/run/shm </xhtml:span>(temporary filesystem stored in memory) cannot
                    contain block or character special devices.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Since the /run/shm filesystem is not intended to support devices, set this option to ensure that users cannot attempt to create special devices in <xhtml:span class="inline_block">/run/shm
                    </xhtml:span>partitions.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Edit the <xhtml:span class="inline_block">/etc/fstab </xhtml:span>file and add <xhtml:span class="inline_block">nodev </xhtml:span>to the fourth field (mounting options of entries that
                            have mount points that contain <xhtml:span class="inline_block">/run/shm</xhtml:span>. See the <xhtml:span class="inline_block">fstab(5) </xhtml:span>manual page for more
                            information.</xhtml:p>
                        <xhtml:code class="code_block"># mount -o remount,nodev /run/shm </xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="at least one" comment="Ensure nodev set on /run/shm partition">
                        <ecl:command>egrep "^[^#]" /etc/fstab | awk '($2 == "/run/shm") { print $4 }'</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="nodev"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.15_Add_nosuid_Option_to_runshm_Partition" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Add nosuid Option to /run/shm Partition</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The <xhtml:span class="inline_block">nosuid </xhtml:span>mount option specifies that the <xhtml:span class="inline_block">/run/shm </xhtml:span>(temporary filesystem stored in memory) will not
                    execute <xhtml:span class="inline_block">setuid </xhtml:span>and <xhtml:span class="inline_block">setgid </xhtml:span>on executable programs as such, but rather execute them with the uid and gid of
                    the user executing the program.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Setting this option on a file system prevents users from introducing privileged programs onto the system and allowing non-root users to execute them.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Edit the <xhtml:span class="inline_block">/etc/fstab </xhtml:span>file and add <xhtml:span class="inline_block">nosuid </xhtml:span>to the fourth field (mounting options). Look for
                            entries that have mount points that contain <xhtml:span class="inline_block">/run/shm</xhtml:span>. See the <xhtml:span class="inline_block">fstab(5) </xhtml:span>manual page for more
                            information.</xhtml:p>
                        <xhtml:code class="code_block"># mount -o remount,nosuid /run/shm </xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="at least one" comment="Ensure nosuid set on /run/shm partition">
                        <ecl:command>egrep "^[^#]" /etc/fstab | awk '($2 == "/run/shm") { print $4 }'</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="nosuid"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.16_Add_noexec_Option_to_runshm_Partition" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Add noexec Option to /run/shm Partition</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>Set <xhtml:span class="inline_block">noexec </xhtml:span>on the shared memory partition to prevent programs from executing from there.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Setting this option on a file system prevents users from executing programs from shared memory. This deters users from introducing potentially malicious software on the system.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Edit the <xhtml:span class="inline_block">/etc/fstab </xhtml:span>file and add <xhtml:span class="inline_block">noexec </xhtml:span>to the fourth field (mounting options). Look for
                            entries that have mount points that contain <xhtml:span class="inline_block">/run/shm</xhtml:span>. See the <xhtml:span class="inline_block">fstab(5)</xhtml:span> manual page for more
                            information.</xhtml:p>
                        <xhtml:code class="code_block"># mount -o remount,noexec /run/shm </xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="at least one" comment="Ensure noexec set on /run/shm partition">
                        <ecl:command>egrep "^[^#]" /etc/fstab | awk '($2 == "/run/shm") { print $4 }'</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="noexec"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.17_Set_Sticky_Bit_on_All_World-Writable_Directories" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Set Sticky Bit on All World-Writable Directories</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>Setting the sticky bit on world writable directories prevents users from deleting or renaming files in that directory that are not owned by them.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>This feature prevents the ability to delete or rename files in world writable directories (such as <xhtml:span class="inline_block">/tmp</xhtml:span>) that are owned by another user.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:code class="code_block"># <xhtml:span>df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type d -perm -0002 2&gt;/dev/null | xargs chmod a+t</xhtml:span>
                        </xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="none exist" comment="Ensure sticky bit set on all world writable directories">
                        <ecl:command>df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type d \( -perm -0002 -a ! -perm -1000 \) 2&gt;/dev/null</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.18_Disable_Mounting_of_cramfs_Filesystems" role="unscored" selected="false" weight="0.0">
            <xccdf:title xml:lang="en">Disable Mounting of cramfs Filesystems</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The <xhtml:span class="inline_block">cramfs </xhtml:span>filesystem type is a compressed read-only Linux filesystem embedded in small footprint systems. A <xhtml:span class="inline_block">cramfs
                    </xhtml:span>image can be used without having to first decompress the image.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Removing support for unneeded filesystem types reduces the local attack surface of the server. If this filesystem type is not needed, disable it.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Edit or create the file <xhtml:span class="inline_block">/etc/modprobe.d/CIS.conf </xhtml:span>and add the following line:</xhtml:p>
                        <xhtml:code class="code_block">install cramfs /bin/true </xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="AND">
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command check="at least one" comment="Ensure cramfs module is not loadable">
                            <ecl:command>modprobe -n -v cramfs</ecl:command>
                            <ecl:line-selection dt="xs:string" op="pm" value="^install /bin/true"/>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command comment="Ensure cramfs module is not loaded" success="fail">
                            <ecl:command>lsmod | egrep "^cramfs\s"</ecl:command>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:complex-check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.19_Disable_Mounting_of_freevxfs_Filesystems" role="unscored" selected="false" weight="0.0">
            <xccdf:title xml:lang="en">Disable Mounting of freevxfs Filesystems</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The <xhtml:span class="inline_block">freevxfs </xhtml:span>filesystem type is a free version of the Veritas type filesystem. This is the primary filesystem type for HP-UX operating
                    systems.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Removing support for unneeded filesystem types reduces the local attack surface of the server. If this filesystem type is not needed, disable it.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Edit or create the file <xhtml:span class="inline_block">/etc/modprobe.d/CIS.conf </xhtml:span>and add the following line:</xhtml:p>
                        <xhtml:code class="code_block">install freevxfs /bin/true </xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="AND">
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command check="at least one" comment="Ensure freevxfs is not loadable">
                            <ecl:command>modprobe -n -v freevxfs</ecl:command>
                            <ecl:line-selection dt="xs:string" op="pm" value="^install /bin/true"/>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command comment="Ensure freevxfs is not loaded" success="fail">
                            <ecl:command>lsmod | egrep "^freevxfs\s"</ecl:command>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:complex-check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.20_Disable_Mounting_of_jffs2_Filesystems" role="unscored" selected="false" weight="0.0">
            <xccdf:title xml:lang="en">Disable Mounting of jffs2 Filesystems</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The <xhtml:span class="inline_block">jffs2 </xhtml:span>(journaling flash filesystem 2) filesystem type is a log-structured filesystem used in flash memory devices.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Removing support for unneeded filesystem types reduces the local attack surface of the server. If this filesystem type is not needed, disable it.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Edit or create the file <xhtml:span class="inline_block">/etc/modprobe.d/CIS.conf </xhtml:span>and add the following line:</xhtml:p>
                        <xhtml:code class="code_block">install jffs2 /bin/true </xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="AND">
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command check="at least one" comment="Ensure jffs2 is not loadable">
                            <ecl:command>modprobe -n -v jffs2</ecl:command>
                            <ecl:line-selection dt="xs:string" op="pm" value="^install /bin/true"/>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command comment="Ensure jffs2 is not loaded" success="fail">
                            <ecl:command>lsmod | egrep "^jffs2\s"</ecl:command>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:complex-check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.21_Disable_Mounting_of_hfs_Filesystems" role="unscored" selected="false" weight="0.0">
            <xccdf:title xml:lang="en">Disable Mounting of hfs Filesystems</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The <xhtml:span class="inline_block">hfs </xhtml:span>filesystem type is a hierarchical filesystem that allows you to mount Mac OS filesystems.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Removing support for unneeded filesystem types reduces the local attack surface of the server. If this filesystem type is not needed, disable it.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Edit or create the file <xhtml:span class="inline_block">/etc/modprobe.d/CIS.conf </xhtml:span>and add the following line:</xhtml:p>
                        <xhtml:code class="code_block">install hfs /bin/true </xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="AND">
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command check="at least one" comment="Ensure hfs is not loadable">
                            <ecl:command>modprobe -n -v hfs</ecl:command>
                            <ecl:line-selection dt="xs:string" op="pm" value="^install /bin/true"/>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command comment="Ensure hfs is not loaded" success="fail">
                            <ecl:command>lsmod | egrep "^hfs\s"</ecl:command>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:complex-check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.22_Disable_Mounting_of_hfsplus_Filesystems" role="unscored" selected="false" weight="0.0">
            <xccdf:title xml:lang="en">Disable Mounting of hfsplus Filesystems</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The <xhtml:span class="inline_block">hfsplus </xhtml:span>filesystem type is a hierarchical filesystem designed to replace <xhtml:span class="inline_block">hfs </xhtml:span>that allows you to
                    mount Mac OS filesystems.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Removing support for unneeded filesystem types reduces the local attack surface of the server. If this filesystem type is not needed, disable it.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Edit or create the file <xhtml:span class="inline_block">/etc/modprobe.d/CIS.conf </xhtml:span>and add the following line:</xhtml:p>
                        <xhtml:code class="code_block">install hfsplus /bin/true </xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="AND">
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command check="at least one" comment="Ensure hfsplus is not loadable">
                            <ecl:command>modprobe -n -v hfsplus</ecl:command>
                            <ecl:line-selection dt="xs:string" op="pm" value="^install /bin/true"/>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command comment="Ensure hfsplus is not loaded" success="fail">
                            <ecl:command>lsmod | egrep "^hfsplus\s"</ecl:command>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:complex-check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.23_Disable_Mounting_of_squashfs_Filesystems" role="unscored" selected="false" weight="0.0">
            <xccdf:title xml:lang="en">Disable Mounting of squashfs Filesystems</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The <xhtml:span class="inline_block">squashfs </xhtml:span>filesystem type is a compressed read-only Linux filesystem embedded in small footprint systems (similar to <xhtml:span class="inline_block">cramfs</xhtml:span>). A <xhtml:span class="inline_block">squashfs </xhtml:span>image can be used without having to first decompress the image.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Removing support for unneeded filesystem types reduces the local attack surface of the server. If this filesystem type is not needed, disable it.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Edit or create the file <xhtml:span class="inline_block">/etc/modprobe.d/CIS.conf </xhtml:span>and add the following line:</xhtml:p>
                        <xhtml:code class="code_block">install squashfs /bin/true </xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="AND">
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command check="at least one" comment="Ensure squashfs is not loadable">
                            <ecl:command>modprobe -n -v squashfs</ecl:command>
                            <ecl:line-selection dt="xs:string" op="pm" value="^install /bin/true"/>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command comment="Ensure squashfs is not loaded" success="fail">
                            <ecl:command>lsmod | egrep "^squashfs\s"</ecl:command>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:complex-check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.24_Disable_Mounting_of_udf_Filesystems" role="unscored" selected="false" weight="0.0">
            <xccdf:title xml:lang="en">Disable Mounting of udf Filesystems</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The <xhtml:span class="inline_block">udf </xhtml:span>filesystem type is the universal disk format used to implement ISO/IEC 13346 and ECMA-167 specifications. This is an open vendor filesystem
                    type for data storage on a broad range of media. This filesystem type is necessary to support writing DVDs and newer optical disc formats.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Removing support for unneeded filesystem types reduces the local attack surface of the server. If this filesystem type is not needed, disable it.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Edit or create the file <xhtml:span class="inline_block">/etc/modprobe.d/CIS.conf </xhtml:span>and add the following line:</xhtml:p>
                        <xhtml:code class="code_block">install udf /bin/true</xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="AND">
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command check="at least one" comment="Ensure udf is not loadable">
                            <ecl:command>modprobe -n -v udf</ecl:command>
                            <ecl:line-selection dt="xs:string" op="pm" value="^install /bin/true"/>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command comment="Ensure udf is not loaded" success="fail">
                            <ecl:command>lsmod | egrep "^udf\s"</ecl:command>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:complex-check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.25_Disable_Automounting" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Disable Automounting</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>
                    <xhtml:span class="inline_block">autofs</xhtml:span> allows automatic mounting of devices, typically including CD/DVDs and USB drives.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>With automounting enabled anyone with physical access could attach a USB drive or disc and have it's contents available in system even if they lacked permissions to mount it themselves.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Remove or comment out start lines in <xhtml:span class="inline_block">/etc/init/autofs.conf</xhtml:span>:</xhtml:p>
                        <xhtml:code class="code_block">#start on runlevel [2345]</xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command comment="Ensure autofs is not enabled" success="fail">
                        <ecl:command>initctl show-config autofs | egrep "^\s*start"</ecl:command>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
    </xccdf:Group>
    <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_3_Secure_Boot_Settings">
        <xccdf:title xml:lang="en">Secure Boot Settings</xccdf:title>
        <xccdf:description xml:lang="en">
            <xhtml:p> </xhtml:p>
        </xccdf:description>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1_Set_UserGroup_Owner_on_bootloader_config" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Set User/Group Owner on bootloader config</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>Set the owner and group of your boot loaders config file to the root user. These instructions default to GRUB stored at <xhtml:span class="inline_block">/boot/grub/grub.cfg</xhtml:span>.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Setting the owner and group to root prevents non-root users from changing the file.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Run the following to change ownership of <xhtml:span class="inline_block">/boot/grub/grub.cfg</xhtml:span>:</xhtml:p>
                        <xhtml:code class="code_block"># chown root:root /boot/grub/grub.cfg</xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="at least one" comment="Ensure /boot/grub/grub.cfg is owned by root">
                        <ecl:command>stat -c "%u %g" /boot/grub/grub.cfg</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="0 0"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.2_Set_Permissions_on_bootloader_config" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Set Permissions on bootloader config</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>Set permission on the your boot loaders config file to read and write for root only.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Setting the permissions to read and write for root only prevents non-root users from seeing the boot parameters or changing them. Non-root users who read the boot parameters may be able to
                    identify weaknesses in security upon boot and be able to exploit them.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Run the following to set the permissions fro <xhtml:span class="inline_block">/boot/grub/grub.cfg</xhtml:span>:</xhtml:p>
                        <xhtml:code class="code_block"># chmod og-rwx /boot/grub/grub.cfg</xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <!--
                                                           
                                    1. AND the existing permissions on /boot/grub/grub.cfg against the provided permissions (0077).
                                    2. If checking for existance of permissions, the output should equal the input. If checking for absense of permissions, the output should equal "000".
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                    <ecl:shell-command check="all" comment="Ensure /boot/grub/grub.cfg only accessible by owner">
                        <ecl:command>ui=($(echo 0077 -n | fold -w1));sys=($(stat -L --format="%a" /boot/grub/grub.cfg | awk '{printf "%04d\n", $0;}' | fold -w1));for (( i=0; i&lt;4; i++ )); do echo -n $(( ${ui[$i]} &amp;
                            ${sys[$i]})); done;</ecl:command>
                        <ecl:line-selection op="pm" value="^(\d+)$">
                            <ecl:regex-group dt="xs:string" group="1" op="eq" value="0000"/>
                        </ecl:line-selection>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.3_Set_Boot_Loader_Password" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Set Boot Loader Password</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>Setting the boot loader password will require that anyone rebooting the system must enter a password before being able to set command line boot parameters</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Requiring a boot password upon execution of the boot loader will prevent an unauthorized user from entering boot parameters or changing the boot partition. This prevents users from weakening
                    security (e.g. turning off SELinux at boot time).</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Create an encrypted password with grub-md5-crypt:</xhtml:p>
                        <xhtml:code class="code_block"># grub-mkpasswd-pbkdf2<xhtml:br/>Enter password: <xhtml:em>&lt;password&gt;</xhtml:em>
                            <xhtml:br/>Reenter password: <xhtml:em>&lt;password&gt;</xhtml:em>
                            <xhtml:br/>
                            <xhtml:em class="pre_0.2827034862554315">Your PBKDF2 is &lt;encrypted-password&gt;</xhtml:em>
                        </xhtml:code>
                        <xhtml:p>Add the following into <xhtml:span class="inline_block">/etc/grub.d/00_header </xhtml:span>or a custom <xhtml:span class="inline_block">/etc/grub.d</xhtml:span> configuration
                            file:</xhtml:p>
                        <xhtml:code>cat &lt;&lt;EOF<xhtml:br/>set superusers="<xhtml:em>&lt;user-list&gt;</xhtml:em>"<xhtml:br/>password_pbkdf2 <xhtml:em>&lt;user&gt; &lt;encrypted-password&gt;</xhtml:em>
                            <xhtml:br/>EOF</xhtml:code>
                        <xhtml:p>Run the following to update the grub configuration:</xhtml:p>
                        <xhtml:code class="code_block"># update-grub</xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="AND">
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:file-content check="at least one" comment="Ensure superusers listed in /boot/grub/grub.cfg">
                            <ecl:path>/boot/grub/grub.cfg</ecl:path>
                            <ecl:line-selection op="pm" value="^set superusers=&quot;.*&quot;$"/>
                        </ecl:file-content>
                    </xccdf:check-content>
                </xccdf:check>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:file-content check="at least one" comment="Ensure password specified in /boot/grub/grub.cfg">
                            <ecl:path>/boot/grub/grub.cfg</ecl:path>
                            <ecl:line-selection op="pm" value="^password"/>
                        </ecl:file-content>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:complex-check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.4_Require_Authentication_for_Single-User_Mode" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Require Authentication for Single-User Mode</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>Setting a password for the <xhtml:span class="inline_block">root</xhtml:span> user will force authentication in single user mode.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Requiring authentication in single user mode prevents an unauthorized user from rebooting the system into single user to gain root privileges without credentials.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Run the following command and follow the prompts to set a password for the <xhtml:span class="inline_block">root </xhtml:span>user:</xhtml:p>
                        <xhtml:code class="code_block"># passwd root</xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="none exist" comment="Ensure root password is set">
                        <ecl:command>grep "^root:[*\!]:" /etc/shadow</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
    </xccdf:Group>
    <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_4_Additional_Process_Hardening">
        <xccdf:title xml:lang="en">Additional Process Hardening</xccdf:title>
        <xccdf:description xml:lang="en">
            <xhtml:div class="overview"/>
        </xccdf:description>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.1_Restrict_Core_Dumps" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Restrict Core Dumps</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>A core dump is the memory of an executable program. It is generally used to determine why a program aborted. It can also be used to glean confidential information from a core file. The system
                    provides the ability to set a soft limit for core dumps, but this can be overridden by the user.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Setting a hard limit on core dumps prevents users from overriding the soft variable. If core dumps are required, consider setting limits for user groups (see <xhtml:span class="inline_block">limits.conf(5)</xhtml:span>). In addition, setting the <xhtml:span class="inline_block">fs.suid_dumpable</xhtml:span> variable to 0 will prevent setuid programs from dumping core. The <xhtml:span class="inline_block">apport </xhtml:span>service if active will override the <xhtml:span class="inline_block">fs.suid_dumpable </xhtml:span>variable setting and automatically create core dump
                    reports. The <xhtml:span class="inline_block">whoopsie </xhtml:span>service monitors <xhtml:span class="inline_block">apport </xhtml:span>core dump reports and transmits them to Canonical.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Add the following line to the <xhtml:span class="inline_block">/etc/security/limits.conf </xhtml:span>file.</xhtml:p>
                        <xhtml:code class="code_block">* hard core 0 </xhtml:code>
                        <xhtml:p>Add the following line to the <xhtml:span class="inline_block">/etc/sysctl.conf </xhtml:span>file.</xhtml:p>
                        <xhtml:code class="code_block">fs.suid_dumpable = 0 </xhtml:code>
                        <xhtml:p>Uninstall the <xhtml:span class="inline_block">apport </xhtml:span>and <xhtml:span class="inline_block">whoopsie </xhtml:span>packages or comment out any start lines in <xhtml:span class="inline_block">/etc/init/apport.conf</xhtml:span> and <xhtml:span class="inline_block">/etc/init/whoopsie.conf </xhtml:span>files:</xhtml:p>
                        <xhtml:code class="code_block">#start on runlevel [2345]</xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="AND">
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:file-content check="at least one" comment="Ensure core dumps are restricted">
                            <ecl:path>/etc/security/limits.conf</ecl:path>
                            <ecl:line-selection op="pm" value="^*\s+hard\s+core\s+0"/>
                        </ecl:file-content>
                    </xccdf:check-content>
                </xccdf:check>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <!--
                                                           
                                    1. Run sysctl using the fs.suid_dumpable parameter
                                    2. Read STDOUT looking for a line that starts with 0 or more spaces
                                    3.    and is followed by a sequence of 1 or more non-space characters 
                                    3.    and is followed by 0 or more spaces, followed by an equal sign, followed by 0 or more spaces   
                                    4.    and is followed by a value that is equals 0
                                    5.    and is followed by 0 or more spaces then EOL or a comment   
                                    6. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                        <ecl:shell-command check="all" comment="Ensure fs.suid_dumpable is set to 0">
                            <ecl:command>sysctl fs.suid_dumpable</ecl:command>
                            <ecl:line-selection op="pm" value="^\s*\S+\s*=\s*(.+?)\s*(#.*)?$">
                                <ecl:regex-group dt="xs:string" group="1" op="eq" value="0"/>
                            </ecl:line-selection>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command comment="Ensure apport service is not enabled" success="fail">
                            <ecl:command>initctl show-config apport | egrep "^\s*start"</ecl:command>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command comment="Ensure whoopsie service is not enabled" success="fail">
                            <ecl:command>initctl show-config whoopsie | egrep "^\s*start"</ecl:command>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:complex-check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.2_Enable_XDNX_Support_on_32-bit_x86_Systems" role="unscored" selected="false" weight="0.0">
            <xccdf:title xml:lang="en">Enable XD/NX Support on 32-bit x86 Systems</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>Recent processors in the x86 family support the ability to prevent code execution on a per memory page basis. Generically and on AMD processors, this ability is called No Execute (NX), while on
                    Intel processors it is called Execute Disable (XD). This ability can help prevent exploitation of buffer overflow vulnerabilities and should be activated whenever possible. Extra steps must be taken
                    to ensure that this protection is enabled, particularly on 32-bit x86 systems. Other processors, such as Itanium and POWER, have included such support since inception and the standard kernel for those
                    platforms supports the feature.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Enabling any feature that can protect against buffer overflow attacks enhances the security of the system.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>On 32 bit systems install a kernel with PAE support, no installation is required on 64 bit systems:</xhtml:p>
                        <xhtml:p>If necessary configure your bootloader to load the new kernel and reboot the system.</xhtml:p>
                        <xhtml:p>You may need to enable NX or XD support in your bios.</xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="at least one" comment="Ensure NX protection active">
                        <ecl:command>dmesg | grep NX</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="NX \(Execute Disable\) protection: active"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.3_Enable_Randomized_Virtual_Memory_Region_Placement" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Enable Randomized Virtual Memory Region Placement</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>Set the system flag to force randomized virtual memory region placement.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Randomly placing virtual memory regions will make it difficult to write memory page exploits as the memory placement will be consistently shifting.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Add the following line to the <xhtml:span class="inline_block">/etc/sysctl.conf </xhtml:span>file.</xhtml:p>
                        <xhtml:code class="code_block">kernel.randomize_va_space = 2</xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <!--
                                                           
                                    1. Run sysctl using the kernel.randomize_va_space parameter
                                    2. Read STDOUT looking for a line that starts with 0 or more spaces
                                    3.    and is followed by a sequence of 1 or more non-space characters 
                                    3.    and is followed by 0 or more spaces, followed by an equal sign, followed by 0 or more spaces   
                                    4.    and is followed by a value that is equals 2
                                    5.    and is followed by 0 or more spaces then EOL or a comment   
                                    6. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                    <ecl:shell-command check="all" comment="Ensure kernel.randomize_va_space is set to 2">
                        <ecl:command>sysctl kernel.randomize_va_space</ecl:command>
                        <ecl:line-selection op="pm" value="^\s*\S+\s*=\s*(.+?)\s*(#.*)?$">
                            <ecl:regex-group dt="xs:string" group="1" op="eq" value="2"/>
                        </ecl:line-selection>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.4_Disable_Prelink" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Disable Prelink</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The prelinking feature changes binaries in an attempt to decrease their startup time.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>The prelinking feature can interfere with the operation of AIDE, because it changes binaries. Prelinking can also increase the vulnerability of the system if a malicious user is able to
                    compromise a common library such as libc.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Run the command:</xhtml:p>
                        <xhtml:code class="code_block"># /usr/sbin/prelink -ua</xhtml:code>
                        <xhtml:p>to restore binaries to a normal, non-prelinked state, then remove prelink:</xhtml:p>
                        <xhtml:code class="code_block"># apt-get purge prelink</xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command comment="Ensure prelink is not installed" success="fail">
                        <ecl:command>dpkg -s prelink | egrep "^Status:\ install"</ecl:command>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.5_Activate_AppArmor" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Activate AppArmor</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>AppArmor provides a Mandatory Access Control (MAC) system that greatly augments the default Discretionary Access Control (DAC) model.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>For an action to occur, both the traditional DAC permissions must be satisfied as well as the AppArmor MAC rules. The action will not be allowed if either one of these models does not permit the
                    action. In this way, AppArmor rules can only make a system's permissions more restrictive and secure.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Install <xhtml:span class="inline_block">apparmor </xhtml:span>and <xhtml:span class="inline_block">apparmor-utils </xhtml:span>if missing (additional profiles can be found in the
                                <xhtml:span class="inline_block">apparmor-profiles </xhtml:span>package):</xhtml:p>
                        <xhtml:code class="code_block"># apt-get install apparmor apparmor-utils</xhtml:code>
                        <xhtml:p>Remove <xhtml:span class="inline_block">apparmor=0 </xhtml:span>from all kernels in <xhtml:span class="inline_block">/boot/grub/menu.lst</xhtml:span>:</xhtml:p>
                        <xhtml:code class="code_block">kernel /boot/vmlinuz-3.0.80-0.7-ec2 root=/dev/sda1 xencons=xvc0 console=xvc0 splash=silent showopts</xhtml:code>
                        <xhtml:p>Set all profiles to enforce mode:</xhtml:p>
                        <xhtml:code class="code_block"># aa-enforce /etc/apparmor.d/* </xhtml:code>
                        <xhtml:p>Any unconfined processes may need to have a profile created or activated for them and then be restarted.</xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="AND">
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command check="none exist" comment="Ensure profiles are loaded">
                            <ecl:command>apparmor_status</ecl:command>
                            <ecl:line-selection dt="xs:string" op="pm" value="^0 profiles are loaded.$"/>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command check="at least one" comment="Ensure no profiles are in complain mode">
                            <ecl:command>apparmor_status</ecl:command>
                            <ecl:line-selection dt="xs:string" op="pm" value="^0 profiles are in complain mode.$"/>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command check="at least one" comment="Ensure no processes are unconfined">
                            <ecl:command>apparmor_status</ecl:command>
                            <ecl:line-selection dt="xs:string" op="pm" value="^0 processes are unconfined but have a profile defined.$"/>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:complex-check>
        </xccdf:Rule>
    </xccdf:Group>
    <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_5_OS_Services">
        <xccdf:title xml:lang="en">OS Services</xccdf:title>
        <xccdf:description xml:lang="en">
            <xhtml:p class="MsoNormal">While applying system updates and patches helps correct known vulnerabilities, one of the best ways to protect the system against as yet unreported vulnerabilities is to disable all
                services that are not required for normal system operation.<xhtml:span> </xhtml:span>This prevents the exploitation of vulnerabilities discovered at a later date. If a service is not enabled, it cannot be
                    exploited.<xhtml:span> </xhtml:span>The actions in this section of the document provide guidance on what services can be safely disabled and under which circumstances, greatly reducing the number of
                possible threats to the resulting system.</xhtml:p>
        </xccdf:description>
        <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_5.1_Ensure_Legacy_Services_are_Not_Enabled">
            <xccdf:title xml:lang="en">Ensure Legacy Services are Not Enabled</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The items in this section are intended to ensure that legacy services are not active on the system. This guidance recommends disabling the software however removal is also an acceptable
                    remediation.</xhtml:p>
                <xhtml:p>
                    <xhtml:strong>Note:</xhtml:strong> The audit items in the section check to see if the packages are listed in the package management database and installed. It could be argued that someone may have
                    installed them separately. However, this is also true for any other type of rogue software. It is beyond the scope of this benchmark to address software that is installed using non-standard methods
                    and installation directories.</xhtml:p>
            </xccdf:description>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.1.1_Ensure_NIS_is_not_installed" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Ensure NIS is not installed</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>The Network Information Service (NIS), formerly known as Yellow Pages, is a client-server directory service protocol used to distribute system configuration files.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>The NIS service is inherently an insecure system that has been vulnerable to DOS attacks, buffer overflows and has poor authentication for querying NIS maps. NIS generally has been replaced
                        by such protocols as Lightweight Directory Access Protocol (LDAP). It is recommended that the service be removed.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Uninstall the <xhtml:span class="inline_block">nis </xhtml:span>package:</xhtml:p>
                            <xhtml:code class="code_block"># apt-get purge nis</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command comment="Ensure nis is not installed" success="fail">
                            <ecl:command>dpkg -s nis | egrep "^Status:\ install"</ecl:command>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.1.2_Ensure_rsh_server_is_not_enabled" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Ensure rsh server is not enabled</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>The Berkeley <xhtml:span class="inline_block">rsh-server </xhtml:span>(<xhtml:span class="inline_block">rsh</xhtml:span>, <xhtml:span class="inline_block">rlogin</xhtml:span>, <xhtml:span class="inline_block">rcp</xhtml:span>) package contains legacy services that exchange credentials in clear-text.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>These legacy service contain numerous security exposures and have been replaced with the more secure SSH package.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Remove or comment out any <xhtml:span class="inline_block">shell</xhtml:span>, <xhtml:span class="inline_block">login</xhtml:span>, or <xhtml:span class="inline_block">exec
                                </xhtml:span>lines in /etc/inetd.conf:</xhtml:p>
                            <xhtml:code class="code_block">#shell stream tcp nowait root /usr/sbin/tcpd /usr/sbin/in.rshd<xhtml:br/>#login stream tcp nowait root /usr/sbin/tcpd /usr/sbin/in.rlogind<xhtml:br/>#exec stream
                                tcp nowait root /usr/sbin/tcpd /usr/sbin/in.rexecd</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:complex-check operator="AND">
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:shell-command comment="Ensure rsh shell is not enabled" success="fail">
                                <ecl:command>egrep "^shell" /etc/inetd.conf</ecl:command>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:shell-command comment="Ensure rsh login is not enabled" success="fail">
                                <ecl:command>egrep "^login" /etc/inetd.conf</ecl:command>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:shell-command comment="Ensure rsh login is not enabled" success="fail">
                                <ecl:command>egrep "^exec" /etc/inetd.conf</ecl:command>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                </xccdf:complex-check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.1.3_Ensure_rsh_client_is_not_installed" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Ensure rsh client is not installed</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>The <xhtml:span class="inline_block">rsh </xhtml:span>package contains the client commands for the rsh services.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>These legacy clients contain numerous security exposures and have been replaced with the more secure SSH package. Even if the server is removed, it is best to ensure the clients are also
                        removed to prevent users from inadvertently attempting to use these commands and therefore exposing their credentials. Note that removing the <xhtml:span class="inline_block">rsh
                        </xhtml:span>package removes the clients for <xhtml:span class="inline_block">rsh</xhtml:span>, <xhtml:span class="inline_block">rcp </xhtml:span>and <xhtml:span class="inline_block">rlogin</xhtml:span>.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Uninstall the <xhtml:span class="inline_block">rsh-client</xhtml:span> and <xhtml:span class="inline_block">rsh-reload-client </xhtml:span>packages:</xhtml:p>
                            <xhtml:code class="code_block"># apt-get purge rsh-client rsh-reload-client</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:complex-check operator="AND">
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:shell-command comment="Ensure rsh client is uninstalled" success="fail">
                                <ecl:command>dpkg -s rsh-client | egrep "^Status:\ install"</ecl:command>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:shell-command comment="Ensure rsh redone client is uninstalled" success="fail">
                                <ecl:command>dpkg -s rsh-redone-client | egrep "^Status:\ install"</ecl:command>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                </xccdf:complex-check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.1.4_Ensure_talk_server_is_not_enabled" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Ensure talk server is not enabled</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>The talk software makes it possible for users to send and receive messages across systems through a terminal session. The talk client (allows initiate of talk sessions) is installed by
                        default.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>The software presents a security risk as it uses unencrypted protocols for communication.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Remove or comment out any <xhtml:span class="inline_block">talk </xhtml:span>or <xhtml:span class="inline_block">ntalk </xhtml:span>lines in <xhtml:span class="inline_block">/etc/inetd.conf</xhtml:span>:</xhtml:p>
                            <xhtml:code class="code_block">#talk dgram udp wait nobody.tty /usr/sbin/in.talkd in.talkd<xhtml:br/>#ntalk dgram udp wait nobody.tty /usr/sbin/in.ntalkd in.ntalkd</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:complex-check operator="AND">
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:shell-command comment="Ensure talk server is not enabled" success="fail">
                                <ecl:command>egrep "^talk" /etc/inetd.conf</ecl:command>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:shell-command comment="Ensure ntalk server is not enabled" success="fail">
                                <ecl:command>egrep "^ntalk" /etc/inetd.conf</ecl:command>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                </xccdf:complex-check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.1.5_Ensure_talk_client_is_not_installed" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Ensure talk client is not installed</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>The <xhtml:span class="inline_block">talk </xhtml:span>software makes it possible for users to send and receive messages across systems through a terminal session. The <xhtml:span class="inline_block">talk </xhtml:span>client (allows initialization of talk sessions) is installed by default.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>The software presents a security risk as it uses unencrypted protocols for communication.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Uninstall the <xhtml:span class="inline_block">talk</xhtml:span> package:</xhtml:p>
                            <xhtml:code class="code_block"># apt-get purge talk</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command comment="Ensure talk is uninstalled" success="fail">
                            <ecl:command>dpkg -s talk | egrep "^Status:\ install"</ecl:command>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.1.6_Ensure_telnet_server_is_not_enabled" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Ensure telnet server is not enabled</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>The <xhtml:span class="inline_block">telnet-server </xhtml:span>package contains the <xhtml:span class="inline_block">telnet </xhtml:span>daemon, which accepts connections from users from
                        other systems via the <xhtml:span class="inline_block">telnet </xhtml:span>protocol.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>The <xhtml:span class="inline_block">telnet </xhtml:span>protocol is insecure and unencrypted. The use of an unencrypted transmission medium could allow a user with access to sniff network
                        traffic the ability to steal credentials. The <xhtml:span class="inline_block">ssh </xhtml:span>package provides an encrypted session and stronger security.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Remove or comment out any <xhtml:span class="inline_block">telnet </xhtml:span>lines in <xhtml:span class="inline_block">/etc/inetd.conf</xhtml:span>:</xhtml:p>
                            <xhtml:code class="code_block">#telnet stream tcp nowait telnetd /usr/sbin/tcpd /usr/sbin/in.telnetd</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command comment="Ensure telnet server is not enabled" success="fail">
                            <ecl:command>egrep "^telnet" /etc/inetd.conf</ecl:command>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.1.7_Ensure_tftp-server_is_not_enabled" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Ensure tftp-server is not enabled</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>Trivial File Transfer Protocol (TFTP) is a simple file transfer protocol, typically used to automatically transfer configuration or boot machines from a boot server. The packages <xhtml:span class="inline_block">tftp </xhtml:span>and <xhtml:span class="inline_block">atftp </xhtml:span>are both used to define and support a TFTP server.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>TFTP does not support authentication nor does it ensure the confidentiality or integrity of data. It is recommended that TFTP be removed, unless there is a specific need for TFTP. In that
                        case, extreme caution must be used when configuring the services.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Remove or comment out any <xhtml:span class="inline_block">tftp </xhtml:span>lines in <xhtml:span class="inline_block">/etc/inetd.conf</xhtml:span>:</xhtml:p>
                            <xhtml:code>#tftp stream tcp nowait root internal</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command comment="Ensure tftp is not enabled" success="fail">
                            <ecl:command>egrep "^tftp" /etc/inetd.conf</ecl:command>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.1.8_Ensure_xinetd_is_not_enabled" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Ensure xinetd is not enabled</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>The eXtended InterNET Daemon (<xhtml:span class="inline_block">xinetd</xhtml:span>) is an open source super daemon that replaced the original <xhtml:span class="inline_block">inetd</xhtml:span> daemon. The <xhtml:span class="inline_block">xinetd </xhtml:span>daemon listens for well known services and dispatches the appropriate daemon to properly respond to service
                        requests.</xhtml:p>
                    <xhtml:p>
                        <xhtml:strong>Note:</xhtml:strong> Several other services recommended to be disabled in this benchmark have xinetd versions as well, if xinetd is required in your environment ensure they are
                        disabled in xinetd configuration as well.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>If there are no <xhtml:span class="inline_block">xinetd </xhtml:span>services required, it is recommended that the daemon be disabled.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Remove or comment out start lines in <xhtml:span class="inline_block">/etc/init/xinetd.conf</xhtml:span>:</xhtml:p>
                            <xhtml:code class="code_block">#start on runlevel [2345]</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command comment="Ensure xinetd is not enabled" success="fail">
                            <ecl:command>initctl show-config xinetd | egrep "^\s*start"</ecl:command>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
        </xccdf:Group>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.2_Ensure_chargen_is_not_enabled" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure chargen is not enabled</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>
                    <xhtml:span class="inline_block">chargen </xhtml:span>is a network service that responds with 0 to 512 ASCII characters for each connection it receives. This service is intended for debugging and
                    testing purposes. It is recommended that this service be disabled.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Disabling this service will reduce the remote attack surface of the system.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Remove or comment out any <xhtml:span class="inline_block">chargen </xhtml:span>lines in /etc/inetd.conf:</xhtml:p>
                        <xhtml:code>#chargen stream tcp nowait root internal</xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command comment="Ensure chargen is not enabled" success="fail">
                        <ecl:command>egrep "^chargen" /etc/inetd.conf</ecl:command>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.3_Ensure_daytime_is_not_enabled" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure daytime is not enabled</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>
                    <xhtml:span class="inline_block">daytime</xhtml:span> is a network service that responds with the server's current date and time. This service is intended for debugging and testing purposes. It is
                    recommended that this service be disabled.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Disabling this service will reduce the remote attack surface of the system.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Remove or comment out any <xhtml:span class="inline_block">daytime </xhtml:span>lines in /etc/inetd.conf:</xhtml:p>
                        <xhtml:code>#daytime stream tcp nowait root internal</xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="AND">
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command comment="Ensure daytime is not enabled" success="fail">
                            <ecl:command>chkconfig --list daytime | egrep "on"</ecl:command>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command comment="Ensure daytime is not enabled" success="fail">
                            <ecl:command>egrep "^daytime" /etc/inetd.conf</ecl:command>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:complex-check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.4_Ensure_echo_is_not_enabled" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure echo is not enabled</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>
                    <xhtml:span class="inline_block">echo </xhtml:span>is a network service that responds to clients with the data sent to it by the client. This service is intended for debugging and testing purposes. It
                    is recommended that this service be disabled.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Disabling this service will reduce the remote attack surface of the system.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Remove or comment out any <xhtml:span class="inline_block">echo </xhtml:span>lines in /etc/inetd.conf:</xhtml:p>
                        <xhtml:code>#echo stream tcp nowait root internal</xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command comment="Ensure echo is not enabled" success="fail">
                        <ecl:command>egrep "^echo" /etc/inetd.conf</ecl:command>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.5_Ensure_discard_is_not_enabled" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure discard is not enabled</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>
                    <xhtml:span class="inline_block">discard </xhtml:span>is a network service that simply discards all data it receives. This service is intended for debugging and testing purposes. It is recommended
                    that this service be disabled.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Disabling this service will reduce the remote attack surface of the system.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Remove or comment out any <xhtml:span class="inline_block">discard </xhtml:span>lines in /etc/inetd.conf:</xhtml:p>
                        <xhtml:code>#discard stream tcp nowait root internal</xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command comment="Ensure discard is not enabled" success="fail">
                        <ecl:command>egrep "^discard" /etc/inetd.conf</ecl:command>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.6_Ensure_time_is_not_enabled" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure time is not enabled</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>
                    <xhtml:span class="inline_block">time </xhtml:span>is a network service that responds with the server's current date and time as a 32 bit integer. This service is intended for debugging and testing
                    purposes. It is recommended that this service be disabled.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Disabling this service will reduce the remote attack surface of the system.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Remove or comment out any <xhtml:span class="inline_block">time </xhtml:span>lines in /etc/inetd.conf:</xhtml:p>
                        <xhtml:code>#time stream tcp nowait root internal</xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command comment="Ensure time is not enabled" success="fail">
                        <ecl:command>egrep "^time" /etc/inetd.conf</ecl:command>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
    </xccdf:Group>
    <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_6_Special_Purpose_Services">
        <xccdf:title xml:lang="en">Special Purpose Services</xccdf:title>
        <xccdf:description xml:lang="en">
            <xhtml:p>This section describes services that are installed on servers that specifically need to run these services. If any of these services are not required, it is recommended that they be disabled or
                deleted from the system to reduce the potential attack surface.</xhtml:p>
            <xhtml:p>
                <xhtml:strong>Note:</xhtml:strong> This section lists common packages for different services however there are alternate packages which provide many of these services which should also be disabled or
                deleted if not required.</xhtml:p>
        </xccdf:description>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.1_Ensure_the_X_Window_system_is_not_installed" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure the X Window system is not installed</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The X Window system provides a Graphical User Interface (GUI) where users can have multiple windows in which to run programs and various add on. The X Window system is typically used on desktops
                    where users login, but not on servers where users typically do not login.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Unless your organization specifically requires graphical login access via X Windows, remove it to reduce the potential attack surface.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Uninstall X Windows:</xhtml:p>
                        <xhtml:code class="code_block"># apt-get purge xserver-xorg-core*</xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="none exist" comment="Ensure xserver-xorg-core* is not installed">
                        <ecl:command>dpkg -l xserver-xorg-core*</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="^ii"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.2_Ensure_Avahi_Server_is_not_enabled" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure Avahi Server is not enabled</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>Avahi is a free zeroconf implementation, including a system for multicast DNS/DNS-SD service discovery. Avahi allows programs to publish and discover services and hosts running on a local network
                    with no specific configuration. For example, a user can plug a computer into a network and Avahi automatically finds printers to print to, files to look at and people to talk to, as well as network
                    services running on the machine.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Since servers are not normally used for printing, this service is not needed unless dependencies require it. If this is the case, disable the service to reduce the potential attack
                    surface.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Remove or comment out start lines in <xhtml:span class="inline_block">/etc/init/avahi-daemon.conf</xhtml:span>:</xhtml:p>
                        <xhtml:code class="code_block">#start on (filesystem<xhtml:br/># and started dbus)</xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command comment="Ensure avahi-daemon is not enabled" success="fail">
                        <ecl:command>initctl show-config avahi-daemon | egrep "^\s*start"</ecl:command>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.3_Ensure_print_server_is_not_enabled" role="unscored" selected="false" weight="0.0">
            <xccdf:title xml:lang="en">Ensure print server is not enabled</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The Common Unix Print System (CUPS) provides the ability to print to both local and network printers. A system running CUPS can also accept print jobs from remote systems and print them to local
                    printers. It also provides a web based remote administration capability.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>If the system does not need to print jobs or accept print jobs from other systems, it is recommended that CUPS be disabled to reduce the potential attack surface.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Remove or comment out start lines in <xhtml:span class="inline_block">/etc/init/cups.conf</xhtml:span>:</xhtml:p>
                        <xhtml:code class="code_block">#start on (filesystem<xhtml:br/># and (started dbus or runlevel [2345]))</xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command comment="Ensure cups is not enabled" success="fail">
                        <ecl:command>initctl show-config cups | egrep "^\s*start"</ecl:command>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.4_Ensure_DHCP_Server_is_not_enabled" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure DHCP Server is not enabled</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The Dynamic Host Configuration Protocol (DHCP) is a service that allows machines to be dynamically assigned IP addresses.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Unless a server is specifically set up to act as a DHCP server, it is recommended that this service be deleted to reduce the potential attack surface.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Remove or comment out start lines in <xhtml:span class="inline_block">/etc/init/isc-dhcp-server.conf </xhtml:span>and <xhtml:span class="inline_block">/etc/init/isc-dhcp-server6.conf</xhtml:span>:</xhtml:p>
                        <xhtml:code class="code_block">#start on runlevel [2345]</xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="AND">
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command comment="Unsure isc-dhcp-server is not enabled" success="fail">
                            <ecl:command>initctl show-config isc-dhcp-server | egrep "^\s*start"</ecl:command>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command comment="Unsure isc-dhcp-server6 is not enabled" success="fail">
                            <ecl:command>initctl show-config isc-dhcp-server6 | egrep "^\s*start"</ecl:command>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:complex-check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.5_Configure_Network_Time_Protocol_NTP" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Configure Network Time Protocol (NTP)</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The Network Time Protocol (NTP) is designed to synchronize system clocks across a variety of systems and use a source that is highly accurate. More information on NTP can be found at <xhtml:a href="http://www.ntp.org">http://www.ntp.org</xhtml:a>. NTP can be configured to be a client and/or a server.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>It is recommended that physical systems and virtual guests lacking direct access to the physical host's clock be configured as NTP clients to synchronize their clocks (especially to support time
                    sensitive security mechanisms like Kerberos). This also ensures log files have consistent time records across the enterprise, which aids in forensic investigations.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Install <xhtml:span class="inline_block">ntp</xhtml:span>:</xhtml:p>
                        <xhtml:code class="code_block"># apt-get install ntp </xhtml:code>
                        <xhtml:p>Ensure the following lines are in <xhtml:span class="inline_block">/etc/ntp.conf</xhtml:span>:</xhtml:p>
                        <xhtml:code class="code_block">restrict -4 default kod nomodify notrap nopeer noquery<xhtml:br/>restrict -6 default kod nomodify notrap nopeer noquery</xhtml:code>
                        <xhtml:p>Also, make sure <xhtml:span class="inline_block">/etc/ntp.conf </xhtml:span>has at least one NTP server specified:</xhtml:p>
                        <xhtml:code class="code_block">server &lt;ntp-server&gt;</xhtml:code>
                        <xhtml:p>
                            <xhtml:strong>Note: </xhtml:strong>
                            <xhtml:em>&lt;ntp-server&gt;</xhtml:em> is the IP address or hostname of a trusted time server. Configuring an NTP server is outside the scope of this benchmark.</xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="AND">
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:file-content check="at least one" comment="Ensure 'restrict -4 default kod nomodify notrap nopeer noquery' in /etc/ntp.conf">
                            <ecl:path>/etc/ntp.conf</ecl:path>
                            <ecl:line-selection op="pm" value="^\s*restrict\s+-4\s+default(?=[^#]*\s+kod)(?=[^#]*\s+nomodify)(?=[^#]*\s+notrap)(?=[^#]*\s+nopeer)(?=[^#]*\s+noquery)(\s+kod|\s+nomodify|\s+notrap|\s+nopeer|\s+noquery)*\s*(?:#.*)?$"/>
                        </ecl:file-content>
                    </xccdf:check-content>
                </xccdf:check>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:file-content check="at least one" comment="Ensure 'restrict -6 default kod nomodify notrap nopeer noquery' in /etc/ntp.conf">
                            <ecl:path>/etc/ntp.conf</ecl:path>
                            <ecl:line-selection op="pm" value="^\s*restrict\s+-6\s+default(?=[^#]*\s+kod)(?=[^#]*\s+nomodify)(?=[^#]*\s+notrap)(?=[^#]*\s+nopeer)(?=[^#]*\s+noquery)(\s+kod|\s+nomodify|\s+notrap|\s+nopeer|\s+noquery)*\s*(?:#.*)?$"/>
                        </ecl:file-content>
                    </xccdf:check-content>
                </xccdf:check>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:file-content check="at least one" comment="Ensure at least one NTP server specified in /etc/ntp.conf">
                            <ecl:path>/etc/ntp.conf</ecl:path>
                            <ecl:line-selection op="pm" value="^\s*server"/>
                        </ecl:file-content>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:complex-check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.6_Ensure_LDAP_is_not_enabled" role="unscored" selected="false" weight="0.0">
            <xccdf:title xml:lang="en">Ensure LDAP is not enabled</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The Lightweight Directory Access Protocol (LDAP) was introduced as a replacement for NIS/YP. It is a service that provides a method for looking up information from a central database.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>If the server will not need to act as an LDAP client or server, it is recommended that the software be disabled to reduce the potential attack surface.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Uninstall the <xhtml:span class="inline_block">slapd </xhtml:span>package:</xhtml:p>
                        <xhtml:code class="code_block"># apt-get purge slapd</xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command comment="Ensure slapd is not installed" success="fail">
                        <ecl:command>dpkg -s slapd | egrep "^Status:\ install"</ecl:command>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.7_Ensure_NFS_and_RPC_are_not_enabled" role="unscored" selected="false" weight="0.0">
            <xccdf:title xml:lang="en">Ensure NFS and RPC are not enabled</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The Network File System (NFS) is one of the first and most widely distributed file systems in the UNIX environment. It provides the ability for systems to mount file systems of other servers
                    through the network.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>If the server does not export NFS shares or act as an NFS client, it is recommended that these services be disabled to reduce remote attack surface.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Remove or comment out start lines in /etc/init/rpcbind-boot.conf:</xhtml:p>
                        <xhtml:code class="code_block">#start on virtual-filesystems and net-device-up IFACE=lo</xhtml:code>
                        <xhtml:p>Remove any start links for <xhtml:span class="inline_block">nfs-kernel-server </xhtml:span>from <xhtml:span class="inline_block">/etc/rc*.d</xhtml:span>:</xhtml:p>
                        <xhtml:code class="code_block"># rm /etc/rc*.d/S*nfs-kernel-server</xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="AND">
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command comment="Ensure nfs-kernel-server is not enabled" success="fail">
                            <ecl:command>ls /etc/rc*.d/S*nfs-kernel-server</ecl:command>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command comment="Ensure rpcbind-boot is not enabled" success="fail">
                            <ecl:command>initctl show-config rpcbind-boot | egrep "^\s*start"</ecl:command>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:complex-check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.8_Ensure_DNS_Server_is_not_enabled" role="unscored" selected="false" weight="0.0">
            <xccdf:title xml:lang="en">Ensure DNS Server is not enabled</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The Domain Name System (DNS) is a hierarchical naming system that maps names to IP addresses for computers, services and other resources connected to a network.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Unless a server is specifically designated to act as a DNS server, it is recommended that the package be deleted to reduce the potential attack surface.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Remove any start links for <xhtml:span class="inline_block">bind9 </xhtml:span>from <xhtml:span class="inline_block">/etc/rc*.d</xhtml:span>:</xhtml:p>
                        <xhtml:code class="code_block"># rm /etc/rc*.d/S*bind9</xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command comment="Ensure bind9 is not enabled" success="fail">
                        <ecl:command>ls /etc/rc*.d/S*bind9</ecl:command>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.9_Ensure_FTP_Server_is_not_enabled" role="unscored" selected="false" weight="0.0">
            <xccdf:title xml:lang="en">Ensure FTP Server is not enabled</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The File Transfer Protocol (FTP) provides networked computers with the ability to transfer files.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>FTP does not protect the confidentiality of data or authentication credentials. It is recommended sftp be used if file transfer is required. Unless there is a need to run the system as a FTP
                    server (for example, to allow anonymous downloads), it is recommended that the package be deleted to reduce the potential attack surface.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Remove or comment out start lines in /etc/init/vsftpd.conf:</xhtml:p>
                        <xhtml:code class="code_block">#start on runlevel [2345] or net-device-up IFACE!=lo</xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command comment="Ensure vsftpd is not enabled" success="fail">
                        <ecl:command>initctl show-config vsftpd | egrep "^\s*start"</ecl:command>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.10_Ensure_HTTP_Server_is_not_enabled" role="unscored" selected="false" weight="0.0">
            <xccdf:title xml:lang="en">Ensure HTTP Server is not enabled</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>HTTP or web servers provide the ability to host web site content.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Unless there is a need to run the system as a web server, it is recommended that the package be deleted to reduce the potential attack surface.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Remove any start links for <xhtml:span class="inline_block">apache2 </xhtml:span>from <xhtml:span class="inline_block">/etc/rc*.d</xhtml:span>:</xhtml:p>
                        <xhtml:code class="code_block"># rm /etc/rc*.d/S*apache2</xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command comment="Ensure apache2 is not enabled" success="fail">
                        <ecl:command>ls /etc/rc*.d/S*apache2</ecl:command>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.11_Ensure_IMAP_and_POP_server_is_not_enabled" role="unscored" selected="false" weight="0.0">
            <xccdf:title xml:lang="en">Ensure IMAP and POP server is not enabled</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>
                    <xhtml:span class="inline_block">Dovecot</xhtml:span> is an open source IMAP and POP3 server for Linux based systems.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Unless POP3 and/or IMAP servers are to be provided to this server, it is recommended that the service be deleted to reduce the potential attack surface.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Remove or comment out start lines in <xhtml:span class="inline_block">/etc/init/dovecot.conf</xhtml:span>:</xhtml:p>
                        <xhtml:code class="code_block">#start on runlevel [2345]</xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command comment="Ensure dovecot is not enabled" success="fail">
                        <ecl:command>initctl show-config dovecot | egrep "^\s*start"</ecl:command>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.12_Ensure_Samba_is_not_enabled" role="unscored" selected="false" weight="0.0">
            <xccdf:title xml:lang="en">Ensure Samba is not enabled</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The Samba daemon allows system administrators to configure their Linux systems to share file systems and directories with Windows desktops. Samba will advertise the file systems and directories
                    via the Small Message Block (SMB) protocol. Windows desktop users will be able to mount these directories and file systems as letter drives on their systems.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>If there is no need to mount directories and file systems to Windows systems, then this service can be deleted to reduce the potential attack surface.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Remove or comment out start lines in <xhtml:span class="inline_block">/etc/init/smbd.conf</xhtml:span>:</xhtml:p>
                        <xhtml:code class="code_block">#start on (local-filesystems and net-device-up)</xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command comment="Ensure smbd is not enabled" success="fail">
                        <ecl:command>initctl show-config smbd | egrep "^\s*start"</ecl:command>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.13_Ensure_HTTP_Proxy_Server_is_not_enabled" role="unscored" selected="false" weight="0.0">
            <xccdf:title xml:lang="en">Ensure HTTP Proxy Server is not enabled</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>Squid is a standard proxy server used in many distributions and environments.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>If there is no need for a proxy server, it is recommended that the squid proxy be deleted to reduce the potential attack surface.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Remove or comment out start lines in <xhtml:span class="inline_block">/etc/init/squid3.conf</xhtml:span>:</xhtml:p>
                        <xhtml:code class="code_block">#start on runlevel [2345]</xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command comment="Ensure squid3 is not enabled" success="fail">
                        <ecl:command>initctl show-config squid3 | egrep "^\s*start"</ecl:command>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.14_Ensure_SNMP_Server_is_not_enabled" role="unscored" selected="false" weight="0.0">
            <xccdf:title xml:lang="en">Ensure SNMP Server is not enabled</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The Simple Network Management Protocol (SNMP) server is used to listen for SNMP commands from an SNMP management system, execute the commands or collect the information and then send results back
                    to the requesting system.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>The SNMP server communicates using SNMP v1, which transmits data in the clear and does not require authentication to execute commands. Unless absolutely necessary, it is recommended that the SNMP
                    service not be used.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Remove any start links for <xhtml:span class="inline_block">snmpd </xhtml:span>from <xhtml:span class="inline_block">/etc/rc*.d</xhtml:span>:</xhtml:p>
                        <xhtml:code class="code_block"># rm /etc/rc*.d/S*snmpd</xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command comment="Ensure snmpd is not enabled" success="fail">
                        <ecl:command>ls /etc/rc*.d/S*snmpd</ecl:command>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.15_Configure_Mail_Transfer_Agent_for_Local-Only_Mode" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Configure Mail Transfer Agent for Local-Only Mode</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>Mail Transfer Agents (MTA), such as sendmail and Postfix, are used to listen for incoming mail and transfer the messages to the appropriate user or mail server. If the system is not intended to
                    be a mail server, it is recommended that the MTA be configured to only process local mail.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>The software for all Mail Transfer Agents is complex and most have a long history of security issues. While it is important to ensure that the system can process local mail messages, it is not
                    necessary to have the MTA's daemon listening on a port unless the server is intended to be a mail server that receives and processes mail from other systems.</xhtml:p>
                <xhtml:p>
                    <xhtml:strong>Note:</xhtml:strong> The remediation given here provides instructions for configuring the postfix mail server, depending on your environment you may have an alternative MTA installed
                    such as sendmail. If this is the case consult the documentation for your installed MTA to configure the recommended state.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Edit <xhtml:span class="inline_block">/etc/postfix/main.cf </xhtml:span>and add the following line to the RECEIVING MAIL section. If the line already exists, change it to look like the
                            line below.</xhtml:p>
                        <xhtml:code class="code_block">inet_interfaces = localhost</xhtml:code>
                        <xhtml:p>Restart postfix:</xhtml:p>
                        <xhtml:code class="code_block"># service postfix restart</xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="none exist" comment="Ensure mail transport agent is bound to localhost only">
                        <ecl:command>netstat -an | grep LIST | awk '($4 != "127.0.0.1:25" &amp;&amp; $4 != "::1:25") { print $4 }' | grep ":25$"</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.16_Ensure_rsync_service_is_not_enabled" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure rsync service is not enabled</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The <xhtml:span class="inline_block">rsyncd</xhtml:span> service can be used to synchronize files between systems over network links.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>The <xhtml:span class="inline_block">rsyncd</xhtml:span> service presents a security risk as it uses unencrypted protocols for communication.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Set <xhtml:span class="inline_block">RSYNC_ENABLE </xhtml:span>to <xhtml:span class="inline_block">false </xhtml:span>in <xhtml:span class="inline_block">/etc/default/rsync</xhtml:span>:</xhtml:p>
                        <xhtml:code class="code_block">RSYNC_ENABLE=false</xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:file-content check="at least one" comment="Ensure rsyncd is not enabled">
                        <ecl:path>/etc/default/rsync</ecl:path>
                        <ecl:line-selection op="pm" value="^RSYNC_ENABLE=false"/>
                    </ecl:file-content>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.17_Ensure_Biosdevname_is_not_enabled" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure Biosdevname is not enabled</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p class="n_romve">
                    <xhtml:span class="inline_block">biosdevname </xhtml:span>is an external tool that works with the udev framework for naming devices.</xhtml:p>
                <xhtml:p class="n_romve">
                    <xhtml:span class="inline_block">biosdevname</xhtml:span> uses three methods to determine NIC names<xhtml:span class="inline_block">
                        <xhtml:span class="inline_block">:</xhtml:span>
                    </xhtml:span>
                </xhtml:p>
                <xhtml:ol>
                    <xhtml:li>PCI firmware spec.3.1</xhtml:li>
                    <xhtml:li>smbios (matches # after "em" to OEM # printed on board or housing)</xhtml:li>
                    <xhtml:li>PCI IRQ Routing Table (uses # of NIC position in the device history). If the BIOS does not support <xhtml:span class="inline_block">biosdevname</xhtml:span>, no NICs' are
                        re-named.</xhtml:li>
                </xhtml:ol>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>
                    <xhtml:span class="inline_block">biosdevname </xhtml:span>is an external tool that works with the <xhtml:span class="inline_block">udev </xhtml:span>framework for custom re-naming of system hardware
                    connections made by the kernel and BIOS. As allowing the re-naming of devices can severely disrupt network communications by creating resource conflicts and provide an attack vector for denial of
                    service exploits, this capability should be disabled or restricted according to the needs of the organization.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Uninstall the <xhtml:span class="inline_block">biosdevname </xhtml:span>package:</xhtml:p>
                        <xhtml:code class="code_block"># apt-get purge biosdevname</xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command comment="Ensure biosdevname is not installed" success="fail">
                        <ecl:command>dpkg -s biosdevname | egrep "^Status:\ install"</ecl:command>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
    </xccdf:Group>
    <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_7_Network_Configuration_and_Firewalls">
        <xccdf:title xml:lang="en">Network Configuration and Firewalls</xccdf:title>
        <xccdf:description xml:lang="en">
            <xhtml:p>This section provides guidance for secure network and firewall configuration.</xhtml:p>
        </xccdf:description>
        <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_7.1_Modify_Network_Parameters_Host_Only">
            <xccdf:title xml:lang="en">Modify Network Parameters (Host Only)</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The following network parameters determine if the system is to act as a <xhtml:em>host only</xhtml:em>. A system is considered <xhtml:em>host only</xhtml:em> if the system has a single interface,
                    or has multiple interfaces but will not be configured as a router.</xhtml:p>
            </xccdf:description>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.1.1_Disable_IP_Forwarding" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Disable IP Forwarding</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>The <xhtml:span class="inline_block">net.ipv4.ip_forward </xhtml:span>flag is used to tell the server whether it can forward packets or not. If the server is not to be used as a router, set
                        the flag to 0.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Setting the flag to 0 ensures that a server with multiple interfaces (for example, a hard proxy), will never be able to forward packets, and therefore, never serve as a router.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Set the <xhtml:span class="inline_block">net.ipv4.ip_forward parameter</xhtml:span> to <xhtml:span class="inline_block">0</xhtml:span> in <xhtml:span class="inline_block">/etc/sysctl.conf</xhtml:span>:</xhtml:p>
                            <xhtml:code class="code_block">net.ipv4.ip_forward=0</xhtml:code>
                            <xhtml:p>Modify active kernel parameters to match:</xhtml:p>
                            <xhtml:code class="code_block"># /sbin/sysctl -w net.ipv4.ip_forward=0<xhtml:br/># /sbin/sysctl -w net.ipv4.route.flush=1</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <!--
                                                           
                                    1. Run sysctl using the net.ipv4.ip_forward parameter
                                    2. Read STDOUT looking for a line that starts with 0 or more spaces
                                    3.    and is followed by a sequence of 1 or more non-space characters 
                                    3.    and is followed by 0 or more spaces, followed by an equal sign, followed by 0 or more spaces   
                                    4.    and is followed by a value that is equals 0
                                    5.    and is followed by 0 or more spaces then EOL or a comment   
                                    6. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                        <ecl:shell-command check="all" comment="Ensure net.ipv4.ip_forward is set to 0">
                            <ecl:command>sysctl net.ipv4.ip_forward</ecl:command>
                            <ecl:line-selection op="pm" value="^\s*\S+\s*=\s*(.+?)\s*(#.*)?$">
                                <ecl:regex-group dt="xs:string" group="1" op="eq" value="0"/>
                            </ecl:line-selection>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.1.2_Disable_Send_Packet_Redirects" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Disable Send Packet Redirects</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>ICMP Redirects are used to send routing information to other hosts. As a host itself does not act as a router (in a host only configuration), there is no need to send redirects.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>An attacker could use a compromised host to send invalid ICMP redirects to other router devices in an attempt to corrupt routing and have users access a system set up by the attacker as
                        opposed to a valid system.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Set the <xhtml:span class="inline_block">net.ipv4.conf.all.send_redirects</xhtml:span> and <xhtml:span class="inline_block">net.ipv4.conf.default.send_redirects</xhtml:span>
                                parameters to <xhtml:span class="inline_block">0</xhtml:span> in <xhtml:span class="inline_block">/etc/sysctl.conf</xhtml:span>:</xhtml:p>
                            <xhtml:code class="code_block">net.ipv4.conf.all.send_redirects=0<xhtml:br/>net.ipv4.conf.default.send_redirects=0 </xhtml:code>
                            <xhtml:p>Modify active kernel parameters to match:</xhtml:p>
                            <xhtml:code class="code_block"># /sbin/sysctl -w net.ipv4.conf.all.send_redirects=0<xhtml:br/># /sbin/sysctl -w net.ipv4.conf.default.send_redirects=0<xhtml:br/># /sbin/sysctl -w
                                net.ipv4.route.flush=1</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:complex-check operator="AND">
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <!--
                                                           
                                    1. Run sysctl using the net.ipv4.conf.all.send_redirects parameter
                                    2. Read STDOUT looking for a line that starts with 0 or more spaces
                                    3.    and is followed by a sequence of 1 or more non-space characters 
                                    3.    and is followed by 0 or more spaces, followed by an equal sign, followed by 0 or more spaces   
                                    4.    and is followed by a value that is equals 0
                                    5.    and is followed by 0 or more spaces then EOL or a comment   
                                    6. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                            <ecl:shell-command check="all" comment="Ensure net.ipv4.conf.all.send_redirects is set to 0">
                                <ecl:command>sysctl net.ipv4.conf.all.send_redirects</ecl:command>
                                <ecl:line-selection op="pm" value="^\s*\S+\s*=\s*(.+?)\s*(#.*)?$">
                                    <ecl:regex-group dt="xs:string" group="1" op="eq" value="0"/>
                                </ecl:line-selection>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <!--
                                                           
                                    1. Run sysctl using the net.ipv4.conf.default.send_redirects parameter
                                    2. Read STDOUT looking for a line that starts with 0 or more spaces
                                    3.    and is followed by a sequence of 1 or more non-space characters 
                                    3.    and is followed by 0 or more spaces, followed by an equal sign, followed by 0 or more spaces   
                                    4.    and is followed by a value that is equals 0
                                    5.    and is followed by 0 or more spaces then EOL or a comment   
                                    6. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                            <ecl:shell-command check="all" comment="Ensure net.ipv4.conf.default.send_redirects is set to 0">
                                <ecl:command>sysctl net.ipv4.conf.default.send_redirects</ecl:command>
                                <ecl:line-selection op="pm" value="^\s*\S+\s*=\s*(.+?)\s*(#.*)?$">
                                    <ecl:regex-group dt="xs:string" group="1" op="eq" value="0"/>
                                </ecl:line-selection>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                </xccdf:complex-check>
            </xccdf:Rule>
        </xccdf:Group>
        <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_7.2_Modify_Network_Parameters_Host_and_Router">
            <xccdf:title xml:lang="en">Modify Network Parameters (Host and Router)</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The following network parameters determine if the system is to act as a router. A system acts as a router if it has at least two interfaces and is configured to perform routing
                    functions.</xhtml:p>
            </xccdf:description>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.2.1_Disable_Source_Routed_Packet_Acceptance" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Disable Source Routed Packet Acceptance</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by
                        routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be
                        used.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Setting <xhtml:span class="inline_block">net.ipv4.conf.all.accept_source_route </xhtml:span>and <xhtml:span class="inline_block">net.ipv4.conf.default.accept_source_route </xhtml:span>to 0
                        disables the system from accepting source routed packets. Assume this server was capable of routing packets to Internet routable addresses on one interface and private addresses on another
                        interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable
                        addresses could not use the server as a way to reach the private address servers. If, however, source routed packets were allowed, they could be used to gain access to the private address systems
                        as the route could be specified, rather than rely on routing protocols that did not allow this routing.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Set the <xhtml:span class="inline_block">net.ipv4.conf.all.accept_source_route</xhtml:span> and <xhtml:span class="inline_block">net.ipv4.conf.default.accept_source_route</xhtml:span>
                                parameters to <xhtml:span class="inline_block">0</xhtml:span> in <xhtml:span class="inline_block">/etc/sysctl.conf</xhtml:span>:</xhtml:p>
                            <xhtml:code class="code_block">net.ipv4.conf.all.accept_source_route=0<xhtml:br/>net.ipv4.<xhtml:span style="font-size: 13px; color: #333333; line-height: 18px;">conf.default.accept_source_route=0</xhtml:span>
                            </xhtml:code>
                            <xhtml:p>Modify active kernel parameters to match:</xhtml:p>
                            <xhtml:code class="code_block"># /sbin/sysctl -w net.ipv4.conf.all.accept_source_route=0<xhtml:br/># /sbin/sysctl -w net.ipv4.conf.default.accept_source_route=0<xhtml:br/># /sbin/sysctl -w
                                net.ipv4.route.flush=1</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:complex-check operator="AND">
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <!--
                                                           
                                    1. Run sysctl using the net.ipv4.conf.all.accept_source_route parameter
                                    2. Read STDOUT looking for a line that starts with 0 or more spaces
                                    3.    and is followed by a sequence of 1 or more non-space characters 
                                    3.    and is followed by 0 or more spaces, followed by an equal sign, followed by 0 or more spaces   
                                    4.    and is followed by a value that is equals 0
                                    5.    and is followed by 0 or more spaces then EOL or a comment   
                                    6. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                            <ecl:shell-command check="all" comment="Ensure net.ipv4.conf.all.accept_source_route is set to 0">
                                <ecl:command>sysctl net.ipv4.conf.all.accept_source_route</ecl:command>
                                <ecl:line-selection op="pm" value="^\s*\S+\s*=\s*(.+?)\s*(#.*)?$">
                                    <ecl:regex-group dt="xs:string" group="1" op="eq" value="0"/>
                                </ecl:line-selection>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <!--
                                                           
                                    1. Run sysctl using the net.ipv4.conf.default.accept_source_route parameter
                                    2. Read STDOUT looking for a line that starts with 0 or more spaces
                                    3.    and is followed by a sequence of 1 or more non-space characters 
                                    3.    and is followed by 0 or more spaces, followed by an equal sign, followed by 0 or more spaces   
                                    4.    and is followed by a value that is equals 0
                                    5.    and is followed by 0 or more spaces then EOL or a comment   
                                    6. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                            <ecl:shell-command check="all" comment="Ensure net.ipv4.conf.default.accept_source_route is set to 0">
                                <ecl:command>sysctl net.ipv4.conf.default.accept_source_route</ecl:command>
                                <ecl:line-selection op="pm" value="^\s*\S+\s*=\s*(.+?)\s*(#.*)?$">
                                    <ecl:regex-group dt="xs:string" group="1" op="eq" value="0"/>
                                </ecl:line-selection>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                </xccdf:complex-check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.2.2_Disable_ICMP_Redirect_Acceptance" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Disable ICMP Redirect Acceptance</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing
                        device to update your system routing tables. By setting <xhtml:span class="inline_block">net.ipv4.conf.all.accept_redirects </xhtml:span>to 0, the system will not accept any ICMP redirect
                        messages, and therefore, won't allow outsiders to update the system's routing tables.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be
                        captured.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Set the <xhtml:span class="inline_block">net.ipv4.conf.all.accept_redirects</xhtml:span> and <xhtml:span class="inline_block">net.ipv4.conf.default.accept_redirects</xhtml:span>
                                parameters to <xhtml:span class="inline_block">0</xhtml:span> in <xhtml:span class="inline_block">/etc/sysctl.conf</xhtml:span>:</xhtml:p>
                            <xhtml:code class="code_block">net.ipv4.conf.all.accept_redirects=0<xhtml:br/>net.ipv4.conf.default.accept_redirects=0</xhtml:code>
                            <xhtml:p>Modify active kernel parameters to match:</xhtml:p>
                            <xhtml:code class="code_block"># /sbin/sysctl -w net.ipv4.conf.all.accept_redirects=0<xhtml:br/># /sbin/sysctl -w net.ipv4.conf.default.accept_redirects=0<xhtml:br/># /sbin/sysctl -w
                                net.ipv4.route.flush=1</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:complex-check operator="AND">
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <!--
                                                           
                                    1. Run sysctl using the net.ipv4.conf.all.accept_redirects parameter
                                    2. Read STDOUT looking for a line that starts with 0 or more spaces
                                    3.    and is followed by a sequence of 1 or more non-space characters 
                                    3.    and is followed by 0 or more spaces, followed by an equal sign, followed by 0 or more spaces   
                                    4.    and is followed by a value that is equals 0
                                    5.    and is followed by 0 or more spaces then EOL or a comment   
                                    6. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                            <ecl:shell-command check="all" comment="Ensure net.ipv4.conf.all.accept_redirects is set to 0">
                                <ecl:command>sysctl net.ipv4.conf.all.accept_redirects</ecl:command>
                                <ecl:line-selection op="pm" value="^\s*\S+\s*=\s*(.+?)\s*(#.*)?$">
                                    <ecl:regex-group dt="xs:string" group="1" op="eq" value="0"/>
                                </ecl:line-selection>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <!--
                                                           
                                    1. Run sysctl using the net.ipv4.conf.default.accept_redirects parameter
                                    2. Read STDOUT looking for a line that starts with 0 or more spaces
                                    3.    and is followed by a sequence of 1 or more non-space characters 
                                    3.    and is followed by 0 or more spaces, followed by an equal sign, followed by 0 or more spaces   
                                    4.    and is followed by a value that is equals 0
                                    5.    and is followed by 0 or more spaces then EOL or a comment   
                                    6. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                            <ecl:shell-command check="all" comment="Ensure net.ipv4.conf.default.accept_redirects is set to 0">
                                <ecl:command>sysctl net.ipv4.conf.default.accept_redirects</ecl:command>
                                <ecl:line-selection op="pm" value="^\s*\S+\s*=\s*(.+?)\s*(#.*)?$">
                                    <ecl:regex-group dt="xs:string" group="1" op="eq" value="0"/>
                                </ecl:line-selection>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                </xccdf:complex-check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.2.3_Disable_Secure_ICMP_Redirect_Acceptance" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Disable Secure ICMP Redirect Acceptance</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>Secure ICMP redirects are the same as ICMP redirects, except they come from gateways listed on the default gateway list. It is assumed that these gateways are known to your system, and that
                        they are likely to be secure.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>It is still possible for even known gateways to be compromised. Setting <xhtml:span class="inline_block">net.ipv4.conf.all.secure_redirects </xhtml:span>to 0 protects the system from routing
                        table updates by possibly compromised known gateways.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Set the <xhtml:span class="inline_block">net.ipv4.conf.all.secure_redirects</xhtml:span> and <xhtml:span class="inline_block">net.ipv4.conf.default.secure_redirects</xhtml:span>
                                parameters to <xhtml:span class="inline_block">0</xhtml:span> in <xhtml:span class="inline_block">/etc/sysctl.conf</xhtml:span>:</xhtml:p>
                            <xhtml:code class="code_block">net.ipv4.conf.all.secure_redirects=0<xhtml:br/>net.ipv4.conf.default.secure_redirects=0</xhtml:code>
                            <xhtml:p>Modify active kernel parameters to match:</xhtml:p>
                            <xhtml:code class="code_block"># /sbin/sysctl -w net.ipv4.conf.all.secure_redirects=0<xhtml:br/># /sbin/sysctl -w net.ipv4.conf.default.secure_redirects=0<xhtml:br/># /sbin/sysctl -w
                                net.ipv4.route.flush=1</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:complex-check operator="AND">
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <!--
                                                           
                                    1. Run sysctl using the net.ipv4.conf.all.secure_redirects parameter
                                    2. Read STDOUT looking for a line that starts with 0 or more spaces
                                    3.    and is followed by a sequence of 1 or more non-space characters 
                                    3.    and is followed by 0 or more spaces, followed by an equal sign, followed by 0 or more spaces   
                                    4.    and is followed by a value that is equals 0
                                    5.    and is followed by 0 or more spaces then EOL or a comment   
                                    6. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                            <ecl:shell-command check="all" comment="Ensure net.ipv4.conf.all.secure_redirects is set to 0">
                                <ecl:command>sysctl net.ipv4.conf.all.secure_redirects</ecl:command>
                                <ecl:line-selection op="pm" value="^\s*\S+\s*=\s*(.+?)\s*(#.*)?$">
                                    <ecl:regex-group dt="xs:string" group="1" op="eq" value="0"/>
                                </ecl:line-selection>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <!--
                                                           
                                    1. Run sysctl using the net.ipv4.conf.default.secure_redirects parameter
                                    2. Read STDOUT looking for a line that starts with 0 or more spaces
                                    3.    and is followed by a sequence of 1 or more non-space characters 
                                    3.    and is followed by 0 or more spaces, followed by an equal sign, followed by 0 or more spaces   
                                    4.    and is followed by a value that is pattern match 0
                                    5.    and is followed by 0 or more spaces then EOL or a comment   
                                    6. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                            <ecl:shell-command check="all" comment="Ensure net.ipv4.conf.default.secure_redirects is set to 0">
                                <ecl:command>sysctl net.ipv4.conf.default.secure_redirects</ecl:command>
                                <ecl:line-selection op="pm" value="^\s*\S+\s*=\s*(.+?)\s*(#.*)?$">
                                    <ecl:regex-group dt="xs:string" group="1" op="pm" value="0"/>
                                </ecl:line-selection>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                </xccdf:complex-check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.2.4_Log_Suspicious_Packets" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Log Suspicious Packets</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>When enabled, this feature logs packets with un-routable source addresses to the kernel log.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Enabling this feature and logging these packets allows an administrator to investigate the possibility that an attacker is sending spoofed packets to their server.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Set the <xhtml:span style="color: #000000; font-family: 'Courier New', Courier, monospace; font-size: 9pt; line-height: normal;">net.ipv4.conf.all.log_martians</xhtml:span> and
                                    <xhtml:span style="color: #000000; font-family: 'Courier New', Courier, monospace; font-size: 9pt; line-height: normal;">net.ipv4.conf.default.log_martians </xhtml:span>parameters to
                                    <xhtml:span style="font-family: 'Courier New', Courier, monospace; font-size: small;">1</xhtml:span> in <xhtml:span class="inline_block">/etc/sysctl.conf</xhtml:span>:</xhtml:p>
                            <xhtml:code class="code_block">net.ipv4.conf.all.log_martians=1<xhtml:br/>net.ipv4.conf.default.log_martians=1</xhtml:code>
                            <xhtml:p>Modify active kernel parameters to match:</xhtml:p>
                            <xhtml:code class="code_block"># /sbin/sysctl -w net.ipv4.conf.all.log_martians=1<xhtml:br/># /sbin/sysctl -w net.ipv4.conf.default.log_martians=1<xhtml:br/># /sbin/sysctl -w
                                net.ipv4.route.flush=1</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:complex-check operator="AND">
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <!--
                                                           
                                    1. Run sysctl using the net.ipv4.conf.all.log_martians parameter
                                    2. Read STDOUT looking for a line that starts with 0 or more spaces
                                    3.    and is followed by a sequence of 1 or more non-space characters 
                                    3.    and is followed by 0 or more spaces, followed by an equal sign, followed by 0 or more spaces   
                                    4.    and is followed by a value that is equals 1
                                    5.    and is followed by 0 or more spaces then EOL or a comment   
                                    6. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                            <ecl:shell-command check="all" comment="Ensure net.ipv4.conf.all.log_martians is set to 1">
                                <ecl:command>sysctl net.ipv4.conf.all.log_martians</ecl:command>
                                <ecl:line-selection op="pm" value="^\s*\S+\s*=\s*(.+?)\s*(#.*)?$">
                                    <ecl:regex-group dt="xs:string" group="1" op="eq" value="1"/>
                                </ecl:line-selection>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <!--
                                                           
                                    1. Run sysctl using the net.ipv4.conf.default.log_martians parameter
                                    2. Read STDOUT looking for a line that starts with 0 or more spaces
                                    3.    and is followed by a sequence of 1 or more non-space characters 
                                    3.    and is followed by 0 or more spaces, followed by an equal sign, followed by 0 or more spaces   
                                    4.    and is followed by a value that is equals 1
                                    5.    and is followed by 0 or more spaces then EOL or a comment   
                                    6. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                            <ecl:shell-command check="all" comment="Ensure net.ipv4.conf.default.log_martians is set to 1">
                                <ecl:command>sysctl net.ipv4.conf.default.log_martians</ecl:command>
                                <ecl:line-selection op="pm" value="^\s*\S+\s*=\s*(.+?)\s*(#.*)?$">
                                    <ecl:regex-group dt="xs:string" group="1" op="eq" value="1"/>
                                </ecl:line-selection>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                </xccdf:complex-check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.2.5_Enable_Ignore_Broadcast_Requests" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Enable Ignore Broadcast Requests</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>Setting <xhtml:span class="inline_block">net.ipv4.icmp_echo_ignore_broadcasts </xhtml:span>to 1 will cause the system to ignore all ICMP echo and timestamp requests to broadcast and multicast
                        addresses.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Accepting ICMP echo and timestamp requests with broadcast or multicast destinations for your network could be used to trick your host into starting (or participating) in a Smurf attack. A
                        Smurf attack relies on an attacker sending large amounts of ICMP broadcast messages with a spoofed source address. All hosts receiving this message and responding would send echo-reply messages
                        back to the spoofed address, which is probably not routable. If many hosts respond to the packets, the amount of traffic on the network could be significantly multiplied.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Set the <xhtml:span class="inline_block">net.ipv4.icmp_echo_ignore_broadcasts </xhtml:span>parameter to <xhtml:span style="font-family: 'Courier New', Courier, monospace; font-size: small;">1</xhtml:span> in <xhtml:span class="inline_block">/etc/sysctl.conf</xhtml:span>:</xhtml:p>
                            <xhtml:code class="code_block">net.ipv4.icmp_echo_ignore_broadcasts=1</xhtml:code>
                            <xhtml:p>Modify active kernel parameters to match:</xhtml:p>
                            <xhtml:code class="code_block"># /sbin/sysctl -w net.ipv4.icmp_echo_ignore_broadcasts=1<xhtml:br/># /sbin/sysctl -w net.ipv4.route.flush=1</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <!--
                                                           
                                    1. Run sysctl using the net.ipv4.icmp_echo_ignore_broadcasts parameter
                                    2. Read STDOUT looking for a line that starts with 0 or more spaces
                                    3.    and is followed by a sequence of 1 or more non-space characters 
                                    3.    and is followed by 0 or more spaces, followed by an equal sign, followed by 0 or more spaces   
                                    4.    and is followed by a value that is equals 1
                                    5.    and is followed by 0 or more spaces then EOL or a comment   
                                    6. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                        <ecl:shell-command check="all" comment="Ensure net.ipv4.icmp_echo_ignore_broadcasts is set to 1">
                            <ecl:command>sysctl net.ipv4.icmp_echo_ignore_broadcasts</ecl:command>
                            <ecl:line-selection op="pm" value="^\s*\S+\s*=\s*(.+?)\s*(#.*)?$">
                                <ecl:regex-group dt="xs:string" group="1" op="eq" value="1"/>
                            </ecl:line-selection>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.2.6_Enable_Bad_Error_Message_Protection" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Enable Bad Error Message Protection</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>Setting <xhtml:span class="inline_block">icmp_ignore_bogus_error_responses </xhtml:span>to 1 prevents the kernel from logging bogus responses (RFC-1122 non-compliant) from broadcast reframes,
                        keeping file systems from filling up with useless log messages.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Some routers (and some attackers) will send responses that violate RFC-1122 and attempt to fill up a log file system with many useless error messages.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Set the <xhtml:span class="inline_block">net.ipv4.icmp_ignore_bogus_error_responses</xhtml:span> parameter to <xhtml:span>1</xhtml:span> in <xhtml:span class="inline_block">/etc/sysctl.conf</xhtml:span>:</xhtml:p>
                            <xhtml:code class="code_block">net.ipv4.icmp_ignore_bogus_error_responses=1</xhtml:code>
                            <xhtml:p>Modify active kernel parameters to match:</xhtml:p>
                            <xhtml:code class="code_block"># /sbin/sysctl -w net.ipv4.icmp_ignore_bogus_error_responses=1<xhtml:br/># /sbin/sysctl -w net.ipv4.route.flush=1</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <!--
                                                           
                                    1. Run sysctl using the net.ipv4.icmp_ignore_bogus_error_responses parameter
                                    2. Read STDOUT looking for a line that starts with 0 or more spaces
                                    3.    and is followed by a sequence of 1 or more non-space characters 
                                    3.    and is followed by 0 or more spaces, followed by an equal sign, followed by 0 or more spaces   
                                    4.    and is followed by a value that is equals 1
                                    5.    and is followed by 0 or more spaces then EOL or a comment   
                                    6. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                        <ecl:shell-command check="all" comment="Ensure net.ipv4.icmp_ignore_bogus_error_responses is set to 1">
                            <ecl:command>sysctl net.ipv4.icmp_ignore_bogus_error_responses</ecl:command>
                            <ecl:line-selection op="pm" value="^\s*\S+\s*=\s*(.+?)\s*(#.*)?$">
                                <ecl:regex-group dt="xs:string" group="1" op="eq" value="1"/>
                            </ecl:line-selection>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.2.7_Enable_RFC-recommended_Source_Route_Validation" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Enable RFC-recommended Source Route Validation</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>Setting <xhtml:span class="inline_block">net.ipv4.conf.all.rp_filter </xhtml:span>and <xhtml:span class="inline_block">net.ipv4.conf.default.rp_filter </xhtml:span>to 1 forces the Linux
                        kernel to utilize reverse path filtering on a received packet to determine if the packet was valid. Essentially, with reverse path filtering, if the return packet does not go out the same
                        interface that the corresponding source packet came from, the packet is dropped (and logged if <xhtml:span class="inline_block">log_martians </xhtml:span>is set).</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Setting these flags is a good way to deter attackers from sending your server bogus packets that cannot be responded to. One instance where this feature breaks down is if asymmetrical routing
                        is employed. This would occur when using dynamic routing protocols (bgp, ospf, etc) on your system. If you are using asymmetrical routing on your server, you will not be able to enable this
                        feature without breaking the routing.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Set the <xhtml:span class="inline_block">net.ipv4.conf.all.rp_filter</xhtml:span> and <xhtml:span class="inline_block">net.ipv4.conf.default.rp_filter</xhtml:span> parameters to
                                    <xhtml:span>1</xhtml:span> in <xhtml:span class="inline_block">/etc/sysctl.conf</xhtml:span>:</xhtml:p>
                            <xhtml:code class="code_block">net.ipv4.conf.all.rp_filter=1<xhtml:br/>net.ipv4.conf.default.rp_filter=1</xhtml:code>
                            <xhtml:p>Modify active kernel parameters to match:</xhtml:p>
                            <xhtml:code class="code_block"># /sbin/sysctl -w net.ipv4.conf.all.rp_filter=1<xhtml:br/># /sbin/sysctl -w net.ipv4.conf.default.rp_filter=1<xhtml:br/># /sbin/sysctl -w
                                net.ipv4.route.flush=1</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:complex-check operator="AND">
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <!--
                                                           
                                    1. Run sysctl using the net.ipv4.conf.all.rp_filter parameter
                                    2. Read STDOUT looking for a line that starts with 0 or more spaces
                                    3.    and is followed by a sequence of 1 or more non-space characters 
                                    3.    and is followed by 0 or more spaces, followed by an equal sign, followed by 0 or more spaces   
                                    4.    and is followed by a value that is equals 1
                                    5.    and is followed by 0 or more spaces then EOL or a comment   
                                    6. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                            <ecl:shell-command check="all" comment="Ensure net.ipv4.conf.all.rp_filter is set to 1">
                                <ecl:command>sysctl net.ipv4.conf.all.rp_filter</ecl:command>
                                <ecl:line-selection op="pm" value="^\s*\S+\s*=\s*(.+?)\s*(#.*)?$">
                                    <ecl:regex-group dt="xs:string" group="1" op="eq" value="1"/>
                                </ecl:line-selection>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <!--
                                                           
                                    1. Run sysctl using the net.ipv4.conf.default.rp_filter parameter
                                    2. Read STDOUT looking for a line that starts with 0 or more spaces
                                    3.    and is followed by a sequence of 1 or more non-space characters 
                                    3.    and is followed by 0 or more spaces, followed by an equal sign, followed by 0 or more spaces   
                                    4.    and is followed by a value that is equals 1
                                    5.    and is followed by 0 or more spaces then EOL or a comment   
                                    6. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                            <ecl:shell-command check="all" comment="Ensure net.ipv4.conf.default.rp_filter is set to 1">
                                <ecl:command>sysctl net.ipv4.conf.default.rp_filter</ecl:command>
                                <ecl:line-selection op="pm" value="^\s*\S+\s*=\s*(.+?)\s*(#.*)?$">
                                    <ecl:regex-group dt="xs:string" group="1" op="eq" value="1"/>
                                </ecl:line-selection>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                </xccdf:complex-check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.2.8_Enable_TCP_SYN_Cookies" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Enable TCP SYN Cookies</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>When <xhtml:span class="inline_block">tcp_syncookies </xhtml:span>is set, the kernel will handle TCP SYN packets normally until the half-open connection queue is full, at which time, the SYN
                        cookie functionality kicks in. SYN cookies work by not using the SYN queue at all. Instead, the kernel simply replies to the SYN with a SYN|ACK, but will include a specially crafted TCP sequence
                        number that encodes the source and destination IP address and port number and the time the packet was sent. A legitimate connection would send the ACK packet of the three way handshake with the
                        specially crafted sequence number. This allows the server to verify that it has received a valid response to a SYN cookie and allow the connection, even though there is no corresponding SYN in the
                        queue.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Attackers use SYN flood attacks to perform a denial of service attacked on a server by sending many SYN packets without completing the three way handshake. This will quickly use up slots in
                        the kernel's half-open connection queue and prevent legitimate connections from succeeding. SYN cookies allow the server to keep accepting valid connections, even if under a denial of service
                        attack.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Set the <xhtml:span class="inline_block">net.ipv4.tcp_syncookies</xhtml:span> parameter to 1 in <xhtml:span class="inline_block">/etc/sysctl.conf</xhtml:span>:</xhtml:p>
                            <xhtml:code class="code_block">net.ipv4.tcp_syncookies=1</xhtml:code>
                            <xhtml:p>Modify active kernel parameters to match:</xhtml:p>
                            <xhtml:code class="code_block"># /sbin/sysctl -w net.ipv4.tcp_syncookies=1<xhtml:br/># /sbin/sysctl -w net.ipv4.route.flush=1</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <!--
                                                           
                                    1. Run sysctl using the net.ipv4.tcp_syncookies parameter
                                    2. Read STDOUT looking for a line that starts with 0 or more spaces
                                    3.    and is followed by a sequence of 1 or more non-space characters 
                                    3.    and is followed by 0 or more spaces, followed by an equal sign, followed by 0 or more spaces   
                                    4.    and is followed by a value that is equals 1
                                    5.    and is followed by 0 or more spaces then EOL or a comment   
                                    6. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                        <ecl:shell-command check="all" comment="Ensure net.ipv4.tcp_syncookies is set to 1">
                            <ecl:command>sysctl net.ipv4.tcp_syncookies</ecl:command>
                            <ecl:line-selection op="pm" value="^\s*\S+\s*=\s*(.+?)\s*(#.*)?$">
                                <ecl:regex-group dt="xs:string" group="1" op="eq" value="1"/>
                            </ecl:line-selection>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
        </xccdf:Group>
        <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_7.3_Configure_IPv6">
            <xccdf:title xml:lang="en">Configure IPv6</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>IPv6 is a networking protocol that supersedes IPv4. It has more routable addresses and has built in security. If IPv6 is to be used, follow this section of the benchmark to configure IPv6,
                    otherwise disable IPv6.</xhtml:p>
            </xccdf:description>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.3.1_Disable_IPv6_Router_Advertisements" role="unscored" selected="false" weight="0.0">
                <xccdf:title xml:lang="en">Disable IPv6 Router Advertisements</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>This setting disables the systems ability to accept router advertisements</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>It is recommended that systems not accept router advertisements as they could be tricked into routing traffic to compromised machines. Setting hard routes within the system (usually a single
                        default route to a trusted router) protects the system from bad routes.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Set the <xhtml:span class="inline_block">net.ipv6.conf.all.accept_ra</xhtml:span> and<xhtml:span class="inline_block"> net.ipv6.conf.default.accept_ra</xhtml:span> parameter to
                                    <xhtml:span class="inline_block">0</xhtml:span> in <xhtml:span class="inline_block">/etc/sysctl.conf</xhtml:span>:</xhtml:p>
                            <xhtml:code class="code_block">net.ipv6.conf.all.accept_ra=0<xhtml:br/>net.ipv6.conf.default.accept_ra=0</xhtml:code>
                            <xhtml:p>Modify active kernel parameters to match:</xhtml:p>
                            <xhtml:code class="code_block"># /sbin/sysctl -w net.ipv6.conf.all.accept_ra=0<xhtml:br/># /sbin/sysctl -w net.ipv6.conf.default.accept_ra=0<xhtml:br/># /sbin/sysctl -w
                                net.ipv6.route.flush=1</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:complex-check operator="AND">
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <!--
                                                           
                                    1. Run sysctl using the net.ipv6.conf.all.accept_ra parameter
                                    2. Read STDOUT looking for a line that starts with 0 or more spaces
                                    3.    and is followed by a sequence of 1 or more non-space characters 
                                    3.    and is followed by 0 or more spaces, followed by an equal sign, followed by 0 or more spaces   
                                    4.    and is followed by a value that is equals 0
                                    5.    and is followed by 0 or more spaces then EOL or a comment   
                                    6. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                            <ecl:shell-command check="all" comment="Ensure 'net.ipv6.conf.all.accept_ra' is 0">
                                <ecl:command>sysctl net.ipv6.conf.all.accept_ra</ecl:command>
                                <ecl:line-selection op="pm" value="^\s*\S+\s*=\s*(.+?)\s*(#.*)?$">
                                    <ecl:regex-group dt="xs:integer" group="1" op="eq" value="0"/>
                                </ecl:line-selection>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <!--
                                                           
                                    1. Run sysctl using the net.ipv6.conf.default.accept_ra parameter
                                    2. Read STDOUT looking for a line that starts with 0 or more spaces
                                    3.    and is followed by a sequence of 1 or more non-space characters 
                                    3.    and is followed by 0 or more spaces, followed by an equal sign, followed by 0 or more spaces   
                                    4.    and is followed by a value that is equals 0
                                    5.    and is followed by 0 or more spaces then EOL or a comment   
                                    6. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                            <ecl:shell-command check="all" comment="Ensure 'net.ipv6.conf.default.accept_ra' is '0'">
                                <ecl:command>sysctl net.ipv6.conf.default.accept_ra</ecl:command>
                                <ecl:line-selection op="pm" value="^\s*\S+\s*=\s*(.+?)\s*(#.*)?$">
                                    <ecl:regex-group dt="xs:integer" group="1" op="eq" value="0"/>
                                </ecl:line-selection>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                </xccdf:complex-check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.3.2_Disable_IPv6_Redirect_Acceptance" role="unscored" selected="false" weight="0.0">
                <xccdf:title xml:lang="en">Disable IPv6 Redirect Acceptance</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>This setting prevents the system from accepting ICMP redirects. ICMP redirects tell the system about alternate routes for sending traffic.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>It is recommended that systems not accept ICMP redirects as they could be tricked into routing traffic to compromised machines. Setting hard routes within the system (usually a single default
                        route to a trusted router) protects the system from bad routes.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Set the <xhtml:span class="inline_block">net.ipv6.conf.all.accept_redirects</xhtml:span> and <xhtml:span class="inline_block">net.ipv6.conf.default.accept_redirects</xhtml:span>
                                parameters to <xhtml:span class="inline_block">0</xhtml:span> in <xhtml:span class="inline_block">/etc/sysctl.conf</xhtml:span>:</xhtml:p>
                            <xhtml:code class="code_block">net.ipv6.conf.all.accept_redirects=0<xhtml:br/>net.ipv6.conf.default.accept_redirects=0</xhtml:code>
                            <xhtml:p>Modify active kernel parameters to match:</xhtml:p>
                            <xhtml:code class="code_block"># /sbin/sysctl -w net.ipv6.conf.all.accept_redirects=0<xhtml:br/># /sbin/sysctl -w net.ipv6.conf.default.accept_redirects=0<xhtml:br/># /sbin/sysctl -w
                                net.ipv6.route.flush=1</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:complex-check operator="AND">
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <!--
                                                           
                                    1. Run sysctl using the net.ipv6.conf.all.accept_redirects parameter
                                    2. Read STDOUT looking for a line that starts with 0 or more spaces
                                    3.    and is followed by a sequence of 1 or more non-space characters 
                                    3.    and is followed by 0 or more spaces, followed by an equal sign, followed by 0 or more spaces   
                                    4.    and is followed by a value that is equals 0
                                    5.    and is followed by 0 or more spaces then EOL or a comment   
                                    6. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                            <ecl:shell-command check="all" comment="Ensure 'net.ipv6.conf.all.accept_redirects' is '0'">
                                <ecl:command>sysctl net.ipv6.conf.all.accept_redirects</ecl:command>
                                <ecl:line-selection op="pm" value="^\s*\S+\s*=\s*(.+?)\s*(#.*)?$">
                                    <ecl:regex-group dt="xs:integer" group="1" op="eq" value="0"/>
                                </ecl:line-selection>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <!--
                                                           
                                    1. Run sysctl using the net.ipv6.conf.default.accept_redirects parameter
                                    2. Read STDOUT looking for a line that starts with 0 or more spaces
                                    3.    and is followed by a sequence of 1 or more non-space characters 
                                    3.    and is followed by 0 or more spaces, followed by an equal sign, followed by 0 or more spaces   
                                    4.    and is followed by a value that is equals 0
                                    5.    and is followed by 0 or more spaces then EOL or a comment   
                                    6. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                            <ecl:shell-command check="all" comment="Ensure 'net.ipv6.conf.default.accept_redirects' is '0'">
                                <ecl:command>sysctl net.ipv6.conf.default.accept_redirects</ecl:command>
                                <ecl:line-selection op="pm" value="^\s*\S+\s*=\s*(.+?)\s*(#.*)?$">
                                    <ecl:regex-group dt="xs:integer" group="1" op="eq" value="0"/>
                                </ecl:line-selection>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                </xccdf:complex-check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.3.3_Disable_IPv6" role="unscored" selected="false" weight="0.0">
                <xccdf:title xml:lang="en">Disable IPv6</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>Although IPv6 has many advantages over IPv4, few organizations have implemented IPv6.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>If IPv6 is not to be used, it is recommended that it be disabled to reduce the attack surface of the system.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Create or edit the file <xhtml:span class="inline_block">/etc/sysctl.conf </xhtml:span>and add the following lines:</xhtml:p>
                            <xhtml:code class="code_block">net.ipv6.conf.all.disable_ipv6=1<xhtml:br/>net.ipv6.conf.default.disable_ipv6=1<xhtml:br/>net.ipv6.conf.lo.disable_ipv6=1</xhtml:code>
                            <xhtml:p>Run the following command or reboot to apply the changes:</xhtml:p>
                            <xhtml:code class="code_block"># sysctl -p</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command check="none exist" comment="Ensure no ipv6 addresses in use">
                            <ecl:command>ip addr | grep inet6</ecl:command>
                            <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
        </xccdf:Group>
        <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_7.4_Install_TCP_Wrappers">
            <xccdf:title xml:lang="en">Install TCP Wrappers</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p> </xhtml:p>
            </xccdf:description>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.4.1_Install_TCP_Wrappers" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Install TCP Wrappers</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>TCP Wrappers provides a simple access list and standardized logging method for services capable of supporting it. In the past, services that were called from <xhtml:span class="inline_block">inetd </xhtml:span>and <xhtml:span class="inline_block">xinetd </xhtml:span>supported the use of tcp wrappers. As <xhtml:span class="inline_block">inetd </xhtml:span>and <xhtml:span class="inline_block">xinetd </xhtml:span>have been falling in disuse, any service that can support tcp wrappers will have the <xhtml:span class="inline_block">libwrap.so </xhtml:span>library
                        attached to it.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>TCP Wrappers provide a good simple access list mechanism to services that may not have that support built in. It is recommended that all services that can support TCP Wrappers, use
                        it.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Install <xhtml:span class="inline_block">tcpd</xhtml:span>:</xhtml:p>
                            <xhtml:code class="code_block"># apt-get install tcpd</xhtml:code>
                            <xhtml:p>To verify if a service supports TCP Wrappers, run the following command:</xhtml:p>
                            <xhtml:code class="code_block"># ldd &lt;path-to-daemon&gt; | grep libwrap.so </xhtml:code>
                            <xhtml:p>If there is any output, then the service supports TCP Wrappers.</xhtml:p>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command comment="Ensure tcpd is installed" success="pass">
                            <ecl:command>dpkg -s tcpd | egrep "^Status:\ install"</ecl:command>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.4.2_Create_etchosts.allow" role="unscored" selected="false" weight="0.0">
                <xccdf:title xml:lang="en">Create /etc/hosts.allow</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>The <xhtml:span class="inline_block">/etc/hosts.allow </xhtml:span>file specifies which IP addresses are permitted to connect to the host. It is intended to be used in conjunction with the
                            <xhtml:span class="inline_block">/etc/hosts.deny </xhtml:span>file.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>The <xhtml:span class="inline_block">/etc/hosts.allow </xhtml:span>file supports access control by IP and helps ensure that only authorized systems can connect to the server.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Create /etc/hosts.allow:</xhtml:p>
                            <xhtml:code class="code_block"># echo "ALL: &lt;net&gt;/&lt;mask&gt;, &lt;net&gt;/&lt;mask&gt;, #x2026;" &gt;/etc/hosts.allow </xhtml:code>
                            <xhtml:p>where each <xhtml:em>&lt;net&gt;/&lt;mask&gt;</xhtml:em> combination (for example, "192.168.1.0/255.255.255.0") represents one network block in use by your organization that requires
                                access to this system.</xhtml:p>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.4.3_Verify_Permissions_on_etchosts.allow" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Verify Permissions on /etc/hosts.allow</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>The <xhtml:span class="inline_block">/etc/hosts.allow </xhtml:span>file contains networking information that is used by many applications and therefore must be readable for these applications
                        to operate.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>It is critical to ensure that the <xhtml:span class="inline_block">/etc/hosts.allow </xhtml:span>file is protected from unauthorized write access. Although it is protected by default, the
                        file permissions could be changed either inadvertently or through malicious actions.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>If the permissions of the <xhtml:span class="inline_block">/etc/hosts.allow </xhtml:span>file are incorrect, run the following command to correct them:</xhtml:p>
                            <xhtml:code class="code_block"># /bin/chmod 644 /etc/hosts.allow </xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <!--
                                                           
                                    1. AND the existing permissions on /etc/hosts.allow against the provided permissions (0022).
                                    2. If checking for existance of permissions, the output should equal the input. If checking for absense of permissions, the output should equal "000".
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                        <ecl:shell-command check="all" comment="Ensure /etc/host.allow permisions do not allow group/other write">
                            <ecl:command>ui=($(echo 0022 -n | fold -w1));sys=($(stat -L --format="%a" /etc/hosts.allow | awk '{printf "%04d\n", $0;}' | fold -w1));for (( i=0; i&lt;4; i++ )); do echo -n $(( ${ui[$i]}
                                &amp; ${sys[$i]})); done;</ecl:command>
                            <ecl:line-selection op="pm" value="^(\d+)$">
                                <ecl:regex-group dt="xs:string" group="1" op="eq" value="0000"/>
                            </ecl:line-selection>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.4.4_Create_etchosts.deny" role="unscored" selected="false" weight="0.0">
                <xccdf:title xml:lang="en">Create /etc/hosts.deny</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>The <xhtml:span class="inline_block">/etc/hosts.deny </xhtml:span>file specifies which IP addresses are <xhtml:strong>not</xhtml:strong> permitted to connect to the host. It is intended to be
                        used in conjunction with the <xhtml:span class="inline_block">/etc/hosts.allow </xhtml:span>file.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>The <xhtml:span class="inline_block">/etc/hosts.deny </xhtml:span>file serves as a failsafe so that any host not specified in <xhtml:span class="inline_block">/etc/hosts.allow </xhtml:span>is
                        denied access to the server.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Create <xhtml:span class="inline_block">/etc/hosts.deny</xhtml:span>:</xhtml:p>
                            <xhtml:code class="code_block"># echo "ALL: ALL" &gt;&gt; /etc/hosts.deny </xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.4.5_Verify_Permissions_on_etchosts.deny" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Verify Permissions on /etc/hosts.deny</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>The <xhtml:span class="inline_block">/etc/hosts.deny </xhtml:span>file contains network information that is used by many system applications and therefore must be readable for these
                        applications to operate.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>It is critical to ensure that the <xhtml:span class="inline_block">/etc/hosts.deny </xhtml:span>file is protected from unauthorized write access. Although it is protected by default, the file
                        permissions could be changed either inadvertently or through malicious actions.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>If the permissions of the <xhtml:span class="inline_block">/etc/hosts.deny </xhtml:span>file are incorrect, run the following command to correct them:</xhtml:p>
                            <xhtml:code class="code_block"># /bin/chmod 644 /etc/hosts.deny </xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <!--
                                                           
                                    1. AND the existing permissions on /etc/hosts.deny against the provided permissions (0022).
                                    2. If checking for existance of permissions, the output should equal the input. If checking for absense of permissions, the output should equal "000".
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                        <ecl:shell-command check="all" comment="Ensure /etc/hosts.deny permisions do not allow group/other write">
                            <ecl:command>ui=($(echo 0022 -n | fold -w1));sys=($(stat -L --format="%a" /etc/hosts.deny | awk '{printf "%04d\n", $0;}' | fold -w1));for (( i=0; i&lt;4; i++ )); do echo -n $(( ${ui[$i]} &amp;
                                ${sys[$i]})); done;</ecl:command>
                            <ecl:line-selection op="pm" value="^(\d+)$">
                                <ecl:regex-group dt="xs:string" group="1" op="eq" value="0000"/>
                            </ecl:line-selection>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
        </xccdf:Group>
        <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_7.5_Uncommon_Network_Protocols">
            <xccdf:title xml:lang="en">Uncommon Network Protocols</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The Linux kernel modules support several network protocols that are not commonly used. If these protocols are not needed, it is recommended that they be disabled in the kernel.</xhtml:p>
            </xccdf:description>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.5.1_Disable_DCCP" role="unscored" selected="false" weight="0.0">
                <xccdf:title xml:lang="en">Disable DCCP</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>The Datagram Congestion Control Protocol (DCCP) is a transport layer protocol that supports streaming media and telephony. DCCP provides a way to gain access to congestion control, without
                        having to do it at the application layer, but does not provide in-sequence delivery.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>If the protocol is not required, it is recommended that the drivers not be installed <xhtml:br/>to reduce the potential attack surface.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:code class="code_block"># echo "install dccp /bin/true" &gt;&gt; /etc/modprobe.d/CIS.conf</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:complex-check operator="AND">
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:shell-command check="at least one" comment="Ensure dccp is not loadable">
                                <ecl:command>modprobe -n -v dccp</ecl:command>
                                <ecl:line-selection dt="xs:string" op="pm" value="^install /bin/true"/>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:shell-command comment="Ensure dccp is not loaded" success="fail">
                                <ecl:command>lsmod | egrep "^dccp\s"</ecl:command>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                </xccdf:complex-check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.5.2_Disable_SCTP" role="unscored" selected="false" weight="0.0">
                <xccdf:title xml:lang="en">Disable SCTP</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>The Stream Control Transmission Protocol (SCTP) is a transport layer protocol used to support message oriented communication, with several streams of messages in one connection. It serves a
                        similar function as TCP and UDP, incorporating features of both. It is message-oriented like UDP, and ensures reliable in-sequence transport of messages with congestion control like TCP.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>If the protocol is not being used, it is recommended that kernel module not be loaded, disabling the service to reduce the potential attack surface.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:code class="code_block"># echo "install sctp /bin/true" &gt;&gt; /etc/modprobe.d/CIS.conf</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:complex-check operator="AND">
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:shell-command check="at least one" comment="Ensure sctp is not loadable">
                                <ecl:command>modprobe -n -v sctp</ecl:command>
                                <ecl:line-selection dt="xs:string" op="pm" value="^install /bin/true"/>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:shell-command comment="Ensure sctp is not loaded" success="fail">
                                <ecl:command>lsmod | egrep "^sctp\s"</ecl:command>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                </xccdf:complex-check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.5.3_Disable_RDS" role="unscored" selected="false" weight="0.0">
                <xccdf:title xml:lang="en">Disable RDS</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>The Reliable Datagram Sockets (RDS) protocol is a transport layer protocol designed to provide low-latency, high-bandwidth communications between cluster nodes. It was developed by the Oracle
                        Corporation.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>If the protocol is not being used, it is recommended that kernel module not be loaded, disabling the service to reduce the potential attack surface.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:code class="code_block"># echo "install rds /bin/true" &gt;&gt; /etc/modprobe.d/CIS.conf</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:complex-check operator="AND">
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:shell-command check="at least one" comment="Ensure rds is not loadable">
                                <ecl:command>modprobe -n -v rds</ecl:command>
                                <ecl:line-selection dt="xs:string" op="pm" value="^install /bin/true"/>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:shell-command comment="Ensure rds is not loaded" success="fail">
                                <ecl:command>lsmod | egrep "^rds\s"</ecl:command>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                </xccdf:complex-check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.5.4_Disable_TIPC" role="unscored" selected="false" weight="0.0">
                <xccdf:title xml:lang="en">Disable TIPC</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>The Transparent Inter-Process Communication (TIPC) protocol is designed to provide communication between cluster nodes.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>If the protocol is not being used, it is recommended that kernel module not be loaded, disabling the service to reduce the potential attack surface.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:code class="code_block"># echo "install tipc /bin/true" &gt;&gt; /etc/modprobe.d/CIS.conf</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:complex-check operator="AND">
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:shell-command check="at least one" comment="Ensure tipc is not loadable">
                                <ecl:command>modprobe -n -v tipc</ecl:command>
                                <ecl:line-selection dt="xs:string" op="pm" value="^install /bin/true"/>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:shell-command comment="Ensure tipc is not loaded" success="fail">
                                <ecl:command>lsmod | egrep "^tipc\s"</ecl:command>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                </xccdf:complex-check>
            </xccdf:Rule>
        </xccdf:Group>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.6_Deactivate_Wireless_Interfaces" role="unscored" selected="false" weight="0.0">
            <xccdf:title xml:lang="en">Deactivate Wireless Interfaces</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>Wireless networking is used when wired networks are unavailable. Ubuntu provides the nmcli interface which allows system administrators to configure and use wireless networks.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>If wireless is not to be used, wireless devices can be disabled to reduce the potential attack surface.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Use the following command to disable wireless:</xhtml:p>
                        <xhtml:code class="code_block"># nmcli nm wifi off</xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.7_Ensure_Firewall_is_active" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure Firewall is active</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>IPtables is an application that allows a system administrator to configure the IPv4 tables, chains and rules provided by the Linux kernel firewall. <xhtml:span class="inline_block">ufw
                    </xhtml:span>was developed to ease IPtables firewall configuration.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:div class="overview">
                    <xhtml:p>IPtables provides extra protection for the Linux system by limiting communications in and out of the box to specific IPv4 addresses and ports. Ubuntu provides UFW to ease firewall
                        configuration.</xhtml:p>
                </xhtml:div>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Activate <xhtml:span class="inline_block">ufw</xhtml:span>:</xhtml:p>
                        <xhtml:code class="code_block"># ufw enable</xhtml:code>
                        <xhtml:p>Ensure that any needed ports, such as ssh access, are configured properly first.</xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="at least one" comment="Ensure ufw is active">
                        <ecl:command>ufw status</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="^Status: active$"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
    </xccdf:Group>
    <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_8_Logging_and_Auditing">
        <xccdf:title xml:lang="en">Logging and Auditing</xccdf:title>
        <xccdf:description xml:lang="en">
            <xhtml:p>The items in this section describe how to configure logging, log monitoring, and auditing, using tools included in most distributions.</xhtml:p>
            <xhtml:p>It is recommended that <xhtml:span class="inline_block">rsyslog </xhtml:span>be used for logging (with <xhtml:span class="inline_block">logwatch </xhtml:span>providing summarization) and <xhtml:span class="inline_block">auditd</xhtml:span> be used for auditing (with <xhtml:span class="inline_block">aureport </xhtml:span>providing summarization) to automatically monitor logs for intrusion attempts
                and other suspicious system behavior.</xhtml:p>
            <xhtml:p>In addition to the local log files created by the steps in this section, it is also recommended that sites collect copies of their system logs on a secure, centralized log server via an encrypted
                connection. Not only does centralized logging help sites correlate events that may be occurring on multiple systems, but having a second copy of the system log information may be critical after a system
                compromise where the attacker has modified the local log files on the affected system(s). If a log correlation system is deployed, configure it to process the logs described in this section.</xhtml:p>
            <xhtml:p>Because it is often necessary to correlate log information from many different systems (particularly after a security incident) it is recommended that the time be synchronized among systems and
                devices connected to the local network. The standard Internet protocol for time synchronization is the Network Time Protocol (NTP), which is supported by most network-ready devices. See the <xhtml:span class="inline_block">ntpd(8)</xhtml:span> manual page for more information on configuring NTP.</xhtml:p>
            <xhtml:p>It is important that all logs described in this section be monitored on a regular basis and correlated to determine trends. A seemingly innocuous entry in one log could be more significant when
                compared to an entry in another log.</xhtml:p>
            <xhtml:p>
                <xhtml:strong>Note on log file permissions:</xhtml:strong> There really isn't a "one size fits all" solution to the permissions on log files. Many sites utilize group permissions so that administrators
                who are in a defined security group, such as "wheel" do not have to elevate privileges to root in order to read log files. Also, if a third party log aggregation tool is used, it may need to have group
                permissions to read the log files, which is preferable to having it run setuid to root. Therefore, there are two remediation and audit steps for log file permissions. One is for systems that do not have a
                secured group method implemented that only permits root to read the log files (<xhtml:span class="inline_block">root:root 600</xhtml:span>). The other is for sites that do have such a setup and are
                designated as <xhtml:span class="inline_block">root:securegrp 640 </xhtml:span>where <xhtml:span class="inline_block">securegrp </xhtml:span>is the defined security group (in some cases <xhtml:span class="inline_block">wheel</xhtml:span>).</xhtml:p>
        </xccdf:description>
        <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_8.1_Configure_System_Accounting_auditd">
            <xccdf:title xml:lang="en">Configure System Accounting (auditd)</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>System auditing, through <xhtml:span class="inline_block">auditd</xhtml:span>, allows system administrators to monitor their systems such that they can detect unauthorized access or modification
                    of data. By default, auditd will audit SELinux AVC denials, system logins, account modifications, and authentication events. Events will be logged to <xhtml:span class="inline_block">/var/log/audit/audit.log</xhtml:span>. The recording of these events will use a modest amount of disk space on a system. If significantly more events are captured, additional on system or off
                    system storage may need to be allocated.<xhtml:br/>
                    <xhtml:strong>Note:</xhtml:strong> For 64 bit systems that have arch as a rule parameter, you will need two rules: one for 64 bit and one for 32 bit systems. For 32 bit systems, only one rule is
                    needed.</xhtml:p>
            </xccdf:description>
            <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_8.1.1_Configure_Data_Retention">
                <xccdf:title xml:lang="en">Configure Data Retention</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>When auditing, it is important to carefully configure the storage requirements for audit logs. By default, auditd will max out the log files at 5MB and retain only 4 copies of them. Older
                        versions will be deleted. It is possible on a system that the 20 MBs of audit logs may fill up the system causing loss of audit data. While the recommendations here provide guidance, check your
                        site policy for audit storage requirements.</xhtml:p>
                    <xhtml:p>
                        <xhtml:strong>Note:</xhtml:strong> Items in this section configure auditd, ensure it is installed per 8.1.2 Install and Enable auditd Service.</xhtml:p>
                </xccdf:description>
                <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.1.1.1_Configure_Audit_Log_Storage_Size" role="unscored" selected="false" weight="0.0">
                    <xccdf:title xml:lang="en">Configure Audit Log Storage Size</xccdf:title>
                    <xccdf:description xml:lang="en">
                        <xhtml:p>Configure the maximum size of the audit log file. Once the log reaches the maximum size, it will be rotated and a new log file will be started.</xhtml:p>
                    </xccdf:description>
                    <xccdf:rationale xml:lang="en">
                        <xhtml:p>It is important that an appropriate size is determined for log files so that they do not impact the system and audit data is not lost.</xhtml:p>
                    </xccdf:rationale>
                    <xccdf:fixtext xml:lang="en">
                        <xhtml:div>
                            <xhtml:p>
                                <xhtml:p>Set the <xhtml:span class="inline_block">max_log_file </xhtml:span>parameter in <xhtml:span class="inline_block">/etc/audit/auditd.conf</xhtml:span>
                                </xhtml:p>
                                <xhtml:code class="code_block">max_log_file = <xhtml:em>&lt;MB&gt;</xhtml:em>
                                </xhtml:code>
                                <xhtml:p>
                                    <xhtml:strong>Note:</xhtml:strong>
                                    <xhtml:span class="inline_block">MB </xhtml:span>is the number of MegaBytes the file can be.</xhtml:p>
                                <xhtml:p> </xhtml:p>
                            </xhtml:p>
                        </xhtml:div>
                    </xccdf:fixtext>
                </xccdf:Rule>
                <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.1.1.2_Disable_System_on_Audit_Log_Full" role="unscored" selected="false" weight="0.0">
                    <xccdf:title xml:lang="en">Disable System on Audit Log Full</xccdf:title>
                    <xccdf:description xml:lang="en">
                        <xhtml:p>The <xhtml:span class="inline_block">auditd </xhtml:span>daemon can be configured to halt the system when the audit logs are full.</xhtml:p>
                    </xccdf:description>
                    <xccdf:rationale xml:lang="en">
                        <xhtml:p>In high security contexts, the risk of detecting unauthorized access or nonrepudiation exceeds the benefit of the system's availability.</xhtml:p>
                    </xccdf:rationale>
                    <xccdf:fixtext xml:lang="en">
                        <xhtml:div>
                            <xhtml:p>
                                <xhtml:p>Add the following lines to the <xhtml:span class="inline_block">/etc/audit/auditd.conf </xhtml:span>file.</xhtml:p>
                                <xhtml:code class="code_block">space_left_action = email<xhtml:br/>action_mail_acct = root<xhtml:br/>admin_space_left_action = halt </xhtml:code>
                                <xhtml:p> </xhtml:p>
                            </xhtml:p>
                        </xhtml:div>
                    </xccdf:fixtext>
                    <xccdf:complex-check operator="AND">
                        <xccdf:check system="http://cisecurity.org/check">
                            <xccdf:check-content>
                                <!--
                                                           
                                    1. Run awk against /etc/audit/auditd.conf and print the line that starts with 0 or more spaces followed by space_left_action.
                                    2. Read STDOUT looking for a line that starts with 0 or more spaces
                                    3.    and is followed by a sequence of 1 or more non-space characters 
                                    3.    and is followed by 0 or more spaces, followed by an equal sign, followed by 0 or more spaces   
                                    4.    and is followed by a value that is equals email
                                    5.    and is followed by 0 or more spaces then EOL or a comment   
                                    6. If no such lines are found, fail.
                        
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                                <ecl:shell-command check="all" comment="Ensure 'space_left_action' is set to 'email'">
                                    <ecl:command>awk '/^ *space_left_action/ { print $0 }' /etc/audit/auditd.conf</ecl:command>
                                    <ecl:line-selection op="pm" value="^\s*\S+\s*=\s*(.+?)\s*(#.*)?$">
                                        <ecl:regex-group dt="xs:string" group="1" op="eq" value="email"/>
                                    </ecl:line-selection>
                                </ecl:shell-command>
                            </xccdf:check-content>
                        </xccdf:check>
                        <xccdf:check system="http://cisecurity.org/check">
                            <xccdf:check-content>
                                <!--
                                                           
                                    1. Run awk against /etc/audit/auditd.conf and print the line that starts with 0 or more spaces followed by action_mail_acct.
                                    2. Read STDOUT looking for a line that starts with 0 or more spaces
                                    3.    and is followed by a sequence of 1 or more non-space characters 
                                    3.    and is followed by 0 or more spaces, followed by an equal sign, followed by 0 or more spaces   
                                    4.    and is followed by a value that is equals root
                                    5.    and is followed by 0 or more spaces then EOL or a comment   
                                    6. If no such lines are found, fail.
                        
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                                <ecl:shell-command check="all" comment="Ensure 'action_mail_acct' is set to 'root'">
                                    <ecl:command>awk '/^ *action_mail_acct/ { print $0 }' /etc/audit/auditd.conf</ecl:command>
                                    <ecl:line-selection op="pm" value="^\s*\S+\s*=\s*(.+?)\s*(#.*)?$">
                                        <ecl:regex-group dt="xs:string" group="1" op="eq" value="root"/>
                                    </ecl:line-selection>
                                </ecl:shell-command>
                            </xccdf:check-content>
                        </xccdf:check>
                        <xccdf:check system="http://cisecurity.org/check">
                            <xccdf:check-content>
                                <!--
                                                           
                                    1. Run awk against /etc/audit/auditd.conf and print the line that starts with 0 or more spaces followed by admin_space_left_action.
                                    2. Read STDOUT looking for a line that starts with 0 or more spaces
                                    3.    and is followed by a sequence of 1 or more non-space characters 
                                    3.    and is followed by 0 or more spaces, followed by an equal sign, followed by 0 or more spaces   
                                    4.    and is followed by a value that is equals halt
                                    5.    and is followed by 0 or more spaces then EOL or a comment   
                                    6. If no such lines are found, fail.
                        
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                                <ecl:shell-command check="all" comment="Ensure 'admin_space_left_action' is set to 'halt'">
                                    <ecl:command>awk '/^ *admin_space_left_action/ { print $0 }' /etc/audit/auditd.conf</ecl:command>
                                    <ecl:line-selection op="pm" value="^\s*\S+\s*=\s*(.+?)\s*(#.*)?$">
                                        <ecl:regex-group dt="xs:string" group="1" op="eq" value="halt"/>
                                    </ecl:line-selection>
                                </ecl:shell-command>
                            </xccdf:check-content>
                        </xccdf:check>
                    </xccdf:complex-check>
                </xccdf:Rule>
                <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.1.1.3_Keep_All_Auditing_Information" role="full" selected="false" weight="1.0">
                    <xccdf:title xml:lang="en">Keep All Auditing Information</xccdf:title>
                    <xccdf:description xml:lang="en">
                        <xhtml:p>Normally, <xhtml:span class="inline_block">auditd </xhtml:span>will hold 4 logs of maximum log file size before deleting older log files.</xhtml:p>
                    </xccdf:description>
                    <xccdf:rationale xml:lang="en">
                        <xhtml:p>In high security contexts, the benefits of maintaining a long audit history exceed the cost of storing the audit history.</xhtml:p>
                    </xccdf:rationale>
                    <xccdf:fixtext xml:lang="en">
                        <xhtml:div>
                            <xhtml:p>
                                <xhtml:p>Add the following line to the <xhtml:span class="inline_block">/etc/audit/auditd.conf </xhtml:span>file.</xhtml:p>
                                <xhtml:code class="code_block">max_log_file_action = keep_logs </xhtml:code>
                                <xhtml:p> </xhtml:p>
                            </xhtml:p>
                        </xhtml:div>
                    </xccdf:fixtext>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:file-content check="at least one" comment="audit.max-log-file-action">
                                <ecl:path>/etc/audit/auditd.conf</ecl:path>
                                <ecl:line-selection op="pm" value="^max_log_file_action\s*=\s*keep_logs$"/>
                            </ecl:file-content>
                        </xccdf:check-content>
                    </xccdf:check>
                </xccdf:Rule>
            </xccdf:Group>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.1.2_Install_and_Enable_auditd_Service" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Install and Enable auditd Service</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>Install and turn on the <xhtml:span class="inline_block">auditd </xhtml:span>daemon to record system events.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>The capturing of system events provides system administrators with information to allow them to determine if unauthorized access to their system is occurring.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Install auditd:</xhtml:p>
                            <xhtml:code class="code_block"># apt-get install auditd</xhtml:code>
                            <xhtml:p class="n_romve">If needed create proper start links for <xhtml:span class="inline_block">auditd </xhtml:span>in <xhtml:span class="inline_block">/etc/rc*.d</xhtml:span> by running the
                                following command from each of the relevant directories:</xhtml:p>
                            <xhtml:code class="code_block"># ln -s ../init.d/auditd S37auditd</xhtml:code>
                            <xhtml:p>Start links should be created for run levels 2, 3, 4, and 5.</xhtml:p>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:complex-check operator="AND">
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:shell-command comment="Ensure auditd is installed" success="pass">
                                <ecl:command>dpkg -s auditd | egrep "^Status:\ install"</ecl:command>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:shell-command comment="Ensure auditd is enabled" success="pass">
                                <ecl:command>ls /etc/rc*.d/S*auditd</ecl:command>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                </xccdf:complex-check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.1.3_Enable_Auditing_for_Processes_That_Start_Prior_to_auditd" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Enable Auditing for Processes That Start Prior to auditd</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>Configure <xhtml:span class="inline_block">grub</xhtml:span> or <xhtml:span class="inline_block">lilo </xhtml:span>so that processes that are capable of being audited can be audited even if
                        they start up prior to <xhtml:span class="inline_block">auditd </xhtml:span>startup.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Audit events need to be captured on processes that start up prior to <xhtml:span class="inline_block">auditd</xhtml:span>, so that potential malicious activity cannot go undetected.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Edit <xhtml:span class="inline_block">/etc/default/grub</xhtml:span> to include <xhtml:span class="inline_block">audit=1</xhtml:span> as part of <xhtml:span class="inline_block">GRUB_CMDLINE_LINUX</xhtml:span>:</xhtml:p>
                            <xhtml:code class="code_block">GRUB_CMDLINE_LINUX="audit=1"</xhtml:code>
                            <xhtml:p>And run the following command to update the grub configuration:</xhtml:p>
                            <xhtml:code class="code_block"># update-grub</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command check="none exist" comment="grubconf.kernel.audit">
                            <ecl:command>grep "^\s*linux\s" /boot/grub/grub.cfg | grep -v "audit=1"</ecl:command>
                            <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.1.4_Record_Events_That_Modify_Date_and_Time_Information" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Record Events That Modify Date and Time Information</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>Capture events where the system date and/or time has been modified. The parameters in this section are set to determine if the <xhtml:span class="inline_block">adjtimex </xhtml:span>(tune
                        kernel clock), <xhtml:span class="inline_block">settimeofday </xhtml:span>(Set time, using timeval and timezone structures) <xhtml:span class="inline_block">stime </xhtml:span>(using seconds since
                        1/1/1970) or <xhtml:span class="inline_block">clock_settime </xhtml:span>(allows for the setting of several internal clocks and timers) system calls have been executed and always write an audit
                        record to the <xhtml:span class="inline_block">/var/log/audit.log</xhtml:span> file upon exit, tagging the records with the identifier "time-change"</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Unexpected changes in system date and/or time could be a sign of malicious activity on the system.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>For 64 bit systems, add the following lines to the <xhtml:span class="inline_block">/etc/audit/audit.rules </xhtml:span>file.</xhtml:p>
                            <xhtml:code class="code_block">-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change<xhtml:br/>-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k
                                time-change<xhtml:br/>-a always,exit -F arch=b64 -S clock_settime -k time-change<xhtml:br/>-a always,exit -F arch=b32 -S clock_settime -k time-change<xhtml:br/>-w /etc/localtime -p wa -k
                                time-change<xhtml:br/># Execute the following command to restart auditd<xhtml:br/># pkill -P 1-HUP auditd</xhtml:code>
                            <xhtml:p>For 32 bit systems, add the following lines to the <xhtml:span class="inline_block">/etc/audit/audit.rules </xhtml:span>file.</xhtml:p>
                            <xhtml:code class="code_block">-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change<xhtml:br/>-a always,exit -F arch=b32 -S clock_settime -k time-change<xhtml:br/>-w
                                /etc/localtime -p wa -k time-change<xhtml:br/># Execute the following command to restart auditd<xhtml:br/># pkill -P 1-HUP auditd </xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:complex-check operator="AND">
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:file-content check="at least one" comment="Ensure adjtimex is audited">
                                <ecl:path>/etc/audit/audit.rules</ecl:path>
                                <ecl:line-selection op="pm" value="^ *-a +(always,exit|exit,always) +-F +arch=b32 +-S +adjtimex +-S +settimeofday +-S +stime +-k +time-change$"/>
                            </ecl:file-content>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:file-content check="at least one" comment="Ensure clock_settime is audited">
                                <ecl:path>/etc/audit/audit.rules</ecl:path>
                                <ecl:line-selection op="pm" value="^ *-a +(always,exit|exit,always) +-F +arch=b32 +-S +clock_settime +-k +time-change$"/>
                            </ecl:file-content>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:file-content check="at least one" comment="Ensure time-change is audited">
                                <ecl:path>/etc/audit/audit.rules</ecl:path>
                                <ecl:line-selection op="pm" value="^ *-w +/etc/localtime +-p +wa +-k +time-change$"/>
                            </ecl:file-content>
                        </xccdf:check-content>
                    </xccdf:check>
                </xccdf:complex-check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.1.5_Record_Events_That_Modify_UserGroup_Information" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Record Events That Modify User/Group Information</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>Record events affecting the <xhtml:span class="inline_block">group</xhtml:span>, <xhtml:span class="inline_block">passwd </xhtml:span>(user IDs), <xhtml:span class="inline_block">shadow
                        </xhtml:span>and <xhtml:span class="inline_block">gshadow </xhtml:span>(passwords) or <xhtml:span class="inline_block">/etc/security/opasswd </xhtml:span>(old passwords, based on remember
                        parameter in the PAM configuration) files. The parameters in this section will watch the files to see if they have been opened for write or have had attribute changes (e.g. permissions) and tag
                        them with the identifier "identity" in the audit log file.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Unexpected changes to these files could be an indication that the system has been compromised and that an unauthorized user is attempting to hide their activities or compromise additional
                        accounts.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Add the following lines to the <xhtml:span class="inline_block">/etc/audit/audit.rules </xhtml:span>file.</xhtml:p>
                            <xhtml:code class="code_block">-w /etc/group -p wa -k identity<xhtml:br/>-w /etc/passwd -p wa -k identity<xhtml:br/>-w /etc/gshadow -p wa -k identity<xhtml:br/>-w /etc/shadow -p wa -k
                                identity<xhtml:br/>-w /etc/security/opasswd -p wa -k identity<xhtml:br/># Execute the following command to restart auditd<xhtml:br/># pkill -P 1-HUP auditd</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:complex-check operator="AND">
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:file-content check="at least one" comment="audit.etcgroup">
                                <ecl:path>/etc/audit/audit.rules</ecl:path>
                                <ecl:line-selection op="pm" value="^\s*-w /etc/group -p wa -k identity"/>
                            </ecl:file-content>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:file-content check="at least one" comment="audit.etcpasswd">
                                <ecl:path>/etc/audit/audit.rules</ecl:path>
                                <ecl:line-selection op="pm" value="^\s*-w /etc/passwd -p wa -k identity"/>
                            </ecl:file-content>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:file-content check="at least one" comment="audit.etcgshadow">
                                <ecl:path>/etc/audit/audit.rules</ecl:path>
                                <ecl:line-selection op="pm" value="^\s*-w /etc/gshadow -p wa -k identity"/>
                            </ecl:file-content>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:file-content check="at least one" comment="audit.etcshadow">
                                <ecl:path>/etc/audit/audit.rules</ecl:path>
                                <ecl:line-selection op="pm" value="^\s*-w /etc/shadow -p wa -k identity"/>
                            </ecl:file-content>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:file-content check="at least one" comment="audit.etcsecurityopasswd">
                                <ecl:path>/etc/audit/audit.rules</ecl:path>
                                <ecl:line-selection op="pm" value="^\s*-w /etc/security/opasswd -p wa -k identity"/>
                            </ecl:file-content>
                        </xccdf:check-content>
                    </xccdf:check>
                </xccdf:complex-check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.1.6_Record_Events_That_Modify_the_Systems_Network_Environment" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Record Events That Modify the System's Network Environment</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>Record changes to network environment files or system calls. The below parameters monitor the sethostname (set the systems host name) or setdomainname (set the systems domainname) system
                        calls, and write an audit event on system call exit. The other parameters monitor the <xhtml:span class="inline_block">/etc/issue </xhtml:span>and <xhtml:span class="inline_block">/etc/issue.net
                        </xhtml:span>files (messages displayed pre-login), <xhtml:span class="inline_block">/etc/hosts </xhtml:span>(file containing host names and associated IP addresses) and <xhtml:span class="inline_block">/etc/network </xhtml:span>(directory containing network interface scripts and configurations) files.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Monitoring <xhtml:span class="inline_block">sethostname </xhtml:span>and <xhtml:span class="inline_block">setdomainname </xhtml:span>will identify potential unauthorized changes to host and
                        domainname of a system. The changing of these names could potentially break security parameters that are set based on those names. The <xhtml:span class="inline_block">/etc/hosts </xhtml:span>file
                        is monitored for changes in the file that can indicate an unauthorized intruder is trying to change machine associations with IP addresses and trick users and processes into connecting to
                        unintended machines. Monitoring <xhtml:span class="inline_block">/etc/issue </xhtml:span>and <xhtml:span class="inline_block">/etc/issue.net </xhtml:span>is important, as intruders could put
                        disinformation into those files and trick users into providing information to the intruder. Monitoring <xhtml:span class="inline_block">/etc/network </xhtml:span>is important as it can show if
                        network interfaces or scripts are being modified in a way that can lead to the machine becoming unavailable or compromised. All audit records will be tagged with the identifier
                        "system-locale."</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>For 64 bit systems, add the following lines to the <xhtml:span class="inline_block">/etc/audit/audit.rules </xhtml:span>file.</xhtml:p>
                            <xhtml:code class="code_block">-a exit,always -F arch=b64 -S sethostname -S setdomainname -k system-locale<xhtml:br/>-a exit,always -F arch=b32 -S sethostname -S setdomainname -k
                                system-locale<xhtml:br/>-w /etc/issue -p wa -k system-locale<xhtml:br/>-w /etc/issue.net -p wa -k system-locale<xhtml:br/>-w /etc/hosts -p wa -k system-locale<xhtml:br/>-w /etc/network -p
                                wa -k system-locale<xhtml:br/># Execute the following command to restart auditd<xhtml:br/># pkill -P 1-HUP auditd </xhtml:code>
                            <xhtml:p>For 32 bit systems, add the following lines to the <xhtml:span class="inline_block">/etc/audit/audit.rules </xhtml:span>file.</xhtml:p>
                            <xhtml:code class="code_block">-a exit,always -F arch=b32 -S sethostname -S setdomainname -k system-locale<xhtml:br/>-w /etc/issue -p wa -k system-locale<xhtml:br/>-w /etc/issue.net -p wa -k
                                system-locale<xhtml:br/>-w /etc/hosts -p wa -k system-locale<xhtml:br/>-w /etc/network -p wa -k system-locale<xhtml:br/># Execute the following command to restart auditd<xhtml:br/># pkill
                                -P 1-HUP auditd</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:complex-check operator="AND">
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:file-content check="at least one" comment="Ensure sethostname is audited">
                                <ecl:path>/etc/audit/audit.rules</ecl:path>
                                <ecl:line-selection op="pm" value="^ *-a +(always,exit|exit,always) +-F +arch=b32 +-S +sethostname +-S +setdomainname +-k +system-locale$"/>
                            </ecl:file-content>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:file-content check="at least one" comment="Ensure /etc/issue is audited">
                                <ecl:path>/etc/audit/audit.rules</ecl:path>
                                <ecl:line-selection op="pm" value="^ *-w +/etc/issue +-p +wa +-k +system-locale$"/>
                            </ecl:file-content>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:file-content check="at least one" comment="Ensure /etc/issue.net is audited">
                                <ecl:path>/etc/audit/audit.rules</ecl:path>
                                <ecl:line-selection op="pm" value="^ *-w +/etc/issue.net +-p +wa +-k +system-locale$"/>
                            </ecl:file-content>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:file-content check="at least one" comment="Ensure /etc/hosts is audited">
                                <ecl:path>/etc/audit/audit.rules</ecl:path>
                                <ecl:line-selection op="pm" value="^ *-w +/etc/hosts +-p +wa +-k +system-locale$"/>
                            </ecl:file-content>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:file-content check="at least one" comment="Ensure /etc/network is audited">
                                <ecl:path>/etc/audit/audit.rules</ecl:path>
                                <ecl:line-selection op="pm" value="^ *-w +/etc/network +-p +wa +-k +system-locale$"/>
                            </ecl:file-content>
                        </xccdf:check-content>
                    </xccdf:check>
                </xccdf:complex-check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.1.7_Record_Events_That_Modify_the_Systems_Mandatory_Access_Controls" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Record Events That Modify the System's Mandatory Access Controls</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>Monitor SELinux mandatory access controls. The parameters below monitor any write access (potential additional, deletion or modification of files in the directory) or attribute changes to the
                        /etc/selinux directory.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Changes to files in this directory could indicate that an unauthorized user is attempting to modify access controls and change security contexts, leading to a compromise of the
                        system.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Add the following lines to the /etc/audit/audit.rules file.</xhtml:p>
                            <xhtml:code class="code_block">Add the following lines to /etc/audit/audit.rules<xhtml:br/>-w /etc/selinux/ -p wa -k MAC-policy<xhtml:br/># Execute the following command to restart
                                auditd<xhtml:br/># pkill -P 1-HUP auditd</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:file-content check="at least one" comment="audit.etcselinux">
                            <ecl:path>/etc/audit/audit.rules</ecl:path>
                            <ecl:line-selection op="pm" value="^\s*-w /etc/selinux/ -p wa -k MAC-policy"/>
                        </ecl:file-content>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.1.8_Collect_Login_and_Logout_Events" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Collect Login and Logout Events</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>Monitor login and logout events. The parameters below track changes to files associated with login/logout events. The file <xhtml:span class="inline_block">/var/log/faillog
                        </xhtml:span>tracks failed events from login. The file <xhtml:span class="inline_block">/var/log/lastlog </xhtml:span>maintain records of the last time a user successfully logged in. The file
                            <xhtml:span class="inline_block">/var/log/tallylog</xhtml:span> maintains records of failures via the <xhtml:span class="inline_block">pam_tally2 </xhtml:span>module</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Monitoring login/logout events could provide a system administrator with information associated with brute force attacks against user logins.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Add the following lines to the <xhtml:span class="inline_block">/etc/audit/audit.rules </xhtml:span>file.</xhtml:p>
                            <xhtml:code class="code_block">-w /var/log/faillog -p wa -k logins<xhtml:br/>-w /var/log/lastlog -p wa -k logins<xhtml:br/>-w /var/log/tallylog -p wa -k logins<xhtml:br/># Execute the
                                following command to restart auditd<xhtml:br/># pkill -HUP -P 1 auditd</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:complex-check operator="AND">
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:file-content check="at least one" comment="audit.varlogfaillog">
                                <ecl:path>/etc/audit/audit.rules</ecl:path>
                                <ecl:line-selection op="pm" value="^\s*-w /var/log/faillog -p wa -k logins"/>
                            </ecl:file-content>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:file-content check="at least one" comment="audit.varloglastlog">
                                <ecl:path>/etc/audit/audit.rules</ecl:path>
                                <ecl:line-selection op="pm" value="^\s*-w /var/log/lastlog -p wa -k logins"/>
                            </ecl:file-content>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:file-content check="at least one" comment="audit.varlogtallylog">
                                <ecl:path>/etc/audit/audit.rules</ecl:path>
                                <ecl:line-selection op="pm" value="^\s*-w /var/log/tallylog -p wa -k logins"/>
                            </ecl:file-content>
                        </xccdf:check-content>
                    </xccdf:check>
                </xccdf:complex-check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.1.9_Collect_Session_Initiation_Information" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Collect Session Initiation Information</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>Monitor session initiation events. The parameters in this section track changes to the files associated with session events. The file <xhtml:span class="inline_block">/var/run/utmp
                        </xhtml:span>file tracks all currently logged in users. The <xhtml:span class="inline_block">/var/log/wtmp </xhtml:span>file tracks logins, logouts, shutdown and reboot events. All audit records
                        will be tagged with the identifier "session." The file <xhtml:span class="inline_block">/var/log/btmp </xhtml:span>keeps track of failed login attempts and can be read by entering the command
                            <xhtml:span class="inline_block">/usr/bin/last -f /var/log/btmp</xhtml:span>. All audit records will be tagged with the identifier "logins."</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Monitoring these files for changes could alert a system administrator to logins occurring at unusual hours, which could indicate intruder activity (i.e. a user logging in at a time when they
                        do not normally log in).</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Add the following lines to the <xhtml:span class="inline_block">/etc/audit/audit.rules </xhtml:span>file.</xhtml:p>
                            <xhtml:code class="code_block">-w /var/run/utmp -p wa -k session<xhtml:br/>-w /var/log/wtmp -p wa -k session<xhtml:br/>-w /var/log/btmp -p wa -k session <xhtml:br/># Execute the following
                                command to restart auditd<xhtml:br/># pkill -HUP -P 1 auditd </xhtml:code>
                            <xhtml:p>
                                <xhtml:strong>Note:</xhtml:strong> Use the last command to read /var/log/wtmp (last with no parameters) and /var/run/utmp (last -f /var/run/utmp)</xhtml:p>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:complex-check operator="AND">
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:file-content check="at least one" comment="audit.varrunutmp">
                                <ecl:path>/etc/audit/audit.rules</ecl:path>
                                <ecl:line-selection op="pm" value="^\s*-w /var/run/utmp -p wa -k session"/>
                            </ecl:file-content>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:file-content check="at least one" comment="audit.varlogwtmp">
                                <ecl:path>/etc/audit/audit.rules</ecl:path>
                                <ecl:line-selection op="pm" value="^\s*-w /var/log/wtmp -p wa -k session"/>
                            </ecl:file-content>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:file-content check="at least one" comment="audit.varlogbtmp">
                                <ecl:path>/etc/audit/audit.rules</ecl:path>
                                <ecl:line-selection op="pm" value="^\s*-w /var/log/btmp -p wa -k session"/>
                            </ecl:file-content>
                        </xccdf:check-content>
                    </xccdf:check>
                </xccdf:complex-check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.1.10_Collect_Discretionary_Access_Control_Permission_Modification_Events" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Collect Discretionary Access Control Permission Modification Events</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>Monitor changes to file permissions, attributes, ownership and group. The parameters in this section track changes for system calls that affect file permissions and attributes. The
                            <xhtml:span class="inline_block">chmod</xhtml:span>, <xhtml:span class="inline_block">fchmod </xhtml:span>and <xhtml:span class="inline_block">fchmodat</xhtml:span> system calls affect the
                        permissions associated with a file. The <xhtml:span class="inline_block">chown</xhtml:span>, <xhtml:span class="inline_block">fchown</xhtml:span>, <xhtml:span class="inline_block">fchownat
                        </xhtml:span>and <xhtml:span class="inline_block">lchown</xhtml:span> system calls affect owner and group attributes on a file. The <xhtml:span class="inline_block">setxattr</xhtml:span>,
                            <xhtml:span class="inline_block">lsetxattr</xhtml:span>, <xhtml:span class="inline_block">fsetxattr </xhtml:span>(set extended file attributes) and <xhtml:span class="inline_block">removexattr</xhtml:span>, <xhtml:span class="inline_block">lremovexattr</xhtml:span>, <xhtml:span class="inline_block">fremovexattr </xhtml:span>(remove extended file attributes) control
                        extended file attributes. In all cases, an audit record will only be written for non-system userids (auid &gt;= 500) and will ignore Daemon events (auid = 4294967295). All audit records will be
                        tagged with the identifier "perm_mod."</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Monitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.</xhtml:p>
                            <xhtml:code class="code_block">-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid&gt;=500 \<xhtml:br/>-F auid!=4294967295 -k perm_mod<xhtml:br/>-a always,exit -F arch=b32 -S
                                chmod -S fchmod -S fchmodat -F auid&gt;=500 \<xhtml:br/>-F auid!=4294967295 -k perm_mod<xhtml:br/>-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid&gt;=500
                                \<xhtml:br/>-F auid!=4294967295 -k perm_mod<xhtml:br/>-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid&gt;=500 \<xhtml:br/>-F auid!=4294967295 -k
                                perm_mod<xhtml:br/>-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S \<xhtml:br/>lremovexattr -S fremovexattr -F auid&gt;=500 -F auid!=4294967295 -k
                                perm_mod<xhtml:br/>-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S \<xhtml:br/>lremovexattr -S fremovexattr -F auid&gt;=500 -F auid!=4294967295 -k
                                perm_mod<xhtml:br/># Execute the following command to restart auditd<xhtml:br/># pkill -HUP -P 1 auditd</xhtml:code>
                            <xhtml:p>For 32 bit systems, add the following lines to the /etc/audit/audit.rules file.</xhtml:p>
                            <xhtml:code class="code_block">-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid&gt;=500 \<xhtml:br/>-F auid!=4294967295 -k perm_mod<xhtml:br/>-a always,exit -F arch=b32 -S
                                chown -S fchown -S fchownat -S lchown -F auid&gt;=500 \<xhtml:br/>-F auid!=4294967295 -k perm_mod<xhtml:br/>-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr
                                -S \<xhtml:br/>lremovexattr -S fremovexattr -F auid&gt;=500 -F auid!=4294967295 -k perm_mod<xhtml:br/># Execute the following command to restart auditd<xhtml:br/># pkill -HUP -P 1 auditd </xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:complex-check operator="AND">
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:file-content check="at least one" comment="Ensure chmod is audited">
                                <ecl:path>/etc/audit/audit.rules</ecl:path>
                                <ecl:line-selection op="pm" value="^ *-a +(always,exit|exit,always) +-F +arch=b32 +-S +chmod +-S +fchmod +-S +fchmodat +-F +auid&gt;=500 +-F +auid!=4294967295 +-k +perm_mod$"/>
                            </ecl:file-content>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:file-content check="at least one" comment="Ensure chown is audited">
                                <ecl:path>/etc/audit/audit.rules</ecl:path>
                                <ecl:line-selection op="pm" value="^ *-a +(always,exit|exit,always) +-F +arch=b32 +-S +chown +-S +fchown +-S +fchownat +-S +lchown +-F +auid&gt;=500 +-F +auid!=4294967295 +-k +perm_mod$"/>
                            </ecl:file-content>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:file-content check="at least one" comment="Ensure setxattr is audited">
                                <ecl:path>/etc/audit/audit.rules</ecl:path>
                                <ecl:line-selection op="pm" value="^ *-a +(always,exit|exit,always) +-F +arch=b32 +-S +setxattr +-S +lsetxattr +-S +fsetxattr +-S +removexattr +-S +lremovexattr +-S +fremovexattr +-F +auid&gt;=500 +-F +auid!=4294967295 +-k +perm_mod$"/>
                            </ecl:file-content>
                        </xccdf:check-content>
                    </xccdf:check>
                </xccdf:complex-check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.1.11_Collect_Unsuccessful_Unauthorized_Access_Attempts_to_Files" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Collect Unsuccessful Unauthorized Access Attempts to Files</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>Monitor for unsuccessful attempts to access files. The parameters below are associated with system calls that control creation (<xhtml:span class="inline_block">creat</xhtml:span>), opening
                            (<xhtml:span class="inline_block">open</xhtml:span>, <xhtml:span class="inline_block">openat</xhtml:span>) and truncation (<xhtml:span class="inline_block">truncate</xhtml:span>, <xhtml:span class="inline_block">ftruncate</xhtml:span>) of files. An audit log record will only be written if the user is a non-privileged user (auid &gt; = 500), is not a Daemon event (auid=4294967295)
                        and if the system call returned EACCES (permission denied to the file) or EPERM (some other permanent error associated with the specific system call). All audit records will be tagged with the
                        identifier "access."</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Failed attempts to open, create or truncate files could be an indication that an individual or process is trying to gain unauthorized access to the system.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.</xhtml:p>
                            <xhtml:code class="code_block">-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate \<xhtml:br/>-F exit=-EACCES -F auid&gt;=500 -F auid!=4294967295 -k
                                access<xhtml:br/>-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate \<xhtml:br/>-F exit=-EACCES -F auid&gt;=500 -F auid!=4294967295 -k access<xhtml:br/>-a
                                always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate \<xhtml:br/>-F exit=-EPERM -F auid&gt;=500 -F auid!=4294967295 -k access<xhtml:br/>-a always,exit -F arch=b32 -S
                                creat -S open -S openat -S truncate -S ftruncate \<xhtml:br/>-F exit=-EPERM -F auid&gt;=500 -F auid!=4294967295 -k access<xhtml:br/># Execute the following command to restart
                                auditd<xhtml:br/># pkill -HUP -P 1 auditd </xhtml:code>
                            <xhtml:p>For 32 bit systems, add the following lines to the /etc/audit/audit.rules file.</xhtml:p>
                            <xhtml:code class="code_block">-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate \<xhtml:br/>-F exit=-EACCES -F auid&gt;=500 -F auid!=4294967295 -k
                                access<xhtml:br/>-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate \<xhtml:br/>-F exit=-EPERM -F auid&gt;=500 -F auid!=4294967295 -k access<xhtml:br/># Execute
                                the following command to restart auditd<xhtml:br/># pkill -HUP -P 1 auditd</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:complex-check operator="AND">
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:file-content check="at least one" comment="Ensure creat is audited">
                                <ecl:path>/etc/audit/audit.rules</ecl:path>
                                <ecl:line-selection op="pm" value="^ *-a +(always,exit|exit,always) +-F +arch=b32 +-S +creat +-S +open +-S +openat +-S +truncate +-S +ftruncate +-F +exit=-EACCES +-F +auid&gt;=500 +-F +auid!=4294967295 +-k +access$"/>
                            </ecl:file-content>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:file-content check="at least one" comment="Ensure creat is audited">
                                <ecl:path>/etc/audit/audit.rules</ecl:path>
                                <ecl:line-selection op="pm" value="^ *-a +(always,exit|exit,always) +-F +arch=b32 +-S +creat +-S +open +-S +openat +-S +truncate +-S +ftruncate +-F +exit=-EPERM +-F +auid&gt;=500 +-F +auid!=4294967295 +-k +access$"/>
                            </ecl:file-content>
                        </xccdf:check-content>
                    </xccdf:check>
                </xccdf:complex-check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.1.12_Collect_Use_of_Privileged_Commands" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Collect Use of Privileged Commands</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>Monitor privileged programs (those that have the setuid and/or setgid bit set on execution) to determine if unprivileged users are running these commands.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Execution of privileged commands by non-privileged users could be an indication of someone trying to gain unauthorized access to the system.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>To remediate this issue, the system administrator will have to execute a find command to locate all the privileged programs and then add an audit line for each one of them. The audit
                                parameters associated with this are as follows:</xhtml:p>
                            <xhtml:p>
                                <xhtml:span class="inline_block">-F path=" $1 "</xhtml:span> - will populate each file name found through the find command and processed by awk.<xhtml:br/>
                                <xhtml:span class="inline_block">-F perm=x</xhtml:span> - will write an audit record if the file is executed.<xhtml:br/>
                                <xhtml:span class="inline_block">-F auid&gt;=500</xhtml:span> - will write a record if the user executing the command is not a privileged user.<xhtml:br/>
                                <xhtml:span class="inline_block">-F auid!= 4294967295</xhtml:span> - will ignore Daemon events</xhtml:p>
                            <xhtml:p>All audit records will be tagged with the identifier "privileged."</xhtml:p>
                            <xhtml:code class="code_block"># find PART -xdev \( -perm -4000 -o -perm -2000 \) -type f | awk '{print \<xhtml:br/>"-a always,exit -F path=" $1 " -F perm=x -F auid&gt;=500 -F auid!=4294967295
                                \<xhtml:br/>-k privileged" }'</xhtml:code>
                            <xhtml:p>Next, add those lines to the <xhtml:span class="inline_block">/etc/audit/audit.rules </xhtml:span>file.</xhtml:p>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command check="none exist" comment="Ensure all SUID/GUID command use is audited">
                            <ecl:command>for i in `df --local -P|awk {'if (NR!=1) print $6'}|xargs -I '{}' find '{}' -xdev -type f \( -perm -2000 -o -perm -4000 \)`; do egrep -q "^ *\-a +(always,exit|exit,always) +\-F
                                +path=$i +\-F +perm=x +\-F +auid&gt;=500 +\-F +auid!=4294967295 +-k +privileged$" /etc/audit/audit.rules;if [ $? -ne 0 ]; then echo $i use is not properly audited;fi;done</ecl:command>
                            <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.1.13_Collect_Successful_File_System_Mounts" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Collect Successful File System Mounts</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>Monitor the use of the <xhtml:span class="inline_block">mount </xhtml:span>system call. The <xhtml:span class="inline_block">mount </xhtml:span>(and <xhtml:span class="inline_block">umount</xhtml:span>) system call controls the mounting and unmounting of file systems. The parameters below configure the system to create an audit record when the mount system call is used
                        by a non-privileged user</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>It is highly unusual for a non privileged user to <xhtml:span class="inline_block">mount </xhtml:span>file systems to the system. While tracking <xhtml:span class="inline_block">mount</xhtml:span> commands gives the system administrator evidence that external media may have been mounted (based on a review of the source of the mount and confirming it's an external
                        media type), it does not conclusively indicate that data was exported to the media. System administrators who wish to determine if data were exported, would also have to track successful
                            <xhtml:span class="inline_block">open</xhtml:span>, <xhtml:span class="inline_block">creat </xhtml:span>and <xhtml:span class="inline_block">truncate </xhtml:span>system calls requiring write
                        access to a file under the mount point of the external media file system. This could give a fair indication that a write occurred. The only way to truly prove it, would be to track successful
                        writes to the external media. Tracking write system calls could quickly fill up the audit log and is not recommended. Recommendations on configuration options to track data export to media is
                        beyond the scope of this document.</xhtml:p>
                    <xhtml:p>
                        <xhtml:strong>Note:</xhtml:strong> This tracks successful and unsuccessful mount commands. File system mounts do not have to come from external media and this action still does not verify write
                        (e.g. CD ROMS)</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.</xhtml:p>
                            <xhtml:code class="code_block">-a always,exit -F arch=b64 -S mount -F auid&gt;=500 -F auid!=4294967295 -k mounts<xhtml:br/>-a always,exit -F arch=b32 -S mount -F auid&gt;=500 -F
                                auid!=4294967295 -k mounts<xhtml:br/># Execute the following command to restart auditd<xhtml:br/># pkill -HUP -P 1 auditd </xhtml:code>
                            <xhtml:p>For 32 bit systems, add the following lines to the /etc/audit/audit.rules file.</xhtml:p>
                            <xhtml:code class="code_block">-a always,exit -F arch=b32 -S mount -F auid&gt;=500 -F auid!=4294967295 -k mounts<xhtml:br/># Execute the following command to restart auditd<xhtml:br/># pkill
                                -HUP -P 1 auditd</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:file-content check="at least one" comment="Ensure mounts are audited">
                            <ecl:path>/etc/audit/audit.rules</ecl:path>
                            <ecl:line-selection op="pm" value="^ *-a +(always,exit|exit,always) +-F +arch=b32 +-S +mount +-F +auid&gt;=500 +-F +auid!=4294967295 +-k +mounts$"/>
                        </ecl:file-content>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.1.14_Collect_File_Deletion_Events_by_User" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Collect File Deletion Events by User</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>Monitor the use of system calls associated with the deletion or renaming of files and file attributes. This configuration statement sets up monitoring for the <xhtml:span class="inline_block">unlink </xhtml:span>(remove a file), <xhtml:span class="inline_block">unlinkat </xhtml:span>(remove a file attribute), <xhtml:span class="inline_block">rename </xhtml:span>(rename a file) and
                            <xhtml:span class="inline_block">renameat </xhtml:span>(rename a file attribute) system calls and tags them with the identifier "delete".</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Monitoring these calls from non-privileged users could provide a system administrator with evidence that inappropriate removal of files and file attributes associated with protected files is
                        occurring. While this audit option will look at all events, system administrators will want to look for specific privileged files that are being deleted or altered.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>At a minimum, configure the audit system to collect file deletion events for all users and root.</xhtml:p>
                            <xhtml:p>For 64 bit systems, add the following to the /etc/audit/audit.rules file.</xhtml:p>
                            <xhtml:code class="code_block">-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid&gt;=500 \<xhtml:br/>-F auid!=4294967295 -k delete<xhtml:br/>-a always,exit -F
                                arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid&gt;=500 \<xhtml:br/>-F auid!=4294967295 -k delete<xhtml:br/># Execute the following command to restart auditd<xhtml:br/># pkill
                                -HUP -P 1 auditd</xhtml:code>
                            <xhtml:p>For 32 bit systems, add the following to the /etc/audit/audit.rules file.</xhtml:p>
                            <xhtml:code class="code_block">-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid&gt;=500 \<xhtml:br/>-F auid!=4294967295 -k delete<xhtml:br/># Execute the
                                following command to restart auditd<xhtml:br/># pkill -P 1-HUP auditd</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:file-content check="at least one" comment="Ensure deletions are audited">
                            <ecl:path>/etc/audit/audit.rules</ecl:path>
                            <ecl:line-selection op="pm" value="^ *-a +(always,exit|exit,always) +-F +arch=b32 +-S +unlink +-S +unlinkat +-S +rename +-S +renameat +-F +auid&gt;=500 +-F +auid!=4294967295 +-k +delete$"/>
                        </ecl:file-content>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.1.15_Collect_Changes_to_System_Administration_Scope_sudoers" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Collect Changes to System Administration Scope (sudoers)</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>Monitor scope changes for system administrations. If the system has been properly configured to force system administrators to log in as themselves first and then use the <xhtml:span class="inline_block">sudo </xhtml:span>command to execute privileged commands, it is possible to monitor changes in scope. The file <xhtml:span class="inline_block">/etc/sudoers
                        </xhtml:span>will be written to when the file or its attributes have changed. The audit records will be tagged with the identifier "scope."</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Changes in the <xhtml:span class="inline_block">/etc/sudoers </xhtml:span>file can indicate that an unauthorized change has been made to scope of system administrator activity.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Add the following lines to the <xhtml:span class="inline_block">/etc/audit/audit.rules </xhtml:span>file.</xhtml:p>
                            <xhtml:code class="code_block">-w /etc/sudoers -p wa -k scope<xhtml:br/># Execute the following command to restart auditd<xhtml:br/># pkill -HUP -P 1 auditd</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:file-content check="at least one" comment="audit.etcsudoers">
                            <ecl:path>/etc/audit/audit.rules</ecl:path>
                            <ecl:line-selection op="pm" value="^\s*-w /etc/sudoers -p wa -k scope"/>
                        </ecl:file-content>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.1.16_Collect_System_Administrator_Actions_sudolog" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Collect System Administrator Actions (sudolog)</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>Monitor the <xhtml:span class="inline_block">sudo </xhtml:span>log file. If the system has been properly configured to disable the use of the <xhtml:span class="inline_block">su
                        </xhtml:span>command and force all administrators to have to log in first and then use <xhtml:span class="inline_block">sudo </xhtml:span>to execute privileged commands, then all administrator
                        commands will be logged to <xhtml:span class="inline_block">/var/log/sudo.log</xhtml:span>. Any time a command is executed, an audit event will be triggered as the <xhtml:span class="inline_block">/var/log/sudo.log </xhtml:span>file will be opened for write and the executed administration command will be written to the log.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Changes in <xhtml:span class="inline_block">/var/log/sudo.log </xhtml:span>indicate that an administrator has executed a command or the log file itself has been tampered with. Administrators
                        will want to correlate the events written to the audit trail with the records written to <xhtml:span class="inline_block">/var/log/sudo.log </xhtml:span>to verify if unauthorized commands have
                        been executed.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Add the following lines to the <xhtml:span class="inline_block">/etc/audit/audit.rules </xhtml:span>file.</xhtml:p>
                            <xhtml:code class="code_block">-w /var/log/sudo.log -p wa -k actions<xhtml:br/># Execute the following command to restart auditd<xhtml:br/># pkill -HUP -P 1 auditd </xhtml:code>
                            <xhtml:p>
                                <xhtml:strong>Note:</xhtml:strong> The system must be configured with <xhtml:span class="inline_block">su </xhtml:span>disabled (See Item 9.5 Restrict Access to the su Command) to force
                                all command execution through <xhtml:span class="inline_block">sudo</xhtml:span>. This will not be effective on the console, as administrators can log in as root.</xhtml:p>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:file-content check="at least one" comment="audit.varlogsudolog">
                            <ecl:path>/etc/audit/audit.rules</ecl:path>
                            <ecl:line-selection op="pm" value="^\s*-w /var/log/sudo.log -p wa -k actions"/>
                        </ecl:file-content>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.1.17_Collect_Kernel_Module_Loading_and_Unloading" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Collect Kernel Module Loading and Unloading</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>Monitor the loading and unloading of kernel modules. The programs <xhtml:span class="inline_block">insmod </xhtml:span>(install a kernel module), <xhtml:span class="inline_block">rmmod
                        </xhtml:span>(remove a kernel module), and <xhtml:span class="inline_block">modprobe </xhtml:span>(a more sophisticated program to load and unload modules, as well as some other features) control
                        loading and unloading of modules. The <xhtml:span class="inline_block">init_module </xhtml:span>(load a module) and <xhtml:span class="inline_block">delete_module </xhtml:span>(delete a module)
                        system calls control loading and unloading of modules. Any execution of the loading and unloading module programs and system calls will trigger an audit record with an identifier of
                        "modules".</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Monitoring the use of <xhtml:span class="inline_block">insmod</xhtml:span>, <xhtml:span class="inline_block">rmmod </xhtml:span>and <xhtml:span class="inline_block">modprobe
                        </xhtml:span>could provide system administrators with evidence that an unauthorized user loaded or unloaded a kernel module, possibly compromising the security of the system. Monitoring of the
                            <xhtml:span class="inline_block">init_module </xhtml:span>and <xhtml:span class="inline_block">delete_module </xhtml:span>system calls would reflect an unauthorized user attempting to use a
                        different program to load and unload modules.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Add the following lines to the /etc/audit/audit.rules file.</xhtml:p>
                            <xhtml:code class="code_block">-w /sbin/insmod -p x -k modules<xhtml:br/>-w /sbin/rmmod -p x -k modules<xhtml:br/>-w /sbin/modprobe -p x -k modules<xhtml:br/>
                                <xhtml:strong>For 32 bit systems, add</xhtml:strong>
                                <xhtml:br/>-a always,exit -F arch=b32 -S init_module -S delete_module -k modules<xhtml:br/>
                                <xhtml:strong>For 64 bit systems, add</xhtml:strong>
                                <xhtml:br/>-a always,exit -F arch=b64 -S init_module -S delete_module -k modules</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:complex-check operator="AND">
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:file-content check="at least one" comment="Ensure /sbin/insmod is audited">
                                <ecl:path>/etc/audit/audit.rules</ecl:path>
                                <ecl:line-selection op="pm" value="^ *-w +/sbin/insmod +-p +x +-k +modules$"/>
                            </ecl:file-content>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:file-content check="at least one" comment="Ensure /sbin/rmmod is audited">
                                <ecl:path>/etc/audit/audit.rules</ecl:path>
                                <ecl:line-selection op="pm" value="^ *-w +/sbin/rmmod +-p +x +-k +modules$"/>
                            </ecl:file-content>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:file-content check="at least one" comment="Ensure /sbin/modprobe is audited">
                                <ecl:path>/etc/audit/audit.rules</ecl:path>
                                <ecl:line-selection op="pm" value="^ *-w +/sbin/modprobe +-p +x +-k +modules$"/>
                            </ecl:file-content>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:file-content check="at least one" comment="Ensure init_module is audited">
                                <ecl:path>/etc/audit/audit.rules</ecl:path>
                                <ecl:line-selection op="pm" value="^ *-a +(always,exit|exit,always) +-F +arch=b32 +-S +init_module +-S +delete_module +-k +modules$"/>
                            </ecl:file-content>
                        </xccdf:check-content>
                    </xccdf:check>
                </xccdf:complex-check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.1.18_Make_the_Audit_Configuration_Immutable" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Make the Audit Configuration Immutable</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>Set system audit so that audit rules cannot be modified with <xhtml:span class="inline_block">auditctl</xhtml:span>. Setting the flag "-e 2" forces audit to be put in immutable mode. Audit
                        changes can only be made on system reboot.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>In immutable mode, unauthorized users cannot execute changes to the audit system to potentially hide malicious activity and then put the audit rules back. Users would most likely notice a
                        system reboot and that could alert administrators of an attempt to make unauthorized audit changes.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Add the following lines to the <xhtml:span class="inline_block">/etc/audit/audit.rules </xhtml:span>file.</xhtml:p>
                            <xhtml:code class="code_block">-e 2 </xhtml:code>
                            <xhtml:p>
                                <xhtml:strong>Note:</xhtml:strong> This must be the last line in the <xhtml:span class="inline_block">/etc/audit/audit.rules </xhtml:span>file</xhtml:p>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:file-content check="at least one" comment="audit.immutable">
                            <ecl:path>/etc/audit/audit.rules</ecl:path>
                            <ecl:line-selection op="pm" value="^\s*-e 2"/>
                        </ecl:file-content>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
        </xccdf:Group>
        <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_8.2_Configure_rsyslog">
            <xccdf:title xml:lang="en">Configure rsyslog</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The rsyslog software is recommended as a replacement for the default syslogd daemon and provides improvements over syslogd, such as connection-oriented (i.e. TCP) transmission of logs, the option
                    to log to database formats, and the encryption of log data en route to a central logging server.</xhtml:p>
            </xccdf:description>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.2.1_Install_the_rsyslog_package" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Install the rsyslog package</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>The <xhtml:span class="inline_block">rsyslog </xhtml:span>package is a third party package that provides many enhancements to syslog, such as multi-threading, TCP communication, message
                        filtering and data base support.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>The security enhancements of rsyslog such as connection-oriented (i.e. TCP) transmission of logs, the option to log to database formats, and the encryption of log data en route to a central
                        logging server) justify installing and configuring the package.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Install the <xhtml:span class="inline_block">rsyslog </xhtml:span>package:</xhtml:p>
                            <xhtml:code class="code_block"># apt-get install rsyslog</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command comment="Ensure rsyslog is installed" success="pass">
                            <ecl:command>dpkg -s rsyslog | egrep "^Status:\ install"</ecl:command>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.2.2_Ensure_the_rsyslog_Service_is_activated" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Ensure the rsyslog Service is activated</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>Once the rsyslog package is installed it needs to be activated.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>If the rsyslog service is not activated the system will not have a syslog service running.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Set the proper start conditions in <xhtml:span class="inline_block">/etc/init/rsyslog.conf</xhtml:span>:</xhtml:p>
                            <xhtml:code class="code_block">start on filesystem</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command comment="Ensure the rsyslog Service is activated" success="pass">
                            <ecl:command>initctl show-config rsyslog | egrep "^\s*start"</ecl:command>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.2.3_Configure_etcrsyslog.conf" role="unscored" selected="false" weight="0.0">
                <xccdf:title xml:lang="en">Configure /etc/rsyslog.conf</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>The <xhtml:span class="inline_block">/etc/rsyslog.conf </xhtml:span>file specifies rules for logging and which files are to be used to log certain classes of messages.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>A great deal of important security-related information is sent via <xhtml:span class="inline_block">rsyslog </xhtml:span>(e.g., successful and failed su attempts, failed login attempts, root
                        login attempts, etc.).</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Edit the following lines in the <xhtml:span class="inline_block">/etc/rsyslog.conf </xhtml:span>or <xhtml:span class="inline_block">/etc/rsyslog.d/*</xhtml:span> file as appropriate
                                for your<xhtml:br/>environment:</xhtml:p>
                            <xhtml:code class="code_block">*.emerg :omusrmsg:*<xhtml:br/>mail.* -/var/log/mail<xhtml:br/>mail.info -/var/log/mail.info<xhtml:br/>mail.warning -/var/log/mail.warn<xhtml:br/>mail.err
                                /var/log/mail.err<xhtml:br/>news.crit -/var/log/news/news.crit<xhtml:br/>news.err -/var/log/news/news.err<xhtml:br/>news.notice -/var/log/news/news.notice<xhtml:br/>*.=warning;*.=err
                                -/var/log/warn<xhtml:br/>*.crit /var/log/warn<xhtml:br/>*.*;mail.none;news.none -/var/log/messages<xhtml:br/>local0,local1.* -/var/log/localmessages<xhtml:br/>local2,local3.*
                                -/var/log/localmessages<xhtml:br/>local4,local5.* -/var/log/localmessages<xhtml:br/>local6,local7.* -/var/log/localmessages</xhtml:code>
                            <xhtml:p>Execute the following command to restart rsyslogd</xhtml:p>
                            <xhtml:code class="code_block"># pkill -HUP rsyslogd</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.2.4_Create_and_Set_Permissions_on_rsyslog_Log_Files" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Create and Set Permissions on rsyslog Log Files</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>A log file must already exist for <xhtml:span class="inline_block">rsyslog </xhtml:span>to be able to write to it.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>It is important to ensure that log files exist and have the correct permissions to ensure that sensitive <xhtml:span class="inline_block">rsyslog</xhtml:span> data is archived and
                        protected.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>For sites that have <xhtml:strong>not</xhtml:strong> implemented a secure admin group:</xhtml:p>
                            <xhtml:p>Create the <xhtml:span class="inline_block">/var/log/</xhtml:span> directory and for each <xhtml:em>&lt;logfile&gt;</xhtml:em> listed in the <xhtml:span class="inline_block">/etc/rsyslog.conf</xhtml:span> or <xhtml:span class="inline_block">/etc/rsyslog.d/*</xhtml:span> files, perform the following commands:</xhtml:p>
                            <xhtml:code class="code_block"># touch <xhtml:em>&lt;logfile&gt;</xhtml:em>
                                <xhtml:br/># chown root:root <xhtml:em>&lt;logfile&gt;<xhtml:br/>
                                </xhtml:em># chmod og-rwx <xhtml:em>&lt;logfile&gt;</xhtml:em>
                            </xhtml:code>
                            <xhtml:p>For sites that <xhtml:strong>have</xhtml:strong> implemented a secure admin group:</xhtml:p>
                            <xhtml:p>Create the <xhtml:span class="inline_block">/var/log/</xhtml:span> directory and for each <xhtml:em>&lt;logfile&gt;</xhtml:em> listed in the <xhtml:span class="inline_block">/etc/rsyslog.conf </xhtml:span>file, perform the following commands (where is the name of the security group):</xhtml:p>
                            <xhtml:code class="code_block"># touch <xhtml:em>&lt;logfile&gt;</xhtml:em>
                                <xhtml:br/># chown root:<xhtml:em>&lt;securegrp&gt;</xhtml:em>
                                <xhtml:em>&lt;logfile&gt;</xhtml:em>
                                <xhtml:br/># chmod g-wx,o-rwx<xhtml:em>&lt;logfile&gt;</xhtml:em>
                            </xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:complex-check operator="AND">
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:shell-command check="none exist" comment="Ensure all rsyslog log files are owned by root">
                                <ecl:command>find `awk '/^ *[^#$]/ { print $2 }' /etc/rsyslog.conf /etc/rsyslog.d/* | egrep -o "/.*"` ! -user root</ecl:command>
                                <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:shell-command check="none exist" comment="Ensure all rsyslog log files are not accessible to other">
                                <ecl:command>find `awk '/^ *[^#$]/ { print $2 }' /etc/rsyslog.conf /etc/rsyslog.d/* | egrep -o "/.*"` -perm /o+rwx</ecl:command>
                                <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:shell-command check="none exist" comment="Ensure all rsyslog log files are not writable or executable by group">
                                <ecl:command>find `awk '/^ *[^#$]/ { print $2 }' /etc/rsyslog.conf /etc/rsyslog.d/* | egrep -o "/.*"` -perm /g+wx</ecl:command>
                                <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                </xccdf:complex-check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.2.5_Configure_rsyslog_to_Send_Logs_to_a_Remote_Log_Host" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Configure rsyslog to Send Logs to a Remote Log Host</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>The <xhtml:span class="inline_block">rsyslog </xhtml:span>utility supports the ability to send logs it gathers to a remote log host running <xhtml:span class="inline_block">syslogd(8)
                        </xhtml:span>or to receive messages from remote hosts, reducing administrative overhead.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Storing log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on
                        the local system</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Edit the <xhtml:span class="inline_block">/etc/rsyslog.conf </xhtml:span>file and add the following line (where <xhtml:span class="inline_block">
                                    <xhtml:em>logfile.example.com</xhtml:em>
                                </xhtml:span>is the name of your central log host). </xhtml:p>
                            <xhtml:code class="code_block">*.* @@loghost.example.com<xhtml:br/># Execute the following command to restart rsyslogd<xhtml:br/># pkill -HUP rsyslogd </xhtml:code>
                            <xhtml:p>
                                <xhtml:strong>Note:</xhtml:strong> The double "at" sign (<xhtml:span class="inline_block">@@</xhtml:span>) directs <xhtml:span class="inline_block">rsyslog </xhtml:span>to use TCP to send
                                log messages to the server, which is a more reliable transport mechanism than the default UDP protocol.</xhtml:p>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:file-content check="at least one" comment="rsyslog.remotehost">
                            <ecl:path>/etc/rsyslog.conf</ecl:path>
                            <ecl:line-selection op="pm" value="^\*\.\*\s+@"/>
                        </ecl:file-content>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.2.6_Accept_Remote_rsyslog_Messages_Only_on_Designated_Log_Hosts" role="unscored" selected="false" weight="0.0">
                <xccdf:title xml:lang="en">Accept Remote rsyslog Messages Only on Designated Log Hosts</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>By default, <xhtml:span class="inline_block">rsyslog </xhtml:span>does not listen for log messages coming in from remote systems. The <xhtml:span class="inline_block">ModLoad
                        </xhtml:span>tells <xhtml:span class="inline_block">rsyslog </xhtml:span>to load the <xhtml:span class="inline_block">imtcp.so </xhtml:span>module so it can listen over a network via TCP. The
                            <xhtml:span class="inline_block">InputTCPServerRun </xhtml:span>option instructs <xhtml:span class="inline_block">rsyslogd </xhtml:span>to listen on the specified TCP port.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>The guidance in the section ensures that remote log hosts are configured to only accept <xhtml:span class="inline_block">rsyslog </xhtml:span>data from hosts within the specified domain and
                        that those systems that are not designed to be log hosts do not accept any remote <xhtml:span class="inline_block">rsyslog </xhtml:span>messages. This provides protection from spoofed log data and
                        ensures that system administrators are reviewing reasonably complete syslog data in a central location.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>For hosts that are designated as log hosts, edit the <xhtml:span class="inline_block">/etc/rsyslog.conf </xhtml:span>file and un-comment the following lines:</xhtml:p>
                            <xhtml:code class="code_block">$ModLoad imtcp.so<xhtml:br/>$InputTCPServerRun 514 </xhtml:code>
                            <xhtml:p>Execute the following command to restart <xhtml:span class="inline_block">rsyslogd</xhtml:span>:</xhtml:p>
                            <xhtml:code class="code_block"># pkill -HUP rsyslogd </xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
            </xccdf:Rule>
        </xccdf:Group>
        <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_8.3_Advanced_Intrusion_Detection_Environment_AIDE">
            <xccdf:title xml:lang="en">Advanced Intrusion Detection Environment (AIDE)</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>AIDE is a file integrity checking tool, similar in nature to Tripwire. While it cannot prevent intrusions, it can detect unauthorized changes to configuration files by alerting when the files are
                    changed. When setting up AIDE, decide internally what the site policy will be concerning integrity checking. Review the AIDE quick start guide and AIDE documentation before proceeding.</xhtml:p>
            </xccdf:description>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.3.1_Install_AIDE" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Install AIDE</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>In some installations, AIDE is not installed automatically.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Install AIDE to make use of the file integrity features to monitor critical files for changes that could affect the security of the system.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Install AIDE:</xhtml:p>
                            <xhtml:code class="code_block"># apt-get install aide</xhtml:code>
                            <xhtml:p>Initialize AIDE:</xhtml:p>
                            <xhtml:code class="code_block"># aideinit<xhtml:br/># cp /var/lib/aide/aide.db.new /var/lib/aide/aide.db</xhtml:code>
                            <xhtml:p>
                                <xhtml:strong>Note:</xhtml:strong> The prelinking feature can interfere with AIDE because it alters binaries to speed up their start up times. Run <xhtml:span class="inline_block">/usr/sbin/prelink -ua </xhtml:span>to restore the binaries to their prelinked state, thus avoiding false positives from AIDE.</xhtml:p>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command comment="Ensure AIDE is installed" success="pass">
                            <ecl:command>dpkg -s aide | egrep "^Status:\ install"</ecl:command>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.3.2_Implement_Periodic_Execution_of_File_Integrity" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Implement Periodic Execution of File Integrity</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>Implement periodic file checking, in compliance with site policy.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Periodic file checking allows the system administrator to determine on a regular basis if critical files have been changed in an unauthorized fashion.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Execute the following command:</xhtml:p>
                            <xhtml:code class="code_block"># crontab -u root -e </xhtml:code>
                            <xhtml:p>Add the following line to the crontab:</xhtml:p>
                            <xhtml:code class="code_block">0 5 * * * /usr/sbin/aide --check </xhtml:code>
                            <xhtml:p>
                                <xhtml:strong>Note:</xhtml:strong> The checking in this instance occurs every day at 5am. Alter the frequency and time of the checks in compliance with site policy.</xhtml:p>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command check="at least one" comment="Ensure AIDE check scheduled">
                            <ecl:command>crontab -u root -l</ecl:command>
                            <ecl:line-selection dt="xs:string" op="pm" value="^[^#].*aide.*(-C|--check)"/>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
        </xccdf:Group>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.4_Configure_logrotate" role="unscored" selected="false" weight="0.0">
            <xccdf:title xml:lang="en">Configure logrotate</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The system includes the capability of rotating log files regularly to avoid filling up the system with logs or making the logs unmanageable large. The file <xhtml:span class="inline_block">/etc/logrotate.d/rsyslog </xhtml:span>is the configuration file used to rotate log files created by <xhtml:span class="inline_block">rsyslog</xhtml:span>.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>By keeping the log files smaller and more manageable, a system administrator can easily archive these files to another system and spend less time looking through inordinately large log
                    files.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Edit the <xhtml:span class="inline_block">/etc/logrotate.d/rsyslog</xhtml:span> file to include appropriate system logs according to your site policy.</xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
        </xccdf:Rule>
    </xccdf:Group>
    <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_9_System_Access_Authentication_and_Authorization">
        <xccdf:title xml:lang="en">System Access, Authentication and Authorization</xccdf:title>
        <xccdf:description xml:lang="en">
            <xhtml:p> </xhtml:p>
        </xccdf:description>
        <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_9.1_Configure_cron">
            <xccdf:title xml:lang="en">Configure cron</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:div class="overview"/>
            </xccdf:description>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.1.1_Enable_cron_Daemon" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Enable cron Daemon</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>The <xhtml:span class="inline_block">cron </xhtml:span>daemon is used to execute batch jobs on the system.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>While there may not be user jobs that need to be run on the system, the system does have maintenance jobs that may include security monitoring that have to run and <xhtml:span class="inline_block">cron </xhtml:span>is used to execute them.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Edit start lines in <xhtml:span class="inline_block">/etc/init/cron.conf </xhtml:span>to match the following:</xhtml:p>
                            <xhtml:code class="code_block">start on runlevel [2345]</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command comment="Ensure cron is enabled" success="pass">
                            <ecl:command>initctl show-config cron | egrep "^\s*start"</ecl:command>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.1.2_Set_UserGroup_Owner_and_Permission_on_etccrontab" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Set User/Group Owner and Permission on /etc/crontab</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>The <xhtml:span class="inline_block">/etc/crontab </xhtml:span>file is used by <xhtml:span class="inline_block">cron </xhtml:span>to control its own jobs. The commands in this item make sure
                        that root is the user and group owner of the file and that only the owner can access the file.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>This file contains information on what system jobs are run by cron. Write access to these files could provide unprivileged users with the ability to elevate their privileges. Read access to
                        these files could provide users with the ability to gain insight on system jobs that run on the system and could provide them a way to gain unauthorized privileged access.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:code class="code_block"># chown root:root /etc/crontab<xhtml:br/># chmod og-rwx /etc/crontab</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:complex-check operator="AND">
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:shell-command check="at least one" comment="Ensure /etc/crontab is owned by root">
                                <ecl:command>stat -c "%u %g" /etc/crontab</ecl:command>
                                <ecl:line-selection dt="xs:string" op="pm" value="0 0"/>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <!--
                                                           
                                    1. AND the existing permissions on /etc/crontab against the provided permissions (0077).
                                    2. If checking for existance of permissions, the output should equal the input. If checking for absense of permissions, the output should equal "000".
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                            <ecl:shell-command check="all" comment="Ensure /etc/crontab is innaccesible by group or other">
                                <ecl:command>ui=($(echo 0077 -n | fold -w1));sys=($(stat -L --format="%a" /etc/crontab | awk '{printf "%04d\n", $0;}' | fold -w1));for (( i=0; i&lt;4; i++ )); do echo -n $(( ${ui[$i]}
                                    &amp; ${sys[$i]})); done;</ecl:command>
                                <ecl:line-selection op="pm" value="^(\d+)$">
                                    <ecl:regex-group dt="xs:string" group="1" op="eq" value="0000"/>
                                </ecl:line-selection>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                </xccdf:complex-check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.1.3_Set_UserGroup_Owner_and_Permission_on_etccron.hourly" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Set User/Group Owner and Permission on /etc/cron.hourly</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>This directory contains system <xhtml:span class="inline_block">cron </xhtml:span>jobs that need to run on an hourly basis. The files in this directory cannot be manipulated by the
                            <xhtml:span class="inline_block">crontab </xhtml:span>command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to
                        user and group root, preventing regular users from accessing this directory.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give
                        an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:code class="code_block"># chown root:root /etc/cron.hourly<xhtml:br/># chmod og-rwx /etc/cron.hourly</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:complex-check operator="AND">
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:shell-command check="at least one" comment="Ensure /etc/cron.hourly is owned by root">
                                <ecl:command>stat -c "%u %g" /etc/cron.hourly</ecl:command>
                                <ecl:line-selection dt="xs:string" op="pm" value="0 0"/>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <!--
                                                           
                                    1. AND the existing permissions on /etc/cron.hourly against the provided permissions (0077).
                                    2. If checking for existance of permissions, the output should equal the input. If checking for absense of permissions, the output should equal "000".
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                            <ecl:shell-command check="all" comment="Ensure /etc/cron.hourly is innaccesible by group or other">
                                <ecl:command>ui=($(echo 0077 -n | fold -w1));sys=($(stat -L --format="%a" /etc/cron.hourly | awk '{printf "%04d\n", $0;}' | fold -w1));for (( i=0; i&lt;4; i++ )); do echo -n $(( ${ui[$i]}
                                    &amp; ${sys[$i]})); done;</ecl:command>
                                <ecl:line-selection op="pm" value="^(\d+)$">
                                    <ecl:regex-group dt="xs:string" group="1" op="eq" value="0000"/>
                                </ecl:line-selection>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                </xccdf:complex-check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.1.4_Set_UserGroup_Owner_and_Permission_on_etccron.daily" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Set User/Group Owner and Permission on /etc/cron.daily</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>The <xhtml:span class="inline_block">/etc/cron.daily </xhtml:span>directory contains system cron jobs that need to run on a daily basis. The files in this directory cannot be manipulated by
                        the <xhtml:span class="inline_block">crontab </xhtml:span>command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to
                        user and group root, preventing regular users from accessing this directory.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give
                        an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:code class="code_block"># chown root:root /etc/cron.daily<xhtml:br/># chmod og-rwx /etc/cron.daily</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:complex-check operator="AND">
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:shell-command check="at least one" comment="Ensure /etc/cron.daily is owned by root">
                                <ecl:command>stat -c "%u %g" /etc/cron.daily</ecl:command>
                                <ecl:line-selection dt="xs:string" op="pm" value="0 0"/>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <!--
                                                           
                                    1. AND the existing permissions on /etc/cron.daily against the provided permissions (0077).
                                    2. If checking for existance of permissions, the output should equal the input. If checking for absense of permissions, the output should equal "000".
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                            <ecl:shell-command check="all" comment="Ensure /etc/cron.daily is innaccesible by group or other">
                                <ecl:command>ui=($(echo 0077 -n | fold -w1));sys=($(stat -L --format="%a" /etc/cron.daily | awk '{printf "%04d\n", $0;}' | fold -w1));for (( i=0; i&lt;4; i++ )); do echo -n $(( ${ui[$i]}
                                    &amp; ${sys[$i]})); done;</ecl:command>
                                <ecl:line-selection op="pm" value="^(\d+)$">
                                    <ecl:regex-group dt="xs:string" group="1" op="eq" value="0000"/>
                                </ecl:line-selection>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                </xccdf:complex-check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.1.5_Set_UserGroup_Owner_and_Permission_on_etccron.weekly" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Set User/Group Owner and Permission on /etc/cron.weekly</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>The <xhtml:span class="inline_block">/etc/cron.weekly </xhtml:span>directory contains system cron jobs that need to run on a weekly basis. The files in this directory cannot be manipulated by
                        the <xhtml:span class="inline_block">crontab </xhtml:span>command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to
                        user and group root, preventing regular users from accessing this directory.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give
                        an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:code class="code_block"># chown root:root /etc/cron.weekly<xhtml:br/># chmod og-rwx /etc/cron.weekly</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:complex-check operator="AND">
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:shell-command check="at least one" comment="Ensure /etc/cron.weekly is owned by root">
                                <ecl:command>stat -c "%u %g" /etc/cron.weekly</ecl:command>
                                <ecl:line-selection dt="xs:string" op="pm" value="0 0"/>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <!--
                                                           
                                    1. AND the existing permissions on /etc/cron.weekly against the provided permissions (0077).
                                    2. If checking for existance of permissions, the output should equal the input. If checking for absense of permissions, the output should equal "000".
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                            <ecl:shell-command check="all" comment="Ensure /etc/cron.weekly is innaccesible by group or other">
                                <ecl:command>ui=($(echo 0077 -n | fold -w1));sys=($(stat -L --format="%a" /etc/cron.weekly | awk '{printf "%04d\n", $0;}' | fold -w1));for (( i=0; i&lt;4; i++ )); do echo -n $(( ${ui[$i]}
                                    &amp; ${sys[$i]})); done;</ecl:command>
                                <ecl:line-selection op="pm" value="^(\d+)$">
                                    <ecl:regex-group dt="xs:string" group="1" op="eq" value="0000"/>
                                </ecl:line-selection>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                </xccdf:complex-check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.1.6_Set_UserGroup_Owner_and_Permission_on_etccron.monthly" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Set User/Group Owner and Permission on /etc/cron.monthly</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>The <xhtml:span class="inline_block">/etc/cron.monthly </xhtml:span>directory contains system cron jobs that need to run on a monthly basis. The files in this directory cannot be manipulated
                        by the <xhtml:span class="inline_block">crontab </xhtml:span>command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access
                        to user and group root, preventing regular users from accessing this directory.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give
                        an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:code class="code_block"># chown root:root /etc/cron.monthly<xhtml:br/># chmod og-rwx /etc/cron.monthly</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:complex-check operator="AND">
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:shell-command check="at least one" comment="Ensure /etc/cron.monthly is owned by root">
                                <ecl:command>stat -c "%u %g" /etc/cron.monthly</ecl:command>
                                <ecl:line-selection dt="xs:string" op="pm" value="0 0"/>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <!--
                                                           
                                    1. AND the existing permissions on /etc/cron.monthly against the provided permissions (0077).
                                    2. If checking for existance of permissions, the output should equal the input. If checking for absense of permissions, the output should equal "000".
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                            <ecl:shell-command check="all" comment="Ensure /etc/cron.monthly is innaccesible by group or other">
                                <ecl:command>ui=($(echo 0077 -n | fold -w1));sys=($(stat -L --format="%a" /etc/cron.monthly | awk '{printf "%04d\n", $0;}' | fold -w1));for (( i=0; i&lt;4; i++ )); do echo -n $(( ${ui[$i]}
                                    &amp; ${sys[$i]})); done;</ecl:command>
                                <ecl:line-selection op="pm" value="^(\d+)$">
                                    <ecl:regex-group dt="xs:string" group="1" op="eq" value="0000"/>
                                </ecl:line-selection>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                </xccdf:complex-check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.1.7_Set_UserGroup_Owner_and_Permission_on_etccron.d" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Set User/Group Owner and Permission on /etc/cron.d</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>The <xhtml:span class="inline_block">/etc/cron.d</xhtml:span> directory contains system <xhtml:span class="inline_block">cron </xhtml:span>jobs that need to run in a similar manner to the
                        hourly, daily weekly and monthly jobs from <xhtml:span class="inline_block">/etc/crontab</xhtml:span>, but require more granular control as to when they run. The files in this directory cannot be
                        manipulated by the <xhtml:span class="inline_block">crontab </xhtml:span>command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and
                        search access to user and group root, preventing regular users from accessing this directory.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give
                        an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:code class="code_block"># chown root:root /etc/cron.d<xhtml:br/># chmod og-rwx /etc/cron.d</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:complex-check operator="AND">
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:shell-command check="at least one" comment="Ensure /etc/cron.d is owned by root">
                                <ecl:command>stat -c "%u %g" /etc/cron.d</ecl:command>
                                <ecl:line-selection dt="xs:string" op="pm" value="0 0"/>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <!--
                                                           
                                    1. AND the existing permissions on /etc/cron.d against the provided permissions (0077).
                                    2. If checking for existance of permissions, the output should equal the input. If checking for absense of permissions, the output should equal "000".
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                            <ecl:shell-command check="all" comment="Ensure /etc/cron.d is innaccesible by group or other">
                                <ecl:command>ui=($(echo 0077 -n | fold -w1));sys=($(stat -L --format="%a" /etc/cron.d | awk '{printf "%04d\n", $0;}' | fold -w1));for (( i=0; i&lt;4; i++ )); do echo -n $(( ${ui[$i]} &amp;
                                    ${sys[$i]})); done;</ecl:command>
                                <ecl:line-selection op="pm" value="^(\d+)$">
                                    <ecl:regex-group dt="xs:string" group="1" op="eq" value="0000"/>
                                </ecl:line-selection>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                </xccdf:complex-check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.1.8_Restrict_atcron_to_Authorized_Users" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Restrict at/cron to Authorized Users</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>Configure <xhtml:span class="inline_block">/etc/cron.allow </xhtml:span>and <xhtml:span class="inline_block">/etc/at.allow </xhtml:span>to allow specific users to use these services. If
                            <xhtml:span class="inline_block">/etc/cron.allow </xhtml:span>or <xhtml:span class="inline_block">/etc/at.allow </xhtml:span>do not exist, then <xhtml:span class="inline_block">/etc/at.deny
                        </xhtml:span>and <xhtml:span class="inline_block">/etc/cron.deny </xhtml:span>are checked. Any user not specifically defined in those files is allowed to use at and cron. By removing the files,
                        only users in <xhtml:span class="inline_block">/etc/cron.allow </xhtml:span>and <xhtml:span class="inline_block">/etc/at.allow </xhtml:span>are allowed to use at and cron. Note that even though a
                        given user is not listed in <xhtml:span class="inline_block">cron.allow</xhtml:span>, cron jobs can still be run as that user. The <xhtml:span class="inline_block">cron.allow </xhtml:span>file
                        only controls administrative access to the crontab command for scheduling and modifying cron jobs.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>On many systems, only the system administrator is authorized to schedule <xhtml:span class="inline_block">cron </xhtml:span>jobs. Using the <xhtml:span class="inline_block">cron.allow
                        </xhtml:span>file to control who can run <xhtml:span class="inline_block">cron </xhtml:span>jobs enforces this policy. It is easier to manage an allow list than a deny list. In a deny list, you
                        could potentially add a user ID to the system and forget to add it to the deny files.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:code class="code_block"># /bin/rm /etc/cron.deny<xhtml:br/># /bin/rm /etc/at.deny<xhtml:br/># touch /etc/cron.allow<xhtml:br/># touch /etc/at.allow<xhtml:br/># chmod og-rwx
                                /etc/cron.allow<xhtml:br/># chmod og-rwx /etc/at.allow<xhtml:br/># chown root:root /etc/cron.allow<xhtml:br/># chown root:root /etc/at.allow</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:complex-check operator="AND">
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:shell-command comment="Ensure /etc/cron.deny does not exist" success="fail">
                                <ecl:command>stat /etc/cron.deny</ecl:command>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:shell-command check="at least one" comment="Ensure /etc/cron.allow is owned by root">
                                <ecl:command>stat -c "%u %g" /etc/cron.allow</ecl:command>
                                <ecl:line-selection dt="xs:string" op="pm" value="0 0"/>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <!--
                                                           
                                    1. AND the existing permissions on /etc/cron.allow against the provided permissions (0077).
                                    2. If checking for existance of permissions, the output should equal the input. If checking for absense of permissions, the output should equal "000".
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                            <ecl:shell-command check="all" comment="Ensure /etc/cron.allow is innaccesible by group or other">
                                <ecl:command>ui=($(echo 0077 -n | fold -w1));sys=($(stat -L --format="%a" /etc/cron.allow | awk '{printf "%04d\n", $0;}' | fold -w1));for (( i=0; i&lt;4; i++ )); do echo -n $(( ${ui[$i]}
                                    &amp; ${sys[$i]})); done;</ecl:command>
                                <ecl:line-selection op="pm" value="^(\d+)$">
                                    <ecl:regex-group dt="xs:string" group="1" op="eq" value="0000"/>
                                </ecl:line-selection>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:shell-command comment="Ensure /etc/at.deny does not exist" success="fail">
                                <ecl:command>stat /etc/at.deny</ecl:command>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:shell-command check="at least one" comment="Ensure /etc/at.allow is owned by root">
                                <ecl:command>stat -c "%u %g" /etc/at.allow</ecl:command>
                                <ecl:line-selection dt="xs:string" op="pm" value="0 0"/>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <!--
                                                           
                                    1. AND the existing permissions on /etc/at.allow against the provided permissions (0077).
                                    2. If checking for existance of permissions, the output should equal the input. If checking for absense of permissions, the output should equal "000".
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                            <ecl:shell-command check="all" comment="Ensure /etc/at.allow is innaccesible by group or other">
                                <ecl:command>ui=($(echo 0077 -n | fold -w1));sys=($(stat -L --format="%a" /etc/at.allow | awk '{printf "%04d\n", $0;}' | fold -w1));for (( i=0; i&lt;4; i++ )); do echo -n $(( ${ui[$i]}
                                    &amp; ${sys[$i]})); done;</ecl:command>
                                <ecl:line-selection op="pm" value="^(\d+)$">
                                    <ecl:regex-group dt="xs:string" group="1" op="eq" value="0000"/>
                                </ecl:line-selection>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                </xccdf:complex-check>
            </xccdf:Rule>
        </xccdf:Group>
        <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_9.2_Configure_PAM">
            <xccdf:title xml:lang="en">Configure PAM</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>PAM (Pluggable Authentication Modules) is a service that implements modular authentication modules on UNIX systems. PAM is implemented as a set of shared objects that are loaded and executed when
                    a program needs to authenticate a user. Files for PAM are typically located in the <xhtml:span class="inline_block">/etc/pam.d</xhtml:span> directory. PAM must be carefully configured to secure system
                    authentication. While this section covers some of PAM, please consult other PAM resources to fully understand the configuration capabilities.</xhtml:p>
            </xccdf:description>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.2.1_Set_Password_Creation_Requirement_Parameters_Using_pam_cracklib" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Set Password Creation Requirement Parameters Using pam_cracklib</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>The <xhtml:span class="inline_block">pam_cracklib </xhtml:span>module checks the strength of passwords. It performs checks such as making sure a password is not a dictionary word, it is a
                        certain length, contains a mix of characters (e.g. alphabet, numeric, other) and more. The following are definitions of the <xhtml:span class="inline_block">pam_cracklib.so</xhtml:span>
                        options.</xhtml:p>
                    <xhtml:ul>
                        <xhtml:li>
                            <xhtml:span class="inline_block">
                                <xhtml:span class="inline_block">retry=3</xhtml:span>
                            </xhtml:span>- Allow 3 tries before sending back a failure.</xhtml:li>
                        <xhtml:li>
                            <xhtml:span class="inline_block">minlen=14 </xhtml:span>- password must be 14 characters or more</xhtml:li>
                        <xhtml:li>
                            <xhtml:span class="inline_block">dcredit=-1 </xhtml:span>- provide at least one digit</xhtml:li>
                        <xhtml:li>
                            <xhtml:span class="inline_block">ucredit=-1 </xhtml:span>- provide at least one uppercase character</xhtml:li>
                        <xhtml:li>
                            <xhtml:span class="inline_block">ocredit=-1 </xhtml:span>- provide at least one special character</xhtml:li>
                        <xhtml:li>
                            <xhtml:span class="inline_block">lcredit=-1 </xhtml:span>- provide at least one lowercase character</xhtml:li>
                    </xhtml:ul>
                    <xhtml:p>The setting shown above is one possible policy. Alter these values to conform to your own organization's password policies.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Strong passwords protect systems from being hacked through brute force methods.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Set the <xhtml:span class="inline_block">pam_cracklib.so</xhtml:span> parameters as follows in <xhtml:span class="inline_block">/etc/pam.d/</xhtml:span>
                                <xhtml:span class="inline_block">common-password</xhtml:span>:</xhtml:p>
                            <xhtml:code class="code_block">password required pam_cracklib.so retry=3 minlen=14 dcredit=-1 ucredit=-1 ocredit=-1 lcredit=-1</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:complex-check operator="AND">
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:shell-command check="at least one" comment="Ensure setting 'retry' in pam_cracklib.so options">
                                <ecl:command>egrep -v "^[[:space:]]*#" /etc/pam.d/common-password | egrep "pam_cracklib.so" | sed -e 's/#.*//' | tr -s '\t ' '\n' | awk -F = '/^retry/ { if ($2 &lt;= 3) print $2
                                    }'</ecl:command>
                                <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:shell-command check="at least one" comment="Ensure setting 'minlen' in pam_cracklib.so options">
                                <ecl:command>egrep -v "^[[:space:]]*#" /etc/pam.d/common-password | egrep "pam_cracklib.so" | sed -e 's/#.*//' | tr -s '\t ' '\n' | awk -F = '/^minlen/ { if ($2 &gt;= 14) print $2
                                    }'</ecl:command>
                                <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:shell-command check="at least one" comment="Ensure setting 'dcredit' in pam_cracklib.so options">
                                <ecl:command>egrep -v "^[[:space:]]*#" /etc/pam.d/common-password | egrep "pam_cracklib.so" | sed -e 's/#.*//' | tr -s '\t ' '\n' | awk -F = '/^dcredit/ { if ($2 &lt;= -1) print $2
                                    }'</ecl:command>
                                <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:shell-command check="at least one" comment="Ensure setting 'ucredit' in pam_cracklib.so options">
                                <ecl:command>egrep -v "^[[:space:]]*#" /etc/pam.d/common-password | egrep "pam_cracklib.so" | sed -e 's/#.*//' | tr -s '\t ' '\n' | awk -F = '/^ucredit/ { if ($2 &lt;= -1) print $2
                                    }'</ecl:command>
                                <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:shell-command check="at least one" comment="Ensure setting 'lcredit' in pam_cracklib.so options">
                                <ecl:command>egrep -v "^[[:space:]]*#" /etc/pam.d/common-password | egrep "pam_cracklib.so" | sed -e 's/#.*//' | tr -s '\t ' '\n' | awk -F = '/^lcredit/ { if ($2 &lt;= -1) print $2
                                    }'</ecl:command>
                                <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <ecl:shell-command check="at least one" comment="Ensure setting 'ocredit' in pam_cracklib.so options">
                                <ecl:command>egrep -v "^[[:space:]]*#" /etc/pam.d/common-password | egrep "pam_cracklib.so" | sed -e 's/#.*//' | tr -s '\t ' '\n' | awk -F = '/^ocredit/ { if ($2 &lt;= -1) print $2
                                    }'</ecl:command>
                                <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                </xccdf:complex-check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.2.2_Set_Lockout_for_Failed_Password_Attempts" role="unscored" selected="false" weight="0.0">
                <xccdf:title xml:lang="en">Set Lockout for Failed Password Attempts</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>Lock out users after <xhtml:em>n</xhtml:em> unsuccessful consecutive login attempts. The first sets of changes are made to the PAM configuration file <xhtml:span class="inline_block">/etc/pam.d/login</xhtml:span>. The second set of changes are applied to the program specific PAM configuration file. The second set of changes must be applied to each program that will lock
                        out users. Check the documentation for each secondary program for instructions on how to configure them to work with PAM.</xhtml:p>
                    <xhtml:p>Set the lockout number to the policy in effect at your site.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Locking out userIDs after <xhtml:em>n</xhtml:em> unsuccessful consecutive login attempts mitigates brute force password attacks against your systems.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Edit the <xhtml:span class="inline_block">/etc/pam.d/login </xhtml:span>file and add the auth line below:</xhtml:p>
                            <xhtml:code class="code_block">auth required pam_tally2.so onerr=fail audit silent deny=5 unlock_time=900</xhtml:code>
                            <xhtml:p>
                                <xhtml:strong>Note:</xhtml:strong> If a user has been locked out because they have reached the maximum consecutive failure count defined by <xhtml:span class="inline_block">deny=</xhtml:span> in the <xhtml:span class="inline_block">pam_tally2.so </xhtml:span>module, the user can be unlocked by issuing the command <xhtml:span class="inline_block">/sbin/pam_tally2 -u <xhtml:em>&lt;username&gt;</xhtml:em> --reset</xhtml:span>. This command sets the failed count to 0, effectively unlocking the user.</xhtml:p>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:file-content check="at least one" comment="Ensure 'auth required pam_tally2.so onerr=fail audit silent deny=5 unlock_time=900' in /etc/pam.d/login">
                            <ecl:path>/etc/pam.d/login</ecl:path>
                            <ecl:line-selection op="pm" value="^auth\s+required\s+pam_tally2.so\s+onerr=fail\s+audit\s+silent\s+deny=5\s+unlock_time=900$"/>
                        </ecl:file-content>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.2.3_Limit_Password_Reuse" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Limit Password Reuse</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>The <xhtml:span class="inline_block">/etc/security/opasswd </xhtml:span>file stores the users' old passwords and can be checked to ensure that users are not recycling recent
                        passwords.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Forcing users not to reuse their past 5 passwords make it less likely that an attacker will be able to guess the password.</xhtml:p>
                    <xhtml:p>Note that these change only apply to accounts configured on the local system.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Set the <xhtml:span class="inline_block">pam_unix.so</xhtml:span>
                                <xhtml:span class="inline_block">remember</xhtml:span> parameter to <xhtml:span class="inline_block">5</xhtml:span> in <xhtml:span class="inline_block">/etc/pam.d/common-password</xhtml:span>:</xhtml:p>
                            <xhtml:code class="code_block">password sufficient pam_unix.so remember=5</xhtml:code>
                            <xhtml:p>
                                <xhtml:strong>Note:</xhtml:strong> The default password setting in this document is the last 5 passwords. Change this number to conform to your site's password policy.</xhtml:p>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:file-content check="at least one" comment="User password history is remembered">
                            <ecl:path>/etc/pam.d/common-password</ecl:path>
                            <ecl:line-selection op="pm" value="^[^#]*remember"/>
                        </ecl:file-content>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
        </xccdf:Group>
        <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_9.3_Configure_SSH">
            <xccdf:title xml:lang="en">Configure SSH</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>
                    <xhtml:strong>Description:</xhtml:strong> SSH is a secure, encrypted replacement for common login services such as <xhtml:span class="inline_block">telnet</xhtml:span>, <xhtml:span class="inline_block">ftp</xhtml:span>, <xhtml:span class="inline_block">rlogin</xhtml:span>, <xhtml:span class="inline_block">rsh</xhtml:span>, and <xhtml:span class="inline_block">rcp</xhtml:span>.</xhtml:p>
                <xhtml:p>
                    <xhtml:strong>Rationale:</xhtml:strong> It is strongly recommended that sites abandon older clear-text login protocols and use SSH to prevent session hijacking and sniffing of sensitive data off the
                    network.</xhtml:p>
                <xhtml:p>If the ssh server is not installed the contents of this section are not required. You can check the install status of the ssh server with the following command:</xhtml:p>
                <xhtml:code class="pre_0.6879080091131917"># dpkg -s openssh-server</xhtml:code>
            </xccdf:description>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.3.1_Set_SSH_Protocol_to_2" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Set SSH Protocol to 2</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>SSH supports two different and incompatible protocols: SSH1 and SSH2. SSH1 was the original protocol and was subject to security issues. SSH2 is more advanced and secure.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>SSH v1 suffers from insecurities that do not affect SSH v2.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Edit the <xhtml:span class="inline_block">/etc/ssh/sshd_config </xhtml:span>file to set the parameter as follows:</xhtml:p>
                            <xhtml:code class="code_block">Protocol 2</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <!--
                                                           
                                    1. Read contents of /etc/ssh/sshd_config
                                    2. Find first line (SSHD respects first occurrence only) that starts with 0 or more spaces (uncommented) 
                                    3.    and is followed by Protocol  
                                    3.    and is followed by a value that is equals 2
                                    4. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                        <ecl:shell-command check="all" comment="Ensure SSH uses protocol 2">
                            <ecl:command>grep '^\s*Protocol\s' /etc/ssh/sshd_config | head -1</ecl:command>
                            <ecl:line-selection op="pm" value="\s*\S+\s+(.+?)\s*(#.*)?$">
                                <ecl:regex-group dt="xs:string" group="1" op="eq" value="2"/>
                            </ecl:line-selection>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.3.2_Set_LogLevel_to_INFO" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Set LogLevel to INFO</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>The <xhtml:span class="inline_block">INFO </xhtml:span>parameter specifices that record login and logout activity will be logged.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>SSH provides several logging levels with varying amounts of verbosity. <xhtml:span class="inline_block">DEBUG </xhtml:span>is specifically <xhtml:em>not</xhtml:em> recommended other than
                        strictly for debugging SSH communications since it provides so much data that it is difficult to identify important security information. <xhtml:span class="inline_block">INFO </xhtml:span>level
                        is the basic level that only records login activity of SSH users. In many situations, such as Incident Response, it is important to determine when a particular user was active on a system. The
                        logout record can eliminate those users who disconnected, which helps narrow the field.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Edit the <xhtml:span class="inline_block">/etc/ssh/sshd_config </xhtml:span>file to set the parameter as follows:</xhtml:p>
                            <xhtml:code class="code_block">LogLevel INFO</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <!--
                                                           
                                    1. Read contents of /etc/ssh/sshd_config
                                    2. Find first line (SSHD respects first occurrence only) that starts with 0 or more spaces (uncommented) 
                                    3.    and is followed by LogLevel  
                                    3.    and is followed by a value that is equals INFO
                                    4. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                        <ecl:shell-command check="all" comment="Ensure SSH LogLevel is set to INFO">
                            <ecl:command>grep '^\s*LogLevel\s' /etc/ssh/sshd_config | head -1</ecl:command>
                            <ecl:line-selection op="pm" value="\s*\S+\s+(.+?)\s*(#.*)?$">
                                <ecl:regex-group dt="xs:string" group="1" op="eq" value="INFO"/>
                            </ecl:line-selection>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.3.3_Set_Permissions_on_etcsshsshd_config" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Set Permissions on /etc/ssh/sshd_config</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>The <xhtml:span class="inline_block">/etc/ssh/sshd_config </xhtml:span>file contains configuration specifications for <xhtml:span class="inline_block">sshd</xhtml:span>. The command below
                        sets the owner and group of the file to root.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>The <xhtml:span class="inline_block">/etc/ssh/sshd_config </xhtml:span>file needs to be protected from unauthorized changes by non-priliveged users, but needs to be readable as this
                        information is used with many non-privileged programs.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>If the user and group ownership of the <xhtml:span class="inline_block">/etc/ssh/sshd_config </xhtml:span>file are incorrect, run the following command to correct them:</xhtml:p>
                            <xhtml:code class="code_block"># chown root:root /etc/ssh/sshd_config </xhtml:code>
                            <xhtml:p>If the permissions are incorrect, run the following command to correct them:</xhtml:p>
                            <xhtml:code class="code_block"># chmod 600 /etc/ssh/sshd_config</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command check="at least one" comment="Ensure /etc/ssh/sshd_config is owned and accesible by root only">
                            <ecl:command>stat -L -c "%a %u %g" /etc/ssh/sshd_config</ecl:command>
                            <ecl:line-selection dt="xs:string" op="pm" value=".00 0 0"/>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.3.4_Disable_SSH_X11_Forwarding" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Disable SSH X11 Forwarding</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>The X11Forwarding parameter provides the ability to tunnel X11 traffic through the connection to enable remote graphic connections.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Disable X11 forwarding unless there is an operational requirement to use X11 applications directly. There is a small risk that the remote X11 servers of users who are logged in via SSH with
                        X11 forwarding could be compromised by other users on the X11 server. Note that even if X11 forwarding is disabled, users can always install their own forwarders.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Edit the <xhtml:span class="inline_block">/etc/ssh/sshd_config </xhtml:span>file to set the parameter as follows:</xhtml:p>
                            <xhtml:code class="code_block">X11Forwarding no </xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <!--
                                                           
                                    1. Read contents of /etc/ssh/sshd_config
                                    2. Find first line (SSHD respects first occurrence only) that starts with 0 or more spaces (uncommented) 
                                    3.    and is followed by X11Forwarding  
                                    3.    and is followed by a value that is equals no
                                    4. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                        <ecl:shell-command check="all" comment="Ensure SSH X11Forwarding disabled">
                            <ecl:command>grep '^\s*X11Forwarding\s' /etc/ssh/sshd_config | head -1</ecl:command>
                            <ecl:line-selection op="pm" value="\s*\S+\s+(.+?)\s*(#.*)?$">
                                <ecl:regex-group dt="xs:string" group="1" op="eq" value="no"/>
                            </ecl:line-selection>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.3.5_Set_SSH_MaxAuthTries_to_4_or_Less" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Set SSH MaxAuthTries to 4 or Less</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>The <xhtml:span class="inline_block">MaxAuthTries </xhtml:span>parameter specifies the maximum number of authentication attempts permitted per connection. When the login failure count reaches
                        half the number, error messages will be written to the <xhtml:span class="inline_block">syslog</xhtml:span> file detailing the login failure.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Setting the <xhtml:span class="inline_block">MaxAuthTries </xhtml:span>parameter to a low number will minimize the risk of successful brute force attacks to the SSH server. While the
                        recommended setting is 4, it is set the number based on site policy.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Edit the <xhtml:span class="inline_block">/etc/ssh/sshd_config </xhtml:span>file to set the parameter as follows:</xhtml:p>
                            <xhtml:code class="code_block">MaxAuthTries 4</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <!--
                                                           
                                    1. Read contents of /etc/ssh/sshd_config
                                    2. Find first line (SSHD respects first occurrence only) that starts with 0 or more spaces (uncommented) 
                                    3.    and is followed by MaxAuthTries  
                                    3.    and is followed by a value that is less than or equal 4
                                    4. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                        <ecl:shell-command check="all" comment="Ensure SSH MaxAuthTries is set to 4 or less.">
                            <ecl:command>grep '^\s*MaxAuthTries\s' /etc/ssh/sshd_config | head -1</ecl:command>
                            <ecl:line-selection op="pm" value="\s*\S+\s+(.+?)\s*(#.*)?$">
                                <ecl:regex-group dt="xs:integer" group="1" op="le" value="4"/>
                            </ecl:line-selection>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.3.6_Set_SSH_IgnoreRhosts_to_Yes" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Set SSH IgnoreRhosts to Yes</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>The <xhtml:span class="inline_block">IgnoreRhosts </xhtml:span>parameter specifies that <xhtml:span class="inline_block">.rhosts </xhtml:span>and <xhtml:span class="inline_block">.shosts
                        </xhtml:span>files will not be used in <xhtml:span class="inline_block">RhostsRSAAuthentication </xhtml:span>or <xhtml:span class="inline_block">HostbasedAuthentication</xhtml:span>.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Setting this parameter forces users to enter a password when authenticating with ssh.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Edit the <xhtml:span class="inline_block">/etc/ssh/sshd_config </xhtml:span>file to set the parameter as follows:</xhtml:p>
                            <xhtml:code class="code_block">IgnoreRhosts yes</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <!--
                                                           
                                    1. Read contents of /etc/ssh/sshd_config
                                    2. Find first line (SSHD respects first occurrence only) that starts with 0 or more spaces (uncommented) 
                                    3.    and is followed by IgnoreRhosts  
                                    3.    and is followed by a value that is equals yes
                                    4. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                        <ecl:shell-command check="all" comment="Ensure SSH IgnoreRhosts is set to true">
                            <ecl:command>grep '^\s*IgnoreRhosts\s' /etc/ssh/sshd_config | head -1</ecl:command>
                            <ecl:line-selection op="pm" value="\s*\S+\s+(.+?)\s*(#.*)?$">
                                <ecl:regex-group dt="xs:string" group="1" op="eq" value="yes"/>
                            </ecl:line-selection>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.3.7_Set_SSH_HostbasedAuthentication_to_No" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Set SSH HostbasedAuthentication to No</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>The <xhtml:span class="inline_block">HostbasedAuthentication </xhtml:span>parameter specifies if authentication is allowed through trusted hosts via the user of <xhtml:span class="inline_block">.rhosts</xhtml:span>, or <xhtml:span class="inline_block">/etc/hosts.equiv</xhtml:span>, along with successful public key client host authentication. This option only
                        applies to SSH Protocol Version 2.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Even though the <xhtml:span class="inline_block">.rhosts </xhtml:span>files are ineffective if support is disabled in <xhtml:span class="inline_block">/etc/pam.conf</xhtml:span>, disabling
                        the ability to use <xhtml:span class="inline_block">.rhosts </xhtml:span>files in SSH provides an additional layer of protection .</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Edit the <xhtml:span class="inline_block">/etc/ssh/sshd_config </xhtml:span>file to set the parameter as follows:</xhtml:p>
                            <xhtml:code class="code_block">HostbasedAuthentication no</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <!--
                                                           
                                    1. Read contents of /etc/ssh/sshd_config
                                    2. Find first line (SSHD respects first occurrence only) that starts with 0 or more spaces (uncommented) 
                                    3.    and is followed by HostbasedAuthentication  
                                    3.    and is followed by a value that is equals no
                                    4. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                        <ecl:shell-command check="all" comment="Ensure SSH HostBasedAuthentication is disabled">
                            <ecl:command>grep '^\s*HostbasedAuthentication\s' /etc/ssh/sshd_config | head -1</ecl:command>
                            <ecl:line-selection op="pm" value="\s*\S+\s+(.+?)\s*(#.*)?$">
                                <ecl:regex-group dt="xs:string" group="1" op="eq" value="no"/>
                            </ecl:line-selection>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.3.8_Disable_SSH_Root_Login" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Disable SSH Root Login</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>The <xhtml:span class="inline_block">PermitRootLogin </xhtml:span>parameter specifies if the root user can log in using ssh(1). The default is no.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Disallowing root logins over SSH requires server admins to authenticate using their own individual account, then escalating to root via <xhtml:span class="inline_block">sudo </xhtml:span>or
                            <xhtml:span class="inline_block">su</xhtml:span>. This in turn limits opportunity for non-repudiation and provides a clear audit trail in the event of a security incident</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Edit the <xhtml:span class="inline_block">/etc/ssh/sshd_config </xhtml:span>file to set the parameter as follows:</xhtml:p>
                            <xhtml:code class="code_block">PermitRootLogin no</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <!--
                                                           
                                    1. Read contents of /etc/ssh/sshd_config
                                    2. Find first line (SSHD respects first occurrence only) that starts with 0 or more spaces (uncommented) 
                                    3.    and is followed by PermitRootLogin  
                                    3.    and is followed by a value that is equals no
                                    4. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                        <ecl:shell-command check="all" comment="Ensure SSH PermitRootLogin is disabled">
                            <ecl:command>grep '^\s*PermitRootLogin\s' /etc/ssh/sshd_config | head -1</ecl:command>
                            <ecl:line-selection op="pm" value="\s*\S+\s+(.+?)\s*(#.*)?$">
                                <ecl:regex-group dt="xs:string" group="1" op="eq" value="no"/>
                            </ecl:line-selection>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.3.9_Set_SSH_PermitEmptyPasswords_to_No" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Set SSH PermitEmptyPasswords to No</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>The <xhtml:span class="inline_block">PermitEmptyPasswords </xhtml:span>parameter specifies if the server allows login to accounts with empty password strings.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Disallowing remote shell access to accounts that have an empty password reduces the probability of unauthorized access to the system</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Edit the <xhtml:span class="inline_block">/etc/ssh/sshd_config </xhtml:span>file to set the parameter as follows:</xhtml:p>
                            <xhtml:code class="code_block">PermitEmptyPasswords no</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <!--
                                                           
                                    1. Read contents of /etc/ssh/sshd_config
                                    2. Find first line (SSHD respects first occurrence only) that starts with 0 or more spaces (uncommented) 
                                    3.    and is followed by PermitEmptyPasswords  
                                    3.    and is followed by a value that is equals no
                                    4. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                        <ecl:shell-command check="all" comment="Ensure SSH PermitEmptyPasswords is disabled">
                            <ecl:command>grep '^\s*PermitEmptyPasswords\s' /etc/ssh/sshd_config | head -1</ecl:command>
                            <ecl:line-selection op="pm" value="\s*\S+\s+(.+?)\s*(#.*)?$">
                                <ecl:regex-group dt="xs:string" group="1" op="eq" value="no"/>
                            </ecl:line-selection>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.3.10_Do_Not_Allow_Users_to_Set_Environment_Options" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Do Not Allow Users to Set Environment Options</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>The <xhtml:span class="inline_block">PermitUserEnvironment </xhtml:span>option allows users to present environment options to the <xhtml:span class="inline_block">ssh
                        </xhtml:span>daemon.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Permitting users the ability to set environment variables through the SSH daemon could potentially allow users to bypass security controls (e.g. setting an execution path that has <xhtml:span class="inline_block">ssh </xhtml:span>executing trojan'd programs)</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Edit the <xhtml:span class="inline_block">/etc/ssh/sshd_config </xhtml:span>file to set the parameter as follows:</xhtml:p>
                            <xhtml:code class="code_block">PermitUserEnvironment no </xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <!--
                                                           
                                    1. Read contents of /etc/ssh/sshd_config
                                    2. Find first line (SSHD respects first occurrence only) that starts with 0 or more spaces (uncommented) 
                                    3.    and is followed by PermitUserEnvironment  
                                    3.    and is followed by a value that is equals no
                                    4. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                        <ecl:shell-command check="all" comment="Ensure SSH PermitUserEnvironment is disabled">
                            <ecl:command>grep '^\s*PermitUserEnvironment\s' /etc/ssh/sshd_config | head -1</ecl:command>
                            <ecl:line-selection op="pm" value="\s*\S+\s+(.+?)\s*(#.*)?$">
                                <ecl:regex-group dt="xs:string" group="1" op="eq" value="no"/>
                            </ecl:line-selection>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.3.11_Use_Only_Approved_Cipher_in_Counter_Mode" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Use Only Approved Cipher in Counter Mode</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>This variable limits the types of ciphers that SSH can use during communication.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Based on research conducted at various institutions, it was determined that the symmetric portion of the SSH Transport Protocol (as described in RFC 4253) has security weaknesses that allowed
                        recovery of up to 32 bits of plaintext from a block of ciphertext that was encrypted with the Cipher Block Chaining (CBD) method. From that research, new Counter mode algorithms (as described in
                        RFC4344) were designed that are not vulnerable to these types of attacks and these algorithms are now recommended for standard use.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Edit the <xhtml:span class="inline_block">/etc/ssh/sshd_config </xhtml:span>file to set the parameter as follows:</xhtml:p>
                            <xhtml:code class="code_block">Ciphers aes128-ctr,aes192-ctr,aes256-ctr</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <!--
                                                           
                                    1. Read contents of /etc/ssh/sshd_config
                                    2. Find first line (SSHD respects first occurrence only) that starts with 0 or more spaces (uncommented) 
                                    3.    and is followed by Ciphers  
                                    3.    and is followed by a value that is equals aes128-ctr,aes192-ctr,aes256-ctr
                                    4. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                        <ecl:shell-command check="all" comment="Ensure SSH Ciphers is set to aes128-ctr,aes192-ctr,aes256-ctr">
                            <ecl:command>grep '^\s*Ciphers\s' /etc/ssh/sshd_config | head -1</ecl:command>
                            <ecl:line-selection op="pm" value="\s*\S+\s+(.+?)\s*(#.*)?$">
                                <ecl:regex-group dt="xs:string" group="1" op="eq" value="aes128-ctr,aes192-ctr,aes256-ctr"/>
                            </ecl:line-selection>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.3.12_Set_Idle_Timeout_Interval_for_User_Login" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Set Idle Timeout Interval for User Login</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>The two options <xhtml:span class="inline_block">ClientAliveInterval </xhtml:span>and <xhtml:span class="inline_block">ClientAliveCountMax </xhtml:span>control the timeout of ssh sessions.
                        When the <xhtml:span class="inline_block">ClientAliveInterval </xhtml:span>variable is set, ssh sessions that have no activity for the specified length of time are terminated. When the <xhtml:span class="inline_block">ClientAliveCountMax </xhtml:span>variable is set, <xhtml:span class="inline_block">sshd </xhtml:span>will send client alive messages at every <xhtml:span class="inline_block">ClientAliveInterval </xhtml:span>interval. When the number of consecutive client alive messages are sent with no response from the client, the <xhtml:span class="inline_block">ssh </xhtml:span>session is terminated. For example, if the <xhtml:span class="inline_block">ClientAliveInterval </xhtml:span>is set to 15 seconds and the <xhtml:span class="inline_block">ClientAliveCountMax </xhtml:span>is set to 3, the client <xhtml:span class="inline_block">ssh </xhtml:span>session will be terminated after 45 seconds of idle
                        time.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Having no timeout value associated with a connection could allow an unauthorized user access to another user's <xhtml:span class="inline_block">ssh </xhtml:span>session (e.g. user walks away
                        from their computer and doesn't lock the screen). Setting a timeout value at least reduces the risk of this happening.. </xhtml:p>
                    <xhtml:p>While the recommended setting is 300 seconds (5 minutes), set this timeout value based on site policy. The recommended setting for <xhtml:span class="inline_block">ClientAliveCountMax
                        </xhtml:span>is 0. In this case, the client session will be terminated after 5 minutes of idle time and no keepalive messages will be sent.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Edit the <xhtml:span class="inline_block">/etc/ssh/sshd_config </xhtml:span>file to set the parameter as follows:</xhtml:p>
                            <xhtml:code class="code_block">ClientAliveInterval 300<xhtml:br/>ClientAliveCountMax 0 </xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:complex-check operator="AND">
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <!--
                                                           
                                    1. Read contents of /etc/ssh/sshd_config
                                    2. Find first line (SSHD respects first occurrence only) that starts with 0 or more spaces (uncommented) 
                                    3.    and is followed by ClientAliveInterval  
                                    3.    and is followed by a value that is equals 300
                                    4. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                            <ecl:shell-command check="all" comment="Ensure SSH ClientAliveInterval is set to 300">
                                <ecl:command>grep '^\s*ClientAliveInterval\s' /etc/ssh/sshd_config | head -1</ecl:command>
                                <ecl:line-selection op="pm" value="\s*\S+\s+(.+?)\s*(#.*)?$">
                                    <ecl:regex-group dt="xs:string" group="1" op="eq" value="300"/>
                                </ecl:line-selection>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                    <xccdf:check system="http://cisecurity.org/check">
                        <xccdf:check-content>
                            <!--
                                                           
                                    1. Read contents of /etc/ssh/sshd_config
                                    2. Find first line (SSHD respects first occurrence only) that starts with 0 or more spaces (uncommented) 
                                    3.    and is followed by ClientAliveCountMax  
                                    3.    and is followed by a value that is equals 0
                                    4. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                            <ecl:shell-command check="all" comment="Ensure SSH ClientAliveCountMax is set to 0 ">
                                <ecl:command>grep '^\s*ClientAliveCountMax\s' /etc/ssh/sshd_config | head -1</ecl:command>
                                <ecl:line-selection op="pm" value="\s*\S+\s+(.+?)\s*(#.*)?$">
                                    <ecl:regex-group dt="xs:integer" group="1" op="eq" value="0"/>
                                </ecl:line-selection>
                            </ecl:shell-command>
                        </xccdf:check-content>
                    </xccdf:check>
                </xccdf:complex-check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.3.13_Limit_Access_via_SSH" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Limit Access via SSH</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>There are several options available to limit which users and group can access the system via SSH. It is recommended that at least one of the following options be leveraged:</xhtml:p>
                    <xhtml:p>
                        <xhtml:span class="inline_block">
                            <xhtml:span>AllowUsers</xhtml:span>
                        </xhtml:span>
                    </xhtml:p>
                    <xhtml:p>The <xhtml:span class="inline_block">AllowUsers </xhtml:span>variable gives the system administrator the option of allowing specific users to <xhtml:span class="inline_block">ssh
                        </xhtml:span>into the system. The list consists of comma separated user names. Numeric userIDs are not recognized with this variable. If a system administrator wants to restrict user access
                        further by only allowing the allowed users to log in from a particular host, the entry can be specified in the form of user@host.</xhtml:p>
                    <xhtml:p>
                        <xhtml:span class="inline_block">
                            <xhtml:span>AllowGroups</xhtml:span>
                        </xhtml:span>
                    </xhtml:p>
                    <xhtml:p>The <xhtml:span class="inline_block">AllowGroups </xhtml:span>variable gives the system administrator the option of allowing specific groups of users to <xhtml:span class="inline_block">ssh
                        </xhtml:span>into the system. The list consists of comma separated user names. Numeric groupIDs are not recognized with this variable.</xhtml:p>
                    <xhtml:p>
                        <xhtml:span class="inline_block">
                            <xhtml:span>DenyUsers</xhtml:span>
                        </xhtml:span>
                    </xhtml:p>
                    <xhtml:p>The <xhtml:span class="inline_block">DenyUsers </xhtml:span>variable gives the system administrator the option of denying specific users to <xhtml:span class="inline_block">ssh
                        </xhtml:span>into the system. The list consists of comma separated user names. Numeric userIDs are not recognized with this variable. If a system administrator wants to restrict user access
                        further by specifically denying a user's access from a particular host, the entry can be specified in the form of user@host.</xhtml:p>
                    <xhtml:p>
                        <xhtml:span class="inline_block">
                            <xhtml:span>DenyGroups</xhtml:span>
                        </xhtml:span>
                    </xhtml:p>
                    <xhtml:p>The <xhtml:span class="inline_block">DenyGroups </xhtml:span>variable gives the system administrator the option of denying specific groups of users to <xhtml:span class="inline_block">ssh
                        </xhtml:span>into the system. The list consists of comma separated group names. Numeric groupIDs are not recognized with this variable.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Restricting which users can remotely access the system via SSH will help ensure that only authorized users access the system.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Edit the <xhtml:span class="inline_block">/etc/ssh/sshd_config </xhtml:span>file to set one or more of the parameter as follows:</xhtml:p>
                            <xhtml:code class="code_block">AllowUsers &lt;userlist&gt;<xhtml:br/>AllowGroups &lt;grouplist&gt;<xhtml:br/>DenyUsers &lt;userlist&gt;<xhtml:br/>DenyGroups &lt;grouplist&gt;</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:file-content check="at least one" comment="Ensure SSH remote user restriction is configured">
                            <ecl:path>/etc/ssh/sshd_config</ecl:path>
                            <ecl:line-selection op="pm" value="^\s*(AllowUsers|AllowGroups|DenyUsers|DenyGroups)\s+.*"/>
                        </ecl:file-content>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.3.14_Set_SSH_Banner" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Set SSH Banner</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>The <xhtml:span class="inline_block">Banner </xhtml:span>parameter specifies a file whose contents must be sent to the remote user before authentication is permitted. By default, no banner is
                        displayed.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Banners are used to warn connecting users of the particular site's policy regarding connection. Consult with your legal department for the appropriate warning banner for your site.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Edit the <xhtml:span class="inline_block">/etc/ssh/sshd_config </xhtml:span>file to set the parameter as follows:</xhtml:p>
                            <xhtml:code class="code_block">Banner /etc/issue.net</xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <!--
                                                           
                                    1. Read contents of /etc/ssh/sshd_config
                                    2. Find first line (SSHD respects first occurrence only) that starts with 0 or more spaces (uncommented) 
                                    3.    and is followed by Banner  
                                    3.    and is followed by a value that is pattern match issue(\.net)?
                                    4. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                        <ecl:shell-command check="all" comment="Ensure Banner configured in sshd config">
                            <ecl:command>grep '^\s*Banner\s' /etc/ssh/sshd_config | head -1</ecl:command>
                            <ecl:line-selection op="pm" value="\s*\S+\s+(.+?)\s*(#.*)?$">
                                <ecl:regex-group dt="xs:string" group="1" op="pm" value="issue(\.net)?"/>
                            </ecl:line-selection>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
        </xccdf:Group>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.4_Restrict_root_Login_to_System_Console" role="unscored" selected="false" weight="0.0">
            <xccdf:title xml:lang="en">Restrict root Login to System Console</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The file <xhtml:span class="inline_block">/etc/securetty </xhtml:span>contains a list of valid terminals that may be logged in directly as root.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Since the system console has special properties to handle emergency situations, it is important to ensure that the console is in a physically secure location and that unauthorized consoles have
                    not been defined.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Remove entries for any consoles that are not in a physically secure location.</xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.5_Restrict_Access_to_the_su_Command" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Restrict Access to the su Command</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The <xhtml:span class="inline_block">su </xhtml:span>command allows a user to run a command or shell as another user. The program has been superseded by <xhtml:span class="inline_block">sudo</xhtml:span>, which allows for more granular control over privileged access. Normally, the <xhtml:span class="inline_block">su </xhtml:span>command can be executed by any user. By
                    uncommenting the <xhtml:span class="inline_block">pam_wheel.so </xhtml:span>statement in <xhtml:span class="inline_block">/etc/pam.d/su</xhtml:span>, the <xhtml:span class="inline_block">su
                    </xhtml:span>command will only allow users in the wheel group to execute <xhtml:span class="inline_block">su</xhtml:span>.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Restricting the use of <xhtml:span class="inline_block">su</xhtml:span>, and using <xhtml:span class="inline_block">sudo </xhtml:span>in its place, provides system administrators better control
                    of the escalation of user privileges to execute privileged commands. The sudo utility also provides a better logging and audit mechanism, as it can log each command executed via <xhtml:span class="inline_block">sudo</xhtml:span>, whereas <xhtml:span class="inline_block">su </xhtml:span>can only record that a user executed the <xhtml:span class="inline_block">su
                    </xhtml:span>program.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>add the following line to the <xhtml:span class="inline_block">/etc/pam.d/su </xhtml:span>file.</xhtml:p>
                        <xhtml:code class="code_block">auth required pam_wheel.so use_uid</xhtml:code>
                        <xhtml:p>Once this is done, create a comma separated list of users in the wheel statement in the <xhtml:span class="inline_block">/etc/group </xhtml:span>file.</xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:file-content check="at least one" comment="pam.requirewheelgroupforsu">
                        <ecl:path>/etc/pam.d/su</ecl:path>
                        <ecl:line-selection op="pm" value="^\s*auth\s+required\s+pam_wheel.so\s+use_uid"/>
                    </ecl:file-content>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
    </xccdf:Group>
    <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_10_User_Accounts_and_Environment">
        <xccdf:title xml:lang="en">User Accounts and Environment</xccdf:title>
        <xccdf:description xml:lang="en">
            <xhtml:p>This section provides guidance on setting up secure defaults for system and user accounts and their environment.</xhtml:p>
        </xccdf:description>
        <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_10.1_Set_Shadow_Password_Suite_Parameters_etclogin.defs">
            <xccdf:title xml:lang="en">Set Shadow Password Suite Parameters (/etc/login.defs)</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>While a majority of the password control parameters have been moved to PAM, some parameters are still available through the shadow password suite. Any changes made to <xhtml:span class="inline_block">/etc/login.defs </xhtml:span>will only be applied if the <xhtml:span class="inline_block">usermod </xhtml:span>command is used. If userIDs are added a different way, use the
                        <xhtml:span class="inline_block">chage </xhtml:span>command to effect changes to individual userIDs.</xhtml:p>
            </xccdf:description>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_10.1.1_Set_Password_Expiration_Days" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Set Password Expiration Days</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>The <xhtml:span class="inline_block">PASS_MAX_DAYS </xhtml:span>parameter in <xhtml:span class="inline_block">/etc/login.defs </xhtml:span>allows an administrator to force passwords to expire
                        once they reach a defined age. It is recommended that the <xhtml:span class="inline_block">PASS_MAX_DAYS </xhtml:span>parameter be set to less than or equal to 90 days.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>The window of opportunity for an attacker to leverage compromised credentials or successfully compromise credentials via an online brute force attack is limited by the age of the password.
                        Therefore, reducing the maximum age of a password also reduces an attacker's window of opportunity.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Set the <xhtml:span class="inline_block">PASS_MAX_DAYS</xhtml:span> parameter to <xhtml:span class="inline_block">90</xhtml:span> in <xhtml:span class="inline_block">/etc/login.defs</xhtml:span>:</xhtml:p>
                            <xhtml:code class="code_block">PASS_MAX_DAYS 90</xhtml:code>
                            <xhtml:p>Modify active user parameters to match:</xhtml:p>
                            <xhtml:code class="code_block">
                                <xhtml:span># chage --maxdays 90 &lt;user&gt;</xhtml:span>
                            </xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:file-content check="at least one" comment="password.expirationlength">
                            <ecl:path>/etc/login.defs</ecl:path>
                            <ecl:line-selection op="pm" value="^\s*PASS_MAX_DAYS\s+90"/>
                        </ecl:file-content>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_10.1.2_Set_Password_Change_Minimum_Number_of_Days" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Set Password Change Minimum Number of Days</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>The <xhtml:span class="inline_block">PASS_MIN_DAYS </xhtml:span>parameter in <xhtml:span class="inline_block">/etc/login.defs </xhtml:span>allows an administrator to prevent users from
                        changing their password until a minimum number of days have passed since the last time the user changed their password. It is recommended that <xhtml:span class="inline_block">PASS_MIN_DAYS
                        </xhtml:span>parameter be set to 7 or more days.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>By restricting the frequency of password changes, an administrator can prevent users from repeatedly changing their password in an attempt to circumvent password reuse controls.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p>Set the <xhtml:span class="inline_block">PASS_MIN_DAYS</xhtml:span> parameter to <xhtml:span>7</xhtml:span> in <xhtml:span class="inline_block">/etc/login.defs</xhtml:span>:</xhtml:p>
                            <xhtml:code class="code_block">PASS_MIN_DAYS 7</xhtml:code>
                            <xhtml:p>Modify active user parameters to match:</xhtml:p>
                            <xhtml:code class="code_block">
                                <xhtml:span># chage --mindays 7 &lt;user&gt;</xhtml:span>
                            </xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:file-content check="at least one" comment="password.minimumtimetochange">
                            <ecl:path>/etc/login.defs</ecl:path>
                            <ecl:line-selection op="pm" value="^\s*PASS_MIN_DAYS\s+([7-9]|[1-9][0-9]*)"/>
                        </ecl:file-content>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
            <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_10.1.3_Set_Password_Expiring_Warning_Days" role="full" selected="false" weight="1.0">
                <xccdf:title xml:lang="en">Set Password Expiring Warning Days</xccdf:title>
                <xccdf:description xml:lang="en">
                    <xhtml:p>The <xhtml:span class="inline_block">PASS_WARN_AGE </xhtml:span>parameter in <xhtml:span class="inline_block">/etc/login.defs</xhtml:span> allows an administrator to notify users that their
                        password will expire in a defined number of days. It is recommended that the <xhtml:span class="inline_block">PASS_WARN_AGE </xhtml:span>parameter be set to 7 or more days.</xhtml:p>
                </xccdf:description>
                <xccdf:rationale xml:lang="en">
                    <xhtml:p>Providing an advance warning that a password will be expiring gives users time to think of a secure password. Users caught unaware may choose a simple password or write it down where it may
                        be discovered.</xhtml:p>
                </xccdf:rationale>
                <xccdf:fixtext xml:lang="en">
                    <xhtml:div>
                        <xhtml:p>
                            <xhtml:p style="margin-top: 8px; margin-bottom: 8px; border: 0px; outline: 0px; vertical-align: baseline; line-height: 20px;">Set the <xhtml:span class="inline_block" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline; background-color: transparent;">PASS_WARN_AGE</xhtml:span> parameter to
                                    <xhtml:span style="font-family: 'Courier New', Courier, monospace; font-size: small;">7</xhtml:span> in <xhtml:span class="inline_block" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline; background-color: transparent;">/etc/login.defs</xhtml:span>:</xhtml:p>
                            <xhtml:code class="code_block">PASS_WARN_AGE 7</xhtml:code>
                            <xhtml:p style="margin-top: 8px; margin-bottom: 8px; border: 0px; outline: 0px; vertical-align: baseline; line-height: 20px;">Modify active user parameters to match:</xhtml:p>
                            <xhtml:code class="code_block">
                                <xhtml:span style="margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline; background-color: transparent; font-family: 'Lucida Grande', Verdana, Verdana, Arial, Helvetica, sans-serif; line-height: 18px;"># chage --warndays 7 &lt;user&gt;</xhtml:span>
                            </xhtml:code>
                            <xhtml:p> </xhtml:p>
                        </xhtml:p>
                    </xhtml:div>
                </xccdf:fixtext>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:file-content check="at least one" comment="password.expirationwarning">
                            <ecl:path>/etc/login.defs</ecl:path>
                            <ecl:line-selection op="pm" value="^\s*PASS_WARN_AGE\s+([7-9]|[1-9][0-9]+)"/>
                        </ecl:file-content>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:Rule>
        </xccdf:Group>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_10.2_Disable_System_Accounts" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Disable System Accounts</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>There are a number of accounts provided with Ubuntu that are used to manage applications and are not intended to provide an interactive shell.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>It is important to make sure that accounts that are not being used by regular users are locked to prevent them from being used to provide an interactive shell. By default Ubuntu set the password
                    field for these accounts to an invalid string, but it is also recommended that the shell field in the password file be set to <xhtml:span class="inline_block">/usr/sbin/nologin</xhtml:span>. This
                    prevents the account from potentially being used to run any commands.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Accounts that have been locked are prohibited from running commands on the system. Such accounts are not able to login to the system nor are they able to use scheduled execution
                            facilities such as cron. To make sure system accounts cannot be accessed, using the following script:</xhtml:p>
                        <xhtml:code class="code_block">#!/bin/bash<xhtml:br/>for user in `awk -F: '($3 &lt; 500) {print $1 }' /etc/passwd`; do<xhtml:br/> if [ $user != "root" ]<xhtml:br/> then<xhtml:br/>
                            /usr/sbin/usermod -L $user<xhtml:br/> if [ $user != "sync" ] &amp;&amp; [ $user != "shutdown" ] &amp;&amp; [ $user != "halt" ]<xhtml:br/> then<xhtml:br/> /usr/sbin/usermod -s /usr/sbin/nologin
                            $user<xhtml:br/> fi<xhtml:br/> fi<xhtml:br/>done</xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="none exist" comment="Ensure system accounts are disabled">
                        <ecl:command>egrep -v "^\+" /etc/passwd | awk -F: '($1!="root" &amp;&amp; $1!="sync" &amp;&amp; $1!="shutdown" &amp;&amp; $1!="halt" &amp;&amp; $3&lt;500 &amp;&amp; $7!="/usr/sbin/nologin"
                            &amp;&amp; $7!="/bin/false") {print}'</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_10.3_Set_Default_Group_for_root_Account" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Set Default Group for root Account</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The usermod command can be used to specify which group the root user belongs to. This affects permissions of files that are created by the root user.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Using GID 0 for the <xhtml:span class="inline_block">
                        <xhtml:em>root</xhtml:em>
                    </xhtml:span>account helps prevent <xhtml:span class="inline_block">
                        <xhtml:em>root</xhtml:em>
                    </xhtml:span>-owned files from accidentally becoming accessible to non-privileged users.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:code class="code_block"># usermod -g 0 root</xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="at least one" comment="users.root.group">
                        <ecl:command>grep "^root:" /etc/passwd | cut -f4 -d:</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="^0$"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_10.4_Set_Default_umask_for_Users" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Set Default umask for Users</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The default <xhtml:span class="inline_block">umask </xhtml:span>determines the permissions of files created by users. The user creating the file has the discretion of making their files and
                    directories readable by others via the chmod command. Users who wish to allow their files and directories to be readable by others by default may choose a different default umask by inserting the
                        <xhtml:span class="inline_block">umask </xhtml:span>command into the standard shell configuration files (<xhtml:span class="inline_block">.profile</xhtml:span>, <xhtml:span class="inline_block">.bashrc</xhtml:span>, etc.) in their home directories.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Setting a very secure default value for <xhtml:span class="inline_block">umask </xhtml:span>ensures that users make a conscious choice about their file permissions. A default <xhtml:span class="inline_block">umask </xhtml:span>setting of <xhtml:span class="inline_block">077 </xhtml:span>causes files and directories created by users to not be readable by any other user on the
                    system. A <xhtml:span class="inline_block">umask </xhtml:span>of <xhtml:span class="inline_block">027 </xhtml:span>would make files and directories readable by users in the same Unix group, while a
                        <xhtml:span class="inline_block">umask </xhtml:span>of <xhtml:span class="inline_block">022 </xhtml:span>would make files readable by every user on the system.</xhtml:p>
                <xhtml:p>
                    <xhtml:strong>Note:</xhtml:strong> The directives in this section apply to bash and shell. If other shells are supported on the system, it is recommended that their configuration files also are
                    checked. <xhtml:br/>
                </xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Edit the <xhtml:span class="inline_block">
                                <xhtml:strong>/etc/login.defs </xhtml:strong>
                            </xhtml:span>file (and the appropriate files for any other shell supported on your system as necessary) and set the UMASK parameter as shown:</xhtml:p>
                        <xhtml:code class="code_block">UMASK 077</xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:file-content check="at least one" comment="Ensure /etc/login.defs umask allows access by owner only">
                        <ecl:path>/etc/login.defs</ecl:path>
                        <ecl:line-selection op="pm" value="^UMASK\s+077$"/>
                    </ecl:file-content>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_10.5_Lock_Inactive_User_Accounts" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Lock Inactive User Accounts</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>User accounts that have been inactive for over a given period of time can be automatically disabled. It is recommended that accounts that are inactive for 35 or more days be disabled. </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Inactive accounts pose a threat to system security since the users are not logging in to notice failed login attempts or other anomalies.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:code class="code_block"># useradd -D -f 35</xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="at least one" comment="users.default.inativelock">
                        <ecl:command>useradd -D | grep INACTIVE</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="^INACTIVE=35$"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
    </xccdf:Group>
    <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_11_Warning_Banners">
        <xccdf:title xml:lang="en">Warning Banners</xccdf:title>
        <xccdf:description xml:lang="en">
            <xhtml:p>Presenting a warning message prior to the normal user login may assist the prosecution of trespassers on the computer system. Changing some of these login banners also has the side effect of hiding
                OS version information and other detailed system information from attackers attempting to target specific exploits at a system.</xhtml:p>
            <xhtml:p>Guidelines published by the US Department of Defense require that warning messages include at least the name of the organization that owns the system, the fact that the system is subject to
                monitoring and that such monitoring is in compliance with local statutes, and that use of the system implies consent to such monitoring. It is important that the organization's legal counsel review the
                content of all messages before any system modifications are made, as these warning messages are inherently site-specific. More information (including citations of relevant case law) can be found at
                    <xhtml:a href="http://www.justice.gov/criminal/cybercrime/ ">http://www.justice.gov/criminal/cybercrime/ </xhtml:a>
            </xhtml:p>
            <xhtml:p>
                <xhtml:strong>Note:</xhtml:strong> The text provided in the remediation actions for these items is intended as an example only. Please edit to include the specific text for your organization as approved
                by your legal department.</xhtml:p>
        </xccdf:description>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_11.1_Set_Warning_Banner_for_Standard_Login_Services" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Set Warning Banner for Standard Login Services</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The contents of the <xhtml:span class="inline_block">/etc/issue </xhtml:span>file are displayed prior to the login prompt on the system's console and serial devices, and also prior to logins via
                    telnet. The contents of the<xhtml:span class="inline_block"> /etc/motd </xhtml:span>file is generally displayed after all successful logins, no matter where the user is logging in from, but is thought
                    to be less useful because it only provides notification to the user after the machine has been accessed.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any
                    monitoring policies that are in place. Consult with your organization's legal counsel for the appropriate wording for your specific organization.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:code class="code_block"># touch /etc/motd<xhtml:br/># echo "Authorized uses only. All activity may be \<xhtml:br/>monitored and reported." &gt; /etc/issue<xhtml:br/># echo "Authorized uses
                            only. All activity may be \<xhtml:br/>monitored and reported." &gt; /etc/issue.net<xhtml:br/># chown root:root /etc/motd<xhtml:br/># chmod 644 /etc/motd<xhtml:br/># chown root:root
                            /etc/issue<xhtml:br/># chmod 644 /etc/issue<xhtml:br/># chown root:root /etc/issue.net<xhtml:br/># chmod 644 /etc/issue.net</xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="AND">
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <!--
                                                           
                                    1. AND the existing permissions on /etc/motd against the provided permissions (0022).
                                    2. If checking for existance of permissions, the output should equal the input. If checking for absense of permissions, the output should equal "000".
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                        <ecl:shell-command check="all" comment="Ensure /etc/motd permisions do not allow group/other write access">
                            <ecl:command>ui=($(echo 0022 -n | fold -w1));sys=($(stat -L --format="%a" /etc/motd | awk '{printf "%04d\n", $0;}' | fold -w1));for (( i=0; i&lt;4; i++ )); do echo -n $(( ${ui[$i]} &amp;
                                ${sys[$i]})); done;</ecl:command>
                            <ecl:line-selection op="pm" value="^(\d+)$">
                                <ecl:regex-group dt="xs:string" group="1" op="eq" value="0000"/>
                            </ecl:line-selection>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <!--
                                                           
                                    1. AND the existing permissions on /etc/issue against the provided permissions (0022).
                                    2. If checking for existance of permissions, the output should equal the input. If checking for absense of permissions, the output should equal "000".
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                        <ecl:shell-command check="all" comment="Ensure /etc/issue permisions do not allow group/other write access">
                            <ecl:command>ui=($(echo 0022 -n | fold -w1));sys=($(stat -L --format="%a" /etc/issue | awk '{printf "%04d\n", $0;}' | fold -w1));for (( i=0; i&lt;4; i++ )); do echo -n $(( ${ui[$i]} &amp;
                                ${sys[$i]})); done;</ecl:command>
                            <ecl:line-selection op="pm" value="^(\d+)$">
                                <ecl:regex-group dt="xs:string" group="1" op="eq" value="0000"/>
                            </ecl:line-selection>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <!--
                                                           
                                    1. AND the existing permissions on /etc/issue.net against the provided permissions (0022).
                                    2. If checking for existance of permissions, the output should equal the input. If checking for absense of permissions, the output should equal "000".
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                        <ecl:shell-command check="all" comment="Ensure /etc/issue.net permisions do not allow group/other write access">
                            <ecl:command>ui=($(echo 0022 -n | fold -w1));sys=($(stat -L --format="%a" /etc/issue.net | awk '{printf "%04d\n", $0;}' | fold -w1));for (( i=0; i&lt;4; i++ )); do echo -n $(( ${ui[$i]} &amp;
                                ${sys[$i]})); done;</ecl:command>
                            <ecl:line-selection op="pm" value="^(\d+)$">
                                <ecl:regex-group dt="xs:string" group="1" op="eq" value="0000"/>
                            </ecl:line-selection>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:file-content check="at least one" comment="Ensure /etc/issue is not empty">
                            <ecl:path>/etc/issue</ecl:path>
                            <ecl:line-selection op="pm" value=".+"/>
                        </ecl:file-content>
                    </xccdf:check-content>
                </xccdf:check>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:file-content check="at least one" comment="Ensure /etc/issue.net is not empty">
                            <ecl:path>/etc/issue.net</ecl:path>
                            <ecl:line-selection op="pm" value=".+"/>
                        </ecl:file-content>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:complex-check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_11.2_Remove_OS_Information_from_Login_Warning_Banners" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Remove OS Information from Login Warning Banners</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing
                    software for a particular OS platform. If <xhtml:span class="inline_block">mingetty(8) </xhtml:span>supports the following options, they display operating system information: <xhtml:br/>
                    <xhtml:span class="inline_block">\m</xhtml:span> - machine architecture (<xhtml:span class="inline_block">uname -m</xhtml:span>)<xhtml:br/>
                    <xhtml:span class="inline_block">\r</xhtml:span> - operating system release (<xhtml:span class="inline_block">uname -r</xhtml:span>)<xhtml:br/>
                    <xhtml:span class="inline_block">\s</xhtml:span> - operating system name<xhtml:br/>
                    <xhtml:span class="inline_block">\v</xhtml:span> - operating system version (<xhtml:span class="inline_block">uname -v</xhtml:span>)</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system.
                    Authorized users can easily get this information by running the "<xhtml:span class="inline_block">uname -a</xhtml:span>" command once they have logged in.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Edit the <xhtml:span class="inline_block">/etc/motd</xhtml:span>, <xhtml:span class="inline_block">/etc/issue </xhtml:span>and <xhtml:span class="inline_block">/etc/issue.net
                            </xhtml:span>files and remove any lines containing <xhtml:span class="inline_block">\m</xhtml:span>, <xhtml:span class="inline_block">\r</xhtml:span>, <xhtml:span class="inline_block">\s</xhtml:span> or <xhtml:span class="inline_block">\v</xhtml:span>.</xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="AND">
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:file-content check="none exist" comment="etc.motd.osinfo">
                            <ecl:path>/etc/motd</ecl:path>
                            <ecl:line-selection op="pm" value="(\\v|\\r|\\m|\\s)"/>
                        </ecl:file-content>
                    </xccdf:check-content>
                </xccdf:check>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:file-content check="none exist" comment="etc.issue.osinfo">
                            <ecl:path>/etc/issue</ecl:path>
                            <ecl:line-selection op="pm" value="(\\v|\\r|\\m|\\s)"/>
                        </ecl:file-content>
                    </xccdf:check-content>
                </xccdf:check>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:file-content check="none exist" comment="etc.issuenet.osinfo">
                            <ecl:path>/etc/issue.net</ecl:path>
                            <ecl:line-selection op="pm" value="(\\v|\\r|\\m|\\s)"/>
                        </ecl:file-content>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:complex-check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_11.3_Set_Graphical_Warning_Banner" role="unscored" selected="false" weight="0.0">
            <xccdf:title xml:lang="en">Set Graphical Warning Banner</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>Ubuntu defaults to using lightdm for graphical login session management which provides no built in banner setting. The GNOME Display Manager and KDM are both available but must be manually
                    installed.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any
                    monitoring policies that are in place. Consult with your organization's legal counsel for the appropriate wording for your specific organization.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Set a banner for the display manager in use consistent with your organizations policy. This process depends on the specific Display Manager and theme in use, consult your documentation
                            for more details.</xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
        </xccdf:Rule>
    </xccdf:Group>
    <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_12_Verify_System_File_Permissions">
        <xccdf:title xml:lang="en">Verify System File Permissions</xccdf:title>
        <xccdf:description xml:lang="en">
            <xhtml:p> </xhtml:p>
        </xccdf:description>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_12.1_Verify_Permissions_on_etcpasswd" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Verify Permissions on /etc/passwd</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The <xhtml:span class="inline_block">/etc/passwd </xhtml:span>file contains user account information that is used by many system utilities and therefore must be readable for these utilities to
                    operate.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>It is critical to ensure that the <xhtml:span class="inline_block">/etc/passwd </xhtml:span>file is protected from unauthorized write access. Although it is protected by default, the file
                    permissions could be changed either inadvertently or through malicious actions.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>If the permissions of the <xhtml:span class="inline_block">/etc/passwd </xhtml:span>file are incorrect, run the following command to correct them:</xhtml:p>
                        <xhtml:code class="code_block"># /bin/chmod 644 /etc/passwd </xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <!--
                                                           
                                    1. AND the existing permissions on /etc/passwd against the provided permissions (0022).
                                    2. If checking for existance of permissions, the output should equal the input. If checking for absense of permissions, the output should equal "000".
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                    <ecl:shell-command check="all" comment="Ensure /etc/password permisions do not allow group/other write access">
                        <ecl:command>ui=($(echo 0022 -n | fold -w1));sys=($(stat -L --format="%a" /etc/passwd | awk '{printf "%04d\n", $0;}' | fold -w1));for (( i=0; i&lt;4; i++ )); do echo -n $(( ${ui[$i]} &amp;
                            ${sys[$i]})); done;</ecl:command>
                        <ecl:line-selection op="pm" value="^(\d+)$">
                            <ecl:regex-group dt="xs:string" group="1" op="eq" value="0000"/>
                        </ecl:line-selection>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_12.2_Verify_Permissions_on_etcshadow" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Verify Permissions on /etc/shadow</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The <xhtml:span class="inline_block">/etc/shadow </xhtml:span>file is used to store the information about user accounts that is critical to the security of those accounts, such as the hashed
                    password and other security information.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>If attackers can gain read access to the <xhtml:span class="inline_block">/etc/shadow </xhtml:span>file, they can easily run a password cracking program against the hashed password to break it.
                    Other security information that is stored in the <xhtml:span class="inline_block">/etc/shadow </xhtml:span>file (such as expiration) could also be useful to subvert the user accounts.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>If the permissions of the <xhtml:span class="inline_block">/etc/shadow </xhtml:span>file are incorrect, run the following commands to correct them:</xhtml:p>
                        <xhtml:code class="code_block"># /bin/chmod o-rwx,g-rw /etc/shadow</xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <!--
                                                           
                                    1. AND the existing permissions on /etc/shadow against the provided permissions (0037).
                                    2. If checking for existance of permissions, the output should equal the input. If checking for absense of permissions, the output should equal "000".
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                    <ecl:shell-command check="all" comment="Ensure /etc/shadow permissions allow no access">
                        <ecl:command>ui=($(echo 0037 -n | fold -w1));sys=($(stat -L --format="%a" /etc/shadow | awk '{printf "%04d\n", $0;}' | fold -w1));for (( i=0; i&lt;4; i++ )); do echo -n $(( ${ui[$i]} &amp;
                            ${sys[$i]})); done;</ecl:command>
                        <ecl:line-selection op="pm" value="^(\d+)$">
                            <ecl:regex-group dt="xs:string" group="1" op="eq" value="0000"/>
                        </ecl:line-selection>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_12.3_Verify_Permissions_on_etcgroup" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Verify Permissions on /etc/group</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The <xhtml:span class="inline_block">/etc/group </xhtml:span>file contains a list of all the valid groups defined in the system. The command below allows read/write access for root and read
                    access for everyone else.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>The <xhtml:span class="inline_block">/etc/group </xhtml:span>file needs to be protected from unauthorized changes by non-privileged users, but needs to be readable as this information is used
                    with many non-privileged programs.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>If the permissions of the <xhtml:span class="inline_block">/etc/group </xhtml:span>file are incorrect, run the following command to correct them:</xhtml:p>
                        <xhtml:code class="code_block"># /bin/chmod 644 /etc/group </xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <!--
                                                           
                                    1. AND the existing permissions on /etc/group against the provided permissions (0022).
                                    2. If checking for existance of permissions, the output should equal the input. If checking for absense of permissions, the output should equal "000".
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                    <ecl:shell-command check="all" comment="Ensure /etc/group permisions do not allow group/other write access">
                        <ecl:command>ui=($(echo 0022 -n | fold -w1));sys=($(stat -L --format="%a" /etc/group | awk '{printf "%04d\n", $0;}' | fold -w1));for (( i=0; i&lt;4; i++ )); do echo -n $(( ${ui[$i]} &amp;
                            ${sys[$i]})); done;</ecl:command>
                        <ecl:line-selection op="pm" value="^(\d+)$">
                            <ecl:regex-group dt="xs:string" group="1" op="eq" value="0000"/>
                        </ecl:line-selection>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_12.4_Verify_UserGroup_Ownership_on_etcpasswd" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Verify User/Group Ownership on /etc/passwd</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The <xhtml:span class="inline_block">/etc/passwd </xhtml:span>file contains a list of all the valid userIDs defined in the system, but not the passwords. The command below sets the owner and
                    group of the file to root.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>The <xhtml:span class="inline_block">/etc/passwd </xhtml:span>file needs to be protected from unauthorized changes by non-priliveged users, but needs to be readable as this information is used
                    with many non-privileged programs.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>If the user and group ownership of the <xhtml:span class="inline_block">/etc/passwd </xhtml:span>file are incorrect, run the following command to correct them:</xhtml:p>
                        <xhtml:code class="code_block"># /bin/chown root:root /etc/passwd </xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="at least one" comment="filesystem.etc.passwd.owner">
                        <ecl:command>stat -c "%u %g" /etc/passwd</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="0 0"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_12.5_Verify_UserGroup_Ownership_on_etcshadow" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Verify User/Group Ownership on /etc/shadow</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The <xhtml:span class="inline_block">/etc/shadow </xhtml:span>file contains the one-way cipher text passwords for each user defined in the <xhtml:span class="inline_block">/etc/passwd</xhtml:span> file. The command below sets the user and group ownership of the file to root.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>If attackers can gain read access to the <xhtml:span class="inline_block">/etc/shadow </xhtml:span>file, they can easily run a password cracking program against the hashed password to break it.
                    Other security information that is stored in the <xhtml:span class="inline_block">/etc/shadow </xhtml:span>file (such as expiration) could also be useful to subvert the user accounts.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>If the ownership of the <xhtml:span class="inline_block">/etc/shadow </xhtml:span>file are incorrect, run the following command to correct them:</xhtml:p>
                        <xhtml:code class="code_block"># /bin/chown root:shadow /etc/shadow</xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="at least one" comment="filesystem.etc.shadow.owner">
                        <ecl:command>stat -c "%u %g" /etc/shadow</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="0 (0|42)"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_12.6_Verify_UserGroup_Ownership_on_etcgroup" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Verify User/Group Ownership on /etc/group</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The <xhtml:span class="inline_block">/etc/group </xhtml:span>file contains a list of all the valid groups defined in the system. The command below allows read/write access for root and read
                    access for everyone else.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>The <xhtml:span class="inline_block">/etc/group </xhtml:span>file needs to be protected from unauthorized changes by non-priliveged users, but needs to be readable as this information is used
                    with many non-privileged programs.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>If the ownership of the <xhtml:span class="inline_block">/etc/group </xhtml:span>file are incorrect, run the following command to correct them:</xhtml:p>
                        <xhtml:code class="code_block"># /bin/chown root:root /etc/group</xhtml:code>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="at least one" comment="filesystem.etc.group.owner">
                        <ecl:command>stat -c "%u %g" /etc/group</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="0 0"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_12.7_Find_World_Writable_Files" role="unscored" selected="false" weight="0.0">
            <xccdf:title xml:lang="en">Find World Writable Files</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>Unix-based systems support variable settings to control access to files. World writable files are the least secure. See the <xhtml:span class="inline_block">chmod(2)</xhtml:span> man page for
                    more information.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Data in world-writable files can be modified and compromised by any user on the system. World writable files may also indicate an incorrectly written script or program that could potentially be
                    the cause of a larger compromise to the system's integrity.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Removing write access for the "other" category (<xhtml:span class="inline_block">chmod o-w <xhtml:em>&lt;filename&gt;</xhtml:em>
                            </xhtml:span>
                            <xhtml:em>)</xhtml:em> is advisable, but always consult relevant vendor documentation to avoid breaking any application dependencies on a given file.</xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="none exist" comment="Ensure no world writable files exist">
                        <ecl:command>df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type f -perm -0002 -print</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_12.8_Find_Un-owned_Files_and_Directories" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Find Un-owned Files and Directories</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>Sometimes when administrators delete users from the password file they neglect to remove all files owned by those users from the system.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>A new user who is assigned the deleted user's user ID or group ID may then end up "owning" these files, and thus have more access on the system than was intended.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Locate files that are owned by users or groups not listed in the system configuration files, and reset the ownership of these files to some active user on the system as
                            appropriate.</xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="none exist" comment="filesystem.unownedfiles">
                        <ecl:command>df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -nouser -ls</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_12.9_Find_Un-grouped_Files_and_Directories" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Find Un-grouped Files and Directories</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>Sometimes when administrators delete users from the password file they neglect to remove all files owned by those users from the system.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>A new user who is assigned the deleted user's user ID or group ID may then end up "owning" these files, and thus have more access on the system than was intended.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Locate files that are owned by users or groups not listed in the system configuration files, and reset the ownership of these files to some active user on the system as
                            appropriate.</xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="none exist" comment="filesystem.ungroupedfiles">
                        <ecl:command>df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -group -ls</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_12.10_Find_SUID_System_Executables" role="unscored" selected="false" weight="0.0">
            <xccdf:title xml:lang="en">Find SUID System Executables</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The owner of a file can set the file's permissions to run with the owner's or group's permissions, even if the user running the program is not the owner or a member of the group. The most common
                    reason for a SUID program is to enable users to perform functions (such as changing their password) that require root privileges.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>There are valid reasons for SUID programs, but it is important to identify and review such programs to ensure they are legitimate.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Ensure that no rogue set-UID programs have been introduced into the system. Review the files returned by the action in the Audit section and confirm the integrity of these
                            binaries.</xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_12.11_Find_SGID_System_Executables" role="unscored" selected="false" weight="0.0">
            <xccdf:title xml:lang="en">Find SGID System Executables</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The owner of a file can set the file's permissions to run with the owner's or group's permissions, even if the user running the program is not the owner or a member of the group. The most common
                    reason for a SGID program is to enable users to perform functions (such as changing their password) that require root privileges.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>There are valid reasons for SGID programs, but it is important to identify and review such programs to ensure they are legitimate. Review the files returned by the action in the audit section and
                    check to see if system binaries have a different md5 checksum than what from the package. This is an indication that the binary may have been replaced.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Ensure that no rogue set-GID programs have been introduced into the system. Review the files returned by the action in the Audit section and confirm the the integrity of these
                            binaries.</xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
        </xccdf:Rule>
    </xccdf:Group>
    <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_13_Review_User_and_Group_Settings">
        <xccdf:title xml:lang="en">Review User and Group Settings</xccdf:title>
        <xccdf:description xml:lang="en">
            <xhtml:p>This section provides guidance on securing aspects of the users and groups.</xhtml:p>
        </xccdf:description>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_13.1_Ensure_Password_Fields_are_Not_Empty" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure Password Fields are Not Empty</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>An account with an empty password field means that anybody may log in as that user without providing a password.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>All accounts must have passwords or be locked to prevent the account from being used by an unauthorized user.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>If any accounts in the <xhtml:span class="inline_block">/etc/shadow </xhtml:span>file do not have a password, run the following command to lock the account until it can be determined why
                            it does not have a password:</xhtml:p>
                        <xhtml:code class="code_block"># /usr/bin/passwd -l &lt;username&gt;</xhtml:code>
                        <xhtml:p>Also, check to see if the account is logged in and investigate what it is being used for to determine if it needs to be forced off.</xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="none exist" comment="Ensure no users have an empty password field">
                        <ecl:command>cat /etc/shadow | awk -F: '($2 == "" ) { print $1 " does not have a password "}'</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_13.2_Verify_No_Legacy__Entries_Exist_in_etcpasswd_File" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Verify No Legacy "+" Entries Exist in /etc/passwd File</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The character + in various files used to be markers for systems to insert data from NIS maps at a certain point in a system configuration file. These entries are no longer required on most
                    systems, but may exist in files that have been imported from other platforms.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>These entries may provide an avenue for attackers to gain privileged access on the system.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Delete these entries if they exist.</xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:file-content check="none exist" comment="Ensure no entries in /etc/passwd begin with +">
                        <ecl:path>/etc/passwd</ecl:path>
                        <ecl:line-selection op="pm" value="^\+"/>
                    </ecl:file-content>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_13.3_Verify_No_Legacy__Entries_Exist_in_etcshadow_File" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Verify No Legacy "+" Entries Exist in /etc/shadow File</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The character + in various files used to be markers for systems to insert data from NIS maps at a certain point in a system configuration file. These entries are no longer required on most
                    systems, but may exist in files that have been imported from other platforms.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>These entries may provide an avenue for attackers to gain privileged access on the system.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Delete these entries if they exist.</xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:file-content check="none exist" comment="Ensure no entries in /etc/shadow begin with +">
                        <ecl:path>/etc/shadow</ecl:path>
                        <ecl:line-selection op="pm" value="^\+"/>
                    </ecl:file-content>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_13.4_Verify_No_Legacy__Entries_Exist_in_etcgroup_File" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Verify No Legacy "+" Entries Exist in /etc/group File</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The character + in various files used to be markers for systems to insert data from NIS maps at a certain point in a system configuration file. These entries are no longer required on most
                    systems, but may exist in files that have been imported from other platforms.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>These entries may provide an avenue for attackers to gain privileged access on the system.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Delete these entries if they exist.</xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:file-content check="none exist" comment="Ensure no entries in /etc/group begin with +">
                        <ecl:path>/etc/group</ecl:path>
                        <ecl:line-selection op="pm" value="^\+"/>
                    </ecl:file-content>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_13.5_Verify_No_UID_0_Accounts_Exist_Other_Than_root" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Verify No UID 0 Accounts Exist Other Than root</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>Any account with UID 0 has superuser privileges on the system.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>This access must be limited to only the default <xhtml:span class="inline_block">root </xhtml:span>account and only from the system console. Administrative access must be through an unprivileged
                    account using an approved mechanism as noted in Item 9.4 Restrict root Login to System Console.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Delete any other entries that are displayed.</xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="none exist" comment="Ensure only root has UID 0 in /etc/passwd">
                        <ecl:command>/bin/cat /etc/passwd | /bin/awk -F: '($3 == 0) { print $1 }' | grep -v 'root'</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_13.6_Ensure_root_PATH_Integrity" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure root PATH Integrity</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The <xhtml:span class="inline_block">root </xhtml:span>user can execute any command on the system and could be fooled into executing programs unintentionally if the <xhtml:span class="inline_block">PATH </xhtml:span>is not set correctly.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Including the current working directory (.) or other writable directory in <xhtml:span class="inline_block">root</xhtml:span>'s executable path makes it likely that an attacker can gain superuser
                    access by forcing an administrator operating as <xhtml:span class="inline_block">root </xhtml:span>to execute a Trojan horse program.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Correct or justify any items discovered in the Audit step.</xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="AND">
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command check="none exist" comment="Ensure no empty entries in root's $PATH">
                            <ecl:command>echo $PATH</ecl:command>
                            <ecl:line-selection dt="xs:string" op="pm" value="(^|:):"/>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command check="none exist" comment="Ensure no trailing colon in root's $PATH">
                            <ecl:command>echo $PATH</ecl:command>
                            <ecl:line-selection dt="xs:string" op="pm" value=":$"/>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command check="none exist" comment="Ensure no dot paths in root's $PATH">
                            <ecl:command>echo $PATH</ecl:command>
                            <ecl:line-selection dt="xs:string" op="pm" value="(^|:|/)\.+($|:|/)"/>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:complex-check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_13.7_Check_Permissions_on_User_Home_Directories" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Check Permissions on User Home Directories</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>While the system administrator can establish secure permissions for users' home directories, the users can easily override these.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Group or world-writable user home directories may enable malicious users to steal or modify other users' data or to gain another user's system privileges.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Making global modifications to user home directories without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring
                            policy be established to report user file permissions and determine the action to be taken in accordance with site policy.</xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="none exist" comment="Ensure no home directories are world writable">
                        <ecl:command>for i in $(awk -F: '($7 != "/usr/sbin/nologin" &amp;&amp; $3 &gt;= 500) {print $6}' /etc/passwd | sort -u); do echo $i $(stat -L --format=%a $i) | grep -v '
                            .[0145][0145]$';done</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_13.8_Check_User_Dot_File_Permissions" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Check User Dot File Permissions</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>While the system administrator can establish secure permissions for users' "dot" files, the users can easily override these.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Group or world-writable user configuration files may enable malicious users to steal or modify other users' data or to gain another user's system privileges.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy
                            be established to report user dot file permissions and determine the action to be taken in accordance with site policy.</xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="none exist" comment="Ensure no user dotfiles have group/other write permisions">
                        <ecl:command>find `cat /etc/passwd | egrep -v "root|sync|halt|shutdown" | awk -F: '($7 != "/usr/sbin/nologin" &amp;&amp; $7) {print $6}' | sort | uniq | grep -v "^/$"` -name ".*" -perm /go+w -follow</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_13.9_Check_Permissions_on_User_.netrc_Files" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Check Permissions on User .netrc Files</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>While the system administrator can establish secure permissions for users' <xhtml:span class="inline_block">.netrc </xhtml:span>files, the users can easily override these.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>
                    <xhtml:span class="inline_block">.netrc </xhtml:span>files may contain unencrypted passwords that may be used to attack other systems.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy
                            be established to report user <xhtml:span class="inline_block">.netrc </xhtml:span>file permissions and determine the action to be taken in accordance with site policy.</xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="none exist" comment="Ensure no user .netrc files have group/other write permisions">
                        <ecl:command>find `cat /etc/passwd | egrep -v "root|sync|halt|shutdown" | awk -F: '($7 != "/usr/sbin/nologin" &amp;&amp; $7) {print $6}' | sort | uniq | grep -v "^/$"` -name ".netrc" -perm
                            /go+w</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_13.10_Check_for_Presence_of_User_.rhosts_Files" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Check for Presence of User .rhosts Files</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>While no <xhtml:span class="inline_block">.rhosts </xhtml:span>files are shipped by default, users can easily create them.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>This action is only meaningful if <xhtml:span class="inline_block">.rhosts </xhtml:span>support is permitted in the file <xhtml:span class="inline_block">/etc/pam.conf</xhtml:span>. Even though
                    the <xhtml:span class="inline_block">.rhosts </xhtml:span>files are ineffective if support is disabled in <xhtml:span class="inline_block">/etc/pam.conf</xhtml:span>, they may have been brought over
                    from other systems and could contain information useful to an attacker for those other systems.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>If any users have <xhtml:span class="inline_block">.rhosts </xhtml:span>files determine why they have them.</xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="none exist" comment="Ensure there are no .rhosts files in user home directories">
                        <ecl:command>cut -f6 -d: /etc/passwd | sort -u | while read DIR; do ls $DIR/.rhosts 2&gt;/dev/null; done</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_13.11_Check_Groups_in_etcpasswd" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Check Groups in /etc/passwd</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>Over time, system administration errors and changes can lead to groups being defined in <xhtml:span class="inline_block">/etc/passwd </xhtml:span>but not in <xhtml:span class="inline_block">/etc/group</xhtml:span>.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Groups defined in the <xhtml:span class="inline_block">/etc/passwd </xhtml:span>file but not in the <xhtml:span class="inline_block">/etc/group </xhtml:span>file pose a threat to system security
                    since group permissions are not properly managed.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Analyze the output of the Audit step above and perform the appropriate action to correct any discrepancies found.</xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="none exist" comment="Ensure no groups exist in /etc/passwd that do not exist in /etc/group">
                        <ecl:command>for i in $(cut -s -d: -f4 /etc/passwd | sort -u ); do grep -q -P "^.*?:[^:]*:$i:" /etc/group; if [ $? -ne 0 ]; then echo "Group $i is referenced by /etc/passwd but does not exist in
                            /etc/group"; fi; done</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_13.12_Check_That_Users_Are_Assigned_Valid_Home_Directories" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Check That Users Are Assigned Valid Home Directories</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>Users can be defined in <xhtml:span class="inline_block">/etc/passwd</xhtml:span> without a home directory or with a home directory that does not actually exist.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>If the user's home directory does not exist or is unassigned, the user will be placed in "/" and will not be able to write any files or have local environment variables set.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>If any users' home directories do not exist, create them and make sure the respective user owns the directory. Users without an assigned home directory should be removed or assigned a
                            home directory as appropriate.</xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="none exist" comment="Ensure all users have home directories assigned">
                        <ecl:command> cat /etc/passwd | awk -F: '{ print $1 " " $3 " " $6 }' | while read user uid dir; do if [ $uid -ge 500 -a ! -d "$dir" -a $user != "nfsnobody" -a $user != "nobody" ]; then echo "The
                            home directory ($dir) of user $user does not exist."; fi; done</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_13.13_Check_User_Home_Directory_Ownership" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Check User Home Directory Ownership</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The user home directory is space defined for the particular user to set local environment variables and to store personal files.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Since the user is accountable for files stored in the user home directory, the user must be the owner of the directory.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Change the ownership of any home directories that are not owned by the defined user to the correct user.</xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="none exist" comment="Ensure user home directories are owned by the user">
                        <ecl:command>cat /etc/passwd | awk -F: '{ print $1 " " $3 " " $6 }' | while read user uid dir; do if [ $uid -ge 500 -a -d "$dir" -a $user != "nfsnobody" -a $user != "nobody" ]; then owner=$(stat
                            -L -c "%U" "$dir"); if [ "$owner" != "$user" ]; then echo "The home directory ($dir) of user $user is owned by $owner."; fi; fi; done;</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_13.14_Check_for_Duplicate_UIDs" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Check for Duplicate UIDs</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>Although the <xhtml:span class="inline_block">useradd </xhtml:span>program will not let you create a duplicate User ID (UID), it is possible for an administrator to manually edit the <xhtml:span class="inline_block">/etc/passwd </xhtml:span>file and change the UID field.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Users must be assigned unique UIDs for accountability and to ensure appropriate access protections.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Based on the results of the script, establish unique UIDs and review all files owned by the shared UID to determine which UID they are supposed to belong to.</xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="none exist" comment="Ensure no duplicate UIDs exist in /etc/passwd">
                        <ecl:command>egrep -v "^\+" /etc/passwd | cut -f3 -d":" | sort -n | uniq -c | awk '{ if ($1 != 1) { print "Duplicate UID found: " $2 } }'</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_13.15_Check_for_Duplicate_GIDs" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Check for Duplicate GIDs</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>Although the <xhtml:span class="inline_block">groupadd </xhtml:span>program will not let you create a duplicate Group ID (GID), it is possible for an administrator to manually edit the
                        <xhtml:span class="inline_block">/etc/group </xhtml:span>file and change the GID field.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>User groups must be assigned unique GIDs for accountability and to ensure appropriate access protections.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Based on the results of the script, establish unique GIDs and review all files owned by the shared GID to determine which group they are supposed to belong to.</xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="none exist" comment="Ensure no duplicate GIDs exist">
                        <ecl:command>egrep -v "^\+" /etc/group | cut -f3 -d":" | sort -n | uniq -c | awk '{ if ($1 != 1) { print "Duplicate GUID found: " $2 } }'</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_13.16_Check_for_Duplicate_User_Names" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Check for Duplicate User Names</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>Although the <xhtml:span class="inline_block">useradd </xhtml:span>program will not let you create a duplicate user name, it is possible for an administrator to manually edit the <xhtml:span class="inline_block">/etc/passwd </xhtml:span>file and change the user name.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>If a user is assigned a duplicate user name, it will create and have access to files with the first UID for that username in <xhtml:span class="inline_block">/etc/passwd</xhtml:span>. For
                    example, if "test4" has a UID of 1000 and a subsequent "test4" entry has a UID of 2000, logging in as "test4" will use UID 1000. Effectively, the UID is shared, which is a security problem.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Based on the results of the script, establish unique user names for the users. File ownerships will automatically reflect the change as long as the users have unique UIDs.</xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="none exist" comment="Ensure no duplicate user names exist in /etc/passwd">
                        <ecl:command>egrep -v "^\+" /etc/passwd | cut -f1 -d":" | sort | uniq -c | awk '{ if ($1 != 1) { print "Duplicate User name Found: " $2 } }'</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_13.17_Check_for_Duplicate_Group_Names" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Check for Duplicate Group Names</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>Although the <xhtml:span class="inline_block">groupadd </xhtml:span>program will not let you create a duplicate group name, it is possible for an administrator to manually edit the <xhtml:span class="inline_block">/etc/group </xhtml:span>file and change the group name.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>If a group is assigned a duplicate group name, it will create and have access to files with the first GID for that group in <xhtml:span class="inline_block">/etc/group</xhtml:span>. Effectively,
                    the GID is shared, which is a security problem.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Based on the results of the script, establish unique names for the user groups. File group ownerships will automatically reflect the change as long as the groups have unique
                            GIDs.</xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="none exist" comment="Ensure no duplicate group names exist in /etc/group">
                        <ecl:command>egrep -v "^\+" /etc/group | cut -f1 -d":" | sort -n | uniq -c | awk '{ if ($1 != 1) { print "Duplicate Group name Found: " $2 } }'</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_13.18_Check_for_Presence_of_User_.netrc_Files" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Check for Presence of User .netrc Files</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The <xhtml:span class="inline_block">.netrc </xhtml:span>file contains data for logging into a remote host for file transfers via FTP.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>The <xhtml:span class="inline_block">.netrc </xhtml:span>file presents a significant security risk since it stores passwords in unencrypted form. Even if FTP is disabled, user accounts may have
                    brought over <xhtml:span class="inline_block">.netrc </xhtml:span>files from other systems which could pose a risk to those systems.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy
                            be established to report user <xhtml:span class="inline_block">.netrc </xhtml:span>files and determine the action to be taken in accordance with site policy.</xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="none exist" comment="Ensure there are no .netrc files in user home directories">
                        <ecl:command>egrep -v "^\+" /etc/passwd | cut -f6 -d: | sort -u | while read DIR; do ls $DIR/.netrc 2&gt;/dev/null; done</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_13.19_Check_for_Presence_of_User_.forward_Files" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Check for Presence of User .forward Files</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The <xhtml:span class="inline_block">.forward </xhtml:span>file specifies an email address to forward the user's mail to.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Use of the <xhtml:span class="inline_block">.forward </xhtml:span>file poses a security risk in that sensitive data may be inadvertently transferred outside the organization. The <xhtml:span class="inline_block">.forward </xhtml:span>file also poses a risk as it can be used to execute commands that may perform unintended actions.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy
                            be established to report user <xhtml:span class="inline_block">.forward </xhtml:span>files and determine the action to be taken in accordance with site policy.</xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="none exist" comment="Ensure there are no .forward files in user home directories">
                        <ecl:command>egrep -v "^\+" /etc/passwd | cut -f6 -d: | sort -u | while read D; do ls $D/.forward 2&amp;gt;/dev/null; done</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:Rule>
        <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_13.20_Ensure_shadow_group_is_empty" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ensure shadow group is empty</xccdf:title>
            <xccdf:description xml:lang="en">
                <xhtml:p>The shadow group allows system programs which require access the ability to read the /etc/shadow file. No users should be assigned to the shadow group.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
                <xhtml:p>Any users assigned to the shadow group would be granted read access to the /etc/shadow file. If attackers can gain read access to the <xhtml:span class="inline_block">/etc/shadow
                    </xhtml:span>file, they can easily run a password cracking program against the hashed passwords to break them. Other security information that is stored in the <xhtml:span class="inline_block">/etc/shadow </xhtml:span>file (such as expiration) could also be useful to subvert additional user accounts.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
                <xhtml:div>
                    <xhtml:p>
                        <xhtml:p>Remove all users from the shadow group, and change the primary group of any users with shadow as their primary group.</xhtml:p>
                        <xhtml:p> </xhtml:p>
                    </xhtml:p>
                </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="AND">
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:file-content check="none exist" comment="Ensure no users in shadow group">
                            <ecl:path>/etc/group</ecl:path>
                            <ecl:line-selection op="pm" value="^shadow:x:15:.+$"/>
                        </ecl:file-content>
                    </xccdf:check-content>
                </xccdf:check>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command check="none exist" comment="Ensure no users have shadow as primary group">
                            <ecl:command>awk -F: '($4 == "42") { print }' /etc/passwd</ecl:command>
                            <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:complex-check>
        </xccdf:Rule>
    </xccdf:Group>
<xccdf:signature><ds:Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
<ds:SignedInfo>
<ds:CanonicalizationMethod Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315"/>
<ds:SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1"/>
<ds:Reference URI="">
<ds:Transforms>
<ds:Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature"/>
<ds:Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"/>
</ds:Transforms>
<ds:DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/>
<ds:DigestValue>eW/lGR3zRYpuu/7DVuF1+wATq5w=</ds:DigestValue>
</ds:Reference>
</ds:SignedInfo>
<ds:SignatureValue>
I97AT1jA2ulNstIxwfiQ5slsvxIWIOHRqGYGqOhGATa6VSRvIqKKViZRXy7PVX+3uTjgT4QfBKnW
dbVrKjjje3hyAljl01tzAI9OEqaD6F0+q/ecsN9lFS0mPr6yCMyaWizEjS7azTUSL9ft8EbbzR00
4GqvXHP9lfvjWaO0SRYI1eEJMQ2ECSUrJBgO25AcoXIwlNaoYkUsjgvD97RoVHSTaRuBvspl6ZSy
vrdysSrEHVOrjZiH84CMq0dOPYt1F46xXfmizBZTqNColrG1idYXei/wANiI829cff/LscraFJSv
KFnehx8rplZHmjtXh847f6bqOLYcUOEbmOvl/Q==
</ds:SignatureValue>
<ds:KeyInfo>
<ds:X509Data>
<ds:X509Certificate>
MIIFRzCCBC+gAwIBAgIHTwpN/4tOfDANBgkqhkiG9w0BAQsFADCBtDELMAkGA1UEBhMCVVMxEDAO
BgNVBAgTB0FyaXpvbmExEzARBgNVBAcTClNjb3R0c2RhbGUxGjAYBgNVBAoTEUdvRGFkZHkuY29t
LCBJbmMuMS0wKwYDVQQLEyRodHRwOi8vY2VydHMuZ29kYWRkeS5jb20vcmVwb3NpdG9yeS8xMzAx
BgNVBAMTKkdvIERhZGR5IFNlY3VyZSBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkgLSBHMjAeFw0xNDA5
MTgxNDM0MjFaFw0xNzEwMjAxODU3NDRaMIGTMQswCQYDVQQGEwJVUzERMA8GA1UECBMITmV3IFlv
cmsxFzAVBgNVBAcTDkVhc3QgR3JlZW5idXNoMSswKQYDVQQKEyJDZW50ZXIgZm9yIEludGVybmV0
IFNlY3VyaXR5LCBJbmMuMSswKQYDVQQDEyJDZW50ZXIgZm9yIEludGVybmV0IFNlY3VyaXR5LCBJ
bmMuMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0MGnj6yX2QHklGadAfTBxssvP+2f
YegPpNGXfEmPXZXrWeME2BqIbO+hKXTuwUucRK6RvQJTjgzNgOhQx3HcclRwQB4xj/14hOoZSeQ3
haw/Xjl4WofsWizM5j/g1iWBgxi3xk/aREfKKb0ulBMtP/WYFpSRjZ/Z7m5QKii0feJPxbf+wrZ+
UvNZ8uBdO+SEmbhS/DVESsEWzXn6StbQpa2dno2aIOGZXQKcUY2d3WZ4Zk+zawFcRUYslVIrOhMb
0e3+hbJEtFwm5ekehdNimSozYyyLGZJonLlvr8PfmvQ1ceu7enWCRfZrRWAlDHFaouLdtU/OmXc+
Um7cLwz8VQIDAQABo4IBezCCAXcwDAYDVR0TAQH/BAIwADATBgNVHSUEDDAKBggrBgEFBQcDAzAO
BgNVHQ8BAf8EBAMCB4AwNQYDVR0fBC4wLDAqoCigJoYkaHR0cDovL2NybC5nb2RhZGR5LmNvbS9n
ZGlnMnM1LTAuY3JsMFMGA1UdIARMMEowSAYLYIZIAYb9bQEHFwIwOTA3BggrBgEFBQcCARYraHR0
cDovL2NlcnRpZmljYXRlcy5nb2RhZGR5LmNvbS9yZXBvc2l0b3J5LzB2BggrBgEFBQcBAQRqMGgw
JAYIKwYBBQUHMAGGGGh0dHA6Ly9vY3NwLmdvZGFkZHkuY29tLzBABggrBgEFBQcwAoY0aHR0cDov
L2NlcnRpZmljYXRlcy5nb2RhZGR5LmNvbS9yZXBvc2l0b3J5L2dkaWcyLmNydDAfBgNVHSMEGDAW
gBRAwr0njsw0gzCiM9f7bLPwtCyAzjAdBgNVHQ4EFgQU+3zn+CEg6a2xPqlBXvn64hUyoB4wDQYJ
KoZIhvcNAQELBQADggEBAEh76h1GtJ0pj04in+RUymB7fqPh6HFILkOLlTPnveyXCoHYT2M46DET
EA/NKYkoF2KA3QiZ1b+PMViuTYG2pDs71eFVPADuBCGf9IFufCDY9mPvjQiFDlLNMknXxACD8TjC
hqz+uZT2uLPw/YxkJIsCxrTQJ//ga/fHfZDrKgQfbVzxjD/4WKDe8HktjKcn+NWGPJNMgmO+IHrK
if6TB1xTo32W9QzwoXvBdLnziAUGZZghEulq6h3RCMzKPzpx5JiLlOz6JzqXHvrua+yUbr4A29Vy
vkwWgJWjyvJd2uq9MQ9l49kkrD84m41PSwpaHO99nEHRgRykopxIt8AHsIQ=
</ds:X509Certificate>
</ds:X509Data>
<ds:KeyValue>
<ds:RSAKeyValue>
<ds:Modulus>
0MGnj6yX2QHklGadAfTBxssvP+2fYegPpNGXfEmPXZXrWeME2BqIbO+hKXTuwUucRK6RvQJTjgzN
gOhQx3HcclRwQB4xj/14hOoZSeQ3haw/Xjl4WofsWizM5j/g1iWBgxi3xk/aREfKKb0ulBMtP/WY
FpSRjZ/Z7m5QKii0feJPxbf+wrZ+UvNZ8uBdO+SEmbhS/DVESsEWzXn6StbQpa2dno2aIOGZXQKc
UY2d3WZ4Zk+zawFcRUYslVIrOhMb0e3+hbJEtFwm5ekehdNimSozYyyLGZJonLlvr8PfmvQ1ceu7
enWCRfZrRWAlDHFaouLdtU/OmXc+Um7cLwz8VQ==
</ds:Modulus>
<ds:Exponent>AQAB</ds:Exponent>
</ds:RSAKeyValue>
</ds:KeyValue>
</ds:KeyInfo>
</ds:Signature></xccdf:signature></xccdf:Benchmark>