<?xml version="1.0" encoding="UTF-8" standalone="no"?><xccdf:Benchmark xmlns:xccdf="http://checklists.nist.gov/xccdf/1.1" xmlns="http://checklists.nist.gov/xccdf/1.1" xmlns:ciscf="https://benchmarks.cisecurity.org/ciscf/1.0" xmlns:ecl="http://cisecurity.org/check" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="xccdf_org.cisecurity.benchmarks_benchmark_1.0.0.2_CIS_Oracle_Solaris_11.1_Benchmark" xsi:schemaLocation="http://checklists.nist.gov/xccdf/1.1 ../misc/xsd/xccdf-1.1.xsd http://cisecurity.org/check ../misc/xsd/ecl.xsd">
   <xccdf:status date="2014-03-31">accepted</xccdf:status>
   <xccdf:title xml:lang="en">CIS Oracle Solaris 11.1 Benchmark</xccdf:title>
   <xccdf:description xml:lang="en">
      <xhtml:p>This document, CIS Oracle Solaris 11.1 Benchmark v1.0.0, provides prescriptive guidance for establishing a secure configuration posture for Oracle Solaris 11 on both x86 and SPARC platforms. This guide was tested against  Solaris 11.1 release.  As of the publication of this document, Solaris 11.1 is the latest available support update for the Solaris 11 OS. The recommendations included in this document may need to be adjusted for future Solaris 11 updates. To obtain the latest version of this guide, please visit <xhtml:a href="http://benchmarks.cisecurity.org">http://benchmarks.cisecurity.org</xhtml:a>. If you have questions, comments, or have identified ways to improve this guide, please write us at <xhtml:a href="mailto:feedback@cisecurity.org">feedback@cisecurity.org</xhtml:a>.</xhtml:p>
   </xccdf:description>
   <xccdf:notice id="terms-of-use" xml:lang="en">	BACKGROUND.
	The Center for Internet Security ("CIS") provides benchmarks, scoring tools, software, data, information, suggestions, ideas, and other services and materials from the CIS website or elsewhere ("Products") as a public service to Internet users worldwide.	Recommendations contained in the Products ("Recommendations") result from a consensus-building process that involves many security experts and are generally generic in nature.	The Recommendations are intended to provide helpful information to organizations attempting to evaluate or improve the security of their networks, systems, and devices.	Proper use of the Recommendations requires careful analysis and adaptation to specific user requirements.	The Recommendations are not in any way intended to be a "quick fix" for anyone's information security needs.
	NO REPRESENTATIONS, WARRANTIES, OR COVENANTS.
	CIS makes no representations, warranties, or covenants whatsoever as to (i) the positive or negative effect of the Products or the Recommendations on the operation or the security of any particular network, computer system, network device, software, hardware, or any component of any of the foregoing or (ii) the accuracy, reliability, timeliness, or completeness of	the Products or the Recommendations.	CIS is providing the Products and the Recommendations "as is" and "as available" without representations, warranties, or covenants of any kind.	USER AGREEMENTS.
	By using the Products and/or the Recommendations, I and/or my organization ("We") agree and acknowledge that:
	1.	No network, system, device, hardware, software, or component can be made fully secure;
	2.	We are using the Products and the Recommendations solely at our own risk;
	3.	We are not compensating CIS to assume any liabilities associated with our use of the Products or the Recommendations, even risks that result from 		CIS's negligence or failure to perform; 
	4.	We have the sole responsibility to evaluate the risks and benefits of the Products and Recommendations to us and to adapt the Products and the 			Recommendations to our particular circumstances and requirements;
	5.	Neither CIS, nor any CIS Party (defined below) has any responsibility to make any corrections, updates, upgrades, or bug fixes; or to notify us of 		the need for any such corrections, updates, upgrades, or bug fixes; and
	6.	Neither CIS nor any CIS Party has or will have any liability to us whatsoever (whether based in contract, tort, strict liability or otherwise) for 		any direct, indirect, incidental, consequential, or special damages (including without limitation loss of profits, loss of sales, loss of or damage 		to reputation,loss of customers, loss of software, data, information or emails, loss of privacy, loss of use of any computer or other equipment, 	business interruption, wasted management or other staff resources or claims of any kind against us from third parties) arising out of or in any way 	Connected with our use of or our inability to use any of the Products or Recommendations (even if CIS has been advised of the possibility of such 	damages), including without limitation any liability associated with infringement of intellectual property, defects, bugs, errors, omissions, 	viruses, worms, backdoors, Trojan horses or other harmful items.
	GRANT OF LIMITED RIGHTS.
	CIS hereby grants each user the following rights, but only so long as the user complies with all of the terms of these Agreed Terms of Use:
	1.	Except to the extent that we may have received additional authorization pursuant to a written agreement with CIS, each user may download, install and 	use each of the Products on a single computer;
	2.	Each user may print one or more copies of any Product or any component of a Product that is in a .txt, .pdf, .doc, .mcw, or .rtf format, provided 		that all such copies are printed in full and are kept intact, including without limitation the text of this Agreed Terms of Use in its entirety.
	RETENTION OF INTELLECTUAL PROPERTY RIGHTS; LIMITATIONS ON DISTRIBUTION.
	The Products are protected by copyright and other intellectual property laws and by international treaties.	We acknowledge and agree that we are not acquiring title to any intellectual property rights in the Products and that full title and all ownership rights to the Products will remain the exclusive property of CIS or CIS Parties.	CIS reserves all rights not expressly granted to users in the preceding section entitled "Grant of limited rights."
	Subject to the paragraph entitled "Special Rules" (which includes a waiver, granted to some classes of CIS Members, of certain limitations in this paragraph), and except as we may have otherwise agreed in a written agreement with CIS, we agree that we will not (i) decompile, disassemble, reverse engineer, or otherwise attempt to derive the source code for any software Product that is not already in the form of source code; (ii) distribute, redistribute, encumber, sell, rent, lease, lend, sublicense, or otherwise transfer or exploit rights to any Product or any component of a Product; (iii) post any Product or any component of a Product on any website, bulletin board, ftp server, newsgroup, or other similar mechanism or device, without regard to whether such mechanism or device is internal or external, (iv) remove or alter trademark, logo, copyright or other proprietary notices, legends, symbols or labels in any Product or any component of a Product; (v) remove these Agreed Terms of Use from, or alter these Agreed Terms of Use as they appear in, any Product or any component of a Product; (vi) use any Product or any component of a Product with any derivative works based directly on a Product or any component of a Product; (vii) use any Product or any component of a Product with other products or applications that are directly and specifically dependent on such Product or any component for any part of their functionality, or (viii) represent or claim a particular level of compliance with a CIS Benchmark, scoring tool or other Product.	We will not facilitate or otherwise aid other individuals or entities in any of the activities listed in this paragraph.
	We hereby agree to indemnify, defend, and hold CIS and all of its officers, directors, members, contributors, employees, authors, developers, agents, affiliates, licensors, information and service providers, software suppliers, hardware suppliers, and all other persons who aided CIS in the creation, development, or maintenance of the Products or Recommendations ("CIS Parties") harmless from and against any and all liability, losses, costs, and expenses (including attorneys' fees and court costs) incurred by CIS or any CIS Party in connection with any claim arising out of any violation by us of the preceding paragraph, including without limitation CIS's right, at our expense, to assume the exclusive defense and control of any matter subject to this indemnification, and in such case, we agree to cooperate with CIS in its defense of such claim.	We further agree that all CIS Parties are third-party beneficiaries of our undertakings in these Agreed Terms of Use.	SPECIAL RULES.
	CIS has created and will from time to time create, special rules for its members and for other persons and organizations with which CIS has a written contractual relationship.	Those special rules will override and supersede these Agreed Terms of Use with respect to the users who are covered by the special rules.
	CIS hereby grants each CIS Security Consulting or Software Vendor Member and each CIS Organizational User Member, but only so long as such Member remains in good standing with CIS and complies with all of the terms of these Agreed Terms of Use, the right to distribute the Products and Recommendations within such Member's own organization, whether by manual or electronic means.	Each such Member acknowledges and agrees that the foregoing grant is subject to the terms of such Member's membership arrangement with CIS and may, therefore, be modified or terminated by CIS at any time.
	CHOICE OF LAW; JURISDICTION; VENUE.
	We acknowledge and agree that these Agreed Terms of Use will be governed by and construed in accordance with the laws of the State of Maryland, that any action at law or in equity arising out of or relating to these Agreed Terms of Use shall be filed only in the courts located in the State of Maryland, that we hereby consent and submit to the personal jurisdiction of such courts for the purposes of litigating any such action.	If any of these Agreed Terms of Use shall be determined to be unlawful, void, or for any reason unenforceable, then such terms shall be deemed severable and shall not affect the validity and enforceability of any remaining provisions.
	BY USING THE PRODUCTS I(WE) ACKNOWLEDGE THAT WE HAVE READ THESE AGREED TERMS OF USE IN THEIR ENTIRETY, UNDERSTAND THEM, AND I(WE) AGREE TO BE BOUND BY THEM IN ALL RESPECTS.</xccdf:notice>

   <xccdf:version>1.0.0.2</xccdf:version>
   <xccdf:Profile id="xccdf_org.cisecurity.benchmarks_profile_Level_1">
      <xccdf:title xml:lang="en">Level 1</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>Items in this profile intend to:</xhtml:p>
         <xhtml:ul>
            <xhtml:li>be practical and prudent;</xhtml:li>
            <xhtml:li>provide a clear security benefit; and</xhtml:li>
            <xhtml:li>not inhibit the utility of the technology beyond acceptable means.</xhtml:li>
         </xhtml:ul>
      </xccdf:description>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.1_Use_the_Latest_Package_Updates" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.1_Disable_Local-only_Graphical_Login_Environment" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.2_Configure_sendmail_Service_for_Local-Only_Mode" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.3_Disable_RPC_Encryption_Key" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.4_Disable_NIS_Server_Services" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.5_Disable_NIS_Client_Services" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.6_Disable_Kerberos_TGT_Expiration_Warning" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.7_Disable_Generic_Security_Services_GSS" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.8_Disable_Removable_Volume_Manager" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.9_Disable_automount_Service" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.10_Disable_Apache_Service" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.11_Configure_TCP_Wrappers" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.12_Disable_Telnet_Service" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1_Restrict_Core_Dumps_to_Protected_Directory" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.2_Enable_Stack_Protection" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.3_Enable_Strong_TCP_Sequence_Number_Generation" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.4_Disable_Source_Packet_Forwarding" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.5_Disable_Directed_Broadcast_Packet_Forwarding" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.6_Disable_Response_to_ICMP_Timestamp_Requests" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.7_Disable_Response_to_ICMP_Broadcast_Timestamp_Requests" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.8_Disable_Response_to_ICMP_Broadcast_Netmask_Requests" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.9_Disable_Response_to_Broadcast_ICMPv4_Echo_Request" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.10_Disable_Response_to_Multicast_Echo_Request" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.11_Ignore_ICMP_Redirect_Messages" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.12_Set_Strict_Multihoming" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.13_Disable_ICMP_Redirect_Messages" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.14_Disable_TCP_Reverse_IP_Source_Routing" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.15_Set_Maximum_Number_of_Half-open_TCP_Connections" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.16_Set_Maximum_Number_of_Incoming_Connections" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.17_Disable_Network_Routing" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.1_Create_CIS_Audit_Class" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.2_Enable_Auditing_of_Incoming_Network_Connections" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.3_Enable_Auditing_of_File_Metadata_Modification_Events" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.4_Enable_Auditing_of_Process_and_Privilege_Events" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.5_Configure_Solaris_Auditing" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.1_Set_Sticky_Bit_on_World_Writable_Directories" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.1_Disable_login_Services_on_Serial_Ports" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.2_Disable_nobody_Access_for_RPC_Encryption_Key_Storage_Service" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.3_Disable_X11_Forwarding_for_SSH" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.4_Limit_Consecutive_Login_Attempts_for_SSH" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.5_Disable_Rhost-based_Authentication_for_SSH" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.6_Disable_root_login_for_SSH" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.7_Blocking_Authentication_Using_EmptyNull_Passwords_for_SSH" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.8_Disable_Host-based_Authentication_for_Login-based_Services" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.9_Restrict_FTP_Use" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.10_Set_Delay_between_Failed_Login_Attempts_to_4" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.11_Remove_Autologin_Capabilities_from_the_GNOME_desktop" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.12_Set_Default_Screen_Lock_for_GNOME_Users" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.13_Restrict_atcron_to_Authorized_Users" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.14_Restrict_root_Login_to_System_Console" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.15_Set_Retry_Limit_for_Account_Lockout" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.16_Set_EEPROM_Security_Mode_and_Log_Failed_Access_SPARC" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.17_Secure_the_GRUB_Menu_Intel" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.1_Set_Password_Expiration_Parameters_on_Active_Accounts" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.2_Set_Strong_Password_Creation_Policies" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.3_Set_Default_umask_for_users" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.4_Set_Default_File_Creation_Mask_for_FTP_Users" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.5_Set_mesg_n_as_Default_for_All_Users" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.6_Lock_Inactive_User_Accounts" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.1_Create_Warnings_for_Standard_Login_Services" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.2_Enable_a_Warning_Banner_for_the_SSH_Service" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.3_Enable_a_Warning_Banner_for_the_GNOME_Service" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.4_Enable_a_Warning_Banner_for_the_FTP_service" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.5_Check_that_the_Banner_Setting_for_telnet_is_Null" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.1_Check_for_Remote_Consoles" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.2_Verify_System_File_Permissions" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.3_Verify_System_Account_Default_Passwords" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.4_Ensure_Password_Fields_are_Not_Empty" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.5_Verify_No_UID_0_Accounts_Exist_Other_than_root" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.6_Ensure_root_PATH_Integrity" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.7_Check_Permissions_on_User_Home_Directories" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.8_Check_Permissions_on_User_._Hidden_Files" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.9_Check_Permissions_on_User_.netrc_Files" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.10_Check_for_Presence_of_User_.rhosts_Files" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.11_Check_Groups_in_passwd4" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.12_Check_That_Users_Are_Assigned_Home_Directories" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.13_Check_That_Defined_Home_Directories_Exist" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.14_Check_User_Home_Directory_Ownership" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.15_Check_for_Duplicate_UIDs" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.16_Check_for_Duplicate_GIDs" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.17_Check_That_Reserved_UIDs_Are_Assigned_to_System_Accounts" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.18_Check_for_Duplicate_User_Names" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.19_Check_for_Duplicate_Group_Names" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.20_Check_for_Presence_of_User_.netrc_Files" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.21_Check_for_Presence_of_User_.forward_Files" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.22_Find_World_Writable_Files" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.23_Find_SUIDSGID_System_Executables" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.24_Find_Un-owned_Files_and_Directories" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.25_Find_Files_and_Directories_with_Extended_Attributes" selected="true"/>
   </xccdf:Profile>
   <xccdf:Profile id="xccdf_org.cisecurity.benchmarks_profile_Level_2">
      <xccdf:title xml:lang="en">Level 2</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>This profile extends the "Level 1" profile. Items in this profile exhibit one or more of the following characteristics:</xhtml:p>
         <xhtml:ul>
            <xhtml:li>are intended for environments or use cases where security is paramount</xhtml:li>
            <xhtml:li>acts as defense in depth measure</xhtml:li>
            <xhtml:li>may negatively inhibit the utility or performance of the technology.</xhtml:li>
         </xhtml:ul>
      </xccdf:description>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.1_Use_the_Latest_Package_Updates" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.1_Disable_Local-only_Graphical_Login_Environment" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.2_Configure_sendmail_Service_for_Local-Only_Mode" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.3_Disable_RPC_Encryption_Key" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.4_Disable_NIS_Server_Services" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.5_Disable_NIS_Client_Services" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.6_Disable_Kerberos_TGT_Expiration_Warning" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.7_Disable_Generic_Security_Services_GSS" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.8_Disable_Removable_Volume_Manager" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.9_Disable_automount_Service" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.10_Disable_Apache_Service" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.11_Configure_TCP_Wrappers" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.12_Disable_Telnet_Service" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1_Restrict_Core_Dumps_to_Protected_Directory" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.2_Enable_Stack_Protection" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.3_Enable_Strong_TCP_Sequence_Number_Generation" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.4_Disable_Source_Packet_Forwarding" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.5_Disable_Directed_Broadcast_Packet_Forwarding" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.6_Disable_Response_to_ICMP_Timestamp_Requests" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.7_Disable_Response_to_ICMP_Broadcast_Timestamp_Requests" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.8_Disable_Response_to_ICMP_Broadcast_Netmask_Requests" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.9_Disable_Response_to_Broadcast_ICMPv4_Echo_Request" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.10_Disable_Response_to_Multicast_Echo_Request" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.11_Ignore_ICMP_Redirect_Messages" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.12_Set_Strict_Multihoming" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.13_Disable_ICMP_Redirect_Messages" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.14_Disable_TCP_Reverse_IP_Source_Routing" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.15_Set_Maximum_Number_of_Half-open_TCP_Connections" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.16_Set_Maximum_Number_of_Incoming_Connections" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.17_Disable_Network_Routing" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.1_Create_CIS_Audit_Class" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.2_Enable_Auditing_of_Incoming_Network_Connections" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.3_Enable_Auditing_of_File_Metadata_Modification_Events" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.4_Enable_Auditing_of_Process_and_Privilege_Events" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.5_Configure_Solaris_Auditing" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.1_Set_Sticky_Bit_on_World_Writable_Directories" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.1_Disable_login_Services_on_Serial_Ports" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.2_Disable_nobody_Access_for_RPC_Encryption_Key_Storage_Service" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.3_Disable_X11_Forwarding_for_SSH" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.4_Limit_Consecutive_Login_Attempts_for_SSH" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.5_Disable_Rhost-based_Authentication_for_SSH" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.6_Disable_root_login_for_SSH" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.7_Blocking_Authentication_Using_EmptyNull_Passwords_for_SSH" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.8_Disable_Host-based_Authentication_for_Login-based_Services" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.9_Restrict_FTP_Use" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.10_Set_Delay_between_Failed_Login_Attempts_to_4" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.11_Remove_Autologin_Capabilities_from_the_GNOME_desktop" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.12_Set_Default_Screen_Lock_for_GNOME_Users" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.13_Restrict_atcron_to_Authorized_Users" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.14_Restrict_root_Login_to_System_Console" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.15_Set_Retry_Limit_for_Account_Lockout" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.16_Set_EEPROM_Security_Mode_and_Log_Failed_Access_SPARC" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.17_Secure_the_GRUB_Menu_Intel" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.1_Set_Password_Expiration_Parameters_on_Active_Accounts" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.2_Set_Strong_Password_Creation_Policies" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.3_Set_Default_umask_for_users" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.4_Set_Default_File_Creation_Mask_for_FTP_Users" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.5_Set_mesg_n_as_Default_for_All_Users" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.6_Lock_Inactive_User_Accounts" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.1_Create_Warnings_for_Standard_Login_Services" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.2_Enable_a_Warning_Banner_for_the_SSH_Service" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.3_Enable_a_Warning_Banner_for_the_GNOME_Service" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.4_Enable_a_Warning_Banner_for_the_FTP_service" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.5_Check_that_the_Banner_Setting_for_telnet_is_Null" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.1_Check_for_Remote_Consoles" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.2_Verify_System_File_Permissions" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.3_Verify_System_Account_Default_Passwords" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.4_Ensure_Password_Fields_are_Not_Empty" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.5_Verify_No_UID_0_Accounts_Exist_Other_than_root" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.6_Ensure_root_PATH_Integrity" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.7_Check_Permissions_on_User_Home_Directories" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.8_Check_Permissions_on_User_._Hidden_Files" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.9_Check_Permissions_on_User_.netrc_Files" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.10_Check_for_Presence_of_User_.rhosts_Files" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.11_Check_Groups_in_passwd4" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.12_Check_That_Users_Are_Assigned_Home_Directories" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.13_Check_That_Defined_Home_Directories_Exist" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.14_Check_User_Home_Directory_Ownership" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.15_Check_for_Duplicate_UIDs" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.16_Check_for_Duplicate_GIDs" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.17_Check_That_Reserved_UIDs_Are_Assigned_to_System_Accounts" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.18_Check_for_Duplicate_User_Names" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.19_Check_for_Duplicate_Group_Names" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.20_Check_for_Presence_of_User_.netrc_Files" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.21_Check_for_Presence_of_User_.forward_Files" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.22_Find_World_Writable_Files" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.23_Find_SUIDSGID_System_Executables" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.24_Find_Un-owned_Files_and_Directories" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.25_Find_Files_and_Directories_with_Extended_Attributes" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_10.1_SN.1Restrict_access_to_suspend_feature" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_10.2_SN.2Remove_Support_for_Internet_Services_inetd" selected="true"/>
   </xccdf:Profile>
   <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_1_Software_Installation_and_Updates">
      <xccdf:title xml:lang="en">Software Installation and Updates</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>The Solaris 11 OS should be periodically updated to enable the support of new hardware platforms as well as enhance the security, reliability, and performance of the system.</xhtml:p>
      </xccdf:description>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_1.1_Use_the_Latest_Package_Updates" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Use the Latest Package Updates</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The Solaris 11 OS should be periodically updated to install or upgrade software packages that will enhance the security, reliability, and performance of the system.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>For the Solaris 11 OS, there will be no more software patches issued, but rather security and other improvements will be installed by updating one or more software packages.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Run the following command to refresh the package catalog, download and apply any available updates:</xhtml:p>
                  <xhtml:code class="pre_0.0623098990705393"># pkg update</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>

      </xccdf:Rule>
   </xccdf:Group>
   <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_2_Disable_Unnecessary_Services">
      <xccdf:title xml:lang="en">Disable Unnecessary Services</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>While using the most up to date software packages will help to correct any known vulnerabilities, one of the best ways to protect the system against as yet unreported vulnerabilities is to disable services that are not required for that particular system's intended operation or management. This helps to prevent the exploitation of vulnerabilities that may be discovered at a later date. The actions in this section of the document provide guidance on what services can be safely disabled and under which circumstances.</xhtml:p>
         <xhtml:p>The Solaris 11 OS has implemented a "Secure by Default" (SBD) posture whereby many services that were once automatically enabled are now either disabled or configured to listen only for connections originating from the system itself. This default software configuration greatly simplifies many of the security hardening steps typically undertaken in previous versions of the operating system. As a result, this section will build upon this default configuration and focus specifically on those services that are enabled (local-only or otherwise) that organizations may want to disable.</xhtml:p>
         <xhtml:p class="CISNormal">As noted above, several services are not disabled, but rather are placed into a "local only" mode where they will accept connections originating only from the local system itself. This was done to strike a balance between security and out-of-the-box usability. If these services are not required, it is recommended that they be disabled to guard against potential future vulnerabilities that can be exploited by users and/or services that are operating locally on the system.<xhtml:a/>
            <xhtml:a/>
            <xhtml:a/>
            <xhtml:a/>
            <xhtml:a/>
            <xhtml:a/>
            <xhtml:a/>
            <xhtml:a/>
            <xhtml:a/>
            <xhtml:a/>
         </xhtml:p>
      </xccdf:description>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.1_Disable_Local-only_Graphical_Login_Environment" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Disable Local-only Graphical Login Environment</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The graphical login service provides the capability of logging into the system using an X-windows type interface from the console. If graphical login access for the console is required, leave the service in local-only mode.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>This service should be disabled if it is not required.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>To disable this service, run the following command:</xhtml:p>
                  <xhtml:code class="pre_0.27295131045941656"># svcadm disable svc:/application/graphical-login/gdm:default</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/application/graphical-login/gdm:default' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        -->
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/application/graphical-login/gdm:default' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/application/graphical-login/gdm:default 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                -->
                  <ecl:shell-command check="all" comment="PASS if svc:/application/graphical-login/gdm:default is not installed.">
                     <ecl:command>svcs -Ho state svc:/application/graphical-login/gdm:default 2&gt;&amp;1</ecl:command>
                     <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/application/graphical-login/gdm:default' doesn't match any instances"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/application/graphical-login/gdm:default
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                  <ecl:shell-command check="all" comment="Ensure GDM login is disabled">
                     <ecl:command>svcs -Ho state svc:/application/graphical-login/gdm:default</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.2_Configure_sendmail_Service_for_Local-Only_Mode" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Configure sendmail Service for Local-Only Mode</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>In Solaris 11, the <xhtml:span class="inline_block">sendmail </xhtml:span>service is set to local only mode by default. This means that users on remote systems cannot connect to the <xhtml:span class="inline_block">sendmail </xhtml:span>service, eliminating the possibility of a remote exploit attack against some future <xhtml:span class="inline_block">sendmail </xhtml:span>vulnerability. Leaving <xhtml:span class="inline_block">sendmail </xhtml:span>in local-only mode permits mail to be sent out from the local system. If the local system will not be processing or sending any mail, this service can be disabled.</xhtml:p>
            <xhtml:p>However, if <xhtml:span class="inline_block">sendmail </xhtml:span>is disabled completely, email messages sent to the <xhtml:span class="inline_block">root </xhtml:span>account (such as <xhtml:span class="inline_block">cron </xhtml:span>job output or audit service warnings) will fail to be delivered.</xhtml:p>
            <xhtml:p>An alternative approach is to disable the <xhtml:span class="inline_block">sendmail </xhtml:span>service and create a <xhtml:span class="inline_block">cron </xhtml:span>job to process all mail that is queued on the local system, sending it to a relay host defined in the <xhtml:span class="inline_block">sendmail.cf </xhtml:span>file. It is recommended that <xhtml:span class="inline_block">sendmail </xhtml:span>be left in local-only mode unless there is a specific requirement to completely disable it.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>The software for all Mail Transfer Agents is complex and most have a long history of security issues. While it is important to ensure that the system can process local mail messages, it is not necessary to have the MTA's daemon listening on a port unless the server is intended to be a mail server that receives and processes mail from other systems.<xhtml:br/>
            </xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Run the following to set sendmail to listen only local interfaces:</xhtml:p>
                  <xhtml:code class="pre_0.4775376935281852"># svccfg -v -s svc:/network/smtp:sendmail setprop config/local_only=false<xhtml:br/># svcadm refresh sendmail<xhtml:br/># svcadm restart sendmail</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure mail transport agent is bound to localhost only">
                  <ecl:command>netstat -an | grep LIST | egrep ":25 " | egrep -v '127.0.0.1:25|::1:25'</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.3_Disable_RPC_Encryption_Key" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Disable RPC Encryption Key</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The <xhtml:span class="inline_block">keyserv </xhtml:span>service is only required for sites that are using the Secure RPC mechanism. The most common use for Secure RPC on Solaris machines is "secure NFS", which uses the Secure RPC mechanism to provide higher levels of security than the standard NFS protocols. ("Secure NFS" is unrelated to Kerberos authentication as a mechanism for providing higher levels of NFS security. "Kerberized" NFS does not require the <xhtml:span class="inline_block">keyserv </xhtml:span>service to be running.)</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>This service should be disabled if it is not required.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>To disable this service, run the following command:</xhtml:p>
                  <xhtml:code class="pre_0.4247829183857601"># svcadm disable svc:/network/rpc/keyserv </xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/network/rpc/keyserv' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        -->
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/network/rpc/keyserv' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/network/rpc/keyserv 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                -->
                  <ecl:shell-command check="all" comment="PASS if svc:/network/rpc/keyserv is not installed.">
                     <ecl:command>svcs -Ho state svc:/network/rpc/keyserv 2&gt;&amp;1</ecl:command>
                     <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/network/rpc/keyserv' doesn't match any instances"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/network/rpc/keyserv
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                  <ecl:shell-command check="all" comment="Ensure RPC Keyserv is disabled">
                     <ecl:command>svcs -Ho state svc:/network/rpc/keyserv</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.4_Disable_NIS_Server_Services" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Disable NIS Server Services</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The NIS server software is not installed by default and is only required on systems that are acting as an NIS server for the local site. Typically there are only a small number of NIS servers on any given network. These services are disabled by default unless the system has been previously configured to act as a NIS server.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>As RPC-based services such as NIS may use non-secure authentication and share sensitive network object information with systems and applications using RPC-based services, this service should be disabled. Users are encouraged to use LDAP as a name service in place of NIS.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>To disable this service, run the following commands:</xhtml:p>
                  <xhtml:code class="pre_0.32900262710431893"># svcadm disable svc:/network/nis/server</xhtml:code>
                  <xhtml:p>If LDAP is not in use also disable nis/domain:</xhtml:p>
                  <xhtml:code class="pre_0.32900262710431893"># svcadm disable svc:/network/nis/domain</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/network/nis/server' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        -->
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/network/nis/server' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/network/nis/server 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                -->
                  <ecl:shell-command check="all" comment="PASS if svc:/network/nis/server is not installed.">
                     <ecl:command>svcs -Ho state svc:/network/nis/server 2&gt;&amp;1</ecl:command>
                     <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/network/nis/server' doesn't match any instances"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/network/nis/server
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                  <ecl:shell-command check="all" comment="Ensure NIS Server is disabled">
                     <ecl:command>svcs -Ho state svc:/network/nis/server</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.5_Disable_NIS_Client_Services" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Disable NIS Client Services</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>If the local site is not using the NIS naming service to distribute system and user configuration information, this service may be disabled. This service is disabled by default unless the NIS service has been installed and configured on the system.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>As RPC-based services such as NIS may use non-secure authentication and share sensitive network object information with systems and applications using RPC-based service, NIS client daemons should be disabled. Users are encouraged to use LDAP as a name service in place of NIS.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>To disable this service, run the following commands:</xhtml:p>
                  <xhtml:code class="pre_0.5718049254307095"># svcadm disable svc:/network/nis/client</xhtml:code>
                  <xhtml:p>If LDAP is not in use also disable nis/domain:</xhtml:p>
                  <xhtml:code class="pre_0.22946730411685123"># svcadm disable svc:/network/nis/domain</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/network/nis/client' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        -->
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/network/nis/client' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/network/nis/client 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                -->
                  <ecl:shell-command check="all" comment="PASS if svc:/network/nis/client is not installed.">
                     <ecl:command>svcs -Ho state svc:/network/nis/client 2&gt;&amp;1</ecl:command>
                     <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/network/nis/client' doesn't match any instances"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/network/nis/client
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                  <ecl:shell-command check="all" comment="Ensure NIS Client is disabled">
                     <ecl:command>svcs -Ho state svc:/network/nis/client</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.6_Disable_Kerberos_TGT_Expiration_Warning" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Disable Kerberos TGT Expiration Warning</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The Kerberos TGT warning service is used to warn users when their Kerberos tickets are about expire or to renew those tickets before they expire. This service is not used if Kerberos has not been configured. This service is configured to be "local only" by default.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>This service should be disabled if it is not required.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>To disable this service, run the following command:</xhtml:p>
                  <xhtml:code class="pre_0.46168186009441237"># svcadm disable svc:/network/security/ktkt_warn</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/network/security/ktkt_warn' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        -->
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/network/security/ktkt_warn' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/network/security/ktkt_warn 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                -->
                  <ecl:shell-command check="all" comment="PASS if svc:/network/security/ktkt_warn is not installed.">
                     <ecl:command>svcs -Ho state svc:/network/security/ktkt_warn 2&gt;&amp;1</ecl:command>
                     <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/network/security/ktkt_warn' doesn't match any instances"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/network/security/ktkt_warn
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                  <ecl:shell-command check="all" comment="Ensure ktkt_warn is disabled">
                     <ecl:command>svcs -Ho state svc:/network/security/ktkt_warn</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.7_Disable_Generic_Security_Services_GSS" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Disable Generic Security Services (GSS)</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The GSS API is a security abstraction layer that is designed to make it easier for developers to integrate with different authentication schemes. It is most commonly used in applications for sites that use Kerberos for network authentication, though it can also allow applications to interoperate with other authentication schemes.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>GSS does not expose anything external to the system as it is configured to use TLI (protocol = <xhtml:span class="inline_block">ticotsord</xhtml:span>) by default. This service should be disabled if it is not required.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>To disable this service, run the following command:</xhtml:p>
                  <xhtml:code class="pre_0.9825758482935023"># svcadm disable svc:/network/rpc/gss</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/network/rpc/gss' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        -->
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/network/rpc/gss' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/network/rpc/gss 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                -->
                  <ecl:shell-command check="all" comment="PASS if svc:/network/rpc/gss is not installed.">
                     <ecl:command>svcs -Ho state svc:/network/rpc/gss 2&gt;&amp;1</ecl:command>
                     <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/network/rpc/gss' doesn't match any instances"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/network/rpc/gss
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                  <ecl:shell-command check="all" comment="Ensure Generic Security Services is disabled">
                     <ecl:command>svcs -Ho state svc:/network/rpc/gss</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.8_Disable_Removable_Volume_Manager" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Disable Removable Volume Manager</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The HAL-aware removable volume manager in the Solaris 11 OS automatically mounts external devices for users whenever the device is attached to the system. These devices include CD-R, CD-RW, floppies, DVD, USB and 1394 mass storage devices. See the <xhtml:span class="inline_block">rmvolmgr</xhtml:span>(1M) manual page for more details.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Allowing users to mount and access data from removable media devices makes it easier for malicious programs and data to be imported onto the network. It also introduces the risk that sensitive data may be transferred off the system without a log record. By adding rmvolmgr to the <xhtml:span class="inline_block">.xinitrc </xhtml:span>file, user-isolated instances of <xhtml:span class="inline_block">rmvolmgr </xhtml:span>can be run via a session startup script. In such cases, the <xhtml:span class="inline_block">rmvolmgr </xhtml:span>instance will not allow management of volumes that belong to other than the owner of the startup script. When a user logs onto the workstation console (<xhtml:span class="inline_block">/dev/console</xhtml:span>), any instance of user-initiated <xhtml:span class="inline_block">rmvolmgr </xhtml:span>will only own locally connected devices, such as CD-ROMs or flash memory hardware, locally connected to USB or FireWire ports.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>To disable this service, run the following commands:</xhtml:p>
                  <xhtml:code class="pre_0.42851582366867247"># svcadm disable svc:/system/filesystem/rmvolmgr<xhtml:br/># svcadm disable svc:/network/rpc/smserver</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/network/rpc/smserver' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        -->
               <xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/network/rpc/smserver' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/network/rpc/smserver 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                -->
                     <ecl:shell-command check="all" comment="PASS if svc:/network/rpc/smserver is not installed.">
                        <ecl:command>svcs -Ho state svc:/network/rpc/smserver 2&gt;&amp;1</ecl:command>
                        <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/network/rpc/smserver' doesn't match any instances"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
               <xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/network/rpc/smserver
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                     <ecl:shell-command check="all" comment="Ensure RPC smserver is disabled">
                        <ecl:command>svcs -Ho state svc:/network/rpc/smserver</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
            </xccdf:complex-check>
            <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/system/filesystem/rmvolmgr' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        -->
               <xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/system/filesystem/rmvolmgr' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/system/filesystem/rmvolmgr 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                -->
                     <ecl:shell-command check="all" comment="PASS if svc:/system/filesystem/rmvolmgr is not installed.">
                        <ecl:command>svcs -Ho state svc:/system/filesystem/rmvolmgr 2&gt;&amp;1</ecl:command>
                        <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/system/filesystem/rmvolmgr' doesn't match any instances"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
               <xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/system/filesystem/rmvolmgr
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                     <ecl:shell-command check="all" comment="Ensure Removable Volume Manager is disabled">
                        <ecl:command>svcs -Ho state svc:/system/filesystem/rmvolmgr</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
            </xccdf:complex-check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.9_Disable_automount_Service" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Disable automount Service</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The <xhtml:span class="inline_block">automount </xhtml:span>daemon is normally used to automatically mount NFS file systems from remote file servers when needed. However, the <xhtml:span class="inline_block">automount </xhtml:span>daemon can also be configured to mount local (loopback) file systems as well, which may include local user home directories, depending on the system configuration.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>This service should be disabled if it is not required.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>To disable this service, run the following command:</xhtml:p>
                  <xhtml:code class="pre_0.6844314316216309"># svcadm disable svc:/system/filesystem/autofs</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/system/filesystem/autofs' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        -->
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/system/filesystem/autofs' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/system/filesystem/autofs 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                -->
                  <ecl:shell-command check="all" comment="PASS if svc:/system/filesystem/autofs is not installed.">
                     <ecl:command>svcs -Ho state svc:/system/filesystem/autofs 2&gt;&amp;1</ecl:command>
                     <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/system/filesystem/autofs' doesn't match any instances"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/system/filesystem/autofs
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                  <ecl:shell-command check="all" comment="Ensure Automount service is disabled">
                     <ecl:command>svcs -Ho state svc:/system/filesystem/autofs</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.10_Disable_Apache_Service" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Disable Apache Service</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The Apache service provides an instance of the Apache web server.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>This service should be disabled if it is not required.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>To disable this service, run the following command:</xhtml:p>
                  <xhtml:code class="pre_0.45959328151828605"># svcadm disable svc:/network/http:apache22</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/network/http:apache22' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        -->
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/network/http:apache22' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/network/http:apache22 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                -->
                  <ecl:shell-command check="all" comment="PASS if svc:/network/http:apache22 is not installed.">
                     <ecl:command>svcs -Ho state svc:/network/http:apache22 2&gt;&amp;1</ecl:command>
                     <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/network/http:apache22' doesn't match any instances"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/network/http:apache22
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                  <ecl:shell-command check="all" comment="Ensure Apache2 is disabled">
                     <ecl:command>svcs -Ho state svc:/network/http:apache22</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.11_Configure_TCP_Wrappers" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Configure TCP Wrappers</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>TCP Wrappers is a host-based access control system that allows administrators to control who has access to various network services based on the IP address of the remote end of the connection. TCP Wrappers also provide logging information via <xhtml:span class="inline_block">syslog </xhtml:span>about both successful and unsuccessful connections.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>TCP Wrappers provides granular control over what services can be accessed over the network. Its logs show attempted access to services from non-authorized systems, which can help identify unauthorized access attempts.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>To enable TCP Wrappers, run the following commands:</xhtml:p>
                  <xhtml:ol>
                     <xhtml:li>Create and customize your policy in <xhtml:span class="inline_block">/etc/hosts.allow</xhtml:span>:<xhtml:code class="pre_0.9495760060484807"># echo "ALL: &lt;net&gt;/&lt;mask&gt;, &lt;net/&lt;mask&gt;, #x2026;" &gt; /etc/hosts.allow </xhtml:code>where each <xhtml:em>&lt;net&gt;/&lt;mask&gt;</xhtml:em> combination (for example, the Class C address block "<xhtml:span class="inline_block">192.168.1.0/255.255.255.0</xhtml:span>") can represent one network block in use by your organization that requires access to this system.</xhtml:li>
                     <xhtml:li>Create a default deny policy in <xhtml:span class="inline_block">/etc/hosts.deny</xhtml:span>:<xhtml:code class="pre_0.9847895746935188"># echo "ALL: ALL" &gt;/etc/hosts.deny </xhtml:code>
                     </xhtml:li>
                     <xhtml:li>Enable TCP Wrappers for all services started by <xhtml:span class="inline_block">inetd</xhtml:span>:<xhtml:code class="pre_0.7853537800154298"># inetadm -M tcp_wrappers=TRUE </xhtml:code>To protect only specific <xhtml:span class="inline_block">inetd </xhtml:span>services, use the command:<xhtml:code class="pre_0.42187400963539834"># inetadm -m [FMRI] tcp_wrappers=TRUE </xhtml:code>To enable TCP Wrappers for the RPC port mapping service, use the commands:<xhtml:code class="pre_0.4508000385166858"># svccfg -s rpc/bind setprop config/enable_tcpwrappers=true<xhtml:br/># svcadm refresh rpc/bind </xhtml:code>The versions of SSH and sendmail that ship with Solaris 11 will automatically use TCP Wrappers to filter access if a <xhtml:span class="inline_block">hosts.allow </xhtml:span>or <xhtml:span class="inline_block">hosts.deny </xhtml:span>file exists. To protect UDP and RPC-based services that are spawned from <xhtml:span class="inline_block">inetd</xhtml:span>, consider implementing a host-based firewall such as Solaris IP Filter. See <xhtml:span class="inline_block">ipfilter(5) </xhtml:span>for more information.</xhtml:li>
                  </xhtml:ol>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>

      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.12_Disable_Telnet_Service" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Disable Telnet Service</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The <xhtml:span class="inline_block">telnet </xhtml:span>daemon, which accepts connections from users from other systems via the <xhtml:span class="inline_block">telnet </xhtml:span>protocol and can be used for remote shell access.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>The <xhtml:span class="inline_block">telnet </xhtml:span>protocol is insecure and unencrypted. The use of an unencrypted transmission medium could allow a user with access to sniff network traffic the ability to steal credentials.  The <xhtml:span class="inline_block">ssh protocol </xhtml:span>provides an encrypted session and stronger security.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Disable <xhtml:span class="inline_block">telnet </xhtml:span>server if enabled:</xhtml:p>
                  <xhtml:code class="pre_0.7924872831869076"># svcadm disable svc:/network/telnet</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/network/telnet' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        -->
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/network/telnet' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/network/telnet 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                -->
                  <ecl:shell-command check="all" comment="PASS if svc:/network/telnet is not installed.">
                     <ecl:command>svcs -Ho state svc:/network/telnet 2&gt;&amp;1</ecl:command>
                     <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/network/telnet' doesn't match any instances"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/network/telnet
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                  <ecl:shell-command check="all" comment="Ensure telnet is disabled">
                     <ecl:command>svcs -Ho state svc:/network/telnet</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
   </xccdf:Group>
   <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_3_Kernel_Tuning">
      <xccdf:title xml:lang="en">Kernel Tuning</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p class="CISNormal">This section describes additional measures that may be taken to provide protection on the kernel level.</xhtml:p>
      </xccdf:description>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1_Restrict_Core_Dumps_to_Protected_Directory" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Restrict Core Dumps to Protected Directory</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The action described in this section creates a protected directory to store core dumps and also causes the system to create a log entry whenever a regular process dumps core.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Core dumps, particularly those from set-UID and set-GID processes, may contain sensitive data.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>To implement the recommendation, run the commands:</xhtml:p>
                  <xhtml:code class="pre_0.37212440637484967"># chmod 700 /var/share/cores<xhtml:br/># coreadm -g /var/share/cores/core_%n_%f_%u_%g_%t_%p \<xhtml:br/>        -e log -e global -e global-setid \<xhtml:br/>        -d process -d proc-setid </xhtml:code>
                  <xhtml:p>If the local site chooses, dumping of core files can be completely disabled with the following command:</xhtml:p>
                  <xhtml:code class="pre_0.7567108809223"># coreadm -d global -d global-setid -d process -d proc-setid </xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure Core Dump File Pattern is configured">
                     <ecl:command>coreadm | grep "global core file pattern"</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="core_%n_%f_%u_%g_%t_%p"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure Core Dumps Global Core File Content set to default">
                     <ecl:command>coreadm | grep "global core file content"</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="default"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure Core Dumps  Init Core File Pattern set to core">
                     <ecl:command>coreadm | grep "init core file pattern"</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="core"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure Core Dumps Init Core File Content set to default">
                     <ecl:command>coreadm | grep "init core file content"</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="default"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure Core Dumps Global Core Dumps is enabled">
                     <ecl:command>coreadm | grep "global core dumps"</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="enabled"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure Core Dumps Per-Process Core Dumps is disabled">
                     <ecl:command>coreadm | grep "per-process core dumps"</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure Core Dumps Global setid Core Dumps is enabled">
                     <ecl:command>coreadm | grep "global setid core dumps"</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="enabled"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure Core Dumps Per-Process setid Core Dumps is disabled">
                     <ecl:command>coreadm | grep "per-process setid core dumps"</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure Core Dumps Global Core Dump Logging is enabled">
                     <ecl:command>coreadm | grep "global core dump logging"</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="enabled"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure Core Dumps Restricted to Protected Directory">
                     <ecl:command>ls -Lld /var/cores</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^drwx------"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.2_Enable_Stack_Protection" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Enable Stack Protection</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Buffer overflow exploits have been the basis for many highly publicized compromises and defacements of large numbers of Internet connected systems. Many of the automated tools in use by system attackers exploit well-known buffer overflow problems in vendor-supplied and third party software.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Enabling stack protection prevents certain classes of buffer overflow attacks and is a significant security enhancement. However, this does not protect against buffer overflow attacks that do not execute code on the stack (such as <xhtml:span class="inline_block">return-to-libc </xhtml:span>exploits). While most of the Solaris OS is already configured to employ a non-executable stack, this setting is still recommended to provide a more comprehensive solution for both Solaris and other software that may be installed.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>To enable stack protection and block stack-smashing attacks, run the following to edit the /etc/system file:</xhtml:p>
                  <xhtml:code class="pre_0.5979181138365736"># if [ ! "`grep noexec_user_stack= /etc/system`" ]; then<xhtml:br/>    cat &lt;&lt;END_CFG &gt;&gt;/etc/system<xhtml:br/>set noexec_user_stack=1<xhtml:br/>set noexec_user_stack_log=1<xhtml:br/>END_CFG<xhtml:br/>fi</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:file-content check="at least one" comment="Ensure stack protection is enabled in /etc/system">
                     <ecl:path>/etc/system</ecl:path>
                     <ecl:line-selection op="pm" value="^set noexec_user_stack\s*=\s*1"/>
                  </ecl:file-content>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:file-content check="at least one" comment="Ensure stack protection log is enabled in /etc/system">
                     <ecl:path>/etc/system</ecl:path>
                     <ecl:line-selection op="pm" value="^set noexec_user_stack_log\s*=\s*1"/>
                  </ecl:file-content>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure stack protection is enabled on running system">
                     <ecl:command>echo "noexec_user_stack/D" | mdb -k</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^noexec_user_stack:\s+1"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.3_Enable_Strong_TCP_Sequence_Number_Generation" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Enable Strong TCP Sequence Number Generation</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The variable <xhtml:span class="inline_block">TCP_STRONG_ISS </xhtml:span>defines the mechanism used for TCP initial sequence number generation. If an attacker can predict the next sequence number, it is possible to inject fraudulent packets into the data stream to hijack the session.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>The RFC 1948 method is widely accepted as the strongest mechanism for TCP packet generation. This makes remote session hijacking attacks more difficult, as well as any other network-based attack that relies on predicting TCP sequence number information. It is theoretically possible that there may be a small performance hit in connection setup time when this setting is used, but there are no publicly available benchmarks that establish this.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Run the following commands to set the <xhtml:span class="inline_block">TCP_STRONG_ISS </xhtml:span>parameter to use RFC 1948 sequence number generation in the <xhtml:span class="inline_block">/etc/default/inetinit </xhtml:span>file:</xhtml:p>
                  <xhtml:code class="pre_0.6886866173566761"># cd /etc/default<xhtml:br/># awk '/TCP_STRONG_ISS=/ { $1 = "TCP_STRONG_ISS=2" }; \<xhtml:br/> { print }' inetinit &gt; inetinit.CIS<xhtml:br/># mv inetinit.CIS inetinit </xhtml:code>
                  <xhtml:p>To set the <xhtml:span class="inline_block">TCP_STRONG_ISS </xhtml:span>parameter on a running system, use the command:</xhtml:p>
                  <xhtml:code class="pre_0.9273881283065952"># ipadm set-prop -p _strong_iss=2 tcp</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:file-content check="at least one" comment="Ensure strong TCP sequence number generation is enabled">
                     <ecl:path>/etc/default/inetinit</ecl:path>
                     <ecl:line-selection op="pm" value="^TCP_STRONG_ISS=2"/>
                  </ecl:file-content>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure strong TCP sequence number generation is enabled on active system">
                     <ecl:command>ipadm show-prop -p _strong_iss -co current tcp</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^2$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.4_Disable_Source_Packet_Forwarding" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Disable Source Packet Forwarding</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>This setting controls whether the IPv4 or IPv6 configuration will forward packets with IPv4 routing options or IPv6 routing headers.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Keep this parameter disabled to prevent denial of service attacks through spoofed packets.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>To enforce this setting for IPv4 packets, use the command:</xhtml:p>
                  <xhtml:code class="pre_0.252116518919854"># ipadm set-prop -p _forward_src_routed=0 ipv4 </xhtml:code>
                  <xhtml:p>To enforce this setting for IPv6 packets, use the command:</xhtml:p>
                  <xhtml:code class="pre_0.39578825570068277"># ipadm set-prop -p _forward_src_routed=0 ipv6</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ipv4 source packet forwarding is disabled">
                     <ecl:command>ipadm show-prop -p _forward_src_routed -co current ipv4</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^0$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ipv4 source packet forwarding is disabled">
                     <ecl:command>ipadm show-prop -p _forward_src_routed -co persistent ipv4</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^0$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ipv6 source packet forwarding is disabled">
                     <ecl:command>ipadm show-prop -p _forward_src_routed -co current ipv6</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^0$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ipv6 source packet forwarding is disabled">
                     <ecl:command>ipadm show-prop -p _forward_src_routed -co persistent ipv6</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^0$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.5_Disable_Directed_Broadcast_Packet_Forwarding" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Disable Directed Broadcast Packet Forwarding</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>This setting controls whether Solaris forwards broadcast packets for a specific network if it is directly connected to the machine.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Keep this parameter disabled to prevent denial of service attacks.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>To enforce this setting, use the command:</xhtml:p>
                  <xhtml:code class="pre_0.746690975385206"># ipadm set-prop -p _forward_directed_broadcasts=0 ip</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure Directed Broadcast Packet Forwarding is disabled">
                     <ecl:command>ipadm show-prop -p _forward_directed_broadcasts -co current ip</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^0$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure Directed Broadcast Packet Forwarding is disabled on running system">
                     <ecl:command>ipadm show-prop -p _forward_directed_broadcasts -co persistent ip</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^0$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.6_Disable_Response_to_ICMP_Timestamp_Requests" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Disable Response to ICMP Timestamp Requests</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>This setting controls whether Solaris will respond to ICMP timestamp requests.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Reduce attack surface by restricting this vector used for host discovery.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>To enforce this setting, use the command:</xhtml:p>
                  <xhtml:code class="pre_0.9251447554546252"># ipadm set-prop -p _respond_to_timestamp=0 ip</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ICMP Timestamp Response is disabled ">
                     <ecl:command>ipadm show-prop -p _respond_to_timestamp -co current ip</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^0$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ICMP Timestamp Response is disabled on running system">
                     <ecl:command>ipadm show-prop -p _respond_to_timestamp -co persistent ip</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^0$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.7_Disable_Response_to_ICMP_Broadcast_Timestamp_Requests" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Disable Response to ICMP Broadcast Timestamp Requests</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>This setting controls whether Solaris will respond to ICMP broadcast timestamp requests.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Reduce attack surface by restricting this vector used for host discovery and to prevent denial of service attacks.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>To enforce this setting, use the command:</xhtml:p>
                  <xhtml:code class="pre_0.6482546961559691"># ipadm set-prop -p _respond_to_timestamp_broadcast=0 ip</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ICMP Broadcast Timestamp Response is disabled">
                     <ecl:command>ipadm show-prop -p _respond_to_timestamp_broadcast -co current ip</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^0$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ICMP Broadcast Timestamp Response is disabled on running system">
                     <ecl:command>ipadm show-prop -p _respond_to_timestamp_broadcast -co persistent ip</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^0$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.8_Disable_Response_to_ICMP_Broadcast_Netmask_Requests" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Disable Response to ICMP Broadcast Netmask Requests</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>This setting controls whether Solaris will respond to ICMP broadcast netmask requests.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Reduce attack surface by restricting this vector used for host and network discovery and to prevent denial of service attacks.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>To enforce this setting, use the command:</xhtml:p>
                  <xhtml:code class="pre_0.39108207399249817"># ipadm set-prop -p _respond_to_address_mask_broadcast=0 ip</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ICMP Broadcast Netmask Response is disabled">
                     <ecl:command>ipadm show-prop -p _respond_to_address_mask_broadcast -co current ip</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^0$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ICMP Broadcast Netmask Response is disabled on running system">
                     <ecl:command>ipadm show-prop -p _respond_to_address_mask_broadcast -co persistent ip</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^0$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.9_Disable_Response_to_Broadcast_ICMPv4_Echo_Request" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Disable Response to Broadcast ICMPv4 Echo Request</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>This setting controls whether Solaris responds to broadcast ICMPv4 echo requests.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Reduce attack surface by restricting this vector used for host discovery and to prevent denial of service attacks.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>To enforce this setting, use the command:</xhtml:p>
                  <xhtml:code class="pre_0.956115013654427"># ipadm set-prop -p _respond_to_echo_broadcast=0 ip</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ICMP Echo Response is disabled">
                     <ecl:command>ipadm show-prop -p _respond_to_echo_broadcast -co current ip</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^0$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ICMP Echo Response is disabled on running system">
                     <ecl:command>ipadm show-prop -p _respond_to_echo_broadcast -co persistent ip</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^0$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.10_Disable_Response_to_Multicast_Echo_Request" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Disable Response to Multicast Echo Request</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>These settings control whether Solaris responds to multicast IPv4 and IPv6 echo requests.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Reduce attack surface by restricting this vector used for host discovery and to prevent denial of service attacks.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>To enforce this setting for IPv4 packets, use the command:</xhtml:p>
                  <xhtml:code class="pre_0.8250921572006638"># ipadm set-prop -p _respond_to_echo_multicast=0 ipv4 </xhtml:code>
                  <xhtml:p>To enforce this setting for IPv6 packets, use the command:</xhtml:p>
                  <xhtml:code class="pre_0.834234855060179"># ipadm set-prop -p _respond_to_echo_multicast=0 ipv6 </xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ipv4 response to multicast echo is disabled">
                     <ecl:command>ipadm show-prop -p _respond_to_echo_multicast -co current ipv4</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^0$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ipv4 response to multicast echo is disabled">
                     <ecl:command>ipadm show-prop -p _respond_to_echo_multicast -co persistent ipv4</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^0$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ipv6 response to multicast echo is disabled">
                     <ecl:command>ipadm show-prop -p _respond_to_echo_multicast -co current ipv6</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^0$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ipv6 response to multicast echo is disabled">
                     <ecl:command>ipadm show-prop -p _respond_to_echo_multicast -co persistent ipv6</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^0$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.11_Ignore_ICMP_Redirect_Messages" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Ignore ICMP Redirect Messages</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>These settings control whether Solaris will ignore ICMP redirect messages.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>IP redirects should not be necessary in a well-designed and maintained network. Set to a value of 1 if there is a high risk for a DoS attack. Otherwise, the default value of 0 is sufficient.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>To enforce this setting for IPv4 packets, use the command:</xhtml:p>
                  <xhtml:code class="pre_0.7033742828867922"># ipadm set-prop -p _ignore_redirect=1 ipv4 </xhtml:code>
                  <xhtml:p>To enforce this setting for IPv6 packets, use the command:</xhtml:p>
                  <xhtml:code class="pre_0.5495993951006595"># ipadm set-prop -p _ignore_redirect=1 ipv6 </xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ipv4 ignore ICMP redirect messages is enabled">
                     <ecl:command>ipadm show-prop -p _ignore_redirect -co current ipv4</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^1$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ipv4 ignore ICMP redirect messages is enabled">
                     <ecl:command>ipadm show-prop -p _ignore_redirect -co persistent ipv4</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^1$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ipv6 ignore ICMP redirect messages is enabled">
                     <ecl:command>ipadm show-prop -p _ignore_redirect -co current ipv6</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^1$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ipv6 ignore ICMP redirect messages is enabled">
                     <ecl:command>ipadm show-prop -p _ignore_redirect -co persistent ipv6</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^1$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.12_Set_Strict_Multihoming" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Set Strict Multihoming</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>These settings control whether a packet arriving on a non-forwarding interface can be accepted for an IP address that is not explicitly configured on that interface.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Enable this setting for systems that have interfaces that cross strict networking domains (for example, a firewall or a VPN node).</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>To enforce this setting for IPv4 packets, use the command:</xhtml:p>
                  <xhtml:code class="pre_0.3833545403101527"># ipadm set-prop -p _strict_dst_multihoming=1 ipv4 </xhtml:code>
                  <xhtml:p>To enforce this setting for IPv6 packets, use the command:</xhtml:p>
                  <xhtml:code class="pre_0.8119554482530439"># ipadm set-prop -p _strict_dst_multihoming=1 ipv6</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ipv4 Strict Multihoming is enabled">
                     <ecl:command>ipadm show-prop -p _strict_dst_multihoming -co current ipv4</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^1$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ipv4 Strict Multihoming is enabled">
                     <ecl:command>ipadm show-prop -p _strict_dst_multihoming -co persistent ipv4</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^1$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ipv6 Strict Multihoming is enabled">
                     <ecl:command>ipadm show-prop -p _strict_dst_multihoming -co current ipv6</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^1$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ipv6 Strict Multihoming is enabled">
                     <ecl:command>ipadm show-prop -p _strict_dst_multihoming -co persistent ipv6</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^1$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.13_Disable_ICMP_Redirect_Messages" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Disable ICMP Redirect Messages</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>These setting controls whether Solaris sends ICMPv4 and ICMPv6 redirect messages.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>A malicious user can exploit the ability of the system to send ICMP redirects by continually sending packets to the system, forcing the system to respond with ICMP redirect messages, resulting in an adverse impact on the CPU performance of the system.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>To enforce this setting for IPv4 packets, use the command:</xhtml:p>
                  <xhtml:code class="pre_0.6397272525589711"># ipadm set-prop -p _send_redirects=0 ipv4 </xhtml:code>
                  <xhtml:p>To enforce this setting for IPv6 packets, use the command:</xhtml:p>
                  <xhtml:code class="pre_0.2685962667496691"># ipadm set-prop -p _send_redirects=0 ipv6 </xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ipv4 ICMP Redirect Messages is disabled">
                     <ecl:command>ipadm show-prop -p _send_redirects -co current ipv4</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^0$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ipv4 ICMP Redirect Messages is disabled">
                     <ecl:command>ipadm show-prop -p _send_redirects -co persistent ipv4</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^0$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ipv6 ICMP Redirect Messages is disabled">
                     <ecl:command>ipadm show-prop -p _send_redirects -co current ipv6</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^0$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ipv6 ICMP Redirect Messages is disabled">
                     <ecl:command>ipadm show-prop -p _send_redirects -co persistent ipv6</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^0$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.14_Disable_TCP_Reverse_IP_Source_Routing" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Disable TCP Reverse IP Source Routing</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>This setting controls whether TCP reverses the IP source routing option for incoming connections.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>If IP source routing is needed for diagnostic purposes, enable it. Otherwise disable it.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>To enforce this setting, use the command:</xhtml:p>
                  <xhtml:code class="pre_0.5246005446777934"># ipadm set-prop -p _rev_src_routes=0 tcp</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure TCP Reverse IP Source Routing is disabled">
                     <ecl:command>ipadm show-prop -p _rev_src_routes -co current tcp</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^0$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure TCP Reverse IP Source Routing is disabled on running system">
                     <ecl:command>ipadm show-prop -p _rev_src_routes -co persistent tcp</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^0$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.15_Set_Maximum_Number_of_Half-open_TCP_Connections" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Set Maximum Number of Half-open TCP Connections</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>This setting controls how many half-open connections can exist for a TCP port.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>It is necessary to control the number of completed connections to the system to provide some protection against Denial of Service attacks. Note that the value of 4096 is a minimum to establish a good security posture for this setting. In environments where connections numbers are high, such as a busy webserver, this value may need to be increased.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>To enforce this setting, use the command:</xhtml:p>
                  <xhtml:code class="pre_0.7977308974344867"># ipadm set-prop -p _conn_req_max_q0=4096 tcp</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure Maximum Number of Half-Open TCP COnnections is configured">
                     <ecl:command>ipadm show-prop -p _conn_req_max_q0 -co current tcp</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^4096$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure Maximum Number of Half-Open TCP Connections is configured on running system">
                     <ecl:command>ipadm show-prop -p _conn_req_max_q0 -co persistent tcp</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^4096$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.16_Set_Maximum_Number_of_Incoming_Connections" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Set Maximum Number of Incoming Connections</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>This setting controls the maximum number of incoming connections that can be accepted on a TCP port.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Note that the value of 1024 is a minimum to establish a good security posture for this setting. In environments where connections numbers are high, such as a busy webserver, this value may need to be increased.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>To enforce this setting, use the command:</xhtml:p>
                  <xhtml:code class="pre_0.5517664115300003"># ipadm set-prop -p _conn_req_max_q=1024 tcp</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure Maximum Number of Incomming Connections is Configured">
                     <ecl:command>ipadm show-prop -p _conn_req_max_q -co current tcp</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^1024$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure Maximum Number of Incomming Connections is Configured on running system">
                     <ecl:command>ipadm show-prop -p _conn_req_max_q -co persistent tcp</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^1024$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.17_Disable_Network_Routing" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Disable Network Routing</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The network routing daemon, <xhtml:span class="inline_block">in.routed</xhtml:span>, manages network routing tables. If enabled, it periodically supplies copies of the system's routing tables to any directly connected hosts and networks and picks up routes supplied to it from other networks and hosts.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Routing Internet Protocol (RIP) is a legacy protocol with a number of security weaknesses including a lack of authentication, zoning, pruning, etc.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>To enforce this setting and disable IPv4 routing, use the command: </xhtml:p>
                  <xhtml:code class="pre_0.016795169848316194"># routeadm -d ipv4-forwarding -d ipv4-routing </xhtml:code>
                  <xhtml:p>To enforce this setting and disable IPv6 routing, use the command: </xhtml:p>
                  <xhtml:code class="pre_0.348061195004428"># routeadm -d ipv6-forwarding -d ipv6-routing </xhtml:code>
                  <xhtml:p>To apply these changes to the running system, use the command:</xhtml:p>
                  <xhtml:code class="pre_0.8583256259387411"># routeadm -u</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ipv4-routing is disabled">
                     <ecl:command>routeadm -p | egrep "^ipv4-routing |^ipv4-forwarding " | awk '{printf("%s %s\n", $1, $NF); }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="ipv4-routing current=disabled"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ipv4-forwarding is disabled">
                     <ecl:command>routeadm -p | egrep "^ipv4-routing |^ipv4-forwarding " | awk '{printf("%s %s\n", $1, $NF); }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="ipv4-forwarding current=disabled"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ipv4-routing is persistently disabled">
                     <ecl:command>routeadm -p | egrep "^ipv4-routing |^ipv4-forwarding " | awk '{printf("%s %s\n", $1, $2); }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="ipv4-routing persistent=disabled"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ipv4-forwarding is persistently disabled">
                     <ecl:command>routeadm -p | egrep "^ipv4-routing |^ipv4-forwarding " | awk '{printf("%s %s\n", $1, $2); }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="ipv4-forwarding persistent=disabled"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ipv6-routing is disabled">
                     <ecl:command>routeadm -p | egrep "^ipv6-routing |^ipv6-forwarding " | awk '{printf("%s %s\n", $1, $NF); }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="ipv6-routing current=disabled"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ipv6-forwarding is disabled">
                     <ecl:command>routeadm -p | egrep "^ipv6-routing |^ipv6-forwarding " | awk '{printf("%s %s\n", $1, $NF); }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="ipv6-forwarding current=disabled"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ipv6-routing is persistently disabled">
                     <ecl:command>routeadm -p | egrep "^ipv6-routing |^ipv6-forwarding " | awk '{printf("%s %s\n", $1, $2); }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="ipv6-routing persistent=disabled"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ipv6-forwarding is persistently disabled">
                     <ecl:command>routeadm -p | egrep "^ipv6-routing |^ipv6-forwarding " | awk '{printf("%s %s\n", $1, $2); }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="ipv6-forwarding persistent=disabled"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
   </xccdf:Group>
   <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_4_Auditing_and_Logging">
      <xccdf:title xml:lang="en">Auditing and Logging</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>With the release of the Solaris 11 OS, the Solaris Audit service is enabled by default. As a result, recommendations where audit and log information was typically configured and sent to the system log (<xhtml:span class="inline_block">syslog</xhtml:span>) facility have been modified to use the Solaris Audit service instead. Note that for sites that still require such information to be delivered over <xhtml:span class="inline_block">syslog</xhtml:span>, the Solaris Audit facility can be configured to deliver audit records to that service as well.</xhtml:p>
         <xhtml:p>Because it is often necessary to correlate log information from many different systems (particularly after a security incident), it is recommended that the time be synchronized among systems and devices connected to the local network. The standard Internet protocol for time synchronization is the Network Time Protocol (NTP), which is supported by most network-ready devices including Oracle Solaris 11. More information on NTP can be found at <xhtml:a href="http://www.ntp.org">http://www.ntp.org</xhtml:a>.</xhtml:p>
      </xccdf:description>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.1_Create_CIS_Audit_Class" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Create CIS Audit Class</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>To group a set of related audit events, the Solaris Audit service provides the ability for sites to define their own audit classes that contain just those events that the site wants to audit.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>To simplify administration, a CIS specific audit class should be created.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>To create the CIS audit class, edit the <xhtml:span class="inline_block">/etc/security/audit_class </xhtml:span>file and add the following entry before the last line of the file:</xhtml:p>
                  <xhtml:code class="pre_0.09613302031019344">0x0100000000000000:cis:CIS Solaris Benchmark</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:file-content check="at least one" comment="Ensure CIS Audit Class exists">
                  <ecl:path>/etc/security/audit_class</ecl:path>
                  <ecl:line-selection op="pm" value="0x0100000000000000:cis:CIS Solaris Benchmark"/>
               </ecl:file-content>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.2_Enable_Auditing_of_Incoming_Network_Connections" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Enable Auditing of Incoming Network Connections</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The Solaris Audit service can be configured to record incoming network connections to any listening service running on the system.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>This recommendation will provide an audit trail that contains information related to incoming network connections. While this functionality can be enabled using service-specific mechanisms, using the Solaris Audit service provides a more centralized and complete window into incoming network activity.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>To enforce this setting, edit the <xhtml:span class="inline_block">/etc/security/audit_event </xhtml:span>file and add the <xhtml:span class="inline_block">cis </xhtml:span>audit class to the following audit events:</xhtml:p>
                  <xhtml:code class="pre_0.5473035392716349">AUE_ACCEPT<xhtml:br/>AUE_CONNECT<xhtml:br/>AUE_SOCKACCEPT<xhtml:br/>AUE_SOCKCONNECT<xhtml:br/>AUE_inetd_connect</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure AUE_ACCEPT Audited with CIS class">
                     <ecl:command>grep "cis" /etc/security/audit_event | awk -F: '{ print $2 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="AUE_ACCEPT"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure AUE_CONNECT Audited with CIS class">
                     <ecl:command>grep "cis" /etc/security/audit_event | awk -F: '{ print $2 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="AUE_CONNECT"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure AUE_SOCKACCEPT Audited with CIS class">
                     <ecl:command>grep "cis" /etc/security/audit_event | awk -F: '{ print $2 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="AUE_SOCKACCEPT"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure AUE_SOCKCONNECT Audited with CIS class">
                     <ecl:command>grep "cis" /etc/security/audit_event | awk -F: '{ print $2 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="AUE_SOCKCONNECT"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure AUE_inetd_connect Audited with CIS class">
                     <ecl:command>grep "cis" /etc/security/audit_event | awk -F: '{ print $2 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="AUE_inetd_connect"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.3_Enable_Auditing_of_File_Metadata_Modification_Events" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Enable Auditing of File Metadata Modification Events</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The Solaris Audit service can be configured to record file metadata modification events for every process running on the system. This will allow the auditing service to determine when file ownership, permissions and related information is changed.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>This recommendation will provide an audit trail that contains information related to changes of file metadata. The Solaris Audit service is used to provide a more centralized and complete window into activities such as these.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>To enforce this setting, edit the /etc/security/audit_event file and add the cis audit class to the following audit events:</xhtml:p>
                  <xhtml:code class="pre_0.09454716875431002">AUE_CHMOD<xhtml:br/>AUE_CHOWN<xhtml:br/>AUE_FCHOWN<xhtml:br/>AUE_FCHMOD<xhtml:br/>AUE_LCHOWN<xhtml:br/>AUE_ACLSET<xhtml:br/>AUE_FACLSET</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure AUE_CHMOD Audited with CIS class">
                     <ecl:command>grep "cis" /etc/security/audit_event | awk -F: '{ print $2 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="AUE_CHMOD"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure AUE_CHOWN Audited with CIS class">
                     <ecl:command>grep "cis" /etc/security/audit_event | awk -F: '{ print $2 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="AUE_CHOWN"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure AUE_FCHOWN Audited with CIS class">
                     <ecl:command>grep "cis" /etc/security/audit_event | awk -F: '{ print $2 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="AUE_FCHOWN"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure AUE_FCHMOD Audited with CIS class">
                     <ecl:command>grep "cis" /etc/security/audit_event | awk -F: '{ print $2 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="AUE_FCHMOD"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure AUE_LCHOWN Audited with CIS class">
                     <ecl:command>grep "cis" /etc/security/audit_event | awk -F: '{ print $2 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="AUE_LCHOWN"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure AUE_ACLSET Audited with CIS class">
                     <ecl:command>grep "cis" /etc/security/audit_event | awk -F: '{ print $2 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="AUE_ACLSET"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure AUE_FACLSET Audited with CIS class">
                     <ecl:command>grep "cis" /etc/security/audit_event | awk -F: '{ print $2 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="AUE_FACLSET"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.4_Enable_Auditing_of_Process_and_Privilege_Events" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Enable Auditing of Process and Privilege Events</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The Solaris Audit service can be configured to record the use of privileges by processes running on the system. This will capture events such as the setting of UID and GID values, setting of privileges, as well as the use of functionality such as <xhtml:span class="inline_block">chroot(2)</xhtml:span>.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>This recommendation will provide an audit trail that contains information related to the use of privileges by processes running on the system. The Solaris Audit service is used to provide a more centralized and complete window into activities such as these.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>To enforce this setting, edit the <xhtml:span class="inline_block">/etc/security/audit_event </xhtml:span>file and add the <xhtml:span class="inline_block">cis </xhtml:span>audit class to the following audit events:</xhtml:p>
                  <xhtml:code class="pre_0.6420815694402853">AUE_CHROOT<xhtml:br/>AUE_SETREUID<xhtml:br/>AUE_SETREGID<xhtml:br/>AUE_FCHROOT<xhtml:br/>AUE_PFEXEC<xhtml:br/>AUE_SETUID<xhtml:br/>AUE_NICE<xhtml:br/>AUE_SETGID<xhtml:br/>AUE_PRIOCNTLSYS<xhtml:br/>AUE_SETEGID<xhtml:br/>AUE_SETEUID<xhtml:br/>AUE_SETPPRIV<xhtml:br/>AUE_SETSID<xhtml:br/>AUE_SETPGID</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure AUE_CHROOT Audited with CIS class">
                     <ecl:command>grep "cis" /etc/security/audit_event | awk -F: '{ print $2 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="AUE_CHROOT"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure AUE_SETREUID Audited with CIS class">
                     <ecl:command>grep "cis" /etc/security/audit_event | awk -F: '{ print $2 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="AUE_SETREUID"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure AUE_SETREGID Audited with CIS class">
                     <ecl:command>grep "cis" /etc/security/audit_event | awk -F: '{ print $2 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="AUE_SETREGID"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure AUE_FCHROOT Audited with CIS class">
                     <ecl:command>grep "cis" /etc/security/audit_event | awk -F: '{ print $2 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="AUE_FCHROOT"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure AUE_PFEXEC Audited with CIS class">
                     <ecl:command>grep "cis" /etc/security/audit_event | awk -F: '{ print $2 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="AUE_PFEXEC"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure AUE_SETUID Audited with CIS class">
                     <ecl:command>grep "cis" /etc/security/audit_event | awk -F: '{ print $2 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="AUE_SETUID"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure AUE_NICE Audited with CIS class">
                     <ecl:command>grep "cis" /etc/security/audit_event | awk -F: '{ print $2 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="AUE_NICE"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure AUE_SETGID Audited with CIS class">
                     <ecl:command>grep "cis" /etc/security/audit_event | awk -F: '{ print $2 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="AUE_SETGID"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure AUE_PRIOCNTLSYS Audited with CIS class">
                     <ecl:command>grep "cis" /etc/security/audit_event | awk -F: '{ print $2 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="AUE_PRIOCNTLSYS"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure AUE_SETEGID Audited with CIS class">
                     <ecl:command>grep "cis" /etc/security/audit_event | awk -F: '{ print $2 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="AUE_SETEGID"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure AUE_SETEUID Audited with CIS class">
                     <ecl:command>grep "cis" /etc/security/audit_event | awk -F: '{ print $2 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="AUE_SETEUID"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure AUE_SETPPRIV Audited with CIS class">
                     <ecl:command>grep "cis" /etc/security/audit_event | awk -F: '{ print $2 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="AUE_SETPPRIV"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure AUE_SETSID Audited with CIS class">
                     <ecl:command>grep "cis" /etc/security/audit_event | awk -F: '{ print $2 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="AUE_SETSID"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure AUE_SETPGID Audited with CIS class">
                     <ecl:command>grep "cis" /etc/security/audit_event | awk -F: '{ print $2 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="AUE_SETPGID"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.5_Configure_Solaris_Auditing" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Configure Solaris Auditing</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Solaris auditing service keeps a record of how a system is being used. Solaris auditing can be configured to record different classes of events based upon site policy. This recommendation will set and verify a consensus-developed auditing policy. That said, all organizations are encouraged to tailor this policy based upon their specific needs. For more information on the Solaris auditing service including how to filter and view events, see the Oracle Solaris product documentation.</xhtml:p>
            <xhtml:p>The "<xhtml:span class="inline_block">cis</xhtml:span>" class is a "custom class" that CIS recommends creating that includes specifically those events that are of interest (defined in the sections above). In addition to those events, this recommendation also includes auditing of login and logout (<xhtml:span class="inline_block">lo</xhtml:span>) events, administrative (<xhtml:span class="inline_block">ad</xhtml:span>) events, file transfer (<xhtml:span class="inline_block">ft</xhtml:span>) events, and command execution (<xhtml:span class="inline_block">ex</xhtml:span>) events.</xhtml:p>
            <xhtml:p>This recommendation also configures the Solaris auditing service to capture and report command line arguments (for command execution events) and the zone name in which a command was executed (for global and non-global zones). Further, this recommendation sets a disk utilization threshold of 1%. If this threshold is crossed (for the volume that includes <xhtml:span class="inline_block">/var/shares/audit</xhtml:span>), then a warning e-mail will be sent to advise the system administrators that audit events may be lost if the disk becomes full. Finally, this recommendation will also ensure that new audit trails are created at the start of each new day (to help keep the size of the files small to facilitate analysis).</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>The consensus settings described in this section are an effort to log interesting system events without consuming excessive amounts of resources logging significant but usually uninteresting system calls.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>To enforce this setting, use the commands:</xhtml:p>
                  <xhtml:code class="pre_0.3637660583095589"># auditconfig -conf<xhtml:br/># auditconfig -setflags lo,ad,ft,ex,cis<xhtml:br/># auditconfig -setnaflags lo <xhtml:br/># auditconfig -setpolicy cnt,argv,zonename<xhtml:br/># auditconfig -setplugin audit_binfile active p_minfree=1<xhtml:br/># audit -s<xhtml:br/># rolemod -K audit_flags=lo,ad,ft,ex,cis:no root<xhtml:br/># EDITOR=ed crontab -e root &lt;&lt; END_CRON<xhtml:br/>$<xhtml:br/>a<xhtml:br/>0 * * * * /usr/sbin/audit -n<xhtml:br/>.<xhtml:br/>w<xhtml:br/>q<xhtml:br/>END_CRON<xhtml:br/># chown root:root /var/shares/audit<xhtml:br/># chmod 750 /var/shares/audit</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure audit condition is auditing">
                     <ecl:command>auditconfig -getcond</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="audit condition = auditing"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure configured audit policies are argv,cnt,zonename">
                     <ecl:command>auditconfig -getpolicy</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="configured audit policies = argv,cnt,zonename"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure active audit policies are argv,cnt,zonename">
                     <ecl:command>auditconfig -getpolicy</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="active audit policies = argv,cnt,zonename"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure active user default audit flags are configured">
                     <ecl:command>auditconfig -getflags</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="active user default audit flags = cis,ex,aa,ua,as,ss,lo,ft\(0x1000000800f1080,0x1000000800f1080\)"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure configured user default audit flages are configured">
                     <ecl:command>auditconfig -getflags</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="configured user default audit flags = cis,ex,aa,ua,as,ss,lo,ft\(0x1000000800f1080,0x1000000800f1080\)"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure active non-attributable audit flags are configured">
                     <ecl:command>auditconfig -getnaflags</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="active non-attributable audit flags = lo\(0x1000,0x1000\)"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure configured non-attributable audit flags are configured">
                     <ecl:command>auditconfig -getnaflags</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="configured non-attributable audit flags = lo\(0x1000,0x1000\)"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure audit_binfile plugin is active">
                     <ecl:command>auditconfig -getplugin audit_binfile</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="Plugin: audit_binfile \(active\)"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure audit_binfile attributes are configured">
                     <ecl:command>auditconfig -getplugin audit_binfile</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="Attributes: p_dir=/var/audit;p_fsize=0;p_minfree=1"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure userattr auditflags for root are lo,ad,ft,ex,cis:no">
                     <ecl:command>userattr audit_flags root</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="lo,ad,ft,ex,cis:no"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
   </xccdf:Group>
   <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_5_FileDirectory_PermissionsAccess">
      <xccdf:title xml:lang="en">File/Directory Permissions/Access</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>File and directory permission control is one of the greatest challenges of secure system administration. This section provides guidance on how to secure system files and directories and set secure defaults for users. Guidance for monitoring user and system files on an on-going basis is provided in the System Maintenance section of this document.</xhtml:p>
      </xccdf:description>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.1_Set_Sticky_Bit_on_World_Writable_Directories" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Set Sticky Bit on World Writable Directories</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>When the so-called sticky bit (set with chmod +t) is set on a directory, then only the owner of a file may remove that file from the directory (as opposed to the usual behavior where anybody with write access to that directory may remove the file).</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Files in directories that have had the 'sticky bit' set, can only be deleted by users that have both write permissions for the directory in which the file resides, as well as ownership of the file or directory, or has sufficient privilege. As this prevents users from overwriting each other's files, whether it be accidental or malicious, it is generally appropriate for most world-writable directories (e.g., <xhtml:span class="inline_block">/tmp</xhtml:span>). However, consult appropriate vendor documentation before blindly applying the sticky bit to any world writable directories found, in order to avoid breaking any application dependencies on a given directory.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>To set the sticky bit on a directory, run the following command:</xhtml:p>
                  <xhtml:code class="pre_0.22658364953016408"># chmod +t [directory name]</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>

      </xccdf:Rule>
   </xccdf:Group>
   <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_6_System_Access_Authentication_and_Authorization">
      <xccdf:title xml:lang="en">System Access, Authentication, and Authorization</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>The actions described in this section are just a few measures that can be taken at a system level to control access to the system and its services. It is strongly advised that organizations have a process in place to document, authorize, and validate access privileges and to revoke authorizations when they are no longer required.</xhtml:p>
      </xccdf:description>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.1_Disable_login_Services_on_Serial_Ports" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Disable login: Services on Serial Ports</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The <xhtml:span class="inline_block">svccfg </xhtml:span>command provides service administration for the lower level of the Service Access Facility hierarchy and can be used to disable the ability to login on a particular port.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Login services should not be enabled on any serial ports that are not strictly required to support the mission of the system. This action can be safely performed even when console access is provided using a serial port.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="pre_0.6460777400825325"># svcadm disable svc:/system/console-login:terma<xhtml:br/># svcadm disable svc:/system/console-login:termb</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/system/console-login:terma' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        -->
               <xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/system/console-login:terma' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/system/console-login:terma 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                -->
                     <ecl:shell-command check="all" comment="PASS if svc:/system/console-login:terma is not installed.">
                        <ecl:command>svcs -Ho state svc:/system/console-login:terma 2&gt;&amp;1</ecl:command>
                        <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/system/console-login:terma' doesn't match any instances"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
               <xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/system/console-login:terma
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                     <ecl:shell-command check="all" comment="Ensure terma serial port login is disabled">
                        <ecl:command>svcs -Ho state svc:/system/console-login:terma</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
            </xccdf:complex-check>
            <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/system/console-login:termb' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        -->
               <xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/system/console-login:termb' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/system/console-login:termb 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                -->
                     <ecl:shell-command check="all" comment="PASS if svc:/system/console-login:termb is not installed.">
                        <ecl:command>svcs -Ho state svc:/system/console-login:termb 2&gt;&amp;1</ecl:command>
                        <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/system/console-login:termb' doesn't match any instances"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
               <xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/system/console-login:termb
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                     <ecl:shell-command check="all" comment="Ensure termb serial port login is disabled">
                        <ecl:command>svcs -Ho state svc:/system/console-login:termb</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
            </xccdf:complex-check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.2_Disable_nobody_Access_for_RPC_Encryption_Key_Storage_Service" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Disable "nobody" Access for RPC Encryption Key Storage Service</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>This action listed prevents <xhtml:span class="inline_block">keyserv </xhtml:span>from using default keys for the nobody user, effectively stopping the nobody user from accessing information via Secure RPC.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>If login by the user <xhtml:span class="inline_block">nobody </xhtml:span>is allowed for secure RPC, there is an increased risk of system compromise. If <xhtml:span class="inline_block">keyserv </xhtml:span>holds a private key for the nobody user, it will be used by <xhtml:span class="inline_block">key_encryptsession </xhtml:span>to compute a magic phrase which can be easily recovered by a malicious user.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="pre_0.5464752796248146"># cd /etc/default<xhtml:br/># awk '/ENABLE_NOBODY_KEYS=/ \<xhtml:br/> { $1 = "ENABLE_NOBODY_KEYS=NO" }<xhtml:br/> { print }' keyserv &gt; keyserv.CIS<xhtml:br/># mv keyserv.CIS keyserv</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:file-content check="at least one" comment="Ensure &quot;nobody&quot; access to RPC encryption keys is disabled">
                  <ecl:path>/etc/default/keyserv</ecl:path>
                  <ecl:line-selection op="pm" value="^ENABLE_NOBODY_KEYS=NO"/>
               </ecl:file-content>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.3_Disable_X11_Forwarding_for_SSH" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Disable X11 Forwarding for SSH</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The 'X11 Forwarding' parameter defined within the <xhtml:span class="inline_block">/etc/ssh/sshd_config </xhtml:span>file specifies whether or not X11 Forwarding via SSH is enabled on the server: The Secure Shell service provides an encrypted 'tunnel' for the data traffic passing through it. While commonly used to substitute for clear-text, CLI-based remote connections such as telnet, Secure Shell can be used to forward an 'X Window' session through the encrypted tunnel, allowing the remote user to have a GUI interface.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>As enabling X11Forwarding on the host can permit a malicious user to secretly open another X11 connection to another remote client during the session and perform unobtrusive activities such as keystroke monitoring, if the X11 services are not required for the system's intended function, it should be disabled or restricted as appropriate to the user's needs.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="pre_0.11873522865463104"># awk '/^X11Forwarding / { $2 = "no" } \<xhtml:br/> { print }' /etc/ssh/sshd_config &gt; /etc/ssh/sshd_config.CIS<xhtml:br/># mv /etc/ssh/sshd_config.CIS /etc/ssh/sshd_config<xhtml:br/># svcadm restart svc:/network/ssh</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:file-content check="at least one" comment="Ensure X11Forwarding in SSH is disabled">
                  <ecl:path>/etc/ssh/sshd_config</ecl:path>
                  <ecl:line-selection op="pm" value="^X11Forwarding no"/>
               </ecl:file-content>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.4_Limit_Consecutive_Login_Attempts_for_SSH" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Limit Consecutive Login Attempts for SSH</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The 'MaxAuthTries' parameter in the <xhtml:span class="inline_block">/etc/ssh/sshd_config </xhtml:span>file specifies the maximum number of authentication attempts permitted per connection. By restricting the number of failed authentication attempts before the server terminates the connection, malicious users are blocked from gaining access to the host by using repetitive brute-force login exploits.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>By setting the authentication login limit to a low value this will disconnect the attacker and force a reconnect, which severely limits the speed of such brute force attacks.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="pre_0.47810335926251313"># awk '/^MaxAuthTries/ { $2 = "6" } \<xhtml:br/> { print }' /etc/ssh/sshd_config &gt; /etc/ssh/sshd_config.CIS<xhtml:br/># mv /etc/ssh/sshd_config.CIS /etc/ssh/sshd_config<xhtml:br/># svcadm restart svc:/network/ssh</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:file-content check="at least one" comment="Ensure MaxAuthTries in SSH is configured">
                  <ecl:path>/etc/ssh/sshd_config</ecl:path>
                  <ecl:line-selection op="pm" value="^MaxAuthTries 6"/>
               </ecl:file-content>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.5_Disable_Rhost-based_Authentication_for_SSH" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Disable Rhost-based Authentication for SSH</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The <xhtml:span class="inline_block">IgnoreRhosts </xhtml:span>parameter specifies that existing <xhtml:span class="inline_block">.rhosts </xhtml:span>and <xhtml:span class="inline_block">.shosts </xhtml:span>files, which may apply to application rather than user logins, will not be used in <xhtml:span class="inline_block">RhostsRSAAuthentication </xhtml:span>or <xhtml:span class="inline_block">HostbasedAuthentication</xhtml:span>.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Setting this parameter forces users to enter a password when authenticating with SSH.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="pre_0.3103470327023431"># awk '/^IgnoreRhosts/ { $2 = "yes" } \<xhtml:br/> { print }' /etc/ssh/sshd_config &gt; /etc/ssh/sshd_config.CIS<xhtml:br/># mv /etc/ssh/sshd_config.CIS /etc/ssh/sshd_config<xhtml:br/># svcadm restart svc:/network/ssh </xhtml:code>
                  <xhtml:p>This action will only set the <xhtml:span class="inline_block">IgnoreRhosts </xhtml:span>line if it already exists in the file to ensure that it is set to the proper value. If the <xhtml:span class="inline_block">IgnoreRhosts </xhtml:span>line does not exist in the file, the default setting of <xhtml:span class="inline_block">Yes </xhtml:span>is automatically used, so no additional changes are needed.</xhtml:p>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:file-content check="none exist" comment="Ensure Rhost based Authentication for SSH is disabled">
                  <ecl:path>/etc/ssh/sshd_config</ecl:path>
                  <ecl:line-selection op="pm" value="^IgnoreRhosts no"/>
               </ecl:file-content>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.6_Disable_root_login_for_SSH" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Disable root login for SSH</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The <xhtml:span class="inline_block">PermitRootLogin </xhtml:span>value (in <xhtml:span class="inline_block">/etc/ssh/sshd_config</xhtml:span>) allows for direct <xhtml:span class="inline_block">root </xhtml:span>login by a remote user/application to resources on the local host.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>By default, it is not possible for the <xhtml:span class="inline_block">root </xhtml:span>account to log directly into the system console because the account is configured as a role. This setting therefore does not significantly alter the security posture of the system unless the <xhtml:span class="inline_block">root </xhtml:span>account is changed from this default and configured to be a normal user.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="pre_0.9536319125453077"># awk '/^PermitRootLogin/ { $2 = "no" } \<xhtml:br/> { print }' /etc/ssh/sshd_config &gt; /etc/ssh/sshd_config.CIS<xhtml:br/># mv /etc/ssh/sshd_config.CIS /etc/ssh/sshd_config<xhtml:br/># svcadm restart svc:/network/ssh</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:file-content check="at least one" comment="Ensure root login for SSH is disabled">
                  <ecl:path>/etc/ssh/sshd_config</ecl:path>
                  <ecl:line-selection op="pm" value="^PermitRootLogin no"/>
               </ecl:file-content>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.7_Blocking_Authentication_Using_EmptyNull_Passwords_for_SSH" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Blocking Authentication Using Empty/Null Passwords for SSH</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The <xhtml:span class="inline_block">PermitEmptyPasswords </xhtml:span>value allows for direct login through SSH without a password by a remote user/application to resources on the local host in the same way a standard remote login would.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Permitting login without a password is inherently risky.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="pre_0.38919468756358355"># awk '/^PermitEmptyPasswords/ { $2 = "no" } \<xhtml:br/> { print }' /etc/ssh/sshd_config &gt; /etc/ssh/sshd_config.CIS<xhtml:br/># mv /etc/ssh/sshd_config.CIS /etc/ssh/sshd_config<xhtml:br/># svcadm restart svc:/network/ssh</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:file-content check="at least one" comment="Ensure Authentication with empty passwords for SSH is disabled">
                  <ecl:path>/etc/ssh/sshd_config</ecl:path>
                  <ecl:line-selection op="pm" value="^PermitEmptyPasswords no"/>
               </ecl:file-content>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.8_Disable_Host-based_Authentication_for_Login-based_Services" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Disable Host-based Authentication for Login-based Services</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The <xhtml:span class="inline_block">.rhosts </xhtml:span>files are used for automatic login to remote hosts and contain username and hostname combinations. The <xhtml:span class="inline_block">.rhosts </xhtml:span>files are unencrypted (usually group- or world-readable) and present a serious risk in that a malicious user could use the information within to gain access to a remote host with the privileges of the original application or user.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>The use of <xhtml:span class="inline_block">.rhosts </xhtml:span>authentication is an old and insecure protocol and can be replaced with public-key authentication using Secure Shell. As automatic authentication settings in the <xhtml:span class="inline_block">.rhosts </xhtml:span>files can provide a malicious user with sensitive system credentials, the use of <xhtml:span class="inline_block">.rhosts </xhtml:span>files should be disabled. It should be noted that by default the Solaris services that use this file, including <xhtml:span class="inline_block">rsh </xhtml:span>and <xhtml:span class="inline_block">rlogin</xhtml:span>, are disabled by default.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Edit <xhtml:span class="inline_block">/etc/pam.conf</xhtml:span> and any <xhtml:span class="inline_block">/etc/pam.d</xhtml:span>/* results from audit procedure and comment out or remove any <xhtml:span class="inline_block">pam_rhosts_auth</xhtml:span> lines:</xhtml:p>
                  <xhtml:code class="pre_0.17844403716915547">#rlogin auth sufficient pam_rhosts_auth.so.1<xhtml:br/>#rsh auth sufficient pam_rhosts_auth.so.1</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="none exist" comment="Ensure host based authentication for login based services is disabled">
                     <ecl:command>grep -v "^#" /etc/pam.conf | grep  "pam_rhosts_auth"|grep rlogin</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="pam_rhosts_auth.so.1$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="none exist" comment="Ensure host based authentication for login based services is disabled">
                     <ecl:command>grep -v "^#" /etc/pam.conf | grep  "pam_rhosts_auth" | grep rsh</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="pam_rhosts_auth.so.1$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="none exist" comment="Ensure host based authentication for login based services is disabled">
                     <ecl:command>grep -v "^#" /etc/pam.d/* | grep  "pam_rhosts_auth"|grep rlogin</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="pam_rhosts_auth.so.1$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="none exist" comment="Ensure host based authentication for login based services is disabled">
                     <ecl:command>grep -v "^#" /etc/pam.d/* | grep  "pam_rhosts_auth" | grep rsh</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="pam_rhosts_auth.so.1$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.9_Restrict_FTP_Use" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Restrict FTP Use</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>If FTP is permitted to be used on the system, the file <xhtml:span class="inline_block">/etc/ftpd/ftpusers </xhtml:span>is used to specify a list of users who are not allowed to access the system via FTP.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>FTP is an old and insecure protocol that transfers files and credentials in clear text and can be replaced by using <xhtml:span class="inline_block">sftp</xhtml:span>. However, if FTP is permitted for use in your environment, it is important to ensure that the default "system" accounts are not permitted to transfer files via FTP, especially the <xhtml:span class="inline_block">root </xhtml:span>role. Consider also adding the names of other privileged or shared accounts that may exist on your system such as user <xhtml:span class="inline_block">oracle </xhtml:span>and the account which your Web server process runs under. It should be reminded that the Solaris FTP service is disabled by default.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="pre_0.8770982099965773"># cd /etc/ftpd<xhtml:br/># for user in `logins -s | awk '{ print $1 }'` \<xhtml:br/> aiuser noaccess nobody nobody4; do<xhtml:br/> $(echo $user &gt;&gt; ftpusers)<xhtml:br/>done<xhtml:br/># sort -u ftpusers &gt; ftpusers.CIS<xhtml:br/># mv ftpusers.CIS ftpusers</xhtml:code>
                  <xhtml:p>If your site policy states that users have to be authorized to use FTP, consider placing all users in the <xhtml:span class="inline_block">/etc/ftpd/ftpusers </xhtml:span>file and then explicitly removing those who are permitted to use the service. To accomplish this, use the command:</xhtml:p>
                  <xhtml:code class="pre_0.5009067325455657"># getent passwd | cut -f1 -d":" &gt; /etc/ftpd/ftpusers</xhtml:code>
                  <xhtml:p>This prohibits any user on the system from using ftp unless they are explicitly removed from the file. Note that this file will need to be updated as users are added to or removed from the system.</xhtml:p>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure FTP use restricted">
                  <ecl:command>for user in `logins -s | awk '{ print $1 }'` aiuser noaccess nobody nobody4; do grep -w "${user}" /etc/ftpd/ftpusers &gt;/dev/null 2&gt;&amp;1; if [ $? != 0 ]; then echo "User '${user}' not in /etc/ftpd/ftpusers."; fi; done</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.10_Set_Delay_between_Failed_Login_Attempts_to_4" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Set Delay between Failed Login Attempts to 4</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The <xhtml:span class="inline_block">SLEEPTIME </xhtml:span>variable in the <xhtml:span class="inline_block">/etc/default/login </xhtml:span>file controls the number of seconds to wait before printing the "login incorrect" message when a bad password is provided.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>As an immediate return of an error message, coupled with the capability to try again may facilitate automatic and rapid-fire brute-force password attacks by a malicious user, this delay time should be set as appropriate to the needs of the user.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="pre_0.9885711848795353"># cd /etc/default<xhtml:br/># awk '/SLEEPTIME=/ { $1 = "SLEEPTIME=4" }<xhtml:br/> { print }' login &gt; login.CIS<xhtml:br/># mv login.CIS login</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:file-content check="at least one" comment="Ensure delay between failed login attempts is configured">
                  <ecl:path>/etc/default/login</ecl:path>
                  <ecl:line-selection op="pm" value="^SLEEPTIME=4"/>
               </ecl:file-content>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.11_Remove_Autologin_Capabilities_from_the_GNOME_desktop" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Remove Autologin Capabilities from the GNOME desktop</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The GNOME Display Manager is used for login session management. See the manual page <xhtml:span class="inline_block">gdm</xhtml:span>(1) for more information. By default, GNOME automatic login is defined in <xhtml:span class="inline_block">pam.conf</xhtml:span>(4) to allow users to access the system without a password.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>As automatic logins are a known security risk for other than "kiosk" types of systems, GNOME automatic login should be disabled in <xhtml:span class="inline_block">pam.conf</xhtml:span>(4).</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Comment out or remove all <xhtml:span class="inline_block">gdm-autologin</xhtml:span> lines from <xhtml:span class="inline_block">/etc/pam.conf</xhtml:span>:</xhtml:p>
                  <xhtml:code class="pre_0.8494004408715884">#gdm-autologin auth required pam_unix_cred.so.1<xhtml:br/>#gdm-autologin auth sufficient pam_allow.so.1<xhtml:br/>#gdm-autologin account sufficient pam_allow.so.1</xhtml:code>
                  <xhtml:p>Comment out or remove all lines from <xhtml:span class="inline_block">/etc/pam.d/gdm-autologin</xhtml:span>:</xhtml:p>
                  <xhtml:code class="pre_0.17656031669112593">#auth  required    pam_unix_cred.so.1<xhtml:br/>#auth  sufficient  pam_allow.so.1<xhtml:br/>#account  sufficient  pam_allow.so.1</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:file-content check="none exist" comment="Ensure autologin capability for GDM is disabled">
                     <ecl:path>/etc/pam.conf</ecl:path>
                     <ecl:line-selection op="pm" value="gdm-autologin auth required pam_unix_cred.so.1"/>
                  </ecl:file-content>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:file-content check="none exist" comment="Ensure autologin capability for GDM is disabled">
                     <ecl:path>/etc/pam.conf</ecl:path>
                     <ecl:line-selection op="pm" value="gdm-autologin auth sufficient pam_allow.so.1"/>
                  </ecl:file-content>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:file-content check="none exist" comment="Ensure autologin capability for GDM is disabled">
                     <ecl:path>/etc/pam.conf</ecl:path>
                     <ecl:line-selection op="pm" value="gdm-autologin account sufficient pam_allow.so.1"/>
                  </ecl:file-content>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:file-content check="none exist" comment="Ensure no uncommented lines in /etc/pam.d/gdm-autologin">
                     <ecl:path>/etc/pam.d/gdm-autologin</ecl:path>
                     <ecl:line-selection op="pm" value="^[^#]+"/>
                  </ecl:file-content>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.12_Set_Default_Screen_Lock_for_GNOME_Users" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Set Default Screen Lock for GNOME Users</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The <xhtml:span class="inline_block">timeout </xhtml:span>parameter dictates the invocation of a password-protected screen saver after a specified time of keyboard and mouse inactivity, specific to the <xhtml:span class="inline_block">xscreensaver </xhtml:span>application used in the GNOME windowing environment.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>As a screensaver timeout provides protection for a desktop that has not been locked by the user upon his/her departure, to help prevent session hijacking, this value should be set as appropriate to the needs of the user.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="pre_0.9162966387415565"># cd /usr/share/X11/app-defaults<xhtml:br/># cp XScreenSaver XScreenSaver.orig<xhtml:br/># awk '/^\*timeout:/ { $2 = "0:10:00" }<xhtml:br/> /^\*lockTimeout:/ { $2 = "0:00:00" }<xhtml:br/> /^\*lock:/ { $2 = "True" }<xhtml:br/> { print }' xScreenSaver &gt; xScreenSaver.CIS<xhtml:br/># mv xScreenSaver.CIS xScreenSaver</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command comment="Ensure XScreensaver Timeout Configured" success="pass">
                     <ecl:command>pkg info -r x11/server/xorg | grep "Not installed" || awk '/^*timeout:/ { if ($2 == "0:10:00") exit 0; else exit 1; }' /usr/share/X11/app-defaults/XScreenSaver</ecl:command>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command comment="Ensure XScreensaver Lock Timeout Configured" success="pass">
                     <ecl:command>pkg info -r x11/server/xorg | grep "Not installed" || awk '/^*lockTimeout:/ { if ($2 == "0:00:00") exit 0; else exit 1; }' /usr/share/X11/app-defaults/XScreenSaver</ecl:command>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command comment="Ensure XScreensaver Lock Configured" success="pass">
                     <ecl:command>pkg info -r x11/server/xorg | grep "Not installed" || awk '/^*lock:/ { if ($2 == "True") exit 0; else exit 1; }' /usr/share/X11/app-defaults/XScreenSaver</ecl:command>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.13_Restrict_atcron_to_Authorized_Users" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Restrict at/cron to Authorized Users</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The <xhtml:span class="inline_block">cron.allow </xhtml:span>and <xhtml:span class="inline_block">at.allow </xhtml:span>files contain a list of users who are allowed to run the <xhtml:span class="inline_block">crontab </xhtml:span>and at commands to submit jobs to be run at scheduled intervals.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>On many systems, only the system administrator needs the ability to schedule jobs.  Even though a given user is not listed in <xhtml:span class="inline_block">cron.allow</xhtml:span>, <xhtml:span class="inline_block">cron </xhtml:span>jobs can still be run as that user. The <xhtml:span class="inline_block">cron.allow </xhtml:span>file only controls administrative access to the <xhtml:span class="inline_block">crontab </xhtml:span>command for scheduling and modifying <xhtml:span class="inline_block">cron </xhtml:span>jobs. Much more effective access controls for the <xhtml:span class="inline_block">cron </xhtml:span>system can be obtained by using Role-Based Access Controls (RBAC).</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="pre_0.10602554926999974"># cd /etc/cron.d<xhtml:br/># mv cron.deny cron.deny.cis<xhtml:br/># mv at.deny at.deny.cis<xhtml:br/># echo root &gt; cron.allow<xhtml:br/># cp /dev/null at.allow<xhtml:br/># chown root:root cron.allow at.allow<xhtml:br/># chmod 400 cron.allow at.allow</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command comment="Ensure cron.deny file does not exist" success="fail">
                     <ecl:command>stat /etc/cron.d/cron.deny</ecl:command>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command comment="Ensure at.deny does not exist" success="fail">
                     <ecl:command>stat /etc/cron.d/at.deny</ecl:command>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:file-content check="at least one" comment="Ensure cron.allow includes root">
                     <ecl:path>/etc/cron.d/cron.allow</ecl:path>
                     <ecl:line-selection op="pm" value="root"/>
                  </ecl:file-content>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="none exist" comment="Ensure /etc/cron.d/at.allow is empty">
                     <ecl:command>cat /etc/cron.d/at.allow</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.14_Restrict_root_Login_to_System_Console" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Restrict root Login to System Console</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Privileged access to the system via <xhtml:span class="inline_block">root </xhtml:span>must be accountable to a particular user.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Use an authorized mechanism such as RBAC and the <xhtml:span class="inline_block">su </xhtml:span>command to provide administrative access to unprivileged accounts. These mechanisms provide an audit trail in the event of problems.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="pre_0.31387715515401315"># cd /etc/default<xhtml:br/># awk '/CONSOLE=/ { print "CONSOLE=/dev/console"; next }; \<xhtml:br/> { print }' login &gt; login.CIS<xhtml:br/># mv login.CIS login</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:file-content check="at least one" comment="Ensure root login is restricted to system console">
                  <ecl:path>/etc/default/login</ecl:path>
                  <ecl:line-selection op="pm" value="^CONSOLE=/dev/console"/>
               </ecl:file-content>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.15_Set_Retry_Limit_for_Account_Lockout" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Set Retry Limit for Account Lockout</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The <xhtml:span class="inline_block">RETRIES </xhtml:span>parameter is the number of failed login attempts a user is allowed before being disconnected from the system and forced to reconnect. When <xhtml:span class="inline_block">LOCK_AFTER_RETRIES </xhtml:span>is set in <xhtml:span class="inline_block">/etc/security/policy.conf</xhtml:span>, then the user's account is locked after this many failed retries (the account can only be unlocked by the administrator using the command: <xhtml:span class="inline_block">passwd -u</xhtml:span>
               <xhtml:span class="inline_block"> 
                  <xhtml:em>&lt;username&gt;</xhtml:em>
               </xhtml:span>
               <xhtml:em>).</xhtml:em> The account lockout threshold (<xhtml:span class="inline_block">RETRIES </xhtml:span>parameter) restricts the number of failed login attempts allowed before requiring the offending account be locked. The lockout requirement will help block malicious users from gaining access to the host via automated, repetitive brute-force login exploits--trying different passwords until one fits a user name.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Setting the failed login limit to an appropriate value locks the user account, which will severely limit the speed of such attacks, making it much more likely that the attacker's pattern will be noticed and the offending source address and/or port blocked, so this should be set according to the needs of the user.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="pre_0.3023561060399662"># cd /etc/default<xhtml:br/># awk '/RETRIES=/ { $1 = "RETRIES=3" }<xhtml:br/> { print }' login &gt;login.CIS<xhtml:br/># mv login.CIS login<xhtml:br/># cd /etc/security<xhtml:br/># awk '/LOCK_AFTER_RETRIES=/ \<xhtml:br/> { $1 = "LOCK_AFTER_RETRIES=YES" }<xhtml:br/> { print }' policy.conf &gt; policy.conf.CIS<xhtml:br/># mv policy.conf.CIS policy.conf<xhtml:br/># svcadm restart svc:/system/name-service/cache </xhtml:code>
                  <xhtml:p>Be careful when enabling these settings as they can create a denial-of-service situation for legitimate users and applications. Account lockout can be disabled for specific users via the usermod command. For example, the following command disables account lock specifically for the oracle account:</xhtml:p>
                  <xhtml:code class="pre_0.8530029272756586"># usermod -K lock_after_retries=no oracle </xhtml:code>
                  <xhtml:p>
                     <xhtml:strong>Note:</xhtml:strong> The root role is configured in this manner by default to prevent accidental lock out.</xhtml:p>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:file-content check="at least one" comment="Ensure Retry Limit for Account Lockout is configured">
                     <ecl:path>/etc/default/login</ecl:path>
                     <ecl:line-selection op="pm" value="^RETRIES=3"/>
                  </ecl:file-content>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:file-content check="at least one" comment="Ensure Retry Limit for Account Lockout is configured">
                     <ecl:path>/etc/security/policy.conf</ecl:path>
                     <ecl:line-selection op="pm" value="^LOCK_AFTER_RETRIES=YES"/>
                  </ecl:file-content>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.16_Set_EEPROM_Security_Mode_and_Log_Failed_Access_SPARC" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Set EEPROM Security Mode and Log Failed Access (SPARC)</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Oracle SPARC systems support the use of a EEPROM password for the console.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Setting the EEPROM password helps prevent attackers who gain physical access to the system console from booting from an external device (such as a CD-ROM or floppy).</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="pre_0.05279846496480822"># eeprom security-mode=command<xhtml:br/># eeprom security-#badlogins=0</xhtml:code>
                  <xhtml:p>After entering the last command above, the administrator will be prompted for a password. This password will be required to authorize any future command issued at boot-level on the system (the ok or &gt; prompt) except for the normal multi-user boot command (i.e., the system will be able to reboot unattended).</xhtml:p>
                  <xhtml:p>Write down the password and store it in a sealed envelope in a secure location (note that locked desk drawers are typically not secure). If the password is lost or forgotten, simply log into the system and run the command:</xhtml:p>
                  <xhtml:code class="pre_0.43023142386469504"># eeprom security-mode=none </xhtml:code>
                  <xhtml:p>This will erase the forgotten password. If the password is lost or forgotten and this action cannot be completed, then the EEPROM must be replaced to gain access to the system. To set a new password, run the command:</xhtml:p>
                  <xhtml:code class="pre_0.24864328618914877"># eeprom security-mode=command </xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>

      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.17_Secure_the_GRUB_Menu_Intel" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Secure the GRUB Menu (Intel)</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>GRUB is a boot loader for x64 based systems that permits loading an OS image from any location. Oracle x64 systems support the use of a GRUB Menu password for the console.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>The flexibility that GRUB provides creates a security risk if its configuration is modified by an unauthorized user. The failsafe menu entry needs to be secured in the same environments that require securing the systems firmware to avoid unauthorized removable media boots. Setting the <xhtml:span class="inline_block">GRUB Menu </xhtml:span>password helps prevent attackers with physical access to the system console from booting off some external device (such as a CD-ROM or floppy) and subverting the security of the system. The actions described in this section will ensure you cannot get to failsafe or any of the GRUB command line options without first entering the password.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Run the following command to generate your password hash:</xhtml:p>
                  <xhtml:code class="pre_0.4269908013731505"># /usr/lib/grub2/bios/bin/grub-mkpasswd-pbkdf2<xhtml:br/>Enter password:<xhtml:br/>Reenter password:<xhtml:br/>PBKDF2 hash of your password is <xhtml:em>&lt;password_hash&gt;</xhtml:em> 
                  </xhtml:code>
                  <xhtml:p>Create the file <xhtml:span class="inline_block">/usr/lib/grub2/bios/etc/grub.d/01_password</xhtml:span>:</xhtml:p>
                  <xhtml:code class="pre_0.1310483257345274">#!/bin/sh<xhtml:br/>/usr/bin/cat &gt; /rpool/boot/grub/password.cfg&lt;&lt;EOF<xhtml:br/>#<xhtml:br/># GRUB password<xhtml:br/>#<xhtml:br/>set superusers="root"<xhtml:br/>password_pbkdf2 root <xhtml:em>&lt;password_hash&gt;</xhtml:em>
                     <xhtml:br/>EOF<xhtml:br/>/usr/bin/chmod 600 /rpool/boot/grub/password.cfg<xhtml:br/>/usr/bin/echo 'source /@/boot/grub/password.cfg' </xhtml:code>
                  <xhtml:p>Run the following to finalize the password configuration and set menu timeout:</xhtml:p>
                  <xhtml:code class="pre_0.2803971891007899"># /usr/bin/chmod 700 /usr/lib/grub2/bios/etc/grub.d/01_password<xhtml:br/># /usr/sbin/bootadm set-menu timeout=30 </xhtml:code>
                  <xhtml:p>Changes will take effect on the next reboot.</xhtml:p>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command comment="Ensure Grub Menu is secured on x86 systems" success="pass">
                  <ecl:command>uname -p | grep sparc || grep "^password --md5" /rpool/boot/grub/menu.lst</ecl:command>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
   </xccdf:Group>
   <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_7_User_Accounts_and_Environment">
      <xccdf:title xml:lang="en">User Accounts and Environment</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>This section provides guidance on setting up secure defaults for system and user accounts and their environment. Guidance for monitoring these settings and others that may change over time is provided in the System Maintenance section of this document.</xhtml:p>
      </xccdf:description>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.1_Set_Password_Expiration_Parameters_on_Active_Accounts" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Set Password Expiration Parameters on Active Accounts</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The characteristics of an operating system that make 'user identification' via password a secure and workable solution is the combination of settings chosen. By requiring that a series of password-choices be security-centric, it reduces the risk of a malicious user breaking the password through dictionary/brute force attacks or fortuitous guessing based upon 'social engineering.' A basic password security strategy is requiring a new password to be chosen every 45-90 days, so that repeated attempts to gain entry by brute-force tactics will fail when a new password is chosen, which requires starting over again to break the new password.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>The commands for this item set all active accounts (except the <xhtml:span class="inline_block">
                  <xhtml:em>root</xhtml:em> 
               </xhtml:span>account) to force password changes every 91 days (13 weeks), and then prevent password changes for seven days (one week), thereafter. Users will begin receiving warnings 28 days (4 weeks) before their password expires. Sites also have the option of expiring idle accounts after a certain number of days (see the on-line manual page for the <xhtml:span class="inline_block">
                  <xhtml:em>usermod</xhtml:em> 
               </xhtml:span>command, particularly the <xhtml:span class="inline_block">-f</xhtml:span> option).</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="pre_0.4546962822665107"># logins -ox |\<xhtml:br/> awk -F: '($1 == "root" || $8 == "LK" || $8 == "NL") \<xhtml:br/> { next } ; \<xhtml:br/> { $cmd = "passwd" } ;\<xhtml:br/> ($11 91) { $cmd = $cmd " -x 91" } \<xhtml:br/> ($10 &lt; 7) { $cmd = $cmd " -n 7" } \<xhtml:br/> ($12 &lt; 28) { $cmd = $cmd " -w 28" } \<xhtml:br/> ($cmd != "passwd") { print $cmd " " $1 }' \<xhtml:br/> &gt; /etc/CISupd_accounts<xhtml:br/># /sbin/sh /etc/CISupd_accounts<xhtml:br/># rm -f /etc/CISupd_accounts<xhtml:br/># cd /etc/default<xhtml:br/># grep -v WEEKS passwd &gt; passwd.CIS<xhtml:br/># cat &lt;&lt;EODefaults &gt;&gt; passwd.CIS<xhtml:br/>MAXWEEKS=13<xhtml:br/>MINWEEKS=1<xhtml:br/>WARNWEEKS=4<xhtml:br/>EODefaults<xhtml:br/># mv passwd.CIS passwd</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure Password Expiration Parameters on Active Accounts are configured">
                  <ecl:command>/usr/bin/logins -ox | awk -F: '( $1 != "root" &amp;&amp; $8 != "LK" &amp;&amp; $8 != "NL") &amp;&amp; ( $10 != "7" || $11 != "91" || $12 != "28") { print }'</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.2_Set_Strong_Password_Creation_Policies" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Set Strong Password Creation Policies</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The variables in the <xhtml:span class="inline_block">/etc/default/passwd </xhtml:span>file indicate various strategies for creating differences required between an old and a new password. As requiring users to select a specific numbers of differences between the characters in the existing password and the new one can strengthen the password by increasing the symbol-set space, to further increase the difficulty of breaking any password by brute-force attacks, these values should be set as appropriate to the needs of the user.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Administrators may wish to add site-specific dictionaries to the <xhtml:span class="inline_block">DICTIONLIST </xhtml:span>parameter.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>Warning:</xhtml:strong> Sites often have differing opinions on the optimal value of the <xhtml:span class="inline_block">HISTORY </xhtml:span>parameter (how many previous passwords to remember per user in order to prevent re-use). The values specified here are in compliance with NSA/DISA requirements. If this is too restrictive for your site, you may wish to set a HISTORY value of 4 and a MAXREPEATS of 2. Consult your local security rules for guidance. <xhtml:br/>
            </xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="pre_0.5439189059998177"># cd /etc/default<xhtml:br/># awk '/PASSLENGTH=/ { $1 = "PASSLENGTH=8" };<xhtml:br/> /NAMECHECK=/ { $1 = "NAMECHECK=YES" };<xhtml:br/> /HISTORY=/ { $1 = "HISTORY=10" };<xhtml:br/> /MINDIFF=/ { $1 = "MINDIFF=3" };<xhtml:br/> /MINALPHA=/ { $1 = "MINALPHA=2" };<xhtml:br/> /MINUPPER=/ { $1 = "MINUPPER=1" };<xhtml:br/> /MINLOWER=/ { $1 = "MINLOWER=1" };<xhtml:br/> /MINNONALPHA=/ { $1 = "MINNONALPHA=1" };<xhtml:br/> /MAXREPEATS=/ { $1 = "MAXREPEATS=0" };<xhtml:br/> /WHITESPACE=/ { $1 = "WHITESPACE=YES" };<xhtml:br/> /DICTIONDBDIR=/ { $1 = "DICTIONDBDIR=/var/passwd" };<xhtml:br/> /DICTIONLIST=/ \<xhtml:br/> { $1 = "DICTIONLIST=/usr/share/lib/dict/words" };<xhtml:br/> { print }' passwd &gt; passwd.CIS<xhtml:br/># mv passwd.CIS passwd</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content><!--
                                                           
                                    1. Read contents of /etc/default/passwd
                                    2. Find first line that starts with 0 or more spaces (uncommented) 
                                    3.    and is followed by PASSLENGTH  
                                    3.    and is followed by a value that is greater than or equal 8
                                    4. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                  <ecl:shell-command check="all" comment="Ensure PASSLENGTH greater than or equal to 8">
                     <ecl:command>grep '^[ ]*PASSLENGTH[ ]*=' /etc/default/passwd | head -1</ecl:command>
                     <ecl:line-selection op="pm" value="\s*[A-Z0-9_\-]+\s*=\s*(.+?)\s*(#.*)?$">
                        <ecl:regex-group dt="xs:integer" group="1" op="ge" value="8"/>
                     </ecl:line-selection>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content><!--
                                                           
                                    1. Read contents of /etc/default/passwd
                                    2. Find first line that starts with 0 or more spaces (uncommented) 
                                    3.    and is followed by NAMECHECK  
                                    3.    and is followed by a value that is pattern match [Yy][Ee][Ss]
                                    4. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                  <ecl:shell-command check="all" comment="Ensure NAMECHECK set to YES">
                     <ecl:command>grep '^[ ]*NAMECHECK[ ]*=' /etc/default/passwd | head -1</ecl:command>
                     <ecl:line-selection op="pm" value="\s*[A-Z0-9_\-]+\s*=\s*(.+?)\s*(#.*)?$">
                        <ecl:regex-group dt="xs:string" group="1" op="pm" value="[Yy][Ee][Ss]"/>
                     </ecl:line-selection>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content><!--
                                                           
                                    1. Read contents of /etc/default/passwd
                                    2. Find first line that starts with 0 or more spaces (uncommented) 
                                    3.    and is followed by HISTORY  
                                    3.    and is followed by a value that is greater than or equal 10
                                    4. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                  <ecl:shell-command check="all" comment="Ensure HISTORY greater than or equal to 10">
                     <ecl:command>grep '^[ ]*HISTORY[ ]*=' /etc/default/passwd | head -1</ecl:command>
                     <ecl:line-selection op="pm" value="\s*[A-Z0-9_\-]+\s*=\s*(.+?)\s*(#.*)?$">
                        <ecl:regex-group dt="xs:integer" group="1" op="ge" value="10"/>
                     </ecl:line-selection>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content><!--
                                                           
                                    1. Read contents of /etc/default/passwd
                                    2. Find first line that starts with 0 or more spaces (uncommented) 
                                    3.    and is followed by MINDIFF  
                                    3.    and is followed by a value that is greater than or equal 3
                                    4. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                  <ecl:shell-command check="all" comment="Ensure MINDIFF greater than or equal to 3">
                     <ecl:command>grep '^[ ]*MINDIFF[ ]*=' /etc/default/passwd | head -1</ecl:command>
                     <ecl:line-selection op="pm" value="\s*[A-Z0-9_\-]+\s*=\s*(.+?)\s*(#.*)?$">
                        <ecl:regex-group dt="xs:integer" group="1" op="ge" value="3"/>
                     </ecl:line-selection>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content><!--
                                                           
                                    1. Read contents of /etc/default/passwd
                                    2. Find first line that starts with 0 or more spaces (uncommented) 
                                    3.    and is followed by MINALPHA  
                                    3.    and is followed by a value that is greater than or equal 2
                                    4. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                  <ecl:shell-command check="all" comment="Ensure MINALPHA greater than or equal to 2">
                     <ecl:command>grep '^[ ]*MINALPHA[ ]*=' /etc/default/passwd | head -1</ecl:command>
                     <ecl:line-selection op="pm" value="\s*[A-Z0-9_\-]+\s*=\s*(.+?)\s*(#.*)?$">
                        <ecl:regex-group dt="xs:integer" group="1" op="ge" value="2"/>
                     </ecl:line-selection>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content><!--
                                                           
                                    1. Read contents of /etc/default/passwd
                                    2. Find first line that starts with 0 or more spaces (uncommented) 
                                    3.    and is followed by MINUPPER  
                                    3.    and is followed by a value that is greater than or equal 1
                                    4. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                  <ecl:shell-command check="all" comment="Ensure MINUPPER greater than or equal to 1">
                     <ecl:command>grep '^[ ]*MINUPPER[ ]*=' /etc/default/passwd | head -1</ecl:command>
                     <ecl:line-selection op="pm" value="\s*[A-Z0-9_\-]+\s*=\s*(.+?)\s*(#.*)?$">
                        <ecl:regex-group dt="xs:string" group="1" op="ge" value="1"/>
                     </ecl:line-selection>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content><!--
                                                           
                                    1. Read contents of /etc/default/passwd
                                    2. Find first line that starts with 0 or more spaces (uncommented) 
                                    3.    and is followed by MINLOWER  
                                    3.    and is followed by a value that is greater than or equal 1
                                    4. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                  <ecl:shell-command check="all" comment="Ensure MINLOWER greater than or equal to 1">
                     <ecl:command>grep '^[ ]*MINLOWER[ ]*=' /etc/default/passwd | head -1</ecl:command>
                     <ecl:line-selection op="pm" value="\s*[A-Z0-9_\-]+\s*=\s*(.+?)\s*(#.*)?$">
                        <ecl:regex-group dt="xs:integer" group="1" op="ge" value="1"/>
                     </ecl:line-selection>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content><!--
                                                           
                                    1. Read contents of /etc/default/passwd
                                    2. Find first line that starts with 0 or more spaces (uncommented) 
                                    3.    and is followed by MINNONALPHA  
                                    3.    and is followed by a value that is greater than or equal 1
                                    4. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                  <ecl:shell-command check="all" comment="Ensure MINNONALPHA greater than or equal to 1">
                     <ecl:command>grep '^[ ]*MINNONALPHA[ ]*=' /etc/default/passwd | head -1</ecl:command>
                     <ecl:line-selection op="pm" value="\s*[A-Z0-9_\-]+\s*=\s*(.+?)\s*(#.*)?$">
                        <ecl:regex-group dt="xs:integer" group="1" op="ge" value="1"/>
                     </ecl:line-selection>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content><!--
                                                           
                                    1. Read contents of /etc/default/passwd
                                    2. Find first line that starts with 0 or more spaces (uncommented) 
                                    3.    and is followed by MAXREPEATS  
                                    3.    and is followed by a value that is greater than or equal 0
                                    4. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                  <ecl:shell-command check="all" comment="Ensure MAXREPEATS greater than or equal to 0">
                     <ecl:command>grep '^[ ]*MAXREPEATS[ ]*=' /etc/default/passwd | head -1</ecl:command>
                     <ecl:line-selection op="pm" value="\s*[A-Z0-9_\-]+\s*=\s*(.+?)\s*(#.*)?$">
                        <ecl:regex-group dt="xs:integer" group="1" op="ge" value="0"/>
                     </ecl:line-selection>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content><!--
                                                           
                                    1. Read contents of /etc/default/passwd
                                    2. Find first line that starts with 0 or more spaces (uncommented) 
                                    3.    and is followed by WHITESPACE  
                                    3.    and is followed by a value that is pattern match [Yy][Ee][Ss]
                                    4. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                  <ecl:shell-command check="all" comment="Ensure WHITESPACE set to YES">
                     <ecl:command>grep '^[ ]*WHITESPACE[ ]*=' /etc/default/passwd | head -1</ecl:command>
                     <ecl:line-selection op="pm" value="\s*[A-Z0-9_\-]+\s*=\s*(.+?)\s*(#.*)?$">
                        <ecl:regex-group dt="xs:string" group="1" op="pm" value="[Yy][Ee][Ss]"/>
                     </ecl:line-selection>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content><!--
                                                           
                                    1. Read contents of /etc/default/passwd
                                    2. Find first line that starts with 0 or more spaces (uncommented) 
                                    3.    and is followed by DICTIONDBDIR  
                                    3.    and is followed by a value that is equals /var/passwd
                                    4. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                  <ecl:shell-command check="all" comment="Ensure DICTIONDBDIR set to /var/passwd">
                     <ecl:command>grep '^[ ]*DICTIONDBDIR[ ]*=' /etc/default/passwd | head -1</ecl:command>
                     <ecl:line-selection op="pm" value="\s*[A-Z0-9_\-]+\s*=\s*(.+?)\s*(#.*)?$">
                        <ecl:regex-group dt="xs:string" group="1" op="eq" value="/var/passwd"/>
                     </ecl:line-selection>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content><!--
                                                           
                                    1. Read contents of /etc/default/passwd
                                    2. Find first line that starts with 0 or more spaces (uncommented) 
                                    3.    and is followed by DICTIONLIST  
                                    3.    and is followed by a value that is equals /usr/share/lib/dict/words
                                    4. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    -->
                  <ecl:shell-command check="all" comment="Ensure DICTIONLIST set to /usr/share/lib/dict/words">
                     <ecl:command>grep '^[ ]*DICTIONLIST[ ]*=' /etc/default/passwd | head -1</ecl:command>
                     <ecl:line-selection op="pm" value="\s*[A-Z0-9_\-]+\s*=\s*(.+?)\s*(#.*)?$">
                        <ecl:regex-group dt="xs:string" group="1" op="eq" value="/usr/share/lib/dict/words"/>
                     </ecl:line-selection>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.3_Set_Default_umask_for_users" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Set Default umask for users</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The default <xhtml:span class="inline_block">umask</xhtml:span>(1) determines the permissions of files created by users. The user creating the file has the discretion of making their files and directories readable by others via the <xhtml:span class="inline_block">chmod</xhtml:span>(1) command. Users who wish to allow their files and directories to be readable by others by default may choose a different default <xhtml:span class="inline_block">umask </xhtml:span>by inserting the <xhtml:span class="inline_block">umask </xhtml:span>command into the standard shell configuration files (<xhtml:span class="inline_block">.profile</xhtml:span>, <xhtml:span class="inline_block">.cshrc</xhtml:span>, etc.) in their home directories.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Setting a very secure default value for <xhtml:span class="inline_block">umask </xhtml:span>ensures that users make a conscious choice about their file permissions. A default <xhtml:span class="inline_block">umask </xhtml:span>setting of <xhtml:span class="inline_block">077 </xhtml:span>causes files and directories created by users to not be readable by any other user on the system. A <xhtml:span class="inline_block">umask </xhtml:span>of <xhtml:span class="inline_block">027 </xhtml:span>would allow files and directories readable by users in the same Unix group, while a <xhtml:span class="inline_block">umask </xhtml:span>of <xhtml:span class="inline_block">022 </xhtml:span>would make files readable by every user on the system.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="pre_0.529329929976359"># cd /etc/default<xhtml:br/># awk '/#UMASK=/ { $1 = "UMASK=027" }<xhtml:br/> { print }' login &gt; login.CIS<xhtml:br/># mv login.CIS login</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:file-content check="at least one" comment="Ensure Default umask for users is configured">
                  <ecl:path>/etc/default/login</ecl:path>
                  <ecl:line-selection op="pm" value="^UMASK=027"/>
               </ecl:file-content>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.4_Set_Default_File_Creation_Mask_for_FTP_Users" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Set Default File Creation Mask for FTP Users</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>If FTP is permitted, set a strong, default file creation mask to apply to files created by the FTP server.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Many users assume that the FTP server will use their system file creation mask; generally it does not. This setting ensures that files transmitted over FTP use a strong file creation mask.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="pre_0.6401416231191206"># cd /etc<xhtml:br/># if [ "`grep '^Umask' proftpd.conf`" ]; then<xhtml:br/> awk '/^Umask/ { $2 = "027" }<xhtml:br/> { print }' proftpd.conf &gt; proftpd.conf.CIS<xhtml:br/> mv proftpd.conf.CIS proftpd.conf<xhtml:br/>else<xhtml:br/> echo "Umask 027" &gt;&gt; proftpd.conf<xhtml:br/>fi</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="at least one" comment="Ensure Default File Creation Mask for FTP Users is configured">
                  <ecl:command>grep "^Umask" /etc/proftpd.conf | awk '{ print $2 }'</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value="027"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.5_Set_mesg_n_as_Default_for_All_Users" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Set "mesg n" as Default for All Users</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The "mesg n" command blocks attempts to use the <xhtml:span class="inline_block">write </xhtml:span>or <xhtml:span class="inline_block">talk </xhtml:span>commands to contact users at their terminals, but has the side effect of slightly strengthening permissions on the user's tty device.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Since <xhtml:span class="inline_block">write </xhtml:span>and <xhtml:span class="inline_block">talk </xhtml:span>are no longer widely used at most sites, the incremental security increase is worth the loss of functionality.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="pre_0.931697256820133"># cd /etc<xhtml:br/># for file in profile .login ; do<xhtml:br/>   if [ "`grep mesg $file`" ]; then<xhtml:br/>      awk '$1 == "mesg" { $2 = "n" }<xhtml:br/>         { print }' $file &gt; $file.CIS<xhtml:br/>      mv $file.CIS $file<xhtml:br/>   else<xhtml:br/>      echo mesg n &gt;&gt; $file<xhtml:br/>   fi<xhtml:br/>done </xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:file-content check="at least one" comment="Ensure &quot;mesg n&quot; is Default for All Users">
                     <ecl:path>/etc/.login</ecl:path>
                     <ecl:line-selection op="pm" value="^mesg n"/>
                  </ecl:file-content>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:file-content check="at least one" comment="Ensure &quot;mesg n&quot; is Default for All Users">
                     <ecl:path>/etc/profile</ecl:path>
                     <ecl:line-selection op="pm" value="^mesg n"/>
                  </ecl:file-content>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.6_Lock_Inactive_User_Accounts" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Lock Inactive User Accounts</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Guidelines published by the U.S. Department of Defense specify that user accounts must be locked out after 35 days of inactivity. This number may vary based on the particular site's policy.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Inactive accounts pose a threat to system security since the users are not logging in to notice failed login attempts or other anomalies.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="pre_0.4992342576479043"># useradd -D -f 35 </xhtml:code>
                  <xhtml:p>To set this policy on a user account, use the command(s):</xhtml:p>
                  <xhtml:code class="pre_0.18846722778303038"># usermod -f 35 [name] </xhtml:code>
                  <xhtml:p>To set this policy on a role account, use the command(s):</xhtml:p>
                  <xhtml:code class="pre_0.11936549758265314"># rolemod -f 35 [name]</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure Inactive accounts are locked after 35 days">
                     <ecl:command>useradd -D | xargs -n 1 | grep inactive | awk -F= '{ print $2 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="35"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="none exist" comment="Ensure Inactive accounts are locked after 35 days">
                     <ecl:command>logins -axou | awk -F: '($13 &gt; "35") { print $11 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
   </xccdf:Group>
   <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_8_Warning_Banners">
      <xccdf:title xml:lang="en">Warning Banners</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>Presenting a warning message prior to the normal user login may assist the prosecution of trespassers on the computer system. Changing some of these login banners also has the side effect of hiding OS version information and other detailed system information from attackers attempting to target specific exploits at a system.</xhtml:p>
         <xhtml:p>Guidelines published by the US Department of Defense require that warning messages include at least the name of the organization that owns the system, the fact that the system is subject to monitoring and that such monitoring is in compliance with local statutes, and that use of the system implies consent to such monitoring. It is important that the organization's legal counsel review the content of all messages before any system modifications are made, as these warning messages are inherently site-specific. More information (including citations of relevant case law) can be found at <xhtml:a href="http://www.justice.gov/criminal/cybercrime/">http://www.justice.gov/criminal/cybercrime/</xhtml:a>
         </xhtml:p>
         <xhtml:p>
            <xhtml:strong>Note:</xhtml:strong> The text provided in the remediation actions for these items is intended <xhtml:em>
               <xhtml:span style="text-decoration: underline;">as an example ONLY</xhtml:span>
            </xhtml:em>. Please edit to include the specific text for your organization as approved by your legal department.</xhtml:p>
      </xccdf:description>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.1_Create_Warnings_for_Standard_Login_Services" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Create Warnings for Standard Login Services</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The contents of the <xhtml:span class="inline_block">/etc/issue </xhtml:span>file are displayed prior to the login prompt on the system's console and serial devices and also prior to logins via <xhtml:span class="inline_block">telnet </xhtml:span>and Secure Shell. The contents of the <xhtml:span class="inline_block">/etc/motd </xhtml:span>file are generally displayed after all successful logins, regardless from where the user is logging in.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. As implementing a logon banner to deter inappropriate use and can provide a foundation for legal action against abuse, this warning content should be set as appropriate. Consult with your organization's legal counsel for the appropriate wording as the examples below are for demonstration purposes only.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="pre_0.33756680673350714"># echo "Authorized users only. All activity may be monitored and reported." &gt; /etc/motd<xhtml:br/># echo "Authorized users only. All activity may be monitored and reported." &gt; /etc/issue<xhtml:br/># chown root:root /etc/issue<xhtml:br/># chmod 644 /etc/issue</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure /etc/motd exists">
                     <ecl:command>ls /etc/motd</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure /etc/issue exists">
                     <ecl:command>ls /etc/issue</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure /etc/motd is owned by root">
                     <ecl:command>ls -l /etc/motd | awk '{ print $3 ":" $4 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="eq" value="root:sys"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command comment="Ensure /etc/motd is mode 0644" success="pass">
                     <ecl:command>ls -l /etc/motd | grep '^-rw-r--r--'</ecl:command>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure /etc/issue is owned by root">
                     <ecl:command>ls -l /etc/issue | awk '{ print $3 ":" $4 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="eq" value="root:root"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command comment="Ensure /etc/issue is mode 0644" success="pass">
                     <ecl:command>ls -l /etc/issue | grep '^-rw-r--r--'</ecl:command>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.2_Enable_a_Warning_Banner_for_the_SSH_Service" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Enable a Warning Banner for the SSH Service</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The contents of the <xhtml:span class="inline_block">Banner </xhtml:span>string in the <xhtml:span class="inline_block">/etc/ssh/sshd_config </xhtml:span>file are sent to the remote user before authentication is allowed, requiring that the user read the legal caution.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Performing these steps will ensure the appropriate legal caution is displayed to any user accessing the system via SSH.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="pre_0.8764949409551883"># awk '/^#Banner/ { $1 = "Banner" } \<xhtml:br/> { print }' /etc/ssh/sshd_config &gt; /etc/ssh/sshd_config.CIS<xhtml:br/># mv /etc/ssh/sshd_config.CIS /etc/ssh/sshd_config<xhtml:br/># svcadm restart svc:/network/ssh</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:file-content check="at least one" comment="Ensure Warning Banner for SSH is configured">
                  <ecl:path>/etc/ssh/sshd_config</ecl:path>
                  <ecl:line-selection op="pm" value="^Banner"/>
               </ecl:file-content>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.3_Enable_a_Warning_Banner_for_the_GNOME_Service" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Enable a Warning Banner for the GNOME Service</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The GNOME Display Manager is used for login session management. See the manual page <xhtml:span class="inline_block">gdm</xhtml:span>(1) for more information on configuration of the settings, which can be user- or group specific.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>The remediation action for this item sets a pre-login warning message for GDM users. Additional methods can be employed to display a similar message to a user post-authentication. For more information, see the Oracle Solaris 11 Security Guidelines document.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:p>Edit the <xhtml:span class="inline_block">/etc/gdm/Init/Default </xhtml:span>file to add the following content before the last line of the file.</xhtml:p>
                  <xhtml:code class="pre_0.5181240906128612">/usr/bin/zenity --text-info --width=800 --height=300 \<xhtml:br/> --title="Security Message" --filename=/etc/issue</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:file-content check="at least one" comment="Ensure Security Banner Configured for Gnome">
                  <ecl:path>/etc/gdm/Init/Default</ecl:path>
                  <ecl:line-selection op="pm" value="--title=&quot;Security Message&quot; --filename=/etc/issue"/>
               </ecl:file-content>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.4_Enable_a_Warning_Banner_for_the_FTP_service" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Enable a Warning Banner for the FTP service</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The action for this item sets a warning message for FTP users before they log in.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Warning Banners inform users who are attempting to access the system of their legal status regarding using the system. The text below is a generic sample only, so consult with your organization's legal counsel for the appropriate wording.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="pre_0.46685434452421326"># echo "DisplayConnect /etc/issue" &gt;&gt; /etc/proftpd.conf<xhtml:br/># svcadm restart ftp</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:file-content check="at least one" comment="Ensure Warning Banner for FTP is configured">
                  <ecl:path>/etc/proftpd.conf</ecl:path>
                  <ecl:line-selection op="pm" value="^\s*DisplayConnect"/>
               </ecl:file-content>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.5_Check_that_the_Banner_Setting_for_telnet_is_Null" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Check that the Banner Setting for telnet is Null		</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The <xhtml:span class="inline_block">BANNER </xhtml:span>variable in the file <xhtml:span class="inline_block">/etc/default/telnetd </xhtml:span>can be used to display text before the telnet login prompt. Traditionally, it has been used to display the OS level of the target system.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>The warning banner provides information that can be used in reconnaissance for an attack. By default, this file is distributed with the <xhtml:span class="inline_block">BANNER </xhtml:span>variable set to null. It is not necessary to create a separate warning banner for <xhtml:span class="inline_block">telnet </xhtml:span>if a warning is set in the <xhtml:span class="inline_block">/etc/issue </xhtml:span>file. As <xhtml:span class="inline_block">telnet </xhtml:span>is an insecure protocol, it is strongly recommend that it be disabled and all remote administrative/user connections take place by Secure Shell.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="pre_0.5164618273546381"># cd /etc/default<xhtml:br/># awk '/^BANNER=/ { $1 = "BANNER=" }; { print }' \<xhtml:br/> telnetd &gt; telnetd.CIS<xhtml:br/># mv telnetd.CIS telnetd</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command comment="Telnet Server is uninstalled OR Telnet Banner is null OR Telnet Banner is empty" success="pass">
                  <ecl:command>test 0 -eq `pkg list | grep -c service/network/telnet` || grep '^BANNER=$' /etc/default/telnetd || grep '^BANNER=\"\"' /etc/default/telnetd</ecl:command>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
   </xccdf:Group>
   <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_9_System_Maintenance">
      <xccdf:title xml:lang="en">System Maintenance</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>No matter how securely a system has been installed and hardened, administrator and user activity over time can introduce security exposures. This section describes tasks to be performed on a regular, ongoing basis#x2014;perhaps in an automated fashion via the <xhtml:span class="inline_block">cron </xhtml:span>utility. The automated host-based scanning tools provided from the Center for Internet Security can be used for this purpose. These scanning tools are typically provided with this document, but are also available for free from <xhtml:a href="http://www.CISecurity.org/">http://www.CISecurity.org/</xhtml:a>.</xhtml:p>
         <xhtml:p>Note that, unlike other sections, the items in this section specify an Audit action followed by a Remediation action, since it is necessary to determine what the current setting is before determining remediation measures, which will vary depending on the site's policy.</xhtml:p>
      </xccdf:description>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.1_Check_for_Remote_Consoles" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Check for Remote Consoles</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The <xhtml:span class="inline_block">consadm </xhtml:span>command can be used to select or display alternate console devices.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Since the system console has special properties to handle emergency situations, it is important to ensure that the console is in a physically secure location and that unauthorized consoles have not been defined. The "<xhtml:span class="inline_block">consadm -p</xhtml:span>" command displays any alternate consoles that have been defined as auxiliary across reboots. If no remote consoles have been defined, there will be no output from this command.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="pre_0.7739780398277066"># /usr/sbin/consadm [-d device...]</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure no remote consoles exist">
                  <ecl:command>/usr/sbin/consadm -p</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.2_Verify_System_File_Permissions" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Verify System File Permissions</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The <xhtml:span class="inline_block">pkg verify </xhtml:span>and command checks the accuracy of installed directory structures and files.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>It is important to ensure that system files and directories are maintained with the permissions they were intended to have from the OS vendor (Oracle).</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Correct or justify any items discovered in the Audit step. Perform the following to set correct any identified package errors:</xhtml:p>
                  <xhtml:code class="pre_0.3673664218486238"># pkg fix</xhtml:code>
                  <xhtml:p>Exercise caution in running this command as it may reverse modifications implemented previously including some of those recommended by this document. Rather than use this command broadly, it is recommended that it be used more tactically to correct specific package problems when possible.</xhtml:p>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>

      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.3_Verify_System_Account_Default_Passwords" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Verify System Account Default Passwords</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>There are a number of accounts provided with the Solaris OS that are used to manage applications and are not intended to provide an interactive shell. These accounts are delivered either in a locked or non-login state. Oracle does not support nor recommend changing the passwords associated with these accounts.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>System accounts, such as <xhtml:span class="inline_block">bin</xhtml:span>, <xhtml:span class="inline_block">lpd</xhtml:span>, and <xhtml:span class="inline_block">sys </xhtml:span>have special purposes and privileges. By default, these accounts are configured as either locked or non-login. This status should be verified to ensure that these accounts have not accidentially or intentionally been enabled.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>To lock a single account, use the command:</xhtml:p>
                  <xhtml:code class="pre_0.7549727198431855"># passwd -d [username]<xhtml:br/># passwd -l <xhtml:em>[username]</xhtml:em> 
                  </xhtml:code>
                  <xhtml:p>To configure a single account to be non-login, use the command:</xhtml:p>
                  <xhtml:code class="pre_0.9590948335233821"># passwd -d [username]<xhtml:br/># passwd -N <xhtml:em>[username]</xhtml:em>
                  </xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="none exist" comment="Ensure system accounts are locked">
                     <ecl:command>for user in aiuser dhcpserv dladm ftp gdm netadm netcfg noaccess nobody nobody4 openldap pkg5srv svctag unknown webservd xvm; do passwd -s ${user} &gt; /dev/null 2&gt;&amp;1 &amp;&amp; stat=`passwd -s ${user} 2&gt;/dev/null | awk '{ print $2 }'`; if [ "${stat}" != "LK" ]; then echo "Account ${user} is not locked."; fi; done</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="none exist" comment="Ensure system accounts are non-login">
                     <ecl:command>for user in adm bin daemon lp mysql nuucp postgres smmsp sys upnp uucp zfssnap; do passwd -s ${user} &gt; /dev/null 2&gt;&amp;1 &amp;&amp; stat=`passwd -s ${user}  2&gt;/dev/null | awk '{ print $2 }'`; if [ "${stat}" != "NL" ]; then echo "Account ${user} is not non-login."; fi; done</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.4_Ensure_Password_Fields_are_Not_Empty" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Ensure Password Fields are Not Empty</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>An account with an empty password field means that anybody may log in as that user without providing a password at all (assuming that the value <xhtml:span class="inline_block">PASSREQ=NO </xhtml:span>is set in <xhtml:span class="inline_block">/etc/default/login</xhtml:span>).</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>All accounts must have passwords, be configured as "Non-login," or be locked.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Use the <xhtml:span class="inline_block">passwd -l </xhtml:span>command to lock accounts that are not permitted to execute commands . Use the <xhtml:span class="inline_block">passwd -N </xhtml:span>command to set accounts to be non-login.</xhtml:p>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure no users have empty passwords">
                  <ecl:command>logins -p</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.5_Verify_No_UID_0_Accounts_Exist_Other_than_root" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Verify No UID 0 Accounts Exist Other than root</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Any account with UID 0 has superuser rights on the system.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>This access must be limited to only the default <xhtml:span class="inline_block">root </xhtml:span>role and be made accessible from the system console only. Administrative access granted to an unprivileged account should use an approved mechanism such as RBAC.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Disable or delete any other <xhtml:span class="inline_block">0</xhtml:span> UID entries that are displayed; there should be only one <xhtml:span class="inline_block">root </xhtml:span>account. Finer granularity access control for administrative access can be obtained by using the Solaris Role-Based Access Control (RBAC) mechanism. RBAC configurations should be monitored via <xhtml:span class="inline_block">user_attr</xhtml:span>(4) to make sure that privileges are managed appropriately.</xhtml:p>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure root is the only UID 0 account">
                  <ecl:command>logins -o | awk -F: '($1 != "root" &amp;&amp; $2 == 0) { print $1 }'</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.6_Ensure_root_PATH_Integrity" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Ensure root PATH Integrity</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The <xhtml:span class="inline_block">root </xhtml:span>user can execute any command on the system and could be tricked into executing programs if the PATH is not set correctly.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Including the current working directory (.) or any other writable directory in <xhtml:span class="inline_block">root</xhtml:span>'s executable path makes it likely that an attacker can gain superuser access by forcing an administrator operating as <xhtml:span class="inline_block">root </xhtml:span>to execute a malcode, such as a Trojan horse program.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Correct or justify any items discovered in the Audit step.</xhtml:p>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="none exist" comment="Ensure no empty entries in root's $PATH">
                     <ecl:command>echo $PATH</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="(^|:):"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="none exist" comment="Ensure no trailing colon in root's $PATH">
                     <ecl:command>echo $PATH</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value=":$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="none exist" comment="Ensure no dot paths in root's $PATH">
                     <ecl:command>echo $PATH</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="(^|:|/)\.+($|:|/)"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.7_Check_Permissions_on_User_Home_Directories" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Check Permissions on User Home Directories</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>While the system administrator can establish secure permissions for users' home directories, the users can easily override these.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Group or world-writable user home directories may enable malicious users to steal or modify other users' data or to gain another user's system privileges.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Correct or justify any items discovered in the Audit step. Determine if any user directory permissions are world-readable, writable, or executable, and work with those users to determine the best course of action in accordance with site policy.</xhtml:p>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure permissions on user home directories are correct">
                  <ecl:command>for dir in `logins -ox | awk -F: '($8 == "PS") { print $6 }'`; do find ${dir} -type d -prune \( -perm -g+w -o  -perm -o+r -o -perm -o+w -o -perm -o+x \) -ls; done</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.8_Check_Permissions_on_User_._Hidden_Files" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Check Permissions on User "." (Hidden) Files</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>While the system administrator can establish secure permissions for users' "dot" files, the users can easily override these.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Group or world-writable user configuration files may enable malicious users to steal or modify other users' data or to gain another user's system privileges.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Correct or justify any items discovered in the Audit step. Determine if any user hidden files are world-readable or writable, and work with those users to determine the best course of action in accordance with site policy.</xhtml:p>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure permissions on user dot files are correct">
                  <ecl:command>for dir in `logins -ox | awk -F: '($8 == "PS") { print $6 }'`; do find ${dir}/.[A-Za-z0-9]* \! -type l \( -perm -20 -o -perm -02 \) -ls; done</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.9_Check_Permissions_on_User_.netrc_Files" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Check Permissions on User .netrc Files</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>While the system administrator can establish secure permissions for users' <xhtml:span class="inline_block">.netrc </xhtml:span>files, the users can easily override these.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>
               <xhtml:span class="inline_block">.netrc </xhtml:span>files may contain unencrypted passwords that can be used to attack other systems.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Correct or justify any items discovered in the Audit step. Determine if any user <xhtml:span class="inline_block">.netrc </xhtml:span>files are group- or world-readable or writable, and work with those users to determine the best course of action in accordance with site policy.</xhtml:p>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure permissions on user .netrc files are correct">
                  <ecl:command>for dir in `logins -ox | awk -F: '($8 == "PS") { print $6 }'`; do find ${dir}/.netrc -type f \( -perm -g+r -o -perm -g+w -o -perm -g+x -o -perm -o+r -o -perm -o+w -o -perm -o+x \) -ls 2&gt;/dev/null; done</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.10_Check_for_Presence_of_User_.rhosts_Files" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Check for Presence of User .rhosts Files</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>While no .rhosts files are shipped with Solaris, users can easily create them.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>This action is only meaningful if <xhtml:span class="inline_block">.rhosts </xhtml:span>support is permitted in the PAM configuration. Even though the <xhtml:span class="inline_block">.rhosts </xhtml:span>files are ineffective if support is disabled in the PAM configuration, they may have been brought over from other systems and could contain information useful to an attacker for those other systems.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Correct or justify any items discovered in the Audit step. Determine if any user <xhtml:span class="inline_block">.rhosts </xhtml:span>files are present in user directories and work with those users to determine the best course of action in accordance with site policy.</xhtml:p>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure no users have .rhosts files">
                  <ecl:command>for dir in `logins -ox | awk -F: '($8 == "PS") { print $6 }'`; do find ${dir}/.rhosts -type f -ls 2&gt;/dev/null; done</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.11_Check_Groups_in_passwd4" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Check Groups in passwd(4)</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Over time, system administration errors and changes can lead to groups being defined in <xhtml:span class="inline_block">passwd</xhtml:span>(4) but not in <xhtml:span class="inline_block">group</xhtml:span>(4).</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Groups defined in <xhtml:span class="inline_block">passwd</xhtml:span>(4) but not in <xhtml:span class="inline_block">group</xhtml:span>(4) file pose a threat to system security since group permissions are not properly managed.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Correct or justify any items discovered in the Audit step. Determine if any groups are in <xhtml:span class="inline_block">passwd</xhtml:span>(4)but not in <xhtml:span class="inline_block">group</xhtml:span>(4), and work with those users or group owners to determine the best course of action in accordance with site policy.</xhtml:p>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure no groups in passwd that are not in group">
                  <ecl:command>logins -xo | awk -F: '($3 == "") { print $1 }'</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.12_Check_That_Users_Are_Assigned_Home_Directories" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Check That Users Are Assigned Home Directories</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>
               <xhtml:span class="inline_block">passwd</xhtml:span>(4) defines a home directory that each user is placed in upon login. If there is no defined home directory, a user will be placed in <xhtml:span class="inline_block">/</xhtml:span> and will not be able to write any files or have local environment variables set.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>All users must be assigned a home directory in <xhtml:span class="inline_block">passwd</xhtml:span>(4).</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Correct or justify any items discovered in the Audit step. Determine if there exists any users who are in <xhtml:span class="inline_block">passwd</xhtml:span>(4) but do not have a home directory, and work with those users to determine the best course of action in accordance with site policy.</xhtml:p>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure all users have defined home directories">
                  <ecl:command>cat /etc/passwd | awk -F: '{ if ( $6 == "" ) { print "User " $1 "has no home directory defined." }}'</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.13_Check_That_Defined_Home_Directories_Exist" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Check That Defined Home Directories Exist</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Users can be defined to have a home directory in <xhtml:span class="inline_block">passwd</xhtml:span>(4), even if the directory does not actually exist.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>If the user's home directory does not exist, the user will be placed in "/" and will not be able to write any files or have local environment variables set.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Correct or justify any items discovered in the Audit step. Determine if there exists any users whose home directories do not exist, and work with those users to determine the best course of action in accordance with site policy.</xhtml:p>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure defined home directories exist">
                  <ecl:command>logins -xo | egrep -v "^n?uucp:" | while read line; do user=`echo ${line} | awk -F: '{ print $1 }'`;      home=`echo ${line} | awk -F: '{ print $6 }'`; if [ ! -d "${home}" ]; then echo ${user}; fi; done</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.14_Check_User_Home_Directory_Ownership" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Check User Home Directory Ownership</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The user home directory is space defined for the particular user to set local environment variables and to store personal files.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Since the user is accountable for files stored in the user home directory, the user must be the owner of the directory.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Correct or justify any items discovered in the Audit step. Determine if there exists any users whose home directory is not properly owned, and work with those users to determine the best course of action in accordance with site policy.</xhtml:p>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure permissions on user home directories are correct">
                  <ecl:command>logins -xo | egrep -v "^n?uucp:" | while read line; do user=`echo ${line} | awk -F: '{ print $1 }'`; home=`echo ${line} | awk -F: '{ print $6 }'`; find ${home} -type d -prune \! -user ${user} -ls; done</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.15_Check_for_Duplicate_UIDs" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Check for Duplicate UIDs</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Although the <xhtml:span class="inline_block">useradd </xhtml:span>program will not let you create a duplicate User ID (UID), it is possible for an administrator to manually modify <xhtml:span class="inline_block">passwd</xhtml:span>(4) and change the UID field.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Users must be assigned unique UIDs for accountability and to ensure appropriate access protections.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Correct or justify any items discovered in the Audit step. Determine if there exists any users who share a common UID, and work with those users to determine the best course of action in accordance with site policy.</xhtml:p>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure no users have duplicate UIDs">
                  <ecl:command>logins -d</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.16_Check_for_Duplicate_GIDs" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Check for Duplicate GIDs</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Although the <xhtml:span class="inline_block">groupadd </xhtml:span>program will not let you create a duplicate Group ID (GID), it is possible for an administrator to manually modify <xhtml:span class="inline_block">group</xhtml:span>(4) and change the GID field.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>User groups must be assigned unique GIDs for accountability and to ensure appropriate access protections.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Correct or justify any items discovered in the Audit step. Determine if there exists any duplicate group identifiers, and work with each respective group owner to remediate this issue and ensure that the group ownership of their files are set to an appropriate value.</xhtml:p>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure no groups have duplicate GIDs">
                  <ecl:command>cat /etc/group | cut -f3 -d":" | sort -n | uniq -c | awk '{ if ($1 != 1) { print "Duplicate GUID found: " $2 } }'</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.17_Check_That_Reserved_UIDs_Are_Assigned_to_System_Accounts" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Check That Reserved UIDs Are Assigned to System Accounts</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Traditionally, Unix systems have established "reserved" UIDs (0-99 range) intended for system accounts.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>If a user is assigned a UID that is in the reserved range, even if it is not presently in use, security exposures can arise if a subsequently installed application uses the same UID.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Correct or justify any items discovered in the Audit step. Determine if there are any accounts using these reserved UIDs, and work with their owner to determine the best course of action in accordance with site policy.</xhtml:p>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure reserved UIDS assigned to system accounts">
                  <ecl:command>logins -so | awk -F: '{ print $1 }' | while read user; do found=0; for tUser in adm aiuser bin daemon dhcpserv dladm ftp gdm listen lp mysql netadm netcfg noaccess nobody nobody4 nuucp openldap pkg5srv postgres root smmsp svctag sys unknown uucp upnp webservd xvm zfssnap; do if [ ${user} = ${tUser} ]; then found=1; fi; done; if [ $found -eq 0 ]; then echo "Invalid User with Reserved UID: ${user}"; fi; done</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.18_Check_for_Duplicate_User_Names" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Check for Duplicate User Names</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Although the <xhtml:span class="inline_block">useradd </xhtml:span>program will not let you create a duplicate user name, it is possible for an administrator to manually modify <xhtml:span class="inline_block">passwd</xhtml:span>(4) and change the user name.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>If a user is assigned a duplicate user name, it will create and have access to files with the first UID for that username in <xhtml:span class="inline_block">passwd</xhtml:span>(4). For example, if "test4" has a UID of 1000 and a subsequent "test4" entry has a UID of 2000, logging in as "test4" will use UID 1000. Effectively, the UID is shared, which is a potential security problem.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Correct or justify any items discovered in the Audit step. Determine if there are any duplicate user names, and work with their respective owners to determine the best course of action in accordance with site policy.</xhtml:p>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure no users have duplicate user names">
                  <ecl:command>logins -d</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.19_Check_for_Duplicate_Group_Names" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Check for Duplicate Group Names</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Although the <xhtml:span class="inline_block">groupadd </xhtml:span>program will not let you create a duplicate group name, it is possible for an administrator to manually modify <xhtml:span class="inline_block">group</xhtml:span>(4) and change the group name.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>If a group is assigned a duplicate group name, it will create and have access to files with the first GID for that group in <xhtml:span class="inline_block">group</xhtml:span>(4). Effectively, the GID is shared, which is a security risk.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Correct or justify any items discovered in the Audit step. Determine if there are any duplicate group names, and work with their respective owners to determine the best course of action in accordance with site policy.</xhtml:p>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure no groups have duplicate group names">
                  <ecl:command>cat /etc/group | cut -f1 -d":" | sort -n | uniq -c | awk '{ if ($1 != 1) { print "Duplicate Group name Found: " $2 } }'</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.20_Check_for_Presence_of_User_.netrc_Files" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Check for Presence of User .netrc Files</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The <xhtml:span class="inline_block">.netrc </xhtml:span>file contains data for logging into a remote host for file transfers via FTP.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>The <xhtml:span class="inline_block">.netrc </xhtml:span>file presents a significant security risk since it stores passwords in unencrypted form.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Correct or justify any items discovered in the Audit step. Determine if any<xhtml:span class="inline_block"> .netrc </xhtml:span>files exist, and work with the owner to determine the best course of action in accordance with site policy.</xhtml:p>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure no users have .netrc files">
                  <ecl:command>for dir in `logins -ox |awk -F: '($8 == "PS") { print $6 }'`; do for file in $dir/.netrc; do if [ ! -h "$file" -a -f "$file" ]; then echo ".netrc file $file exists" ;fi; done; done</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.21_Check_for_Presence_of_User_.forward_Files" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Check for Presence of User .forward Files</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The <xhtml:span class="inline_block">.forward </xhtml:span>file specifies an email address to which a user's mail is forwarded.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Use of the <xhtml:span class="inline_block">.forward </xhtml:span>file poses a security risk in that sensitive data may be inadvertently transferred outside the organization. The <xhtml:span class="inline_block">.forward </xhtml:span>file also poses a secondary risk as it can be used to execute commands that may perform unintended actions.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Correct or justify any items discovered in the Audit step. Determine if any <xhtml:span class="inline_block">.forward</xhtml:span> files exist, and work with the owner to determine the best course of action in accordance with site policy.</xhtml:p>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure no users have .forward files">
                  <ecl:command>for dir in `logins -ox | awk -F: '($8 == "PS") { print $6 }'`; do ls -l ${dir}/.forward 2&gt;/dev/null; done</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.22_Find_World_Writable_Files" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Find World Writable Files</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Unix-based systems support variable settings to control access to files. World-writable files are the least secure. See the <xhtml:span class="inline_block">chmod</xhtml:span>(2) man page for more information.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Data in world-writable files can be read, modified, and potentially compromised by any user on the system. World-writable files may also indicate an incorrectly written script or program that could potentially be the cause of a larger compromise to the system's integrity.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Correct or justify any items discovered in the Audit step. Determine the existence of any "write access" given for the "other" category (<xhtml:span class="inline_block">chmod o-w <xhtml:em>&lt;filename&gt;</xhtml:em>
                     </xhtml:span>), and work with the owner to determine the best course of action in accordance with site policy.</xhtml:p>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>

      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.23_Find_SUIDSGID_System_Executables" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Find SUID/SGID System Executables</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The owner of a file can set the file's permissions to run with the owner's or group's permissions, even if the user running the program is not the owner or a member of the group. The most common reason for a SUID/SGID program is to enable users to perform functions (such as changing their password), which requires root privileges.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>There are valid reasons for SUID/SGID programs, but it is important to identify and review such programs to ensure they are legitimate.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Correct or justify any items discovered in the Audit step. Determine the existence of any set-UID programs that do not belong on the system, and work with the owner (or system administrator) to determine the best course of action in accordance with site policy. Digital signatures on the Solaris Set-UID binaries can be verified with the <xhtml:span class="inline_block">elfsign </xhtml:span>utility, such as this example:</xhtml:p>
                  <xhtml:code class="pre_0.28985687740466026"># elfsign verify -e /usr/bin/su<xhtml:br/>elfsign: verification of /usr/bin/su passed.</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>

      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.24_Find_Un-owned_Files_and_Directories" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Find Un-owned Files and Directories</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Sometimes when administrators delete users from the password file they neglect to remove all files owned by those users from the system.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>A new user who is assigned the deleted user's user ID or group ID may then end up "owning" these files, and thus have more access on the system than was intended.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Correct or justify any items discovered in the Audit step. Determine the existence of any files that are not attributed to current users or groups on the system, and determine the best course of action in accordance with site policy. Note that the Solaris OS is shipped with all files appropriately owned.</xhtml:p>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure no un-owned files and directories exist">
                  <ecl:command>find / \( -fstype nfs -o -fstype cachefs -o -fstype autofs -o -fstype ctfs -o -fstype mntfs -o -fstype objfs -o -fstype proc \) -prune -o \( -nouser -o -nogroup \) -ls</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.25_Find_Files_and_Directories_with_Extended_Attributes" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Find Files and Directories with Extended Attributes</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Extended attributes are implemented as files in a "shadow" file system that is not generally visible via normal administration commands without special arguments.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Attackers or malicious users could "hide" information, exploits, etc. in extended attribute areas. Since extended attributes are rarely used, it is important to find files with extended attributes set.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Correct or justify any items discovered in the Audit step. Determine the existence of any files having extended file attributes, and determine the best course of action in accordance with site policy. Note that the Solaris OS does not ship with files that have extended attributes.</xhtml:p>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure no files and directories have extended attributes">
                  <ecl:command>find / ( -fstype nfs -o -fstype cachefs  -o -fstype autofs -o fstype ctfs -o fstype mntfs  -o fstype objfs -o fstype proc ) -prune  -o -xattr -print</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
   </xccdf:Group>
   <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_10_Appendix_A__Additional_Security_Notes">
      <xccdf:title xml:lang="en">Appendix A:  Additional Security Notes</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>The items in this section are security configuration settings that have been suggested by several other resources and system hardening tools. However, compared to the other settings in this document, the settings presented here provide relatively little incremental security benefit. Nevertheless, none of these settings should have a significant impact on the functionality of the system, and some sites may feel that the slight security enhancement of these settings outweighs the (sometimes minimal) administrative cost of performing them.</xhtml:p>
         <xhtml:p>None of these settings will be checked by the automated scoring tool provided with the benchmark document. They are purely optional and may be applied or not at the discretion of local site administrators.</xhtml:p>
      </xccdf:description>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_10.1_SN.1Restrict_access_to_suspend_feature" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">SN.1	Restrict access to suspend feature</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Solaris 11 does not enable the suspend capability by default and now uses the <xhtml:span class="inline_block">poweradm </xhtml:span>command to suspend the system.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Bear in mind that users with physical access to a system can simply remove power from the machine if they are truly motivated to take the system off-line, and granting the capability to use poweradm may be a more graceful way of allowing desktop users to shut down their own machines.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="pre_0.01089625146389106"># poweradm set suspend-enable=false<xhtml:br/># poweradm update</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>

      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_10.2_SN.2Remove_Support_for_Internet_Services_inetd" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">SN.2	Remove Support for Internet Services (inetd)</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>If the actions in this section result in disabling all <xhtml:span class="inline_block">inetd</xhtml:span>-based services, then there is no point in running <xhtml:span class="inline_block">inetd</xhtml:span> at boot time.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>If <xhtml:span class="inline_block">inetd</xhtml:span>-based services are ever re-enabled in the future it will be necessary to re-enable the <xhtml:span class="inline_block">inetd </xhtml:span>daemon as well ("<xhtml:span class="inline_block">svcadm enable svc:/network/inetd:default</xhtml:span>").</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="pre_0.6647843481464548"># svcadm disable svc:/network/inetd</xhtml:code>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>

      </xccdf:Rule>
   </xccdf:Group>
<xccdf:signature><ds:Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
<ds:SignedInfo>
<ds:CanonicalizationMethod Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315"/>
<ds:SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1"/>
<ds:Reference URI="">
<ds:Transforms>
<ds:Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature"/>
<ds:Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"/>
</ds:Transforms>
<ds:DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/>
<ds:DigestValue>TNRKI1o4dLrEsgn09Wxt7FTm8aM=</ds:DigestValue>
</ds:Reference>
</ds:SignedInfo>
<ds:SignatureValue>
ykbGv9GsvUzw5dRJ9NbCEVfqd1sawQ4dqhO4u/64xnjU2u2zpwmm+JnF1iko50FJA5J1++k27ouW
4e47fVE8iRJwB1bc2rNjRvAf/kii0ezB7+X+KcpdfeXEvH63gDNvjYREDHvRQoPiWFcr9Mby2h1h
zzqszFI57KBPdNB31lUPiIoFlYXUkz17aqRzdxfmhqkJnZMtZ84Mv3bEmIgvNTePhLAzUB/fGD1/
H/KBbpIDNTjiaI9ZFQg8d3ogUooVlzvAa4j+etKcabXc279o7HYCUapxwEu8UCO3DmiL/luBopDh
9VybSTwkHKhXRC7Z9l4Jm4lGwPqObfIkWyPmBw==
</ds:SignatureValue>
<ds:KeyInfo>
<ds:X509Data>
<ds:X509Certificate>
MIIFRzCCBC+gAwIBAgIHTwpN/4tOfDANBgkqhkiG9w0BAQsFADCBtDELMAkGA1UEBhMCVVMxEDAO
BgNVBAgTB0FyaXpvbmExEzARBgNVBAcTClNjb3R0c2RhbGUxGjAYBgNVBAoTEUdvRGFkZHkuY29t
LCBJbmMuMS0wKwYDVQQLEyRodHRwOi8vY2VydHMuZ29kYWRkeS5jb20vcmVwb3NpdG9yeS8xMzAx
BgNVBAMTKkdvIERhZGR5IFNlY3VyZSBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkgLSBHMjAeFw0xNDA5
MTgxNDM0MjFaFw0xNzEwMjAxODU3NDRaMIGTMQswCQYDVQQGEwJVUzERMA8GA1UECBMITmV3IFlv
cmsxFzAVBgNVBAcTDkVhc3QgR3JlZW5idXNoMSswKQYDVQQKEyJDZW50ZXIgZm9yIEludGVybmV0
IFNlY3VyaXR5LCBJbmMuMSswKQYDVQQDEyJDZW50ZXIgZm9yIEludGVybmV0IFNlY3VyaXR5LCBJ
bmMuMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0MGnj6yX2QHklGadAfTBxssvP+2f
YegPpNGXfEmPXZXrWeME2BqIbO+hKXTuwUucRK6RvQJTjgzNgOhQx3HcclRwQB4xj/14hOoZSeQ3
haw/Xjl4WofsWizM5j/g1iWBgxi3xk/aREfKKb0ulBMtP/WYFpSRjZ/Z7m5QKii0feJPxbf+wrZ+
UvNZ8uBdO+SEmbhS/DVESsEWzXn6StbQpa2dno2aIOGZXQKcUY2d3WZ4Zk+zawFcRUYslVIrOhMb
0e3+hbJEtFwm5ekehdNimSozYyyLGZJonLlvr8PfmvQ1ceu7enWCRfZrRWAlDHFaouLdtU/OmXc+
Um7cLwz8VQIDAQABo4IBezCCAXcwDAYDVR0TAQH/BAIwADATBgNVHSUEDDAKBggrBgEFBQcDAzAO
BgNVHQ8BAf8EBAMCB4AwNQYDVR0fBC4wLDAqoCigJoYkaHR0cDovL2NybC5nb2RhZGR5LmNvbS9n
ZGlnMnM1LTAuY3JsMFMGA1UdIARMMEowSAYLYIZIAYb9bQEHFwIwOTA3BggrBgEFBQcCARYraHR0
cDovL2NlcnRpZmljYXRlcy5nb2RhZGR5LmNvbS9yZXBvc2l0b3J5LzB2BggrBgEFBQcBAQRqMGgw
JAYIKwYBBQUHMAGGGGh0dHA6Ly9vY3NwLmdvZGFkZHkuY29tLzBABggrBgEFBQcwAoY0aHR0cDov
L2NlcnRpZmljYXRlcy5nb2RhZGR5LmNvbS9yZXBvc2l0b3J5L2dkaWcyLmNydDAfBgNVHSMEGDAW
gBRAwr0njsw0gzCiM9f7bLPwtCyAzjAdBgNVHQ4EFgQU+3zn+CEg6a2xPqlBXvn64hUyoB4wDQYJ
KoZIhvcNAQELBQADggEBAEh76h1GtJ0pj04in+RUymB7fqPh6HFILkOLlTPnveyXCoHYT2M46DET
EA/NKYkoF2KA3QiZ1b+PMViuTYG2pDs71eFVPADuBCGf9IFufCDY9mPvjQiFDlLNMknXxACD8TjC
hqz+uZT2uLPw/YxkJIsCxrTQJ//ga/fHfZDrKgQfbVzxjD/4WKDe8HktjKcn+NWGPJNMgmO+IHrK
if6TB1xTo32W9QzwoXvBdLnziAUGZZghEulq6h3RCMzKPzpx5JiLlOz6JzqXHvrua+yUbr4A29Vy
vkwWgJWjyvJd2uq9MQ9l49kkrD84m41PSwpaHO99nEHRgRykopxIt8AHsIQ=
</ds:X509Certificate>
</ds:X509Data>
<ds:KeyValue>
<ds:RSAKeyValue>
<ds:Modulus>
0MGnj6yX2QHklGadAfTBxssvP+2fYegPpNGXfEmPXZXrWeME2BqIbO+hKXTuwUucRK6RvQJTjgzN
gOhQx3HcclRwQB4xj/14hOoZSeQ3haw/Xjl4WofsWizM5j/g1iWBgxi3xk/aREfKKb0ulBMtP/WY
FpSRjZ/Z7m5QKii0feJPxbf+wrZ+UvNZ8uBdO+SEmbhS/DVESsEWzXn6StbQpa2dno2aIOGZXQKc
UY2d3WZ4Zk+zawFcRUYslVIrOhMb0e3+hbJEtFwm5ekehdNimSozYyyLGZJonLlvr8PfmvQ1ceu7
enWCRfZrRWAlDHFaouLdtU/OmXc+Um7cLwz8VQ==
</ds:Modulus>
<ds:Exponent>AQAB</ds:Exponent>
</ds:RSAKeyValue>
</ds:KeyValue>
</ds:KeyInfo>
</ds:Signature></xccdf:signature></xccdf:Benchmark>