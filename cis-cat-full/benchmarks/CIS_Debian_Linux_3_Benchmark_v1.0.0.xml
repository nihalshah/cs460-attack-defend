<?xml version="1.0" encoding="UTF-8" standalone="no"?><cdf:Benchmark xmlns:cdf="http://checklists.nist.gov/xccdf/1.1" xmlns:cdfp="http://www.cisecurity.org/xccdf/platform/0.2.3" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:ecl="http://cisecurity.org/check" xmlns:htm="http://www.w3.org/1999/xhtml" xmlns:xccdf="http://checklists.nist.gov/xccdf/1.1" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="cis_debian_linux_benchmark" xml:lang="en" xsi:schemaLocation="http://checklists.nist.gov/xccdf/1.1 ../misc/xsd/xccdf-1.1.4.xsd http://cisecurity.org/check ../misc/xsd/ecl.xsd">
  <cdf:status date="2008-10-29">accepted</cdf:status>
  
  <cdf:title>CIS Debian Linux 3 Benchmark</cdf:title>
  <cdf:description>
    <htm:div>This document defines a set of evaluating the security configuration posture of a Debian Linux system.</htm:div>
    
  </cdf:description>
  <xccdf:notice id="terms-of-use" xml:lang="en">
    BACKGROUND.
    
    The Center for Internet Security ("CIS") provides benchmarks, scoring tools, software, data, information, suggestions, ideas, and other services and materials from the CIS website or elsewhere ("Products") as a public service to Internet users worldwide.  Recommendations contained in the Products ("Recommendations") result from a consensus-building process that involves many security experts and are generally generic in nature.  The Recommendations are intended to provide helpful information to organizations attempting to evaluate or improve the security of their networks, systems, and devices.  Proper use of the Recommendations requires careful analysis and adaptation to specific user requirements.  The Recommendations are not in any way intended to be a "quick fix" for anyone's information security needs.
    
    NO REPRESENTATIONS, WARRANTIES, OR COVENANTS.
    
    CIS makes no representations, warranties, or covenants whatsoever as to (i) the positive or negative effect of the Products or the Recommendations on the operation or the security of any particular network, computer system, network device, software, hardware, or any component of any of the foregoing or (ii) the accuracy, reliability, timeliness, or completeness of  the Products or the Recommendations.  CIS is providing the Products and the Recommendations "as is" and "as available" without representations, warranties, or covenants of any kind.  
    
    USER AGREEMENTS.
    
    By using the Products and/or the Recommendations, I and/or my organization ("We") agree and acknowledge that:
    
    1.	No network, system, device, hardware, software, or component can be made fully secure;
    2.	We are using the Products and the Recommendations solely at our own risk;
    3.	We are not compensating CIS to assume any liabilities associated with our use of the Products or the Recommendations, even risks that result from 		CIS's negligence or failure to perform; 
    4.	We have the sole responsibility to evaluate the risks and benefits of the Products and Recommendations to us and to adapt the Products and the 			Recommendations to our particular circumstances and requirements;
    5.	Neither CIS, nor any CIS Party (defined below) has any responsibility to make any corrections, updates, upgrades, or bug fixes; or to notify us of 		the need for any such corrections, updates, upgrades, or bug fixes; and
    6.	Neither CIS nor any CIS Party has or will have any liability to us whatsoever (whether based in contract, tort, strict liability or otherwise) for 		any direct, indirect, incidental, consequential, or special damages (including without limitation loss of profits, loss of sales, loss of or damage 		to reputation,loss of customers, loss of software, data, information or emails, loss of privacy, loss of use of any computer or other equipment, 	business interruption, wasted management or other staff resources or claims of any kind against us from third parties) arising out of or in any way 	Connected with our use of or our inability to use any of the Products or Recommendations (even if CIS has been advised of the possibility of such 	damages), including without limitation any liability associated with infringement of intellectual property, defects, bugs, errors, omissions, 	viruses, worms, backdoors, Trojan horses or other harmful items.
    
    GRANT OF LIMITED RIGHTS.
    
    CIS hereby grants each user the following rights, but only so long as the user complies with all of the terms of these Agreed Terms of Use:
    
    1.	Except to the extent that we may have received additional authorization pursuant to a written agreement with CIS, each user may download, install and 	use each of the Products on a single computer;
    2.	Each user may print one or more copies of any Product or any component of a Product that is in a .txt, .pdf, .doc, .mcw, or .rtf format, provided 		that all such copies are printed in full and are kept intact, including without limitation the text of this Agreed Terms of Use in its entirety.
    
    RETENTION OF INTELLECTUAL PROPERTY RIGHTS; LIMITATIONS ON DISTRIBUTION.
    
    The Products are protected by copyright and other intellectual property laws and by international treaties.  We acknowledge and agree that we are not acquiring title to any intellectual property rights in the Products and that full title and all ownership rights to the Products will remain the exclusive property of CIS or CIS Parties.  CIS reserves all rights not expressly granted to users in the preceding section entitled "Grant of limited rights."
    Subject to the paragraph entitled "Special Rules" (which includes a waiver, granted to some classes of CIS Members, of certain limitations in this paragraph), and except as we may have otherwise agreed in a written agreement with CIS, we agree that we will not (i) decompile, disassemble, reverse engineer, or otherwise attempt to derive the source code for any software Product that is not already in the form of source code; (ii) distribute, redistribute, encumber, sell, rent, lease, lend, sublicense, or otherwise transfer or exploit rights to any Product or any component of a Product; (iii) post any Product or any component of a Product on any website, bulletin board, ftp server, newsgroup, or other similar mechanism or device, without regard to whether such mechanism or device is internal or external, (iv) remove or alter trademark, logo, copyright or other proprietary notices, legends, symbols or labels in any Product or any component of a Product; (v) remove these Agreed Terms of Use from, or alter these Agreed Terms of Use as they appear in, any Product or any component of a Product; (vi) use any Product or any component of a Product with any derivative works based directly on a Product or any component of a Product; (vii) use any Product or any component of a Product with other products or applications that are directly and specifically dependent on such Product or any component for any part of their functionality, or (viii) represent or claim a particular level of compliance with a CIS Benchmark, scoring tool or other Product.  We will not facilitate or otherwise aid other individuals or entities in any of the activities listed in this paragraph.
    We hereby agree to indemnify, defend, and hold CIS and all of its officers, directors, members, contributors, employees, authors, developers, agents, affiliates, licensors, information and service providers, software suppliers, hardware suppliers, and all other persons who aided CIS in the creation, development, or maintenance of the Products or Recommendations ("CIS Parties") harmless from and against any and all liability, losses, costs, and expenses (including attorneys' fees and court costs) incurred by CIS or any CIS Party in connection with any claim arising out of any violation by us of the preceding paragraph, including without limitation CIS's right, at our expense, to assume the exclusive defense and control of any matter subject to this indemnification, and in such case, we agree to cooperate with CIS in its defense of such claim.  We further agree that all CIS Parties are third-party beneficiaries of our undertakings in these Agreed Terms of Use. 
    
    SPECIAL RULES.
        
    CIS has created and will from time to time create, special rules for its members and for other persons and organizations with which CIS has a written contractual relationship.  Those special rules will override and supersede these Agreed Terms of Use with respect to the users who are covered by the special rules.
    CIS hereby grants each CIS Security Consulting or Software Vendor Member and each CIS Organizational User Member, but only so long as such Member remains in good standing with CIS and complies with all of the terms of these Agreed Terms of Use, the right to distribute the Products and Recommendations within such Member's own organization, whether by manual or electronic means.  Each such Member acknowledges and agrees that the foregoing grant is subject to the terms of such Member's membership arrangement with CIS and may, therefore, be modified or terminated by CIS at any time.
    CHOICE OF LAW; JURISDICTION; VENUE.
    
    We acknowledge and agree that these Agreed Terms of Use will be governed by and construed in accordance with the laws of the State of Maryland, that any action at law or in equity arising out of or relating to these Agreed Terms of Use shall be filed only in the courts located in the State of Maryland, that we hereby consent and submit to the personal jurisdiction of such courts for the purposes of litigating any such action.  If any of these Agreed Terms of Use shall be determined to be unlawful, void, or for any reason unenforceable, then such terms shall be deemed severable and shall not affect the validity and enforceability of any remaining provisions.
    
    BY USING THE PRODUCTS I(WE) ACKNOWLEDGE THAT WE HAVE READ THESE AGREED TERMS OF USE IN THEIR ENTIRETY, UNDERSTAND THEM, AND I(WE) AGREE TO BE BOUND BY THEM IN ALL RESPECTS.      
  </xccdf:notice>
  <cdf:front-matter>
    <htm:p>
      <htm:b>Conventions</htm:b>
      <htm:br/> The following typographical conventions are used in this document:<htm:br/><htm:table><htm:tr><htm:td>Roman font</htm:td><htm:td>normal text</htm:td></htm:tr><htm:tr><htm:td><htm:code>Courier</htm:code></htm:td><htm:td><htm:code>used to indicate either a command or a standard UNIX parameter or file.</htm:code></htm:td></htm:tr><htm:tr><htm:td><htm:i>Italics</htm:i></htm:td><htm:td><htm:i>used for a question that you must evaluate before continuing</htm:i></htm:td></htm:tr></htm:table><htm:br/><htm:br/><htm:b>Root Shell Environment Assumed </htm:b><htm:br/> The actions listed in this document are written with the assumption that they will be executed by the root user running the bash
            shell and without <htm:code>noclobber</htm:code> set. Also, the following directories are assumed to be in root's path:
                <htm:code>/bin:/sbin:/usr/bin:/usr/sbin</htm:code><htm:br/><htm:br/><htm:b>Executing Actions</htm:b><htm:br/><htm:br/> The actions listed in this document are written with the assumption that they will be executed in the order presented here. Some
            actions may need to be modified if the order is changed. Actions are written so that they may be copied directly from this document into a
            root shell window with a "cut-and-paste" operation. <htm:br/><htm:br/><htm:b>Reboot Required</htm:b><htm:br/> Rebooting the system is required after completing all of the actions below in order to complete the re-configuration of the
            system. In many cases, the changes made in the steps below will not take effect until this reboot is performed. If substantial operating
            system updates are performed after the initial OS load, you may have to reboot more than once. <htm:br/><htm:br/><htm:b>Vulnerabilities</htm:b><htm:br/> In addition to any specific issues presented by a particular service or protocol, <htm:b>every</htm:b> service has the potential
            of being an entry point into a system if a vulnerability is found. This is why we recommend that some services are disabled even though
            there is no clear way to exploit them, and there has never been a problem with the service. If you are running an unnecessary service, you
            add additional risks of a vulnerability being found in the service in the future. <htm:br/><htm:br/><htm:b>Backup Key Files</htm:b><htm:br/> Before performing the steps of this benchmark it is strongly recommended that administrators make backup copies of critical
            configuration files that may get modified by various benchmark items. If this step is not performed, then the site may have no reasonable
            back-out strategy for reversing system modifications made as a result of this document. The script provided in Appendix B of this document
            will automatically back up all files that may be modified by the actions below. Note that an executable copy of this script is also
            provided in the archive containing the PDF version of this document and the CIS scoring tool. Assuming the administrator is in the
            directory where the archive has been unpacked, the command to execute the backup script would be: <htm:br/><htm:br/><htm:code>./do-backup.sh </htm:code><htm:br/><htm:br/> One of the byproducts of the <htm:code>do-backup.sh</htm:code> script is <htm:code>/root/do-restore.sh</htm:code>, which is
            dynamically generated based on the results of the <htm:code>do-backup.sh</htm:code> script. To roll back the changes performed by this
            benchmark, first run <htm:code>RevertBastille</htm:code> followed by <htm:code>do-restore.sh</htm:code>, and all changes will be backed
            out. Since not all Linux installations are identical, the <htm:code>do-restore.sh</htm:code> script is created based on the files that
            actually existed at the time <htm:code>do-backup.sh</htm:code> was run. <htm:br/><htm:br/> Note: If you make any changes manually to any of the files that were preserved by do-backup.sh, those changes will be lost when
            do-restore.sh is executed. It may be prudent to delete the do-restore.sh script once you have validated the changes to prevent
            inadvertently undoing the changes. <htm:br/><htm:br/><htm:b>Build Considerations</htm:b><htm:br/> If you have not done so already, plan out a partitioned hard drive. By creating a robust partition scheme an administrator can
            mitigate the threat of common local attacks, such as those based on hard links and consuming available partition space. The first step in
            achieving this is to place user-writable directory structures on a separate partition. This includes <htm:code>/home, /tmp,</htm:code> and
                <htm:code>/var/tmp</htm:code>. Additionally, any directory structure that may variably consume large quantities of disk space should
            also be placed on separate partitions. This includes <htm:code>/var/log</htm:code> and <htm:code>/var/spool/mail</htm:code>, where
            applicable. Note: Debian will download and store packages at <htm:code>/var/cache/apt/archives</htm:code>. Some administrators may find it
            easier to create a separate partition for the entire <htm:code>/var</htm:code> directory structure. To limit the inconveniences caused by
            filling up <htm:code>/home</htm:code>, consider implementing user and group quotas on the <htm:code>/home</htm:code> file system. Quotas
            will limit how much a single user (or single group) can store on a given file system. More information is available at <htm:a href="http://www.debian-administration.org/articles/47">http://www.debian-administration.org/articles/47</htm:a>. <htm:br/><htm:br/><htm:b>Software Package Removal </htm:b><htm:br/> There is considerable debate over the maintenance of unused software packages. Some people feel that as long as the software is
            not being used, leaving it installed poses no appreciable risk. Others feel that unused software presents another attack vector and
            increases the maintenance effort for the administrators. This Benchmark makes no recommendation for the removal of unused software. If
            vulnerable software is present on a system, that vulnerability may be exploitable by a local attacker, and the reader is advised to
            consider the effort in either its removal or maintenance and the risks thereof. <htm:br/><htm:br/><htm:b>Software Package Installation</htm:b><htm:br/> Throughout this Benchmark, you may be directed to enable software package init scripts using the
            <htm:code>update-rc.d</htm:code> command. This assumes you already installed said package(s). If the <htm:code>update-rc.d</htm:code>
            command fails, verify you actually installed the software required. <htm:br/><htm:br/></htm:p>
  </cdf:front-matter>
  <cdf:reference>
    <dc:title>Debian 3.1 Benchmark</dc:title>
    <dc:creator>Blake Frantz (bfrantz@leviathansecurity.com)</dc:creator>
    <dc:publisher>Center of Internet Security</dc:publisher>
    <dc:identifier>http://www.cisecurity.com</dc:identifier>
  </cdf:reference>
  <!--<cdfp:platform-definitions>
        <cdfp:os id="os-Debian">
            <cdfp:title>Debian Linux 3.1</cdfp:title>
            <cdfp:vendor>Debian</cdfp:vendor>
            <cdfp:family>Linux</cdfp:family>
            <cdfp:level>3.1</cdfp:level>
        </cdfp:os>
        <cdfp:platform-definition id="Debian31">
            <cdfp:title>Debian Linux 3.1</cdfp:title>
            <cdfp:product idref="os-Debian"/>
        </cdfp:platform-definition>
    </cdfp:platform-definitions>
    <cdf:platform idref="Debian31"/>-->
  <cdf:version>1.0.0.5</cdf:version>
  <xccdf:Profile id="debian-level-1-profile">
    <xccdf:title>Level 1 Profile</xccdf:title>
    <xccdf:description>
      <xhtml:p>This profile contains all Level 1 configuration items</xhtml:p>
    </xccdf:description>
    <xccdf:select idref="partitioning-file-system" selected="true"/>
    <xccdf:select idref="select-file-system" selected="true"/>
    <xccdf:select idref="set-secure-root-password" selected="true"/>
    <xccdf:select idref="configure-ssh" selected="true"/>
    <xccdf:select idref="enable-system-accounting" selected="true"/>
    <xccdf:select idref="install-and-run-bastille" selected="true"/>
    <xccdf:select idref="disable-standard-services" selected="true"/>
    <xccdf:select idref="tcp-wrappers-and-firewall" selected="true"/>
    <xccdf:select idref="enable-telnet" selected="true"/>
    <xccdf:select idref="enable-ftp" selected="true"/>
    <xccdf:select idref="enable-r-services" selected="true"/>
    <xccdf:select idref="enable-tftp" selected="true"/>
    <xccdf:select idref="enable-imap" selected="true"/>
    <xccdf:select idref="enable-pop" selected="true"/>
    <xccdf:select idref="enable-ident" selected="true"/>
    <xccdf:select idref="disable-inetd" selected="true"/>
    <xccdf:select idref="disable-sendmail" selected="true"/>
    <xccdf:select idref="disable-gui-login" selected="true"/>
    <xccdf:select idref="disable-xfont-server" selected="true"/>
    <xccdf:select idref="disable-standard-boot-services" selected="true"/>
    <xccdf:select idref="enable-smb" selected="true"/>
    <xccdf:select idref="enable-nfs" selected="true"/>
    <xccdf:select idref="enable-nfs-client" selected="true"/>
    <xccdf:select idref="enable-nis-client" selected="true"/>
    <xccdf:select idref="enable-nis" selected="true"/>
    <xccdf:select idref="enable-portmap" selected="true"/>
    <xccdf:select idref="enable-printer" selected="true"/>
    <xccdf:select idref="enable-www" selected="true"/>
    <xccdf:select idref="enable-snmp" selected="true"/>
    <xccdf:select idref="enable-dns" selected="true"/>
    <xccdf:select idref="enable-sql" selected="true"/>
    <xccdf:select idref="enable-webmin" selected="true"/>
    <xccdf:select idref="enable-squid" selected="true"/>
    <xccdf:select idref="network-parameters" selected="true"/>
    <xccdf:select idref="network-parameters-additional" selected="true"/>
    <xccdf:select idref="logging-auth-priv" selected="true"/>
    <xccdf:select idref="logging-ftp" selected="true"/>
    <xccdf:select idref="logging-confirm-permissions" selected="true"/>
    <xccdf:select idref="logging-syslog-remote-host" selected="true"/>
    <xccdf:select idref="nodev-fstab" selected="true"/>
    <xccdf:select idref="nodev-removable-media" selected="true"/>
    <xccdf:select idref="disable-usermounted-filesystems" selected="true"/>
    <xccdf:select idref="verify-authn-authz-files" selected="true"/>
    <xccdf:select idref="world-writable-sticky" selected="true"/>
    <xccdf:select idref="world-writable-files" selected="true"/>
    <xccdf:select idref="world-suid-files" selected="true"/>
    <xccdf:select idref="find-unowned-files" selected="true"/>
    <xccdf:select idref="disable-usb" selected="true"/>
    <xccdf:select idref="remote-rhosts-pam" selected="true"/>
    <xccdf:select idref="create-ftpusers" selected="true"/>
    <xccdf:select idref="prevent-X-port-6000" selected="true"/>
    <xccdf:select idref="restrict-at-cron" selected="true"/>
    <xccdf:select idref="restrict-crontab-files" selected="true"/>
    <xccdf:select idref="xinetd-acls" selected="true"/>
    <xccdf:select idref="restrict-root-login" selected="true"/>
    <xccdf:select idref="bootloader-password" selected="true"/>
    <xccdf:select idref="auth-single-user" selected="true"/>
    <xccdf:select idref="nfs-client-priv-port" selected="true"/>
    <xccdf:select idref="syslog-accept" selected="true"/>
    <xccdf:select idref="block-system-accounts" selected="true"/>
    <xccdf:select idref="no-empty-passwords" selected="true"/>
    <xccdf:select idref="set-account-expiration" selected="true"/>
    <xccdf:select idref="legacy-authn-entires" selected="true"/>
    <xccdf:select idref="root-path-sanity" selected="true"/>
    <xccdf:select idref="home-dir-acls" selected="true"/>
    <xccdf:select idref="dot-file-acls" selected="true"/>
    <xccdf:select idref="remove-netrc-files" selected="true"/>
    <xccdf:select idref="default-umask-users" selected="true"/>
    <xccdf:select idref="disable-core-dumps" selected="true"/>
    <xccdf:select idref="limit-su-to-root" selected="true"/>
    <xccdf:select idref="banner-physical-network-access" selected="true"/>
    <xccdf:select idref="banner-gui-access" selected="true"/>
    <xccdf:select idref="banner-ftp" selected="true"/>
    <xccdf:select idref="reboot-now" selected="true"/>
    <xccdf:select idref="create-symlinks-for-dangerous-files" selected="true"/>
    <xccdf:select idref="change-sendmail-greeting" selected="true"/>
    <xccdf:select idref="enable-tcp-syn-cookies" selected="true"/>
    <xccdf:select idref="additional-bootloader-security" selected="true"/>
    <xccdf:select idref="eval-start-up-packages" selected="true"/>
    <xccdf:select idref="eval-all-packages" selected="true"/>
    <xccdf:select idref="configure-sudo" selected="true"/>
    <xccdf:select idref="lockout-after-three" selected="true"/>
    <xccdf:select idref="additional-kernel-tunings" selected="true"/>
    <xccdf:select idref="remove-compilers-assemblers" selected="true"/>
    <xccdf:select idref="verify-uid-0-accounts" selected="true"/>
    <xccdf:select idref="debian-security-announce" selected="false"/>
    <xccdf:select idref="set-bios-password" selected="false"/>
    <xccdf:select idref="configure-boot-devices" selected="false"/>
    <xccdf:select idref="package-selection" selected="false"/>
    <xccdf:select idref="apply-latest-os-patches" selected="false"/>
    <xccdf:select idref="validate-your-system-before-making-changes" selected="false"/>
    <xccdf:select idref="ensure-sources-file-sanity" selected="false"/>
  </xccdf:Profile>
  <xccdf:Profile id="debian-complete-profile">
    <xccdf:title>Level 1 + Appendix Recommendations Profile</xccdf:title>
    <xccdf:description>
      <xhtml:p>This profile contains all Level 1 configuration items in addition to all recommendation made in the appendix.</xhtml:p>
    </xccdf:description>
    <xccdf:select idref="partitioning-file-system" selected="true"/>
    <xccdf:select idref="select-file-system" selected="true"/>
    <xccdf:select idref="set-secure-root-password" selected="true"/>
    <xccdf:select idref="configure-ssh" selected="true"/>
    <xccdf:select idref="enable-system-accounting" selected="true"/>
    <xccdf:select idref="install-and-run-bastille" selected="true"/>
    <xccdf:select idref="disable-standard-services" selected="true"/>
    <xccdf:select idref="tcp-wrappers-and-firewall" selected="true"/>
    <xccdf:select idref="enable-telnet" selected="true"/>
    <xccdf:select idref="enable-ftp" selected="true"/>
    <xccdf:select idref="enable-r-services" selected="true"/>
    <xccdf:select idref="enable-tftp" selected="true"/>
    <xccdf:select idref="enable-imap" selected="true"/>
    <xccdf:select idref="enable-pop" selected="true"/>
    <xccdf:select idref="enable-ident" selected="true"/>
    <xccdf:select idref="disable-inetd" selected="true"/>
    <xccdf:select idref="disable-sendmail" selected="true"/>
    <xccdf:select idref="disable-gui-login" selected="true"/>
    <xccdf:select idref="disable-xfont-server" selected="true"/>
    <xccdf:select idref="disable-standard-boot-services" selected="true"/>
    <xccdf:select idref="enable-smb" selected="true"/>
    <xccdf:select idref="enable-nfs" selected="true"/>
    <xccdf:select idref="enable-nfs-client" selected="true"/>
    <xccdf:select idref="enable-nis-client" selected="true"/>
    <xccdf:select idref="enable-nis" selected="true"/>
    <xccdf:select idref="enable-portmap" selected="true"/>
    <xccdf:select idref="enable-printer" selected="true"/>
    <xccdf:select idref="enable-www" selected="true"/>
    <xccdf:select idref="enable-snmp" selected="true"/>
    <xccdf:select idref="enable-dns" selected="true"/>
    <xccdf:select idref="enable-sql" selected="true"/>
    <xccdf:select idref="enable-webmin" selected="true"/>
    <xccdf:select idref="enable-squid" selected="true"/>
    <xccdf:select idref="network-parameters" selected="true"/>
    <xccdf:select idref="network-parameters-additional" selected="true"/>
    <xccdf:select idref="logging-auth-priv" selected="true"/>
    <xccdf:select idref="logging-ftp" selected="true"/>
    <xccdf:select idref="logging-confirm-permissions" selected="true"/>
    <xccdf:select idref="logging-syslog-remote-host" selected="true"/>
    <xccdf:select idref="nodev-fstab" selected="true"/>
    <xccdf:select idref="nodev-removable-media" selected="true"/>
    <xccdf:select idref="disable-usermounted-filesystems" selected="true"/>
    <xccdf:select idref="verify-authn-authz-files" selected="true"/>
    <xccdf:select idref="world-writable-sticky" selected="true"/>
    <xccdf:select idref="world-writable-files" selected="true"/>
    <xccdf:select idref="world-suid-files" selected="true"/>
    <xccdf:select idref="find-unowned-files" selected="true"/>
    <xccdf:select idref="disable-usb" selected="true"/>
    <xccdf:select idref="remote-rhosts-pam" selected="true"/>
    <xccdf:select idref="create-ftpusers" selected="true"/>
    <xccdf:select idref="prevent-X-port-6000" selected="true"/>
    <xccdf:select idref="restrict-at-cron" selected="true"/>
    <xccdf:select idref="restrict-crontab-files" selected="true"/>
    <xccdf:select idref="xinetd-acls" selected="true"/>
    <xccdf:select idref="restrict-root-login" selected="true"/>
    <xccdf:select idref="bootloader-password" selected="true"/>
    <xccdf:select idref="auth-single-user" selected="true"/>
    <xccdf:select idref="nfs-client-priv-port" selected="true"/>
    <xccdf:select idref="syslog-accept" selected="true"/>
    <xccdf:select idref="block-system-accounts" selected="true"/>
    <xccdf:select idref="no-empty-passwords" selected="true"/>
    <xccdf:select idref="set-account-expiration" selected="true"/>
    <xccdf:select idref="legacy-authn-entires" selected="true"/>
    <xccdf:select idref="root-path-sanity" selected="true"/>
    <xccdf:select idref="home-dir-acls" selected="true"/>
    <xccdf:select idref="dot-file-acls" selected="true"/>
    <xccdf:select idref="remove-netrc-files" selected="true"/>
    <xccdf:select idref="default-umask-users" selected="true"/>
    <xccdf:select idref="disable-core-dumps" selected="true"/>
    <xccdf:select idref="limit-su-to-root" selected="true"/>
    <xccdf:select idref="banner-physical-network-access" selected="true"/>
    <xccdf:select idref="banner-gui-access" selected="true"/>
    <xccdf:select idref="banner-ftp" selected="true"/>
    <xccdf:select idref="reboot-now" selected="true"/>
    <xccdf:select idref="create-symlinks-for-dangerous-files" selected="true"/>
    <xccdf:select idref="change-sendmail-greeting" selected="true"/>
    <xccdf:select idref="enable-tcp-syn-cookies" selected="true"/>
    <xccdf:select idref="additional-bootloader-security" selected="true"/>
    <xccdf:select idref="eval-start-up-packages" selected="true"/>
    <xccdf:select idref="eval-all-packages" selected="true"/>
    <xccdf:select idref="configure-sudo" selected="true"/>
    <xccdf:select idref="lockout-after-three" selected="true"/>
    <xccdf:select idref="additional-kernel-tunings" selected="true"/>
    <xccdf:select idref="remove-compilers-assemblers" selected="true"/>
    <xccdf:select idref="verify-uid-0-accounts" selected="true"/>
    <xccdf:select idref="debian-security-announce" selected="false"/>
    <xccdf:select idref="set-bios-password" selected="false"/>
    <xccdf:select idref="configure-boot-devices" selected="false"/>
    <xccdf:select idref="package-selection" selected="false"/>
    <xccdf:select idref="apply-latest-os-patches" selected="false"/>
    <xccdf:select idref="validate-your-system-before-making-changes" selected="false"/>
    <xccdf:select idref="ensure-sources-file-sanity" selected="false"/>
  </xccdf:Profile>
  <cdf:Group id="pre-installation-and-installation-lockdown">
    <cdf:title>Pre-Installation and Installation Recommendations</cdf:title>
    <cdf:description>Pre-Installation and installation recommendations for installing Debian Linux.</cdf:description>
    <cdf:Rule id="debian-security-announce" role="unscored" selected="false" weight="0.0">
      <cdf:title>Subscribe to Debian Security Lists</cdf:title>
      <cdf:description>
        <htm:p> Debian maintains the <htm:code>debian-security-annouce</htm:code> mailing list for the purpose of providing timely information
                    on security problems discovered within the Debian packages. It is recommended that Debian administrators subscribe to this list to
                    keep abreast of security issues that may impact their environment. To subscribe to this list, visit <htm:a href="http://lists.debian.org/debian-security-announce/">http://lists.debian.org/debian-security-announce/</htm:a>.
                    Administrators should also consider subscribing to the <htm:code>debian-security</htm:code> mailing list to discuss general
                    security issues in Debian. To subscribe to this list, visit <htm:a href="http://lists.debian.org/debian-security/">http://lists.debian.org/debian-security/</htm:a>. </htm:p>
      </cdf:description>
    </cdf:Rule>
    <cdf:Rule id="set-bios-password" role="unscored" selected="false" weight="0.0">
      <cdf:title>Establish a BIOS Password</cdf:title>
      <cdf:description>
        <htm:p> Before installing Debian, your organization may choose to establish a strong BIOS password. Establishing a strong BIOS
                    password will reduce the exposure of a system compromise via physical access. However, establishing a BIOS password has the
                    potentially negative effect of limiting the ability to remotely reboot the server. Some BIOS' may be configured to require a
                    password upon modifying the BIOS but not upon boot; this is the preferred settings. </htm:p>
      </cdf:description>
    </cdf:Rule>
    <cdf:Rule id="configure-boot-devices" role="unscored" selected="false" weight="0.0">
      <cdf:title>Configure BIOS Boot Devices</cdf:title>
      <cdf:description>
        <htm:p> An additional countermeasure to slightly mitigate the threat of a physical attack is configuring the BIOS boot sequence. One
                    can accomplish this by disabling the server's ability to boot off all non-harddisk devices, including floppy, CD-ROM, and USB.
                </htm:p>
      </cdf:description>
    </cdf:Rule>
    <cdf:Rule id="partitioning-file-system" role="unscored" selected="false" weight="0.0">
      <cdf:title>Create a Robust Partition Scheme</cdf:title>
      <cdf:description>
        <htm:p> By creating a robust partition scheme an administrator can mitigate the threat of common local attacks, such as those based on
                    hardlinks and consuming available partition space. The first step in achieving this is to place user-writable directory structures
                    on a seperate partition. This includes <htm:code>/home</htm:code>, <htm:code>/tmp</htm:code>, and <htm:code>/var/tmp</htm:code>.
                    Additionally, any directory structure that may variabley consume large quantities of disk space should also be placed on seperate
                    partitions. This includes <htm:code>/var/log</htm:code> and <htm:code>/var/spool/mail</htm:code>, where applicable. Note: Debian
                    will download and store packages at <htm:code>/var/cache/apt/archives</htm:code>. <htm:p>Minimally, the following conditions
                        should must exist:</htm:p><htm:ul><htm:li>user writable directories (i.e /tmp) should have their own partitions to prevent hardlink attacks</htm:li><htm:li>/var and /opt should should not share a partition with the system root '/'</htm:li><htm:li>/var and /opt should should not share a partition with the system root '/'</htm:li></htm:ul><htm:br/><htm:p> To limit the inconveniences caused by filling up /home, consider implementing user and group quotas on the /home file
                        system. Quotas will limit how much a single user (or single group) can store on a given file system </htm:p></htm:p>
      </cdf:description>
    </cdf:Rule>
    <cdf:Rule id="select-file-system" role="unscored" selected="false" weight="0.0">
      <cdf:title>File System Considerations</cdf:title>
      <cdf:description>
        <htm:p> Depending on the role of the server, the file system may have a significant impact on performance and availability. By
                    default, the Debian installer will select a journalling file system, <htm:code>ext3</htm:code>. This file system is generally
                    recommended in most scenarios as it increases system availability and data integrity in the event of a system crash by requiring
                    less time to perform file system checks and by ensuring that file data updates are flushed to disk before any transactions commit.
                    A potential downfall to the <htm:code>ext3</htm:code> file system is a reduced ability to recover deleted files via
                        <htm:code>undelete</htm:code> or <htm:code>debugfs</htm:code>. </htm:p>
      </cdf:description>
    </cdf:Rule>
    <cdf:Rule id="set-secure-root-password" role="unscored" selected="false" weight="0.0">
      <cdf:title>Set a Secure Root Password</cdf:title>
      <cdf:description>
        <htm:p> After the base installion is complete, the Debian installer will prompt for a root password. It is essential to the integrity
                    of the system that a complex and nondeterministic root password is selected. Consult your organization's password policy
                    requirements for additional requirements or follow these guidelines: </htm:p>
        <htm:br/>
        <htm:p> * Passwords must be eight or more characters long<htm:br/> * Passwords must contain at least three character classes (upper,
                    lower, numeric, etc)<htm:br/> * Passwords must not be simple variations of dictionary words or proper names i.e Password1<htm:br/></htm:p>
      </cdf:description>
    </cdf:Rule>
    <cdf:Rule id="package-selection" role="unscored" selected="false" weight="0.0">
      <cdf:title>Package Selection</cdf:title>
      <cdf:description>
        <htm:p> The Debian installer provides templates for common roles such as Web Server, DNS Server, FTP Server, Workstation, etc. It is
                    recommended that administrators manually configure package selections to ensure that only required packages are installed.
                </htm:p>
      </cdf:description>
    </cdf:Rule>
  </cdf:Group>
  <cdf:Group id="patches-packages-and-initial-lockdown">
    <cdf:title>Patches, Packages and Initial Lockdown</cdf:title>
    <cdf:description>Recommendations for installing patches and initial lockdown steps of services.</cdf:description>
    <cdf:Rule id="apply-latest-os-patches" role="unscored" selected="false" weight="0.0">
      <cdf:title>Apply Latest OS Patches</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:strong>Action:</htm:strong>
        </htm:p>
        <htm:p> Update system per your enterprise update procedures. For non-enterprise environments, and or environments without a formal
                    update procedure use either <htm:code>aptitude</htm:code> or one of the other packages management tools offered by Debian. Debian
                    recommends the use of <htm:code>aptitude</htm:code> as it is the most sophisticated package management tool offered by this
                    distrobution. </htm:p>
        <htm:br/>
        <htm:p>
          <htm:code>aptitude update</htm:code>
          <htm:br/>
          <htm:code>aptitude dist-upgrade</htm:code>
        </htm:p>
        <htm:br/>
        <htm:p>
          <htm:strong>Discussion</htm:strong>
        </htm:p>
        <htm:p>Debian maintains the <htm:code>debian-security-annouce</htm:code> mailing list for the purpose of providing timely information
                    on security problems discovered within the Debian packages. It is recommended that Debian administrators subscribe to this list to
                    keep abreast of security issues that may impact their environment. To subscribe to this list, visit <htm:a href="http://lists.debian.org/debian-security-announce/">http://lists.debian.org/debian-security-announce/</htm:a>.
                    Administrators should also consider subscribing to the <htm:code>debian-security</htm:code> mailing list to discuss general
                    security issues in Debian. To subscribe to this list, visit <htm:a href="http://lists.debian.org/debian-security/">
                        http://lists.debian.org/debian-security/</htm:a>.</htm:p>
        <htm:br/>
        <htm:p>Developing a procedure for keeping up-to-date with vendor patches is critical for the security and reliability of the system.
                    Vendors issue operating system updates when they become aware of security vulnerabilities and other serious functionality issues,
                    but it is up to their customers to actually download and install these patches.</htm:p>
        <htm:br/>
        <htm:p>When Debian publishes an update, they include the procedures with it for updating the package. This usually entails downloading
                    the new packages (.deb) from Debian, and making them available to the individual servers. Some enterprises make these packages
                    available over an NFS share or an internal anonymous FTP/HTTP server - your enterprise may follow this practice or do something
                    different.</htm:p>
        <htm:br/>
        <htm:p>It is also important to observe that your applications work properly after patching. Though problems in patches are quite rare
                    in Debian Linux 3.1, it is generally recommended that any patch be deployed to a non-production system first for testing.</htm:p>
        <htm:br/>
        <htm:p>Finally, there is some risk to using a non-patched, non-hardened machine to download the patches, as this involves connecting a
                    system with security vulnerabilities on a network, which is not an industry best practice. Please consider these issues carefully.</htm:p>
        <htm:br/>
        <htm:p>Debian offers at least partially automated patch download and installation, via <htm:code>apt-get</htm:code> and
                        <htm:code>aptitude</htm:code>. Consider using <htm:code>apt-get</htm:code> or <htm:code>aptitude</htm:code> whenever Debian
                    announces a vulnerability. If your enterprise has several servers, consider installing an update server that can be used in place
                    of Debian's package servers - the updates will go much faster, you will use much less bandwidth from your ISP, and you will reduce
                    the load on Debian's servers. This can be accomplished via <htm:code>apt-proxy</htm:code>, <htm:code>apt-mirror</htm:code>, or
                        <htm:code>apt-move</htm:code>. It is recommended that patches be validated and functionality regressed in a lab environment
                    before applying to live/production systems.</htm:p>
        <htm:br/>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10010</ident>
    </cdf:Rule>
    <cdf:Rule id="validate-your-system-before-making-changes" role="unscored" selected="false" weight="0.0">
      <cdf:title>Validate Your System Before Making Changes</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:strong>Action:</htm:strong>
        </htm:p>
        <htm:p> Ensuring your system is functioning properly before you make a change is a prudent system administration best practice and
                    will save you hours of aggravation. Applying this Benchmark to a system that already has issues makes troubleshooting very
                    difficult and may lead you to believe the Benchmark is at fault. </htm:p>
        <htm:br/>
        <htm:p> Examine the system and application logs (<htm:code>/var/log</htm:code>). Key words to look for include, but are not limited
                    to, "error", "warning", "critical", and "alert". </htm:p>
        <htm:br/>
        <htm:p>
          <htm:strong>
            <htm:i>Resolve all issues before continuing</htm:i>
          </htm:strong>
        </htm:p>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10020</ident>
    </cdf:Rule>
      <cdf:Rule id="configure-ssh" role="full" selected="false" weight="1.0">
          <cdf:title>Configure SSH</cdf:title>
          <cdf:description>
              <htm:p>
                  <htm:strong>Action:</htm:strong>
              </htm:p>
              <htm:p>
                  <htm:code> unalias cp rm mv<htm:br/> cd /etc/ssh<htm:br/> cp ssh_config ssh_config.tmp<htm:br/> cat /etc/ssh/ssh_config.tmp | grep
                      -v Protocol | sed '$a\\nProtocol 2' &gt; /etc/ssh/ssh_config<htm:br/> rm ssh_config.tmp<htm:br/> diff ssh_config-preCIS
                      ssh_config<htm:br/> cp sshd_config sshd_config.tmp<htm:br/> awk '/^#? *Protocol/ { print "Protocol 2"; next };<htm:br/> /^#?
                      *X11Forwarding/ \<htm:br/> { print "X11Forwarding yes"; next };<htm:br/> /^#? *IgnoreRhosts/ \<htm:br/> { print "IgnoreRhosts
                      yes"; next };<htm:br/> /^#? *RhostsAuthentication/ \<htm:br/> { print " RhostsAuthentication no"; next };<htm:br/> /^#?
                      *RhostsRSAAuthentication/ \<htm:br/> { print "RhostsRSAAuthentication no"; next };<htm:br/> /^#? *HostbasedAuthentication/
                      \<htm:br/> { print "HostbasedAuthentication no"; next };<htm:br/> /^#? *PermitRootLogin/ \<htm:br/> { print "PermitRootLogin
                      no"; next };<htm:br/> /^#? *PermitEmptyPasswords/ \<htm:br/> { print "PermitEmptyPasswords no"; next };<htm:br/> /^#? *Banner/
                      \<htm:br/> { print "Banner /etc/issue.net"; next };<htm:br/> {print}' sshd_config.tmp &gt; sshd_config<htm:br/> rm
                      sshd_config.tmp<htm:br/> diff sshd_config-preCIS sshd_config<htm:br/></htm:code>
              </htm:p>
              <htm:br/>
              <htm:p>
                  <htm:strong>Discussion</htm:strong>
              </htm:p>
              <htm:p>OpenSSH is a popular free distribution of the standards-track SSH protocols which has become the standard implementation on
                  Linux distributions. For more information on OpenSSH, see <htm:a href="http://www.openssh.org">http://www.openssh.org</htm:a>.</htm:p>
              <htm:br/>
              <htm:p>The settings in this section attempt to ensure safe defaults for both the client and the server. Specifically, both the ssh
                  client and the sshd server are configured to use only SSH protocol 2, as security vulnerabilities have been found in the first SSH
                  protocol. This may cause compatibility issues at sites still using the vulnerable SSH protocol 1 these sites should endeavor to
                  configure all systems to use only SSH protocol 2.</htm:p>
              <htm:br/>
              <htm:p>Note that a banner is added in the sshd_config file – we will create this banner later and it is discussed in detail in section
                  9. If you choose not to implement a banner, you will have to remove the reference to /etc/issue from sshd_config manually. Please
                  read the section on the legal use of banners before deciding to remove it.</htm:p>
              <htm:br/>
          </cdf:description>
          <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10030</ident>
          <xccdf:complex-check operator="AND">
              <xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content>
                      <ecl:shell-command check="all" comment="Set SSH protocol to '2' for SSH client" success="pass">
                          <ecl:command>egrep '^Protocol[[:space:]]+2[[:space:]]*$' /etc/ssh/ssh_config</ecl:command>
                          <ecl:line-selection op="pm" value="^.*$"/>
                      </ecl:shell-command>
                  </xccdf:check-content>
              </xccdf:check>
              <xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content>
                      <ecl:shell-command check="all" comment="Set SSH protocol to '2' for SSHD server" success="pass">
                          <ecl:command>egrep '^Protocol[[:space:]]+2[[:space:]]*$' /etc/ssh/sshd_config</ecl:command>
                          <ecl:line-selection op="pm" value="^.*$"/>
                      </ecl:shell-command>
                  </xccdf:check-content>
              </xccdf:check>
              <xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content>
                      <ecl:shell-command check="all" comment="Set X11Forwarding to 'no' for SSHD server" success="pass">
                          <ecl:command>egrep '^X11Forwarding[[:space:]]+yes[[:space:]]*$' /etc/ssh/sshd_config</ecl:command>
                          <ecl:line-selection op="pm" value="^.*$"/>
                      </ecl:shell-command>
                  </xccdf:check-content>
              </xccdf:check>
              <xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content>
                      <ecl:shell-command check="all" comment="Set IgnoreRhosts to 'yes' for SSHD server" success="pass">
                          <ecl:command>egrep '^IgnoreRhosts[[:space:]]+yes[[:space:]]*$' /etc/ssh/sshd_config</ecl:command>
                          <ecl:line-selection op="pm" value="^.*$"/>
                      </ecl:shell-command>
                  </xccdf:check-content>
              </xccdf:check>
              <xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content>
                      <ecl:shell-command check="all" comment="Set HostbasedAuthentication to 'no' for SSHD server" success="pass">
                          <ecl:command>egrep '^HostbasedAuthentication[[:space:]]+no[[:space:]]*$' /etc/ssh/sshd_config</ecl:command>
                          <ecl:line-selection op="pm" value="^.*$"/>
                      </ecl:shell-command>
                  </xccdf:check-content>
              </xccdf:check>
              <xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content>
                      <ecl:shell-command check="all" comment="Set RhostsAuthentication to 'no' for SSHD server" success="pass">
                          <ecl:command>egrep '^RhostsAuthentication[[:space:]]+no[[:space:]]*$' /etc/ssh/sshd_config</ecl:command>
                          <ecl:line-selection op="pm" value="^.*$"/>
                      </ecl:shell-command>
                  </xccdf:check-content>
              </xccdf:check>
              <xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content>
                      <ecl:shell-command check="all" comment="Set RhostsRSAAuthentication to 'no' for SSHD server" success="pass">
                          <ecl:command>egrep '^RhostsRSAAuthentication[[:space:]]+no[[:space:]]*$' /etc/ssh/sshd_config</ecl:command>
                          <ecl:line-selection op="pm" value="^.*$"/>
                      </ecl:shell-command>
                  </xccdf:check-content>
              </xccdf:check>
              <xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content>
                      <ecl:shell-command check="all" comment="Set PermitRootLogin to 'no' for SSHD server" success="pass">
                          <ecl:command>egrep '^PermitRootLogin[[:space:]]+no[[:space:]]*$' /etc/ssh/sshd_config</ecl:command>
                          <ecl:line-selection op="pm" value="^.*$"/>
                      </ecl:shell-command>
                  </xccdf:check-content>
              </xccdf:check>
              <xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content>
                      <ecl:shell-command check="all" comment="Set PermitEmptyPasswords to 'no' for SSHD server" success="pass">
                          <ecl:command>egrep '^PermitEmptyPasswords[[:space:]]+no[[:space:]]*$' /etc/ssh/sshd_config</ecl:command>
                          <ecl:line-selection op="pm" value="^.*$"/>
                      </ecl:shell-command>
                  </xccdf:check-content>
              </xccdf:check>
              <xccdf:check system="http://cisecurity.org/check">
                  <!--/etc/ssh/sshd_config Banner /etc/issue.net-->
                  <xccdf:check-content>
                      <ecl:shell-command check="all" comment="command test «egrep '^Banner[[:space:]]+/etc/issue\.net[[:space:]]*$' /etc/ssh/sshd_config»" success="pass">
                          <ecl:command>egrep '^Banner[[:space:]]+/etc/issue\.net[[:space:]]*$' /etc/ssh/sshd_config</ecl:command>
                          <ecl:line-selection op="pm" value="^.*$"/>
                      </ecl:shell-command>
                  </xccdf:check-content>
              </xccdf:check>
          </xccdf:complex-check>
      </cdf:Rule>
    <cdf:Rule id="enable-system-accounting" role="full" selected="false" weight="1.0">
      <cdf:title>Enable System Accounting</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:strong>Action:</htm:strong>
        </htm:p>
        <htm:p>
          <htm:code> aptitude install sysstat<htm:br/> cd /etc/default<htm:br/> cp sysstat sysstat.tmp<htm:br/> awk '/^ENABLED/ { print
                        "ENABLED=true"; next }; { print }' sysstat.tmp &gt; sysstat<htm:br/> rm sysstat.tmp<htm:br/></htm:code>
        </htm:p>
        <htm:br/>
        <htm:p>
          <htm:strong>Discussion</htm:strong>
        </htm:p>
        <htm:p>System accounting gathers baseline system data (CPU utilization, disk I/O, etc.) every 10 minutes. The data may be accessed
                    with the <htm:code>sar</htm:code> command, or by reviewing the nightly report files named
                    <htm:code>/var/log/sysstat/sar*</htm:code>. Once a normal baseline for the system has been established, unauthorized activity
                    (password crackers and other CPU-intensive jobs,and activity outside of normal usage hours) may be detected due to departures from
                    the normal system performance curve. Note that this data is only archived for one week before being automatically removed by the
                    regular nightly cron job. Administrators may wish to archive the <htm:code>/var/log/sysstat/</htm:code> directory on a regular
                    basis to preserve this data for longer periods.</htm:p>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10820</ident>
      <xccdf:check system="http://cisecurity.org/check">
        <!--Package «sysstat» is installed-->
        <xccdf:check-content>
          <ecl:shell-command check="all" comment="Package «sysstat» is installed">
            <ecl:command>egrep '^[[:space:]]*ENABLED[[:space:]]*=[[:space:]]*\"true\"' /etc/default/sysstat</ecl:command>
            <ecl:line-selection op="pm" value=".+"/>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </cdf:Rule>
    <cdf:Rule id="install-and-run-bastille" role="unscored" selected="false" weight="0.0">
      <cdf:title>Install and Run Bastille</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:strong>Action:</htm:strong>
        </htm:p>
        <htm:p>
          <htm:code> aptitude install bastille<htm:br/> cd /etc/Bastille<htm:br/> cp /path/to/bastille.CIS.conf config<htm:br/> bastille
                        -b<htm:br/> init 6<htm:br/></htm:code>
        </htm:p>
        <htm:br/>
        <htm:p>
          <htm:strong>Discussion</htm:strong>
        </htm:p>
        <htm:p>Bastille is a series of perl scripts that ask you questions and hardens your machine based on the answers. The Benchmark will
                    then walk you through opening up your system for the services that have a legitimate business need.</htm:p>
        <htm:br/>
        <htm:p>In this benchmark, it was decided it is better to direct you to use Bastille rather than incorporate their procedures into this
                    document. This provides fair credit to an excellent resource, and reduces the maintenance effort involved to keep this Benchmark
                    up to date. Appendix C discusses the rationale behind all of the answers used in the configuration file.</htm:p>
        <htm:br/>
        <htm:p>After Bastille is installed, copy the bastille.CIS.conf file provided in the archive containing the PDF version of this
                    document (and in Appendix C) to /etc/Bastille/config.</htm:p>
        <htm:br/>
        <htm:br/>
        <htm:p>
          <htm:strong>Note Regarding SUID Programs:</htm:strong>
        </htm:p>
        <htm:p>Bastille will remove the SUID bit from several utilities like <htm:code>ping</htm:code>, <htm:code>mount</htm:code> and
                        <htm:code>traceroute</htm:code>. If your enterprise has a business need to allow unprivileged users access to these commands,
                    then you will have to restore the SUID bit (<htm:code>chmod 4755</htm:code>) after running Bastille. A complete list of files
                    changed is in Appendix B. Before running Bastille, please review Appendix C and understand the changes that it will make. The
                    following commands will install Bastille, copy the CIS configuration file to the appropriate location, execute Bastille, which
                    will commit changes to your system, and finally reboot. Rebooting is required as many services are disabled by Bastille and the
                    remainder of the Benchmark is based on this environment.</htm:p>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10040</ident>
    </cdf:Rule>
    <cdf:Rule id="ensure-sources-file-sanity" role="unscored" selected="false" weight="0.0">
      <cdf:title>Ensure sources.list Sanity</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:strong>Action:</htm:strong>
        </htm:p>
        <htm:p>
          <htm:code> cat /etc/apt/sources.list<htm:br/></htm:code>
        </htm:p>
        <htm:br/>
        <htm:p>
          <htm:strong>Discussion</htm:strong>
        </htm:p>
        <htm:p>Debian manages software packages via the Advanced Package Tool (APT). An administrator may interact with the APT library via
                    many utilities including <htm:code>dselect(8)</htm:code>, <htm:code>aptitude(8)</htm:code>, and <htm:code>apt-get(8)</htm:code>.
                    All of which obtain instruction on where to locate packages from <htm:code>/etc/apt/sources.list</htm:code>. Ensuring that this
                    file contains sane values is essential. Administrators should validate that each entry in this file points to a trusted and secure
                    location. Additionally, to obtain latest security updates, this file should contain an entry akin to:<htm:p><htm:br/><htm:code>deb http://security.debian.org/ stable/updates main contrib non-free</htm:code></htm:p><htm:br/>For further information on the <htm:code>/etc/apt/sources.list</htm:code> file, run <htm:code>man sources.list</htm:code>
                    from the shell.</htm:p>
      </cdf:description>
    </cdf:Rule>
  </cdf:Group>
  <cdf:Group id="minimize-inetd-network-services-2" selected="true">
    <cdf:title>Minimize inetd network services</cdf:title>
    <cdf:description>
      <htm:p>You may need to unalias <htm:code>mv</htm:code> and <htm:code>cp</htm:code> commands as some commands to avoid being prompted
                numerous times while configuring this section.</htm:p>
      <htm:br/>
      <htm:p>
        <htm:strong>Action:</htm:strong>
      </htm:p>
      <htm:br/>
      <htm:p>
        <htm:code>unalias mv cp</htm:code>
      </htm:p>
    </cdf:description>
    <cdf:Rule id="disable-standard-services" role="full" selected="false" weight="1.0">
      <cdf:title>Disable Standard Services</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:strong>
            <htm:i>Note: Bastille configuration may not cover all these services</htm:i>
          </htm:strong>
        </htm:p>
        <htm:br/>
        <htm:p>
          <htm:strong>Action:</htm:strong>
        </htm:p>
        <htm:p>
          <htm:code> cp /etc/inetd.conf /etc/inetd.conf.tmp<htm:br/> cat inetd.conf.tmp | sed 's/^\([[:alpha:]]\)/#\1/' &gt;
                        inetd.conf<htm:br/> rm /etc/inetd.conf.tmp<htm:br/></htm:code>
        </htm:p>
        <htm:br/>
        <htm:p>
          <htm:strong>Discussion</htm:strong>
        </htm:p>
        <htm:p>Debian utilizes <htm:code>inetd</htm:code> as the default network superserver.</htm:p>
        <htm:br/>
        <htm:p>Debian, by default, has only <htm:code>ident</htm:code> enabled within <htm:code>inetd.conf</htm:code>. However, servers may
                    have had various inetd-aware services installed. The actions in this group will disable all standard services commonly enabled in
                    a <htm:code>inetd</htm:code> configuration.</htm:p>
        <htm:br/>
        <htm:p>The rest of the actions in this section give the administrator the option of re-enabling certain services. Rather than
                    disabling and then re-enabling these services, experienced administrators may wish to simply disable only those services that they
                    know are unnecessary for their systems. If there is any doubt, it is better to disable everything, then re-enable the necessary
                    services based on the function of the server.</htm:p>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10060</ident>
      <xccdf:check system="http://cisecurity.org/check">
        <xccdf:check-content>
          <ecl:file-content check="none exist" comment="All services are disabled">
            <ecl:path>/etc/inetd.conf</ecl:path>
            <ecl:line-selection op="pm" value="^\w"/>
          </ecl:file-content>
        </xccdf:check-content>
      </xccdf:check>
    </cdf:Rule>
    <cdf:Rule id="tcp-wrappers-and-firewall" role="full" selected="false" weight="1.0">
      <cdf:title>Configure TCP Wrappers and Firewall to Limit Access</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:strong>Question:</htm:strong>
          <htm:br/> Is there a reson to allow unlimited network access to this server? <htm:br/> If the
                    answer to this question is no, then perform the following action below.<htm:br/></htm:p>
        <htm:br/>
        <htm:p>
          <htm:strong> Note: Bastille configuration set to 'No'<htm:br/> Note: Do note deny access to your system without allows access.
                        Complete both parts of this section. </htm:strong>
        </htm:p>
        <htm:br/>
        <htm:p>
          <htm:u>TCP Wrappers</htm:u>
        </htm:p>
        <htm:p>By limiting access to the server, you reduce your exposure to threats from attackers on remote systems. For Internet-connected
                    servers that provide service to the whole Internet, limiting access may not make sense. Intranet servers, limited-access servers,
                    and workstations should limit access to only authorized networks. Many daemons (SSH for example) are compiled with TCP Wrapper
                    support, so you can use <htm:code>/etc/hosts.allow</htm:code> and <htm:code>/etc/hosts.deny</htm:code> to limit SSH access to your
                    systems. It is important to note that TCP wrappers looks at <htm:code>hosts.allow</htm:code> first, then
                    <htm:code>hosts.deny</htm:code>, and controls access based on the first match. If you omit entries in
                    <htm:code>hosts.allow</htm:code> and deny access to ALL in <htm:code>hosts.deny</htm:code>, you will block network access to all
                    network clients.</htm:p>
        <htm:br/>
        <htm:p>Deny access to this server from all networks:</htm:p>
        <htm:br/>
        <htm:code> echo "ALL: ALL" &gt; /etc/hosts.deny <htm:br/> diff /etc/hosts.deny-preCIS /etc/hosts.deny<htm:br/></htm:code>
        <htm:br/>
        <htm:p>To allow access from the authorized networks, refer to the <htm:code>hosts.allow man</htm:code> page and enter the service and
                    the network in <htm:code>/etc/hosts.allow</htm:code>. At a minimum, you need to allow localhost traffic. The following script will
                    create a sample <htm:code>hosts.allow</htm:code> file that will allow access to the locally connected networks:</htm:p>
        <htm:br/>
        <htm:code> printf "ALL: localhost" &gt; /etc/hosts.allow <htm:br/> for I in `ifconfig | grep "inet addr" | cut -f2 -d: | cut -f1-3
                    -d"." | grep -v ^127 | sort -n`<htm:br/> do printf ", $I." &gt;&gt; /etc/hosts.allow<htm:br/> done <htm:br/> echo
                    &gt;&gt; /etc/hosts.allow <htm:br/> diff /etc/hosts.allow-preCIS /etc/hosts.allow<htm:br/></htm:code>
        <htm:br/>
        <htm:strong>Note: </htm:strong>The above script intentionally ignores IPv6 networks<htm:br/><htm:strong>Note: </htm:strong>The above script assumes a netmark of 255.255.255.0. if yours is different, you will have to adjust
                    <htm:code>/etc/hosts.allow</htm:code> for your environment.<htm:br/><htm:br/><htm:p> You should review the resulting <htm:code>/etc/hosts.allow</htm:code> to ensure it meets your needs. Test your configuration
                    now by logging in remotely. </htm:p><htm:br/><htm:p><htm:u>Firewall</htm:u><htm:br/> See discussion.<htm:br/></htm:p><htm:br/><htm:p><htm:strong>Discussion</htm:strong></htm:p><htm:p>TCP Wrappers and Host-Based Firewalls are presented together as they are similar and complementary in functionality.</htm:p><htm:br/><htm:u>TCP Wrappers</htm:u><htm:br/><htm:p>By limiting access to the server, you reduce your exposure to threats from attackers on remote systems. For Internet-connected
                    servers that provide service to the whole Internet, limiting access may not make sense. Intranet servers, limited-access servers,
                    and workstations should limit access to only authorized networks.</htm:p><htm:br/><htm:p>Many daemons (SSH for example) are compiled with TCP Wrapper support, so you can use <htm:code>/etc/hosts.allow</htm:code> and
                        <htm:code>/etc/hosts.deny</htm:code> to limit SSH access to your systems. The <htm:code>portmap</htm:code> daemon also uses
                    TCP wrappers and there is a specific note to this effect in the default TCP wrappers config files.</htm:p><htm:p>It is important to note that TCP wrappers looks at <htm:code>hosts.allow</htm:code> first, then hosts.deny, and controls access
                    based on the first match. If you omit entries in <htm:code>hosts.allow</htm:code> and deny access to ALL in hosts.deny, you will
                    block network access to all network clients.</htm:p><htm:i><htm:b>Host-Based Firewalls</htm:b></htm:i><htm:br/><htm:br/><htm:p>Host-based firewalls (also known as personal firewalls) have the following benefits:</htm:p><htm:blockquote>Protection from compromised systems on the local network;</htm:blockquote><htm:blockquote>Defense in depth where an attacker must overcome both the border firewall and the host-based firewall to attack a
                    system;</htm:blockquote><htm:blockquote>Extremely fine tuned control over what systems may or may not access the system.</htm:blockquote><htm:p>The Center for Internet Security recommends installing a host-based firewall on workstations, and suggests end-users consider
                    installing them on servers as well.</htm:p><htm:br/><htm:p>Workstations are defined as Linux systems that offer no services to any external network or system. For example, a workstation
                    that is running Apache and serving up content to the local network segment is not a workstation.</htm:p><htm:br/><htm:p>Host-based firewalls are available in <htm:code>iptables</htm:code> (installed by default) or via commercial offerings. The
                    Center for Internet Security makes no recommendations for a vendor or even a specific firewall configuration as firewalls are very
                    complex systems. Entire books have been written on iptables and are outside the scope of this benchmark. The default Bastille
                    Linux iptables configuration is suitable for workstations and are good starting points for servers. The Center for Internet
                    Security does recommend using a tool (graphical- or text-based) to configure the firewall as manual rule configuration is
                    extremely error-prone and you may end up with a false sense of security and have less secure system.</htm:p><htm:br/><htm:p>See the following iptables resources:</htm:p><htm:br/><htm:p><htm:strong><htm:i>Web-Based</htm:i></htm:strong></htm:p><htm:br/><htm:p>Linux Firewall Design Tool -<htm:a href="http://linux-firewall-tools.com/linux/firewall/index.html">http://linux-firewall-tools.com/linux/firewall/index.html</htm:a></htm:p><htm:br/><htm:p><htm:strong><htm:i>Package-Based</htm:i></htm:strong></htm:p><htm:br/><htm:p>FireHOL -<htm:a href="http://firehol.sourceforge.net/">http://firehol.sourceforge.net/</htm:a></htm:p><htm:br/><htm:p>Firewall Builder -<htm:a href="http://sourceforge.net/projects/fwbuilder/">http://sourceforge.net/projects/fwbuilder/</htm:a></htm:p><htm:br/><htm:p>GuardDog -<htm:a href="http://www.simonzone.com/software/guarddog/">http://www.simonzone.com/software/guarddog/</htm:a></htm:p><htm:br/><htm:p><htm:i>Note: Inclusion of a tool on this list is not an endorsement or recommendation by the Center for Internet Security.</htm:i></htm:p><htm:br/></cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">11250</ident>
      <xccdf:complex-check operator="AND">
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/hosts.deny ALL:ALL-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="command test «egrep '^ALL[[:space:]]*:[[:space:]]*ALL$' /etc/hosts.deny»" success="pass">
              <ecl:command>egrep '^ALL[[:space:]]*:[[:space:]]*ALL$' /etc/hosts.deny</ecl:command>
              <ecl:line-selection op="pm" value="^.*$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/hosts.allow ALL: localhost-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="command test «egrep '^ALL[[:space:]]*:[[:space:]]*localhost.*$' /etc/hosts.allow»" success="pass">
              <ecl:command>egrep '^ALL[[:space:]]*:[[:space:]]*localhost.*$' /etc/hosts.allow</ecl:command>
              <ecl:line-selection op="pm" value="^.*$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </cdf:Rule>
    <cdf:Rule id="enable-telnet" role="full" selected="false" weight="1.0">
      <cdf:title>Only Enable telnet If Absolutely Necessary</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:strong>Question:</htm:strong>
        </htm:p>
        <htm:p> Is there a mission-critical reason that requires users to access this system via telnet, rather than the more secure SSH
                    protocol?<htm:br/> If the answer to this question is yes, proceed with the actions below. </htm:p>
        <htm:br/>
        <htm:p>
          <htm:strong>Action:</htm:strong>
        </htm:p>
        <htm:code> cd /etc<htm:br/> cp inetd.conf inetd.conf.tmp<htm:br/> cat inetd.conf.tmp | sed 's/^#telnet/telnet/' &gt;
                    inetd.conf<htm:br/> rm inetd.conf.tmp<htm:br/></htm:code>
        <htm:br/>
        <htm:strong>Discussion:</htm:strong>
        <htm:br/>
        <htm:code>telnet</htm:code> uses an unencrypted network protocol, which means data from the login session (such as passwords and all
                other data transmitted during the session) can be stolen by eavesdroppers on the network, and also that the session can be hijacked by
                outsiders to gain access to the remote system. The freely-available SSH utilities that ship with Debian Linux (see <htm:a href="http://www.openssh.com/">http://www.openssh.com/</htm:a>) provide encrypted network logins and should be used instead.<htm:br/><htm:br/><htm:p>To aid in the migration to SSH, there is a freely available SSH client for Windows called putty, which is available from Simon
                    Tatham (see <htm:a href="http://www.chiark.greenend.org.uk/~sgtatham/putty/">http://www.chiark.greenend.org.uk/~sgtatham/putty/</htm:a>). There are numerous commercially supported SSH clients as well –
                    check to see if your enterprise already has an enterprise SSH client.</htm:p><htm:br/><htm:p>Some enterprises are using telnet over SSL, however, the simpler and more standard solution is to use SSH. Configuring telnet
                    over SSL is beyond the scope of a Level 1 Benchmark and will not be addressed here.</htm:p><htm:br/><htm:p>Note: <htm:code>telnet</htm:code> is not enabled by default on Debian.</htm:p><htm:br/></cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10290</ident>
      <!--Service «telnet» does not exist or is disabled-->
      <xccdf:check system="http://cisecurity.org/check">
        <!--Service «telnet» does not exist-->
        <xccdf:check-content>
          <ecl:file-content check="none exist" comment="Service «telnet» does not exist">
            <ecl:path>/etc/inetd.conf</ecl:path>
            <ecl:line-selection op="pm" value="^telnet"/>
          </ecl:file-content>
        </xccdf:check-content>
      </xccdf:check>
    </cdf:Rule>
    <cdf:Rule id="enable-ftp" role="full" selected="false" weight="1.0">
      <cdf:title>Only Enable FTP If Absolutely Necessary</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:strong>Question:</htm:strong>
        </htm:p>
        <htm:p> Is this machine an FTP server, or is there a mission-critical reason why data must be transferred to and from this system via
                    an ftp service, rather than <htm:code>sftp</htm:code> or <htm:code>scp</htm:code>?<htm:br/> If the answer to this question is yes,
                    proceed with the action that corresponds with the FTP services you have installed. </htm:p>
        <htm:br/>
        <htm:p>
          <htm:strong>Action:</htm:strong>
        </htm:p>
        <htm:code> update-rc.d vsftpd defaults<htm:br/> update-rc.d wu-ftpd dafaults<htm:br/> cd /etc/ <htm:br/> cp inetd.conf inetd.conf.tmp
                    <htm:br/> cat inetd.conf.tmp | sed 's/^#ftp/ftp/' &gt; inetd.conf<htm:br/> rm inetd.conf.tmp<htm:br/></htm:code>
        <htm:br/>
        <htm:br/>
        <htm:strong>Discussion:</htm:strong>
        <htm:br/>
        <htm:p>Like <htm:cdoe>telnet</htm:cdoe>, the FTP protocol is unencrypted, which means passwords and other data transmitted during the
                    session can be captured by sniffing the network, and that the FTP session itself can be hijacked by an external attacker.
                    Anonymous FTP servers are common are for providing fast and easy downloading of publicly available files, however anonymous access
                    should be configured to not allow uploading of files to the ftp server. FTP servers are also commonly used for Web Servers, but
                    should be replaced by SFTP if possible. FTP / SFTP access should be chrooted to include the document root of the web site or the
                    portion of the web site that the individual is responsible for. Of course, access to the system configuration files and other web
                    files is to be excluded from the chrooted environment. This is especially important if there are multiple web sites.</htm:p>
        <htm:br/>
        <htm:p>SSH provides two different encrypted file transfer mechanisms – scp and sftp – which should be used instead. Even if FTP is
                    required, consider requiring non-anonymous users on the system to transfer files via SSH-based protocols. </htm:p>
        <htm:br/>
        <htm:p>To aid in the migration away from FTP, there are a number of freely available scp and sftp client for Windows, such as
                    FileZilla from <a href="http://sourceforge.net/projects/filezilla">http://sourceforge.net/projects/filezilla</a> and WinSCP
                    available from <a href="http://winscp.sourceforge.net/eng/index.php">http://winscp.sourceforge.net/eng/index.php</a> which
                    provides for a Graphical interface to putty, and pscp, which is a part of the previously mentioned putty package.</htm:p>
        <htm:br/>
        <htm:p>Note: Any directory writable by an anonymous FTP server should have its own partition. This helps prevent an FTP server from
                    filling a hard drive used by other services.</htm:p>
        <htm:p>Note: Debian does not install a default FTP daemon.</htm:p>
        <htm:br/>
        <htm:p>Some enterprises are using FTP over SSL, however, the simpler and more standard solution is to use SSH. Configuring FTP over
                    SSL is beyond the scope of a Level 1 Benchmark and will not be addressed here.</htm:p>
        <htm:br/>
        <htm:p>Note: <htm:code>ftp</htm:code> services are not enabled by default on Debian.</htm:p>
        <htm:br/>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10300</ident>
      <!--Service «ftpd» is not enabled-->
      <xccdf:check system="http://cisecurity.org/check">
        <xccdf:check-content>
          <ecl:file-content check="none exist" comment="Service «ftpd» is not enabled">
            <ecl:path>/etc/inetd.conf</ecl:path>
            <ecl:line-selection op="pm" value="^ftp"/>
          </ecl:file-content>
        </xccdf:check-content>
      </xccdf:check>
    </cdf:Rule>
    <cdf:Rule id="enable-r-services" role="full" selected="false" weight="1.0">
      <cdf:title>Only Enable rlogin/rsh/rcp If Absolutely Necessary</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:strong>Question:</htm:strong>
        </htm:p>
        <htm:p> Is there a mission-critical reason why rlogin/rsh/rcp must be used instead of the more secure ssh/scp?<htm:br/> If the answer
                    to this question is yes, proceed with the actions below.<htm:br/></htm:p>
        <htm:br/>
        <htm:p>
          <htm:strong>Action:</htm:strong>
        </htm:p>
        <htm:code> cd /etc<htm:br/> cp inetd.conf inetd.conf.tmp<htm:br/> cat inetd.conf.tmp | sed 's/^#l\(shell\|login\)/\1/' &gt;
                    inetd.conf<htm:br/> rm inetd.conf.tmp<htm:br/></htm:code>
        <htm:br/>
        <htm:strong>Discussion:</htm:strong>
        <htm:br/>
        <htm:p>The r-commands suffer from the same hijacking and sniffing issues as telnet and ftp, and in addition have a number of
                    well-known weaknesses in their authentication scheme. SSH was designed to be a drop-in replacement for these protocols. Given the
                    wide availability of free SSH implementations, it seems unlikely that there is ever a case where these tools cannot be replaced
                    with SSH (again, see <a href="http://www.openssh.com/">http://www.openssh.com/</a>). If these protocols are left enabled, please
                    also see section X.X for additional security-related configuration settings.</htm:p>
        <htm:br/>
        <htm:p>Note: <htm:code>r-services</htm:code> are not enabled by default on Debian.</htm:p>
        <htm:br/>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10310</ident>
      <!--Service «shell|login» is not enabled-->
      <xccdf:check system="http://cisecurity.org/check">
        <!--Service «shell» does not exist-->
        <xccdf:check-content>
          <ecl:file-content check="none exist" comment="Service «shell|login» is not enabled-">
            <ecl:path>/etc/inetd.conf</ecl:path>
            <ecl:line-selection op="pm" value="^[shell|login]"/>
          </ecl:file-content>
        </xccdf:check-content>
      </xccdf:check>
    </cdf:Rule>
    <cdf:Rule id="enable-tftp" role="full" selected="false" weight="1.0">
      <cdf:title>Only Enable TFTP If Absolutely Necessary</cdf:title>
      <cdf:description>
        <htm:strong>Question:</htm:strong>
        <htm:p> Is this system a boot server or is there some other mission-critical reason why data must be transferred to and from this
                    system via TFTP?<htm:br/></htm:p>
        <htm:br/>
        <htm:p>
          <htm:strong>Action:</htm:strong>
        </htm:p>
        <htm:code> cd /etc<htm:br/> cp inetd.conf inetd.conf.tmp<htm:br/> cat inetd.conf.tmp | sed 's/^#tftp/tftp/' &gt;
                    inetd.conf<htm:br/> rm inetd.conf.tmp<htm:br/></htm:code>
        <htm:br/>
        <htm:strong>Discussion:</htm:strong>
        <htm:br/>
        <htm:p>TFTP is typically used for network booting of diskless workstations, X-terminals, and other similar devices. Routers and other
                    network devices may copy configuration data to remote systems via TFTP for backup. However, unless this system is needed in one of
                    these roles, it is best to leave the TFTP service disabled.</htm:p>
        <htm:br/>
        <htm:p>Note: The tftp-server software is not installed by default on Debian Linux.</htm:p>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10380</ident>
      <!--Service «tftpd» is not enabled-->
      <xccdf:check system="http://cisecurity.org/check">
        <xccdf:check-content>
          <ecl:file-content check="none exist" comment="Service «tftpd» is not enabled">
            <ecl:path>/etc/inetd.conf</ecl:path>
            <ecl:line-selection op="pm" value="^tftp"/>
          </ecl:file-content>
        </xccdf:check-content>
      </xccdf:check>
    </cdf:Rule>
    <cdf:Rule id="enable-imap" role="full" selected="false" weight="1.0">
      <cdf:title>Only Enable IMAP If Absolutely Necessary</cdf:title>
      <cdf:description>
        <htm:strong>Question:</htm:strong>
        <htm:p> Is this machine a mail server with a mission-critical reason to use imap to serve mail to remote mail
                    clients?<htm:br/><htm:br/> If the answer to this question is yes, proceed with the actions below. </htm:p>
        <htm:br/>
        <htm:p>
          <htm:strong>Action:</htm:strong>
        </htm:p>
        <htm:code> cd /etc<htm:br/> cp inetd.conf inetd.conf.tmp<htm:br/> cat inetd.conf.tmp | sed 's/^#imaps/imaps/' &gt;
                    inetd.conf<htm:br/> rm inetd.conf.tmp<htm:br/></htm:code>
        <htm:br/>
        <htm:strong>Discussion:</htm:strong>
        <htm:br/>
        <htm:p>Remote mail clients (like Eudora, Netscape Mail and Kmail) may retrieve mail from remote mail servers using IMAP, the Internet
                    Message Access Protocol, or POP, the Post Office Protocol. If this system is a mail server that must offer this protocol,
                        <htm:code>uw-imap-ssl</htm:code> may be activated. <htm:code>uw-imap-ssl</htm:code> activates an SSL-encrypted, and thus much
                    safer, version of IMAP. Standard IMAP is not encrypted and allows an attacker to eavesdrop on e-mails being transferred or to take
                    over the connection. It may, based on which authentication method is used, allow an attacker to steal user passwords as well.
                    IMAP-SSL suffers none of these problems.</htm:p>
        <htm:br/>
        <htm:p>Note: The <htm:code>uw-imapd-ssl</htm:code> package is not installed by default on Debian Linux.</htm:p>
        <htm:br/>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10390</ident>
      <!--Service «imaps» is not enabled-->
      <xccdf:check system="http://cisecurity.org/check">
        <xccdf:check-content>
          <ecl:file-content check="none exist" comment="Service «imaps» is not enabled">
            <ecl:path>/etc/inetd.conf</ecl:path>
            <ecl:line-selection op="pm" value="^imaps"/>
          </ecl:file-content>
        </xccdf:check-content>
      </xccdf:check>
    </cdf:Rule>
    <cdf:Rule id="enable-pop" role="full" selected="false" weight="1.0">
      <cdf:title>Only Enable POP If Absolutely Necessary</cdf:title>
      <cdf:description>
        <htm:strong>Question:</htm:strong>
        <htm:p> Is this machine a mail server with a mission-critical reason to use pop to serve mail to remote mail
                    clients?<htm:br/><htm:br/> If the answer to this question is yes, proceed with the actions below. </htm:p>
        <htm:br/>
        <htm:p>
          <htm:strong>Action:</htm:strong>
        </htm:p>
        <htm:code> update-rc.d popa3d defaults </htm:code>
        <htm:br/>
        <htm:br/>
        <htm:strong>Discussion:</htm:strong>
        <htm:br/>
        <htm:p>Remote mail clients (like Eudora, Netscape Mail and Kmail) may retrieve mail from remote mail servers using IMAP, the Internet
                    Message Access Protocol, or POP, the Post Office Protocol. If this system is a mail server that must offer the POP protocol,
                        <htm:code>popa3d</htm:code> may be activated. Note: The <htm:code>popa3d</htm:code> package is not installed by default on
                    Debian Linux. You will have to install it if you need to use it. After installing it, perform the following actions to ensure it's
                    enabled.</htm:p>
        <htm:br/>
        <htm:p>Note: The <htm:code>popa3d</htm:code> package is not installed by default on Debian Linux.</htm:p>
        <htm:br/>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10400</ident>
      <xccdf:check system="http://cisecurity.org/check">
        <xccdf:check-content>
          <ecl:shell-command check="none exist" comment="command test «find /etc/rc[2345].d -name 'S??popa3d' -ls">
            <ecl:command>find /etc/rc[2345].d -name 'S??popa3d' -ls</ecl:command>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </cdf:Rule>
    <cdf:Rule id="enable-ident" role="full" selected="false" weight="1.0">
      <cdf:title>Only Enable Ident If Absolutely Necessary</cdf:title>
      <cdf:description>
        <htm:div>Only Enable Ident If Absolutely Necessary</htm:div>
      </cdf:description>
      <cdf:question>Does this machine interact with a service that requires Ident? If the answer to this question is yes, proceed with the
                actions below</cdf:question>
      <cdf:rationale>Some services, like SMTP, may be configured to perform an Ident request prior to further processing of the request. If this
                system participates with a service that requires Ident responses, pidentd" may be installed. </cdf:rationale>
      <cdf:fix>cd /etc↵ cp inetd.conf inetd.conf.tmp↵ cat inetd.conf.tmp | sed 's/^#ident/ident/' &gt;inetd.conf↵ rm inetd.conf.tmp </cdf:fix>
      <xccdf:check system="http://cisecurity.org/check">
        <xccdf:check-content>
          <ecl:file-content check="none exist" comment="Service «ident» is not enabled">
            <ecl:path>/etc/inetd.conf</ecl:path>
            <ecl:line-selection op="pm" value="^ident"/>
          </ecl:file-content>
        </xccdf:check-content>
      </xccdf:check>
    </cdf:Rule>
  </cdf:Group>
  <cdf:Group id="minimize-boot-services" selected="true">
    <cdf:title>Minimize boot services</cdf:title>
    <cdf:description>Recommendations to minimize the boot services on Debian.</cdf:description>
    <cdf:Rule id="disable-inetd" role="full" selected="false" weight="1.0">
      <cdf:title>Disable inetd, If Possible</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:strong>Action:</htm:strong>
        </htm:p>
        <htm:p>
          <htm:code> if [ `egrep -v '^(#|[[:space:]]|$)' /etc/inetd.conf | wc -l` -eq 0 ]<htm:br/> then echo "Disabling inetd"; update-rc.d
                        -f inetd remove;<htm:br/> fi </htm:code>
        </htm:p>
        <htm:p>If the actions in Section X of this benchmark resulted in no services being enabled in the inet super daemon
                        <htm:code>/etc/inetd.conf</htm:code>, then the <htm:code>inetd</htm:code> service may be disabled completely on this system.</htm:p>
        <htm:br/>
        <htm:p>Experienced SysAdmins will note that the inet super daemon is usually restarted after a change to its configuration file. This
                    is not necessary in this case as the system will be rebooted and the change will take effect at that time.</htm:p>
        <htm:br/>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10610</ident>
      <xccdf:check system="http://cisecurity.org/check">
        <xccdf:check-content>
          <ecl:shell-command check="none exist" comment="command test «find /etc/rc[2345].d -name 'S*inetd' -ls">
            <ecl:command>find /etc/rc[2345].d -name 'S*inetd' -ls</ecl:command>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </cdf:Rule>
    <cdf:Rule id="disable-sendmail" role="full" selected="false" weight="1.0">
      <cdf:title>Disable sendmail Server, If Possible</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:strong>Question:</htm:strong>
        </htm:p>
        <htm:p>Is this system a mail server – that is, does this machine receive and process email from other hosts? Note: The email server
                    need not be running to send outgoing mail.</htm:p>
        <htm:br/> Proceed with the appopriate actions below. <htm:br/><htm:br/><htm:p><htm:strong>Action - Yes - sendmail is required:</htm:strong><htm:br/><htm:code> cd /etc/mail<htm:br/> cp -pf sendmail.conf-preCIS sendmail.conf<htm:br/> chown root:root sendmail.conf<htm:br/> chmod
                        644 sendmail.conf<htm:br/> /usr/sbin/sendmailconfig<htm:br/></htm:code></htm:p><htm:br/><htm:p><htm:strong>Action - No - sendmail is not required:</htm:strong><htm:br/><htm:code> cd /etc/mail<htm:br/> cp sendmail.conf sendmail.conf.tmp<htm:br/> awk '/^DAEMON_MODE/ { print "DAEMON_MODE=\"none\";";
                        next }; { print }' sendmail.conf.tmp &gt; sendmail.conf<htm:br/> /usr/sbin/sendmailconfig<htm:br/> rm
                        sendmail.conf.tmp<htm:br/></htm:code></htm:p><htm:br/><htm:strong>Discussion:</htm:strong><htm:br/><htm:p>It is possible to run a Unix system with the Sendmail daemon disabled and still allow users on that system to send email out
                    from that machine. Running Sendmail in "daemon mode" (with the -bd command-line option) is only required on machines that act as
                    mail servers, receiving and processing email from other hosts on the network. Note that if the system is an email server, the
                    administrator is encouraged to search the Web for additional documentation on Sendmail security issues. Some information is
                    available at <htm:a href="http://www.deer-run.com/~hal/dns-sendmail/DNSandSendmail.pdf">http://www.deer-run.com/~hal/dns-sendmail/DNSandSendmail.pdf</htm:a> and at <htm:a href="http://www.sendmail.org">http://www.sendmail.org</htm:a>.</htm:p><htm:br/><htm:p>Although Sendmail may be configured to listen only to the loopback network interface, this document still deactivates "daemon
                    mode." Listening on the loopback interface still presents a slightly higher level of exposure to attack than not listening at all.
                    Experienced administrators will understand that a chroot-jailed user or program can still interact with a Sendmail process
                    listening on the loopback interface.</htm:p><htm:br/></cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10630</ident>
        <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
                <ecl:shell-command check="none exist" comment="Package 'sendmail' does not exist">
                    <ecl:command>dpkg -l | egrep "ii[[:space:]]+sendmail[[:space:]]"</ecl:command>
                </ecl:shell-command>
            </xccdf:check-content>
        </xccdf:check>
    </cdf:Rule>
    <cdf:Rule id="disable-gui-login" role="full" selected="false" weight="1.0">
      <cdf:title>Disable GUI Login If Possible</cdf:title>
      <cdf:description>
        <htm:strong>Question:</htm:strong>
        <htm:br/> Is there a mission-critical reason to run a GUI login program on this
                system?<htm:br/><htm:br/> If the answer to this question is no, proceed with the actions below.<htm:br/><htm:br/><htm:strong>Action:</htm:strong><htm:br/><htm:code> sed -e 's/id:5:initdefault:/id:3:initdefault:/' \ <htm:br/> &gt; /etc/inittab-preCIS &gt; /etc/inittab <htm:br/>
                    chown root:root /etc/inittab <htm:br/> chmod 0600 /etc/inittab <htm:br/> diff /etc/inittab-preCIS /etc/inittab<htm:br/></htm:code><htm:br/><htm:strong>Discussion:</htm:strong><htm:br/><htm:p> There is usually no reason to run X Windows on a dedicated server machine, like a dedicated web server. This action disables
                    the graphical login, if present, leaving the user to login via SSH or a normal text-based console. If you elect to deactivate the
                    GUI login screen, users can still run X Windows by typing startx at the shell prompt. GUI login is activated or deactivated by
                    changing this runlevel in /etc/inittab. Again, note that runlevel 3 still allows the user to run X Windows by typing startx at the
                    shell prompt. </htm:p><htm:br/></cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10180</ident>
      <xccdf:complex-check operator="AND">
        <xccdf:check system="http://cisecurity.org/check">
          <!--Default runlevel is 3-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="command test «egrep '^id:3:initdefault:' /etc/inittab»" success="pass">
              <ecl:command>egrep '^id:(2|3):initdefault:' /etc/inittab</ecl:command>
              <ecl:line-selection op="pm" value="^.*$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/inittab ownership and permission-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="/etc/inittab ownership and permission">
              <ecl:command>find /etc/inittab -follow -maxdepth 0 ! \( -user root -group root -perm u=r,g=,o= \) -ls</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </cdf:Rule>
    <cdf:Rule id="disable-xfont-server" role="full" selected="false" weight="1.0">
      <cdf:title>Disable X Font Server If Possible</cdf:title>
      <cdf:description>
        <htm:strong>Question:</htm:strong>
        <htm:br/> Is there a mission-critical reason to run X Windows on this system?<htm:br/> If the answer
                to this question is no, proceed with the actions below.<htm:br/><htm:br/><htm:strong>Action:</htm:strong><htm:br/><htm:code> update-rc.d -f xfs remove </htm:code><htm:br/><htm:br/><htm:strong>Discussion:</htm:strong><htm:br/> There's usually no reason to run X Windows on a dedicated server machine, like a
                dedicated web server. If you won't be using an X server on this machine, this action will deactivate the font server.<htm:br/></cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10530</ident>
      <xccdf:check system="http://cisecurity.org/check">
        <xccdf:check-content>
          <ecl:shell-command check="none exist" comment="command test «find /etc/rc[2345].d -name 'S??xfs' -ls">
            <ecl:command>find /etc/rc[2345].d -name 'S??xfs' -ls</ecl:command>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </cdf:Rule>
    <cdf:Rule id="disable-standard-boot-services" role="full" selected="false" weight="1.0">
      <cdf:title>Disable Standard Boot Services</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:strong>Action:</htm:strong>
        </htm:p>
        <htm:code>
          <!-- REQUIRES OVAL CHANGES --> for FILE in nfs-common nis \ <htm:br/> portmap samba nfs-user-server nfs-kernel-server lpd apache
                    apache2 snmpd \ <htm:br/> bind postgresql mysql webmin squid nis wu-ftpd vsftpd hpoj cupsys \ <htm:br/> exim4 hotplug popa3d
                    sendmail nmbd pcmcia bluez-utilz;<htm:br/> do <htm:br/> /etc/init.d/$FILE stop<htm:br/> update-rc.d -f $FILE remove <htm:br/>
                    done<htm:br/></htm:code>
        <htm:p>
          <htm:strong>Discussion</htm:strong>
        </htm:p>
        <htm:p>Every system daemon that does not have a clear and necessary purpose on the host should be deactivated. This greatly reduces
                    the chances that the machine will be running a vulnerable daemon when the next vulnerability is discovered in its operating
                    system.</htm:p>
        <htm:br/>
        <htm:p>Debian Linux uses a facility called <htm:code>update-rc.d</htm:code> to manage init scripts.</htm:p>
        <htm:br/>
        <htm:p>This process "<htm:code>update-rc.d</htm:code>'s" all of the init scripts off so that the administrator can easily reactivate
                    any of these scripts upon discovery of a mission-critical need for one of these services. One could reactivate the daemon script
                    by typing <htm:code>update-rc.d &lt;daemon&gt; defaults</htm:code>.</htm:p>
        <htm:br/>
        <htm:p>The rest of the actions in this section give the administrator the option of re-enabling certain services. Rather than
                    disabling and then re-enabling these services, experienced administrators may wish to simply disable only those services that they
                    know are unnecessary for their systems.</htm:p>
        <htm:br/>
        <htm:p>Note: Not all of the scripts listed above will exist on all systems, as this is a superset of the available init scripts thay
                    may be running on your system. The benchmark's recommended action will register some trivial errors - these are not cause for
                    alarm.</htm:p>
        <htm:br/>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10350</ident>
      <xccdf:check system="http://cisecurity.org/check">
        <xccdf:check-content>
          <ecl:shell-command check="none exist" comment="Service «portmap samba nfs-user-server nfs-kernel-server lpd apache apache2 snmpd bind postgresql mysql webmin squid nis wu-ftpd vsftpd hpoj cupsys exim4 hotplug popa3d sendmail nmbd pcmcia bluez-utilz» does not exist">
            <ecl:command>for SERVICE in portmap samba nfs-user-server nfs-kernel-server lpd apache apache2 snmpd bind postgresql mysql
                            webmin squid nis wu-ftpd vsftpd hpoj cupsys exim4 hotplug popa3d sendmail nmbd pcmcia bluez-utilz ; do find
                            /etc/rc[2345].d -name "S??$SERVICE" -print; done</ecl:command>
            <ecl:line-selection op="pm" value=".+"/>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </cdf:Rule>
    <cdf:Rule id="enable-smb" role="full" selected="false" weight="1.0">
      <cdf:title>Only Enable SMB (Windows File Sharing) Process If Absolutely Necessary</cdf:title>
      <cdf:description>
        <htm:strong>Question:</htm:strong>
        <htm:br/> Is this machine sharing files via the Windows file sharing protocols?<htm:br/> If the answer to this question is yes,
                proceed with the actions below. <htm:br/><htm:br/><htm:strong>Action:</htm:strong><htm:br/><htm:code> update-rc.d nmbd defaults<htm:br/> update-rc.d smbd defaults<htm:br/></htm:code><htm:br/><htm:strong>Discussion:</htm:strong><htm:br/> Debian linux offers the popular open source samba server for providing file and print
                services to Windows-based systems. This allows a Unix system to act as a file or print server in on a Windows network, and even act as
                a domain controller (authentication server) to older Windows operating systems. However, if this functionality is not required by the
                site, the service should be disabled. This section removes the SMB client software as well. If there is some business reason to mount
                Windows Shares, do not remove the packages: <htm:code>samba-client</htm:code> and <htm:code>samba-common</htm:code>.<htm:br/><htm:br/><htm:p>Note: Debian, by default, does not come installed with SMB services</htm:p><htm:br/></cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10210</ident>
        <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
                <ecl:shell-command check="none exist" comment="Service 'samba' does not exist">
                    <ecl:command>find /etc/rc[23456].d/S??samba -ls</ecl:command>
                    <ecl:line-selection op="pm" value=".+"/>
                </ecl:shell-command>
            </xccdf:check-content>
        </xccdf:check>
    </cdf:Rule>
    <cdf:Rule id="enable-nfs" role="full" selected="false" weight="1.0">
      <cdf:title>Only Enable NFS Server Processes If Absolutely Necessary</cdf:title>
      <cdf:description>
        <htm:strong>Question:</htm:strong>
        <htm:br/> Is this machine an NFS file server?<htm:br/> If the answer to this question is yes, proceed with the actions below. <htm:br/><htm:br/><htm:strong>Action:</htm:strong><htm:code> update-rc.d nfs-user-server defaults<htm:br/></htm:code><htm:br/><htm:strong>Discussion:</htm:strong><htm:br/> NFS is frequently exploited to gain unauthorized access to files and systems. Clearly
                there is no need to run the NFS server-related daemons on hosts that are not NFS servers. If the system is an NFS server, the
                administrator should take reasonable precautions when exporting file systems, including restricting NFS access to a specific range of
                local IP addresses and exporting file systems "read-only" where appropriate. For more information, consult the exports manual page.<htm:br/><htm:br/><htm:p>Note: Debian, by default, does not come installed with NFS services</htm:p><htm:br/></cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10230</ident>
      <!--Service «samba» does not exist or is disabled-->
      <xccdf:check system="http://cisecurity.org/check">
        <!--Service «samba» does not exist-->
        <xccdf:check-content>
          <ecl:shell-command check="none exist" comment="Service «nfs-user-server» does not exist">
            <ecl:command>find /etc/rc[23456].d/S??nfs-user-server -ls</ecl:command>
            <ecl:line-selection op="pm" value=".+"/>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </cdf:Rule>
    <cdf:Rule id="enable-nfs-client" role="full" selected="false" weight="1.0">
      <cdf:title>Only Enable NFS Client If Absolutely Necessary</cdf:title>
      <cdf:description>
        <htm:strong>Question:</htm:strong>
        <htm:br/> Is there a mission-critical reason why this system must access file systems from remote servers via NFS?<htm:br/> If the
                answer to this question is yes, proceed with the actions below. <htm:br/><htm:br/><htm:strong>Action:</htm:strong><htm:br/><htm:code> update-rc.d nfs-common defaults<htm:br/></htm:code><htm:br/><htm:strong>Discussion:</htm:strong><htm:br/> Again, unless there is a significant need for this system to acquire data via NFS,
                administrators should disable NFS-related services. Note that other file transfer schemes (such as rdist via SSH) can often be
                preferable to NFS for certain applications.<htm:br/><htm:p>Note: Debian, by default, does not come installed with NFS client packages</htm:p><htm:br/></cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10260</ident>
      <xccdf:check system="http://cisecurity.org/check">
        <xccdf:check-content>
          <ecl:shell-command check="none exist" comment="Service «nfs-common» does not exist">
            <ecl:command>find /etc/rc[23456].d/S??nfs-common -ls</ecl:command>
            <ecl:line-selection op="pm" value=".+"/>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </cdf:Rule>
    <cdf:Rule id="enable-nis-client" role="full" selected="false" weight="1.0">
      <cdf:title>Only Enable NIS Client If Absolutely Necessary</cdf:title>
      <cdf:description>
        <htm:strong>Question:</htm:strong>
        <htm:br/> Is there a mission-critical reason why this machine must be an NIS client?<htm:br/> If the answer to this question is yes,
                proceed with the actions below. <htm:br/><htm:br/><htm:strong>Action:</htm:strong><htm:br/><htm:code> cd /etc/default/<htm:br/> cp nis nis.tmp<htm:br/> awk '/^[[:space:]]*NISCLIENT/ { print "NISCLIENT=true"; next }; { print
                    }' nis.tmp &gt; nis<htm:br/> update-rc.d nis defaults<htm:br/></htm:code><htm:br/><htm:strong>Discussion:</htm:strong><htm:br/> Unless this site must use NIS, it should really be avoided. While it can be very useful
                for transparently scaling the number of workstations, it's not well designed for security. Sun Microsystems is now phasing out NIS+ in
                favor of LDAP for naming services – NIS and NIS+ are now reaching end of life.<htm:br/> Debian utilizes the same init script,
                    <htm:code>/etc/init.d/nis</htm:code>, to control both NIS client and NIS server processes. However, which processes are invoked is
                determine by values articulated in <htm:code>/etc/default/nis</htm:code>. <htm:p>Note: Debian, by default, does not come installed
                    with NIS packages</htm:p><htm:br/></cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10100</ident>
      <xccdf:complex-check operator="OR">
        <xccdf:check system="http://cisecurity.org/check">
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="/etc/default/nis does not exist">
              <ecl:command>find /etc/default -name nis -ls </ecl:command>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="/etc/default/nis NISCLIENT=false">
              <ecl:command>egrep '^[[:space:]]*NISCLIENT[[:space:]]*=[[:space:]]*false' /etc/default/nis</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </cdf:Rule>
    <cdf:Rule id="enable-nis" role="full" selected="false" weight="1.0">
      <cdf:title>Only Enable NIS Server If Absolutely Necessary</cdf:title>
      <cdf:description>
        <htm:strong>Question:</htm:strong>
        <htm:br/> Is there a mission-critical reason why this machine must be an NIS server?<htm:br/> If the answer to this question is yes,
                proceed with the actions below. <htm:br/><htm:br/><htm:strong>Action:</htm:strong><htm:br/> If the server participates as a NIS slave server, execute the following:<htm:br/><htm:br/><htm:code> cd /etc/default/<htm:br/> cp nis nis.tmp<htm:br/> awk '/^[[:space:]]*NISSERVER/ { print "NISSERVER=slave"; next }; { print
                    }' nis.tmp &gt; nis<htm:br/> rm nis.tmp<htm:br/> update-rc.d nis defaults<htm:br/></htm:code><htm:br/><htm:br/> If the server participates as a NIS master server, execute the following: <htm:br/><htm:br/><htm:code> cd /etc/default/<htm:br/> cp nis nis.tmp<htm:br/> awk '/^[[:space:]]*NISSERVER/ { print "NISSERVER=master"; next }; { print
                    }' nis.tmp &gt; nis<htm:br/> rm nis.tmp<htm:br/> update-rc.d nis defaults<htm:br/></htm:code><htm:br/><htm:br/><htm:strong>Discussion:</htm:strong><htm:br/> Unless this site must use NIS, it should be avoided. While it can be very useful for
                transparently scaling the number of workstations, it is not well designed for security.<htm:br/><htm:p>Note: Debian, by default, does not come installed with NIS packages</htm:p><htm:br/></cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10090</ident>
        <xccdf:complex-check operator="AND">
        <xccdf:check system="http://cisecurity.org/check">
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="/etc/default/nis does not exist">
              <ecl:command>find /etc/default/nis -ls</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="NISSERVER=slave">
              <ecl:command>egrep '^[[:space:]]*NISSERVER[[:space:]]*=[[:space:]]*slave' /etc/default/nis</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="NISSERVER=master">
              <ecl:command>egrep '^[[:space:]]*NISSERVER[[:space:]]*=[[:space:]]*master' /etc/default/nis</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </cdf:Rule>
    <cdf:Rule id="enable-portmap" role="full" selected="false" weight="1.0">
      <cdf:title>Only Enable RPC Portmap Process If Absolutely Necessary</cdf:title>
      <cdf:description>
        <htm:strong>Question:</htm:strong>
        <htm:br/> Are any of the following statements true?<htm:br/><htm:ul><htm:li>This machine is an NFS client or server</htm:li><htm:li>This machine is an NIS (YP) or NIS+ client or server</htm:li><htm:li>The machine runs a third-party software application which is dependent on RPC support</htm:li></htm:ul><htm:br/> If the answer to this question is yes, proceed with the actions below. <htm:br/><htm:br/><htm:strong>Action:</htm:strong><htm:br/><htm:code> update-rc.d portmap defaults<htm:br/></htm:code><htm:br/><htm:strong>Discussion:</htm:strong><htm:br/><htm:p>RPC-based services typically use very weak or non-existent authentication and yet may share very sensitive information. Unless
                    one of the services listed above is required on this machine, best to disable RPC-based tools completely. If there is uncertainty
                    in whether or not a particular third-party application requires RPC services, consult with the application vendor.</htm:p><htm:br/><htm:p>Note: Debian, by default, does not come installed with portmap.</htm:p></cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10450</ident>
      <!--Service «portmap» does not exist or is disabled-->
      <xccdf:check system="http://cisecurity.org/check">
        <!--Service «portmap» does not exist-->
        <xccdf:check-content>
          <ecl:shell-command check="none exist" comment="Service «portmap» does not exist">
            <ecl:command>find /etc/rc[23456].d/S??portmap -ls</ecl:command>
            <ecl:line-selection op="pm" value=".+"/>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </cdf:Rule>
    <cdf:Rule id="enable-printer" role="full" selected="false" weight="1.0">
      <cdf:title>Only Enable Printer Daemon Processes If Absolutely Necessary</cdf:title>
      <cdf:description>
        <htm:strong>Question:</htm:strong>
        <htm:br/> Is this system a print server, or is there a mission-critical reason why users must submit print jobs from this
                system?<htm:br/> If the answer to this question is yes, proceed with the actions below. <htm:br/><htm:br/><htm:strong>Action:</htm:strong><htm:br/><htm:code> if [ -e /etc/init.d/cups ]; then <htm:br/> update-rc.d cupsys defaults <htm:br/> sed -e 's/^\#User lp/User lp/'
                    /etc/cups/cupsd.conf \ <htm:br/> -e 's/^\#Group lpadmin/Group lpadmin/' \ <htm:br/> /etc/cups/cupsd.conf-preCIS
                    &gt;/etc/cups/cupsd.conf <htm:br/> chown lp:lpadmin /etc/cups/cupsd.conf <htm:br/> chmod 600 /etc/cups/cupsd.conf <htm:br/>
                    fi<htm:br/> update-rc.d hpoj defaults<htm:br/> update-rc.d lpd defaults<htm:br/> diff /etc/cups/cupsd.conf-preCIS
                    /etc/cups/cupsd.conf<htm:br/> chmod 0755 /usr/bin/lpr /usr/bin/lprm /usr/bin/lpq<htm:br/></htm:code><htm:br/><htm:strong>Discussion:</htm:strong><htm:br/> If users will never print files from this machine and the system will never be used as a
                print server by other hosts on the network, then it is safe to disable the print daemon, <htm:code>lpd</htm:code> or
                <htm:code>cupsd</htm:code>. The Unix print servers have generally had a poor security record – be sure to keep up-to-date on vendor
                patches. <htm:p>Note that this item also sets <htm:code>cupsd</htm:code>, when present, to run as a non-root user and group, namely
                    user <htm:code>lp</htm:code> and group <htm:code>lpadmin</htm:code>.</htm:p><htm:p>Note: Debian, by default, does not come installed with printer services</htm:p><htm:br/></cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10410</ident>
        <xccdf:complex-check operator="AND">
            <!-- Debian 5/6 -->
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="none exist" comment="Service «cups» does not exist">
                        <ecl:command>find /etc/rc[23456].d/S??cups -ls</ecl:command>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
            <!-- Debian 4 -->
            <xccdf:check system="http://cisecurity.org/check">          
                <xccdf:check-content>
                    <ecl:shell-command check="none exist" comment="Service «cupsys» does not exist">
                        <ecl:command>find /etc/rc[23456].d/S??cupsys -ls</ecl:command>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:complex-check>
    </cdf:Rule>
    <cdf:Rule id="enable-www" role="full" selected="false" weight="1.0">
      <cdf:title>Only Enable Web Server Process If Absolutely Necessary</cdf:title>
      <cdf:description>
        <htm:strong>Question:</htm:strong>
        <htm:br/> Is there a mission-critical reason why this system must run a Web server? Web Servers should be run on dedicated systems
                serving only as web server. Unfortunately web servers tend to be enabled on many systems that don’t need the web service, and are
                often not properly secured and administered. If Apache is required, review and apply the CIS Apache benchmark available at <htm:a href="http://www.cisecurity.org/bench_apache.html">http://www.cisecurity.org/bench_apache.html</htm:a>. If this is not a web
                server, and you are not using piranha, the answer is no.<htm:br/> If the answer to this question is yes, proceed with the actions
                below. <htm:br/><htm:br/><htm:strong>Action:</htm:strong><htm:br/><htm:strong><htm:i>If Apache is used, download and apply appropriate recommendations from the CIS Apache Benchmark.</htm:i></htm:strong><htm:br/><htm:strong><htm:i>Please read the discussion before executing these commands and select the appropriate command.</htm:i></htm:strong><htm:br/><htm:br/><htm:code> update-rc.d apache defaults<htm:br/> update-rc.d apache2 defaults<htm:br/></htm:code><htm:br/><htm:strong>Discussion:</htm:strong><htm:br/><htm:br/><htm:p>Utilize one of the above commands to enable the corresponding version of apache that is installed on your server.</htm:p><htm:p>Note: Debian, by default, does not come installed with a web server.</htm:p><htm:br/></cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10430</ident>
      <xccdf:complex-check operator="AND">
        <xccdf:check system="http://cisecurity.org/check">
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="Service «apache» does not exist">
              <ecl:command>find /etc/rc[23456].d/S??apache -ls</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="Service «apache2» does not exist">
              <ecl:command>find /etc/rc[23456].d/S??apache2 -ls</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </cdf:Rule>
    <cdf:Rule id="enable-snmp" role="full" selected="false" weight="1.0">
      <cdf:title>Only Enable SNMP Process If Absolutely Necessary</cdf:title>
      <cdf:description>
        <htm:strong>Question:</htm:strong>
        <htm:br/> Are hosts at this site remotely monitored by a tool (e.g., HP OpenView, MRTG, Cricket) that relies on SNMP?<htm:br/> If the
                answer to this question is yes, proceed with the actions below. <htm:br/><htm:br/><htm:strong>Action:</htm:strong><htm:br/><htm:code> update-rc.d snmpd defaults<htm:br/></htm:code><htm:br/><htm:strong>Discussion:</htm:strong><htm:br/><htm:p>If SNMP is used to monitor the hosts on this network, experts recommend changing the default community string used to access
                    data via SNMP.</htm:p><htm:br/><htm:p>Note: Debian, by default, does not come installed with a SNMP services.</htm:p><htm:br/></cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10440</ident>
      <xccdf:check system="http://cisecurity.org/check">
        <xccdf:check-content>
          <ecl:shell-command check="none exist" comment="Service «snmpd» does not exist">
            <ecl:command>find /etc/rc[23456].d/S??snmpd -ls</ecl:command>
            <ecl:line-selection op="pm" value=".+"/>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </cdf:Rule>
    <cdf:Rule id="enable-dns" role="full" selected="false" weight="1.0">
      <cdf:title>Only Enable DNS Server Process If Absolutely Necessary</cdf:title>
      <cdf:description>
        <htm:strong>Question:</htm:strong>
        <htm:br/> Is this machine a DNS server, or name server, for this site?<htm:br/> If the answer to this question is yes, proceed with
                the actions below. <htm:br/><htm:br/><htm:strong>Action:</htm:strong><htm:br/> Download and follow the appropriate configurations from the CIS BIND benchmark, then enable
                BIND as follows. <htm:br/><htm:br/><htm:code> update-rc.d bind defaults<htm:br/></htm:code><htm:br/><htm:strong>Discussion:</htm:strong><htm:br/><htm:p>Most of the machines in the organization do not need a DNS server running on the box. Unless this is one of the organization's
                    name servers, it is safe to shut this down.</htm:p><htm:br/><htm:p>If this must be left active, please patch often and security harden the configuration according to the CIS BIND benchmark which
                    provides detailed implementation and configurations recommendations. Two highly suggested configuration is to bind the DNS server
                    program in a chroot environment, and run it as a non-root user. This significantly restricts the resources that the DNS server has
                    access to on the system, reducing this set to the minimum required for the program to function properly. Carefully consider the
                    consequences that if a name server is compromised then traffic that depends on the name service such as web, ftp, and e-mail can
                    be redirected to malicious servers.</htm:p><htm:br/><htm:p>Additionally, consider the use of Access Control Lists (ACL's) in <htm:code>/etc/bind/named.conf</htm:code> to limit who can
                    query your name server. For example, Internal name servers should not respond to outside requests. Large enterprises run multiple
                    name servers so this should not be an issue. However, smaller organizations may not be able to deploy both internal and external
                    name servers and should instead use an reputable externally hosted DNS service. Details on how to accomplish this are provided in
                    the CIS BIND benchmark, available at <htm:a href="http://www.cisecurity.org/bench_bind.html">http://www.cisecurity.org/bench_bind.html</htm:a></htm:p><htm:br/><htm:p>Note: Debian, by default, does not come installed with a DNS services.</htm:p><htm:br/></cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10370</ident>
      <!--Service «bind» does not exist or is disabled-->
      <xccdf:check system="http://cisecurity.org/check">
        <!--Service «bind» does not exist-->
        <xccdf:check-content>
          <ecl:shell-command check="none exist" comment="Service «bind» does not exist">
            <ecl:command>find /etc/rc[23456].d/S??bind -ls</ecl:command>
            <ecl:line-selection op="pm" value=".+"/>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </cdf:Rule>
    <cdf:Rule id="enable-sql" role="full" selected="false" weight="1.0">
      <cdf:title>Only Enable SQL Server Process If Absolutely Necessary</cdf:title>
      <cdf:description>
        <htm:strong>Question:</htm:strong>
        <htm:br/> Is this machine an SQL (database) server?<htm:br/> If the answer to this question is yes, proceed with the actions below. <htm:br/><htm:br/><htm:strong>Action:</htm:strong><htm:br/><htm:strong><htm:i>Please read the discussion before executing these commands and select the appropriate command.</htm:i></htm:strong><htm:br/><htm:code> update-rc.d mysql defaults<htm:br/> update-rc.d postgresql defaults<htm:br/></htm:code><htm:br/><htm:strong>Discussion:</htm:strong><htm:br/><htm:p>If this machine does not need to run the mainstream database (SQL) servers Postgres or MySQL, it is safe to deactivate them. If
                    you need to enable them, issue the command (above) for the database that you installed.</htm:p><htm:br/><htm:p>Note: Debian, by default, does not come installed with a database service.</htm:p><htm:br/></cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10540</ident>
      <xccdf:complex-check operator="OR">
        <!--Service «mysqld» does not exist or is disabled-->
        <xccdf:check system="http://cisecurity.org/check">
          <!--Service «mysqld» does not exist-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="Service «mysql» does not exist">
              <ecl:command>find /etc/rc[23456].d/S??mysql -ls</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--Service «mysqld» is «off»-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="Service «postgresql» does not exist">
              <ecl:command>find /etc/rc[23456].d/S??postgresql-?.? -ls</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </cdf:Rule>
    <cdf:Rule id="enable-webmin" role="full" selected="false" weight="1.0">
      <cdf:title>Only Enable Webmin Processes If Absolutely Necessary</cdf:title>
      <cdf:description>
        <htm:strong>Question:</htm:strong>
        <htm:br/> Does the site absolutely need to administer the system through the remote webmin tool?<htm:br/> Proceed with the actions
                below. <htm:br/><htm:br/><htm:strong>Action - Yes, webmin is necessary:</htm:strong><htm:br/><htm:code> update-rc.d webmin defaults<htm:br/></htm:code><htm:br/><htm:strong>Action - No, webmin is not necessary:</htm:strong><htm:br/><htm:code> aptitude remove webmin<htm:br/></htm:code><htm:br/><htm:strong>Discussion:</htm:strong><htm:br/><htm:p>One can remotely administer a system through the relatively safe SSH remote shell system. Webmin, and other tools like it, can
                    be dangerous as they have a history of poor authentication or session management.</htm:p><htm:br/><htm:p>Note: Debian, by default, does not come installed with webmin services.</htm:p><htm:br/></cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10550</ident>
      <xccdf:check system="http://cisecurity.org/check">
        <xccdf:check-content>
          <ecl:shell-command check="none exist" comment="Service «webmin» does not exist">
            <ecl:command>find /etc/rc[23456].d/S??webmin -ls</ecl:command>
            <ecl:line-selection op="pm" value=".+"/>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </cdf:Rule>
    <cdf:Rule id="enable-squid" role="full" selected="false" weight="1.0">
      <cdf:title>Only Enable Squid Services If Absolutely Necessary</cdf:title>
      <cdf:description>
        <htm:strong>Question:</htm:strong>
        <htm:br/> Does this machine use squid to proxy web transactions?<htm:br/> If the answer to this question is yes, proceed with the
                actions below. <htm:br/><htm:br/><htm:strong>Action:</htm:strong><htm:br/><htm:code> update-rc.d squid defaults<htm:br/></htm:code><htm:br/><htm:strong>Discussion:</htm:strong><htm:br/><htm:p>Squid can actually be beneficial to security, as it imposes a proxy between the client and server. On the other hand, if it is
                    not being used, it should be deactivated and removed. This deactivation decreases the risk of system compromise should a security
                    vulnerability later be discovered in Squid. Finally, if your site uses Squid, configure it carefully. Many Squid caches are badly
                    configured to either allow outsider attackers to probe internal machines through the firewall or to use the cache to hide their
                    true source IP address from their target hosts. Each site should configure Squid to not allow people outside their perimeter to
                    use the cache without authentication of some sort. A better deployment for squid is on a server with no external-facing network
                    interface (unless you are using it for a reverse web proxy, which is a very specific installation, and beyond the scope of this
                    benchmark).</htm:p><htm:br/><htm:p>Note: Debian, by default, does not come installed with squid services.</htm:p><htm:br/></cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10560</ident>
      <xccdf:check system="http://cisecurity.org/check">
        <xccdf:check-content>
          <ecl:shell-command check="none exist" comment="Service «squid» does not exist">
            <ecl:command>find /etc/rc[23456].d/S??squid -ls</ecl:command>
            <ecl:line-selection op="pm" value=".+"/>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </cdf:Rule>
  </cdf:Group>
  <cdf:Group id="kernel-tuning" selected="true">
    <cdf:title>Kernel Tuning</cdf:title>
    <cdf:description>This group has recommendations that modify the Kernel settings related to the network stack.</cdf:description>
    <cdf:Rule id="network-parameters" role="full" selected="false" weight="1.0">
      <cdf:title>Network Parameter Modifications</cdf:title>
      <cdf:description>
        <htm:strong>Question:</htm:strong>
        <htm:br/> Does this machine connect to a network?<htm:br/> If the answer to this question is yes, proceed with the actions below. <htm:br/><htm:br/><htm:strong>Action:</htm:strong><htm:br/><htm:code> cat &lt;&lt;END_SCRIPT &gt;&gt; /etc/sysctl.conf <htm:br/> # Following 11 lines added by CISecurity
                    Benchmark sec 5.1<htm:br/> net.ipv4.tcp_max_syn_backlog = 4096 <htm:br/> net.ipv4.tcp_syncookies=1 <htm:br/>
                    net.ipv4.conf.all.rp_filter = 1 <htm:br/> net.ipv4.conf.all.accept_source_route = 0<htm:br/> net.ipv4.conf.all.accept_redirects =
                    0 <htm:br/> net.ipv4.conf.all.secure_redirects = 0 <htm:br/> net.ipv4.conf.default.rp_filter = 1 <htm:br/>
                    net.ipv4.conf.default.accept_source_route = 0 <htm:br/> net.ipv4.conf.default.accept_redirects = 0 <htm:br/>
                    net.ipv4.conf.default.secure_redirects = 0 <htm:br/> net.ipv4.icmp_echo_ignore_broadcasts = 1 <htm:br/> END_SCRIPT chown root:root
                    /etc/sysctl.conf<htm:br/></htm:code><htm:br/><htm:br/><htm:strong>Discussion:</htm:strong><htm:br/><htm:p>For an explanation of some of these parameters, see <htm:a href="http://lxr.linux.no/source/Documentation/networking/ip-sysctl.txt">http://lxr.linux.no/source/Documentation/networking/ip-sysctl.txt</htm:a></htm:p><htm:br/><htm:br/></cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10700</ident>
      <xccdf:complex-check operator="AND">
        <xccdf:check system="http://cisecurity.org/check">
          <!--sysctl variable net.ipv4.tcp_max_syn_backlog equals «4096».-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="sysctl variable net.ipv4.tcp_max_syn_backlog equals «4096»." success="pass">
              <ecl:command>test `sysctl -n net.ipv4.tcp_max_syn_backlog` = 4096 || sysctl net.ipv4.tcp_max_syn_backlog</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--sysctl variable net.ipv4.tcp_syncookies equals «1».-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="sysctl variable net.ipv4.tcp_syncookies equals «1»." success="pass">
              <ecl:command>test `sysctl -n net.ipv4.tcp_syncookies` = 1 || sysctl net.ipv4.tcp_syncookies</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--sysctl variable net.ipv4.conf.all.rp_filter equals «1».-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="sysctl variable net.ipv4.conf.all.rp_filter equals «1»." success="pass">
              <ecl:command>test `sysctl -n net.ipv4.conf.all.rp_filter` = 1 || sysctl net.ipv4.conf.all.rp_filter</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--sysctl variable net.ipv4.conf.all.accept_source_route equals «0».-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="sysctl variable net.ipv4.conf.all.accept_source_route equals «0»." success="pass">
              <ecl:command>test `sysctl -n net.ipv4.conf.all.accept_source_route` = 0 || sysctl net.ipv4.conf.all.accept_source_route</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--sysctl variable net.ipv4.conf.all.accept_redirects equals «0».-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="sysctl variable net.ipv4.conf.all.accept_redirects equals «0»." success="pass">
              <ecl:command>test `sysctl -n net.ipv4.conf.all.accept_redirects` = 0 || sysctl net.ipv4.conf.all.accept_redirects</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--sysctl variable net.ipv4.conf.all.secure_redirects equals «0».-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="sysctl variable net.ipv4.conf.all.secure_redirects equals «0»." success="pass">
              <ecl:command>test `sysctl -n net.ipv4.conf.all.secure_redirects` = 0 || sysctl net.ipv4.conf.all.secure_redirects</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--sysctl variable net.ipv4.conf.default.rp_filter equals «1».-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="sysctl variable net.ipv4.conf.default.rp_filter equals «1»." success="pass">
              <ecl:command>test `sysctl -n net.ipv4.conf.default.rp_filter` = 1 || sysctl net.ipv4.conf.default.rp_filter</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--sysctl variable net.ipv4.conf.default.accept_source_route equals «0».-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="sysctl variable net.ipv4.conf.default.accept_source_route equals «0»." success="pass">
              <ecl:command>test `sysctl -n net.ipv4.conf.default.accept_source_route` = 0 || sysctl
                                net.ipv4.conf.default.accept_source_route</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--sysctl variable net.ipv4.conf.default.accept_redirects equals «0».-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="sysctl variable net.ipv4.conf.default.accept_redirects equals «0»." success="pass">
              <ecl:command>test `sysctl -n net.ipv4.conf.default.accept_redirects` = 0 || sysctl net.ipv4.conf.default.accept_redirects</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--sysctl variable net.ipv4.conf.default.secure_redirects equals «0».-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="sysctl variable net.ipv4.conf.default.secure_redirects equals «0»." success="pass">
              <ecl:command>test `sysctl -n net.ipv4.conf.default.secure_redirects` = 0 || sysctl net.ipv4.conf.default.secure_redirects</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--sysctl variable net.ipv4.icmp_echo_ignore_broadcasts equals «1».-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="sysctl variable net.ipv4.icmp_echo_ignore_broadcasts equals «1»." success="pass">
              <ecl:command>test `sysctl -n net.ipv4.icmp_echo_ignore_broadcasts` = 1 || sysctl net.ipv4.icmp_echo_ignore_broadcasts</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:complex-check operator="AND">
          <xccdf:check system="http://cisecurity.org/check">
            <!--/etc/sysctl.conf ownership and permission-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="/etc/sysctl.conf ownership and permission">
                <ecl:command>find /etc/sysctl.conf -follow -maxdepth 0 ! \( -user root -group root \) -ls</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
      </xccdf:complex-check>
    </cdf:Rule>
    <cdf:Rule id="network-parameters-additional" role="full" selected="false" weight="1.0">
      <cdf:title>Additional Network Parameter Modifications</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:strong>Question:</htm:strong>
        </htm:p>
        <htm:p> Is this system going to be used as a firewall or gateway to pass network traffic between different networks?<htm:br/> If the
                    answer to this question is no, then perform the action below. </htm:p>
        <htm:br/>
        <htm:p>
          <htm:strong>Action:</htm:strong>
        </htm:p>
        <htm:code> cat &lt;&lt;END_SCRIPT &gt;&gt; /etc/sysctl.conf <htm:br/> # Following 3 lines added by CISecurity
                    Benchmark sec 5.2 <htm:br/> net.ipv4.ip_forward = 0 <htm:br/> net.ipv4.conf.all.send_redirects = 0 <htm:br/>
                    net.ipv4.conf.default.send_redirects = 0 <htm:br/> END_SCRIPT <htm:br/> chown root:root /etc/sysctl.conf <htm:br/> chmod 0600
                    /etc/sysctl.conf diff<htm:br/> /etc/sysctl.conf-preCIS /etc/sysctl.conf </htm:code>
        <htm:br/>
        <htm:br/>
        <htm:strong>Discussion:</htm:strong>
        <htm:br/>
        <htm:p>For an explanation of some of these parameters, see <htm:a href="http://lxr.linux.no/source/Documentation/networking/ip-sysctl.txt">http://lxr.linux.no/source/Documentation/networking/ip-sysctl.txt</htm:a></htm:p>
        <htm:br/>
        <htm:br/>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10710</ident>
      <xccdf:complex-check operator="AND">
        <xccdf:check system="http://cisecurity.org/check">
          <!--sysctl variable net.ipv4.ip_forward equals «0».-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="sysctl variable net.ipv4.ip_forward equals «0»." success="pass">
              <ecl:command>test `sysctl -n net.ipv4.ip_forward` = 0 || sysctl net.ipv4.ip_forward</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--sysctl variable net.ipv4.conf.all.send_redirects equals «0».-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="sysctl variable net.ipv4.conf.all.send_redirects equals «0»." success="pass">
              <ecl:command>test `sysctl -n net.ipv4.conf.all.send_redirects` = 0 || sysctl net.ipv4.conf.all.send_redirects</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--sysctl variable net.ipv4.conf.default.send_redirects equals «0».-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="sysctl variable net.ipv4.conf.default.send_redirects equals «0»." success="pass">
              <ecl:command>test `sysctl -n net.ipv4.conf.default.send_redirects` = 0 || sysctl net.ipv4.conf.default.send_redirects</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:complex-check operator="AND">
          <xccdf:check system="http://cisecurity.org/check">
            <!--/etc/sysctl.conf ownership and permission-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="/etc/sysctl.conf ownership and permission">
                <ecl:command>find /etc/sysctl.conf -follow -maxdepth 0 ! \( -user root -group root -perm u=rw,g=,o= \) -ls</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
      </xccdf:complex-check>
    </cdf:Rule>
  </cdf:Group>
  <cdf:Group id="logging" selected="true">
    <cdf:title>Logging</cdf:title>
    <cdf:description> The items in this section cover enabling various forms of system logging in order to keep track of activity on the system.
            Because it is often necessary to correlate log information from many different systems (particularly after a security incident) experts
            recommend establishing some form of time synchronization among systems and devices connected to the local network. The standard Internet
            protocol for time synchronization is the Network Time Protocol (NTP), which is supported by most network-ready devices. More information
            on NTP can be found at <htm:a href="http://www.ntp.org">http://www.ntp.org</htm:a> and <htm:a href="http://www.ibiblio.org/pub/Linux/docs/HOWTO/otherformats/html_single/TimePrecision-HOWTO.html">http://www.ibiblio.org/pub/Linux/docs/HOWTO/otherformats/html_single/TimePrecision-HOWTO.html</htm:a>. </cdf:description>
    <cdf:Rule id="logging-auth-priv" role="full" selected="false" weight="1.0">
      <cdf:title>Capture Messages Sent To Syslog AUTHPRIV Facility</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:strong>Action:</htm:strong>
        </htm:p>
        <htm:p>
          <htm:code> if [ `grep -v '^#' /etc/syslog.conf | \ <htm:br/> grep -c 'authpriv'` -eq 0 ]; <htm:br/> then echo -e
                        "authpriv.*\t\t\t\t/var/log/auth.log" \ <htm:br/> &gt;&gt; /etc/syslog.conf <htm:br/> fi <htm:br/> touch
                        /var/log/auth.log <htm:br/> chown root:root /var/log/auth.log <htm:br/> chmod 600 /var/log/auth.log <htm:br/> diff
                        /etc/syslog.conf-preCIS /etc/syslog.conf </htm:code>
        </htm:p>
        <htm:br/>
        <htm:p>
          <htm:strong>Discussion:</htm:strong>
        </htm:p>
        <htm:p>The default installation of Debian Linux already has this enabled. It is included in case it had been previously
                    disabled.<htm:br/><htm:br/>Not all Linux distributions, especially the older ones, capture logging information which is sent to
                    the LOG_AUTHPRIV facilities. This is unfortunate, since a great deal of important security-related information is sent via these
                    channels (e.g., network service startups, commands like usermod and chage, etc). The above action causes this information to be
                    captured in the /var/log/auth.log file (which is only readable by the superuser). This file should be reviewed and archived on a
                    regular basis.</htm:p>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10780</ident>
      <xccdf:complex-check operator="AND">
        <xccdf:check system="http://cisecurity.org/check">
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="Check [r]syslog.conf for 'authpriv /var/log/auth.log'">
              <ecl:command>egrep 'authpriv\.\*[[:space:]]+/var/log/auth.log$' /etc/syslog.conf /etc/rsyslog.conf</ecl:command>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:complex-check operator="AND">
          <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="/var/log/auth.log ownership and permission">
                <ecl:command>find /var/log/auth.log -follow -maxdepth 0 ! \( -user root -group root -perm u=rw,g=,o= \) -ls</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
      </xccdf:complex-check>
    </cdf:Rule>
    <cdf:Rule id="logging-ftp" role="full" selected="false" weight="1.0">
      <cdf:title>Turn On Additional Loggin For FTP Daemon</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:strong>Action:</htm:strong>
        </htm:p>
        <htm:p>
          <htm:code> if [ -f /etc/wu-ftpd/ftpaccess ]; then <htm:br/> cd /etc/default <htm:br/> echo 'WU_OPTIONS="-l -a -d"'
                        &gt;&gt; wu-ftpd<htm:br/> chown root:root wu-ftpd <htm:br/> chmod 644 wu-ftpd <htm:br/> cd /etc/ <htm:br/> cp
                        inetd.conf inetd.conf.tmp<htm:br/> sed 's/^\(ftp.*\/usr\/sbin\/wu\-ftpd\).*$/\1 -l -a -d/' inetd.conf.tmp&gt;
                        inetd.conf<htm:br/> rm inetd.conf.tmp<htm:br/> fi <htm:br/> if [ -f /etc/vsftpd.conf ]; then <htm:br/> FILE =
                        "/etc/vsftpd.conf"<htm:br/> awk '/^#?xferlog_std_format/ \ <htm:br/> { print "xferlog_std_format=NO"; next }; <htm:br/>
                        /^#?log_ftp_protocol/ \ <htm:br/> { print "log_ftp_protocol=YES"; next }; <htm:br/> { print }' ${FILE}-preCIS &gt; ${FILE}
                        <htm:br/> if [ `egrep -c log_ftp_protocol ${FILE}` == 0 ]; then <htm:br/> echo "log_ftp_protocol=YES" &gt;&gt; ${FILE}
                        <htm:br/> fi <htm:br/> chmod 0600 $FILE <htm:br/> chown root:root $FILE <htm:br/> diff ${FILE}-preCIS $FILE<htm:br/>
                        fi<htm:br/></htm:code>
        </htm:p>
        <htm:br/>
        <htm:p>
          <htm:strong>Discussion:</htm:strong>
        </htm:p>
        <htm:p>Some installations might prefer vsftpd over WU-FTPd, and the above script reflects that preference.<htm:br/><htm:br/>The
                    modifications above ensure that all commands sent to the server are logged. In WUFTPd, the action above also requires the server
                    to log all security violations or policy boundary conditions and to ensure that file transfers are logged to syslog, in addition
                    to the default <htm:code>/var/log/xferlog</htm:code>.</htm:p>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10760</ident>
        <xccdf:complex-check operator="OR">
            <xccdf:complex-check operator="AND">
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command check="none exist" comment="Package 'vsftpd' not installed">
                            <ecl:command>dpkg -l | egrep "ii[[:space:]]+vsftpd[[:space:]]"</ecl:command>
                            <ecl:line-selection op="pm" value=".+"/>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:complex-check>
            <xccdf:complex-check operator="AND">
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command check="all" comment="command test «egrep ^WU_OPTIONS /etc/vsftpd/vsftpd.conf»" success="pass">
                            <ecl:command>egrep '^WU_OPTIONS="-l -a -d"' /etc/vsftpd/vsftpd.conf</ecl:command>
                            <ecl:line-selection op="pm" value="^.*$"/>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command check="all" comment="command test «egrep '^log_ftp_protocol=YES$' /etc/vsftpd/vsftpd.conf»" success="pass">
                            <ecl:command>egrep '^log_ftp_protocol=YES$' /etc/vsftpd/vsftpd.conf</ecl:command>
                            <ecl:line-selection op="pm" value="^.*$"/>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:complex-check>
        </xccdf:complex-check>
    </cdf:Rule>
    <cdf:Rule id="logging-confirm-permissions" role="full" selected="false" weight="1.0">
      <cdf:title>Confirm Permissions On System Log Files</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:strong>Action:</htm:strong>
        </htm:p>
        <htm:p>
          <htm:code> cd /var/log <htm:br/> chmod o-rwx boot.log* cron* dmesg ksyms* httpd/* \ <htm:br/> maillog* messages* news/* pgsql
                        rpmpkgs* samba/* sa/* \ <htm:br/> scrollkeeper.log secure* spooler* squid/* vbox/* wtmp <htm:br/> chmod o-rx boot.log* cron*
                        maillog* messages* pgsql \ <htm:br/> secure* spooler* squid/* sa/* <htm:br/> chmod g-w boot.log* cron* dmesg httpd/* ksyms* \
                        <htm:br/> maillog* messages* pgsql rpmpkgs* samba/* sa/* \ <htm:br/> scrollkeeper.log secure* spooler* <htm:br/> chmod g-rx
                        boot.log* cron* maillog* messages* pgsql \ <htm:br/> secure* spooler* <htm:br/> chmod o-w gdm/ httpd/ news/ samba/ squid/ sa/
                        vbox/ <htm:br/> chmod o-rx httpd/ samba/ squid/ sa/ <htm:br/> chmod g-w gdm/ httpd/ news/ samba/ squid/ sa/ vbox/ <htm:br/>
                        chmod g-rx httpd/ samba/ sa/ <htm:br/> chmod u-x kernel syslog loginlog <htm:br/> chown -R root:root .<htm:br/> chgrp utmp
                        wtmp <htm:br/> [ -e news ] &amp;&amp; chown -R news:news news <htm:br/> [ -e pgsql ] &amp;&amp; chown
                        postgres:postgres pgsql <htm:br/> chown -R squid:squid squid<htm:br/></htm:code>
        </htm:p>
        <htm:br/>
        <htm:p>
          <htm:strong>Discussion:</htm:strong>
        </htm:p>
        <htm:p>It is critical to protect system log files from being modified by unauthorized individuals. Also, certain logs contain
                    sensitive data that should only be available to the system administrator.<htm:br/><htm:br/>If you should add any of the services
                    that affect the above logs, please revisit this section to ensure the logs have the correct/secure
                    permissions.<htm:br/><htm:br/>Note: You may get some errors from <htm:code>chmod</htm:code> if the file does not exit.</htm:p>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10840</ident>
      <xccdf:complex-check operator="AND">
        <xccdf:complex-check operator="AND">
          <xccdf:check system="http://cisecurity.org/check">
            <!--  chmod o-rwx -->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="command test «(cd /var/log;for f in boot.log* cron* dmesg ksyms* httpd/* maillog* messages* ews/* pgsql rpmpkgs* samba/* sa/* scrollkeeper.log secure* spooler* squid/* vbox/* wtmp; do find $f -maxdepth 0 \( -perm -o=rwx  \) -ls 2&gt;/dev/null; done)»">
                <ecl:command>(cd /var/log;for f in boot.log* cron* dmesg ksyms* httpd/* maillog* messages* ews/* pgsql rpmpkgs*
                                    samba/* sa/* scrollkeeper.log secure* spooler* squid/* vbox/* wtmp; do find $f -maxdepth 0 \( -perm -o=rwx \) -ls
                                    2&gt;/dev/null; done)</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--  chmod g-w  -->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="command test «(cd /var/log;for f in boot.log* cron* maillog* messages* pgsql secure* spooler* squid/* sa/*; do find $f -maxdepth 0 \( -perm -g=wx \) -ls 2&gt;/dev/null; done)»">
                <ecl:command>(cd /var/log;for f in boot.log* cron* maillog* messages* pgsql secure* spooler* squid/* sa/*; do find $f
                                    -maxdepth 0 \( -perm -g=w \) -ls 2&gt;/dev/null; done)</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--  chmod g-rx -->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="command test «(cd /var/log;for f in boot.log* cron* dmesg httpd/* ksyms* maillog* messages* pgsql pmpkgs* samba/* sa/*&#10;                                scrollkeeper.log secure* spooler*; do find $f \( -perm  -g=rw \) -ls 2&gt;/dev/null; done)»">
                <ecl:command>(cd /var/log;for f in boot.log* cron* dmesg httpd/* ksyms* maillog* messages* pgsql pmpkgs* samba/* sa/*
                                    scrollkeeper.log secure* spooler*; do find $f \( -perm -g=rx \) -ls 2&gt;/dev/null; done)</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
              <!--  chmod o-w  -->
              <xccdf:check-content>
                <ecl:shell-command check="none exist" comment="command test «(cd /var/log;for f in gdm/ httpd/ news/ samba/ squid/ sa/ vbox/ ; do find $f -maxdepth 0 \(&#10;                                    -perm -o=w \) -ls 2&gt;/dev/null; done)»">
                  <ecl:command>(cd /var/log;for f in packages gdm/ httpd/ news/ samba/ squid/ sa/ vbox/ ; do find $f -maxdepth 0 \(
                                        -perm -o=w \) -ls 2&gt;/dev/null; done)</ecl:command>
                  <ecl:line-selection op="pm" value=".+"/>
                </ecl:shell-command>
              </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
              <!--  chmod o-rx -->
              <xccdf:check-content>
                <ecl:shell-command check="none exist" comment="command test «(cd /var/log;for f in httpd/ samba/ squid/ sa/ ; do find $f \( -perm -o=rx \) -ls 2&gt;/dev/null; done)»">
                  <ecl:command>(cd /var/log;for f in httpd/ samba/ squid/ sa/ ; do find $f \( -perm -o=rx \) -ls 2&gt;/dev/null;
                                        done)</ecl:command>
                  <ecl:line-selection op="pm" value=".+"/>
                </ecl:shell-command>
              </xccdf:check-content>
            </xccdf:check>
          </xccdf:complex-check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="AND">
          <xccdf:check system="http://cisecurity.org/check">
            <!--  chmod g-w -->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="command test «(cd /var/log;for f in gdm/ httpd/ news/ samba/ squid/ sa/ vbox/; do find $f -maxdepth 0 \( -perm -g=w \) -ls 2&gt;/dev/null; done)»">
                <ecl:command>(cd /var/log;for f in gdm/ httpd/ news/ samba/ squid/ sa/ vbox/; do find $f -maxdepth 0 \( -perm -g=w \)
                                    -ls 2&gt;/dev/null; done)</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--  chmod g-rx -->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="command test «(cd /var/log;for f in httpd/ samba/ sa/; do find $f -maxdepth 0 \( -perm -g=rx \) -ls 2&gt;/dev/null; done)»">
                <ecl:command>(cd /var/log;for f in httpd/ samba/ sa/ ; do find $f -maxdepth 0 \( -perm -g=rx \) -ls
                                    2&gt;/dev/null; done)</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!-- chmod u-x-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="command test «(cd /var/log;for f in kernel syslog loginlog; do find $f \( -perm +g=wx \) -ls 2&gt;/dev/null; done)»">
                <ecl:command>(cd /var/log;for f in kernel syslog loginlog; do find $f \( -perm -u=x \) -ls 2&gt;/dev/null; done)</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <!-- chown -R root:root -->
          <xccdf:check system="http://cisecurity.org/check">
            <!--command test «find /var/log -follow ! \( -user root -group root \) -ls-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="command test «find /var/log -follow ! \( -user root -group root \) -ls»">
                <ecl:command>find /var/log -follow ! \( -user root -group root \) -ls</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--  c chown -R squid:squid squid  -->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="command test «find /var/log/* -follow -namesquid ! \( -user squid -group squid\) -ls»">
                <ecl:command>find /var/log/* -follow -name squid ! \( -user squid -group squid \) -ls</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--command test «find /var/log/* -follow -name 'wtmp*' ! \( -user root -group utmp \) -ls»-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="command test «find /var/log/* -follow -name 'wtmp*' ! \( -user root -group utmp \) -ls»">
                <ecl:command>find /var/log/* -follow -name 'wtmp*' ! \( -user root -group utmp \) -ls</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
      </xccdf:complex-check>
    </cdf:Rule>
    <cdf:Rule id="logging-syslog-remote-host" role="full" selected="false" weight="1.0">
      <cdf:title>Configure syslogd to Send Logs to a Remote LogHost</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:strong>
            <htm:i>Note: Bastille configuration set to 'No' as this is system/site specific</htm:i>
          </htm:strong>
        </htm:p>
        <htm:br/>
        <htm:p>
          <htm:strong>Action:</htm:strong>
        </htm:p> In the script below, replace <htm:code>loghost</htm:code> with the proper name (FQDN, if necessary) of your loghost. <htm:p><htm:code> printf "### Following lines added by CISecurity \ <htm:br/> Debian Benchmark Section 6.4\n\ <htm:br/>
                        kern.warning;*.err;authpriv.none\t@loghost\n\ <htm:br/> *.info;mail.none;authpriv.none;cron.none\t@loghost\n\ <htm:br/>
                        *.emerg\t@loghost\n\ <htm:br/> local7.*\t@loghost\n" &gt;&gt; /etc/syslog.conf <htm:br/> diff /etc/syslog.conf-preCIS
                        /etc/syslog.conf<htm:br/></htm:code></htm:p><htm:br/><htm:p><htm:strong>Discussion:</htm:strong></htm:p><htm:p>Remote logging is essential in detecting intrusion and monitoring several servers operating in concert. An intruder – once
                    he/she has obtained root – can edit the system logs to remove all traces of the attack. If the logs are stored off the machine,
                    those logs can be analyzed for anomalies and used for prosecuting the attacker.</htm:p></cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10790</ident>
        <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="all" comment="kern.warning;*.err;authpriv.none logged to remote host">
                        <ecl:command>egrep '^[[:space:]]*kern.warning;\*\.err;authpriv\.none[[:space:]]+@' /etc/syslog.conf /etc/rsyslog.conf</ecl:command>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="all" comment="*.info;mail.none;authpriv.none;cron.none logged to remote host">
                        <ecl:command>egrep '^[[:space:]]*\*\.info;mail\.none;authpriv\.none;cron\.none[[:space:]]+@' /etc/syslog.conf /etc/rsyslog.conf</ecl:command>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="all" comment="'emerg' level logged to remote host">
                        <ecl:command>egrep '^[[:space:]]*\*\.emerg[[:space:]]+@' /etc/syslog.conf /etc/rsyslog.conf</ecl:command>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="all" comment="local7.* logged to remote host">
                        <ecl:command>egrep '^[[:space:]]*local7\.\*[[:space:]]+@' /etc/syslog.conf /etc/rsyslog.conf</ecl:command>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
        </xccdf:complex-check>
    </cdf:Rule>
  </cdf:Group>
  <cdf:Group id="file-directory-permissions" selected="true">
    <cdf:title>File/Directory Permissions/Access</cdf:title>
    <cdf:description>This group has recommendations on file permissions.</cdf:description>
    <cdf:Rule id="nodev-fstab" role="full" selected="false" weight="1.0">
      <cdf:title>Add 'nodev' Option To Appropriate Partitions In /etc/fstab</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:strong>Action:</htm:strong>
        </htm:p>
        <htm:p>
          <htm:code> cp -p /etc/fstab /etc/fstab.tmp <htm:br/> awk '($3 ~ /^ext[23]$/ &amp;&amp; $2 != "/") \ <htm:br/> { $4 = $4
                        ",nodev" }; \ <htm:br/> { print }' /etc/fstab.tmp &gt; /etc/fstab <htm:br/> chown root:root /etc/fstab <htm:br/> chmod
                        0644 /etc/fstab <htm:br/> rm -f /etc/fstab.tmp <htm:br/> diff /etc/fstab-preCIS /etc/fstab<htm:br/></htm:code>
        </htm:p>
        <htm:br/>
        <htm:p>
          <htm:strong>Discussion:</htm:strong>
        </htm:p>
        <htm:p>Placing "nodev" on these partitions prevents users from mounting unauthorized devices on any partitions that we know should not
                    contain devices. There should be little need to mount devices on any partitions other than <htm:code>/dev.</htm:code></htm:p>
        <htm:br/>
        <htm:p>One notable exception, of course, is the case where system programs are being placed into "chroot jails"- these often require
                    that several devices be created in the chroot directory. If you are using chroot jails on your machines, you should be careful
                    with the nodev option.</htm:p>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10920</ident>
      <xccdf:complex-check operator="AND">
        <xccdf:check system="http://cisecurity.org/check">
          <!--Add 'nodev' Option To Appropriate Partitions In /etc/fstab-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="command test «egrep '/[^\s#]+\s+(ext[23]|reiserfs)\s+' /etc/fstab|egrep -v '([^\s]+\s+){3}.*nodev.*\s+'»">
              <ecl:command>egrep '/[^\s#]+\s+(ext[23]|reiserfs)\s+' /etc/fstab|egrep -v '([^\s]+\s+){3}.*nodev.*\s+'</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/fstab ownership and permission-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="/etc/fstab ownership and permission">
              <ecl:command>find /etc/fstab -follow -maxdepth 0 ! \( -user root -group root -perm u=rw,g=r,o=r \) -ls</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </cdf:Rule>
    <cdf:Rule id="nodev-removable-media" role="full" selected="false" weight="1.0">
      <cdf:title>Add 'nosuid' and 'nodev' Option To Removable Media /etc/fstab</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:strong>Action:</htm:strong>
        </htm:p>
        <htm:p>
          <htm:code> cp -p /etc/fstab /etc/fstab.tmp <htm:br/> awk '($2 ~ /^\/m.*\/(floppy|cdrom)$/) &amp;&amp; \ <htm:br/> ($4 !~
                        /,nodev,nosuid/) \ <htm:br/> { $4 = $4, "nodev,nosuid" }; \ <htm:br/> { print }' /etc/fstab.tmp &gt; /etc/fstab <htm:br/>
                        chown root:root /etc/fstab <htm:br/> chmod 0644 /etc/fstab <htm:br/> rm -f /etc/fstab.tmp <htm:br/> diff /etc/fstab-preCIS
                        /etc/fstab<htm:br/></htm:code>
        </htm:p>
        <htm:br/>
        <htm:p>
          <htm:strong>Discussion:</htm:strong>
        </htm:p>
        <htm:p>Removable media is one vector by which malicious software can be introduced onto the system. By forcing these file systems to
                    be mounted with the nosuid option, the administrator prevents users from bringing set-UID programs onto the system via CDROMs and
                    floppy disks. We also force these filesystems to mount with the nodev option, as explained in item 2.1.7.1.<htm:br/><htm:br/> If
                    this machine has multiple CD-ROM or floppy drives, additional action must be taken. Simply add <htm:code>nosuid</htm:code> to the
                    fourth field for the <htm:code>/etc/fstab</htm:code> lines that reference those drives.<htm:br/></htm:p>
        <htm:br/>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10930</ident>
      <xccdf:complex-check operator="AND">
        <xccdf:check system="http://cisecurity.org/check">
          <!--Add 'nosuid' and 'nodev' Option For Removable Media In /etc/fstab-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="command test «egrep 'm.*/(floppy|cdrom)' /etc/fstab|grep -v 'nosuid';egrep 'm.*/(floppy|cdrom)' /etc/fstab|grep -v 'nodev'»">
              <ecl:command>egrep 'm.*/(floppy|cdrom)' /etc/fstab|grep -v 'nosuid';egrep 'm.*/(floppy|cdrom)' /etc/fstab|grep -v 'nodev'</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/fstab ownership and permission-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="/etc/fstab ownership and permission">
              <ecl:command>find /etc/fstab -follow -maxdepth 0 ! \( -user root -group root -perm u=rw,g=r,o=r \) -ls</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </cdf:Rule>
    <cdf:Rule id="disable-usermounted-filesystems" role="full" selected="false" weight="1.0">
      <cdf:title>Disable User-Mounted Removable File Systems</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:strong>Question:</htm:strong>
        </htm:p>
        <htm:p> Is there a mission-critical reason to allow unprivileged users to mount CD-ROMs and floppy disk file systems on this
                    system?<htm:br/><htm:br/> If the answer to this question is no, then perform the action below. </htm:p>
        <htm:br/>
        <htm:p>
          <htm:strong>Action:</htm:strong>
        </htm:p>
        <htm:p>
          <htm:code> cd /etc <htm:br/> cp fstab fstab.tmp<htm:br/> awk '/media/ { sub(/(users|user)/, "", $4); \ <htm:br/>
                        sub(/^,|,$/,"",$4); sub(/,,/,",",$4); \ <htm:br/> printf("%s\t%s\t%s\t%s\t%s\t%s\n", $1, $2, $3, $4, $5, $6); next} \
                        <htm:br/> { print }' fstab.tmp &gt; fstab<htm:br/> rm fstab.tmp<htm:br/></htm:code>
        </htm:p>
        <htm:br/>
        <htm:p>
          <htm:strong>Discussion:</htm:strong>
        </htm:p>
        <htm:p>By default, Debian allows unprivileged users to mount cdrom and floppy devices. Allowing users to mount and access data from
                    removable media drives makes it easier for malicious programs and data to be imported onto the network or data to be removed from
                    the server. This item removes the <htm:code>user</htm:code> and <htm:code>users</htm:code> options from these devices. Therefor
                    only allowing <htm:code>root</htm:code> to mount these devices.<htm:br/></htm:p>
        <htm:p>Note: By default, Debian mounts removable media beneath <htm:code>/media</htm:code>. The above script only modifies entries
                    within the <htm:code>fstab</htm:code> that are mounted to this location. As such, administrators should review the fstab to ensure
                    all removeable media devices lack the <htm:code>user</htm:code> or <htm:code>users</htm:code> option.<htm:br/></htm:p>
        <htm:br/>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10950</ident>
      <xccdf:check system="http://cisecurity.org/check">
        <!--Add 'nosuid' and 'nodev' Option For Removable Media In /etc/fstab-->
        <xccdf:check-content>
          <ecl:shell-command check="none exist" comment="command test «egrep media /etc/fstab|grep -v 'user,noauto'">
            <ecl:command>egrep media /etc/fstab|grep -v 'user,noauto'</ecl:command>
            <ecl:line-selection op="pm" value=".+"/>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </cdf:Rule>
    <cdf:Rule id="verify-authn-authz-files" role="full" selected="false" weight="1.0">
      <cdf:title>Verify passwd, shadow, and group File Permissions</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:strong>Action:</htm:strong>
        </htm:p>
        <htm:p>
          <htm:code> cd /etc <htm:br/> chown root:root passwd shadow group <htm:br/> chmod 644 passwd group <htm:br/> chmod 400
                        shadow<htm:br/></htm:code>
        </htm:p>
        <htm:br/>
        <htm:p>
          <htm:strong>Discussion:</htm:strong>
        </htm:p>
        <htm:p>These are the default owners and access permissions for these files. It is worthwhile to periodically check these file
                    permissions as there have been package defects that changed <htm:code>/etc/shadow</htm:code> permissions to 644. Tripwire (<htm:a href="http://www.tripwire.org/downloads/index.php">http://www.tripwire.org/downloads/index.php</htm:a>) and AIDE (<htm:a href="http://sourceforge.net/projects/aide">http://sourceforge.net/projects/aide</htm:a>) are excellent products for alerting
                    you to changes in these files. <htm:br/></htm:p>
        <htm:br/>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10960</ident>
      <xccdf:complex-check operator="AND">
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/passwd ownership and permission-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="/etc/passwd ownership and permission">
              <ecl:command>find /etc/passwd -follow -maxdepth 0 ! \( -user root -group root -perm 644 \) -ls</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/group ownership and permission-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="/etc/group ownership and permission">
              <ecl:command>find /etc/group -follow -maxdepth 0 ! \( -user root -group root -perm 644\) -ls</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/shadow ownership and permission-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="/etc/shadow ownership and permission">
              <ecl:command>find /etc/shadow -follow -maxdepth 0 ! \( -user root -group root -perm 400 \) -ls</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </cdf:Rule>
    <cdf:Rule id="world-writable-sticky" role="full" selected="false" weight="1.0">
      <cdf:title>World-Writable Directories Should Have Their Sticky Bit Set</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:strong>Action:</htm:strong>
        </htm:p>
        <htm:p>
          <htm:code> for PART in `awk '($3 == "ext2" || $3 == "ext3") \ <htm:br/> { print $2 }' /etc/fstab`; do <htm:br/> find $PART -xdev
                        -type d \ <htm:br/> \( -perm -0002 -a ! -perm -1000 \) -print<htm:br/> done <htm:br/></htm:code>
        </htm:p>
        <htm:br/>
        <htm:p>
          <htm:strong>Discussion:</htm:strong>
        </htm:p>
        <htm:p>When the so-called "sticky bit" is set on a directory, then only the owner of a file may remove that file from the directory
                    (as opposed to the usual behavior where anybody with write access to that directory may remove the file). Setting the sticky bit
                    prevents users from overwriting each other's files, whether accidentally or maliciously, and is generally appropriate for most
                    world-writable directories. However, consult appropriate vendor documentation before blindly applying the sticky bit to any world
                    writable directories found in order to avoid breaking any application dependencies on a given directory.<htm:br/></htm:p>
        <htm:br/>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10980</ident>
      <xccdf:check system="http://cisecurity.org/check">
        <!--World-Writable Directories Should Have Their Sticky Bit Set-->
        <xccdf:check-content>
          <ecl:shell-command check="none exist" comment="command test «for PART in `awk '($3 ~ &quot;ext2|ext3|reiserfs&quot;) { print $2 }' /etc/fstab`; do find $PART -xdev -type d \( -perm -0002 -a ! -perm -1000 \) -ls; done»">
            <ecl:command>for PART in `awk '($3 ~ "ext2|ext3|reiserfs") { print $2 }' /etc/fstab`; do find $PART -xdev -type d \( -perm
                            -0002 -a ! -perm -1000 \) -ls; done</ecl:command>
            <ecl:line-selection op="pm" value=".+"/>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </cdf:Rule>
    <cdf:Rule id="world-writable-files" role="full" selected="false" weight="1.0">
      <cdf:title>Find Unauthorized World-Writable Files</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:strong>Action:</htm:strong>
        </htm:p>
        <htm:p>
          <htm:code> for PART in $(grep -v '^#' /etc/fstab | <htm:br/> awk '($6 != "0") { print $2 }' ); do<htm:br/> find $PART -xdev -type
                        f \<htm:br/> \( -perm -0002 -a ! -perm -1000 \) -print <htm:br/> done<htm:br/></htm:code>
          <htm:br/> There should be no entries returned. </htm:p>
        <htm:br/>
        <htm:p>
          <htm:strong>Discussion:</htm:strong>
        </htm:p>
        <htm:p>Data in world-writable files can be modified and compromised by any user on the system. World-writable files may also indicate
                    an incorrectly written script or program that could potentially be the cause of a larger compromise to the system's
                    integrity.<htm:br/></htm:p>
        <htm:br/>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10990</ident>
      <xccdf:check system="http://cisecurity.org/check">
        <!--Unauthorized World-Writable Files-->
        <xccdf:check-content>
          <ecl:shell-command check="none exist" comment="command test «for PART in `awk '(!/^#/ &amp;&amp; $6 != &quot;0&quot;) { print $2 }' /etc/fstab`; do find $PART -xdev -type f \( -perm -0002 -a ! -perm -1000 \) -ls 2&gt;/dev/null; done»">
            <ecl:command>for PART in `awk '(!/^#/ &amp;&amp; $6 != "0") { print $2 }' /etc/fstab`; do find $PART -xdev -type f \(
                            -perm -0002 -a ! -perm -1000 \) -ls 2&gt;/dev/null; done</ecl:command>
            <ecl:line-selection op="pm" value=".+"/>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </cdf:Rule>
    <cdf:Rule id="world-suid-files" role="full" selected="false" weight="1.0">
      <cdf:title>Find Unauthorized SUID/SGID System Executables</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:strong>Action:</htm:strong>
        </htm:p>
        <htm:p>
          <htm:code> for PART in $(grep -v '^#' /etc/fstab | awk '($6 != "0") { <htm:br/> print $2 }' ); do <htm:br/> find $PART -xdev \(
                        -perm -04000 -o -perm -02000 \) \ <htm:br/> -type f -print <htm:br/> done<htm:br/></htm:code>
          <htm:br/>
        </htm:p>
        <htm:br/>
        <htm:p>
          <htm:strong>Discussion:</htm:strong>
        </htm:p>
        <htm:p>The administrator should take care to ensure that no rogue set-UID programs have been introduced into the system. In addition,
                    if possible, the administrator should attempt a Set-UID audit and reduction.<htm:br/></htm:p>
        <htm:br/>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">11010</ident>
      <xccdf:check system="http://cisecurity.org/check">
        <!--Unauthorized SUID/SGID System Executables-->
        <xccdf:check-content>
          <ecl:shell-command check="none exist" comment="command test «for PART in `awk '(!/^#/ &amp;&amp; $6 != &quot;0&quot;) { print $2 }' /etc/fstab`; do find $PART \( -perm -04000 -o -perm -02000 \) -type f -xdev -ls 2&gt;/dev/null; done»">
            <ecl:command>for PART in `awk '(!/^#/ &amp;&amp; $6 != "0") { print $2 }' /etc/fstab`; do find $PART \( -perm -04000
                            -o -perm -02000 \) -type f -xdev -ls 2&gt;/dev/null; done</ecl:command>
            <ecl:line-selection op="pm" value=".+"/>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </cdf:Rule>
    <cdf:Rule id="find-unowned-files" role="full" selected="false" weight="1.0">
      <cdf:title>Find All Unowned Files</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:strong>Action:</htm:strong>
        </htm:p>
        <htm:p>
          <htm:code> for PART in $(grep -v '^#' /etc/fstab | awk '($6 != "0") { <htm:br/> print $2 }'); do <htm:br/> find $PART -xdev
                        -nouser -o -nogroup -print <htm:br/> done <htm:br/></htm:code>
          <htm:br/>
        </htm:p>
        <htm:br/>
        <htm:p>
          <htm:strong>Discussion:</htm:strong>
        </htm:p>
        <htm:p>Do not allow any unowned files on your system. Unowned files may be an indication an intruder has accessed your system or
                    improper package maintenance/installation. Sometimes a package removal results in unowned files or directories related to this
                    software as the user/group associated with that package is removed, but that user's files (i.e., files changed after the package
                    was installed) are left behind. Another common cause is the installation of software that does not properly set file
                    ownerships.<htm:br/><htm:br/>Files in any NFS mounts may be ignored as the user ID mapping between systems may be out of sync. If
                    your enterprise uses a central user management system (NIS or LDAP), the presence of unowned files may indicate another problem
                    and should be investigated.<htm:br/></htm:p>
        <htm:br/>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">11020</ident>
      <xccdf:check system="http://cisecurity.org/check">
        <!--Unowned Files-->
        <xccdf:check-content>
          <ecl:shell-command check="none exist" comment="command test «for PART in `awk '(!/^#/ &amp;&amp; $6 != &quot;0&quot;) { print $2 }' /etc/fstab`; do find $PART -xdev \( -nouser -o -nogroup \) -ls 2&gt;/dev/null; done»">
            <ecl:command>for PART in `awk '(!/^#/ &amp;&amp; $6 != "0") { print $2 }' /etc/fstab`; do find $PART -xdev \( -nouser
                            -o -nogroup \) -ls 2&gt;/dev/null; done</ecl:command>
            <ecl:line-selection op="pm" value="^.+$"/>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </cdf:Rule>
    <cdf:Rule id="disable-usb" role="full" selected="false" weight="1.0">
      <cdf:title>Disable USB Devices</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:strong>Question:</htm:strong>
        </htm:p> Is there a mission-critical reason to allow use of PCMCIA or USB-based devices on this system?<htm:br/><htm:br/> If the
                answer to this question is no, then perform the action below.<htm:br/><htm:br/><htm:p><htm:strong>Action:</htm:strong></htm:p><htm:p><htm:code> K=$(uname -a | awk '{print $3}')<htm:br/> aptitude remove pcmcia-cs<htm:br/> aptitude remove
                        kernel-pcmcia-modules-$K<htm:br/> aptitude remove pcmcia-modules-$K<htm:br/> aptitude remove hotplug<htm:br/></htm:code><htm:br/></htm:p><htm:br/><htm:p><htm:strong>Discussion:</htm:strong></htm:p><htm:p>PCMCIA cards, USB drives and memory devices represent another attack vector against your systems. The prices for a 512MB or
                    even 1GB USB memory device have become very affordable, and is enough storage to transport vast quantities of data off a system.
                    Few servers have any need for PCMCIA or USB devices and this whole avenue should be disabled.<htm:br/><htm:br/> Another possible
                    attack would be to have a bootable Linux system installed on the USB device. Most modern BIOS' allow booting from USB devices, so
                    this would let a person with physical access to a server an extremely easy way take over a system and bypass some of the security
                    you are setting up. See the discussion regarding floppy and CD-ROM drives in section 7.2.<htm:br/><htm:br/> For these reasons, you
                    should also disable USB in the BIOS if possible.<htm:br/><htm:br/></htm:p><htm:br/></cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">11030</ident>
      <xccdf:complex-check operator="AND">
        <xccdf:check system="http://cisecurity.org/check">
          <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Package 'hotplug' not installed">
                  <ecl:command>dpkg -l | egrep "ii[[:space:]]+hotplug[[:space:]]"</ecl:command>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="Package 'pcmcia-cs' not installed">
                  <ecl:command>dpkg -l | egrep "ii[[:space:]]+pcmcia-cs[[:space:]]"</ecl:command>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </cdf:Rule>
  </cdf:Group>
  <cdf:Group id="system-access-authn-authz">
    <cdf:title>System Access, Authentication, and Authorization</cdf:title>
    <cdf:description>This group specifies recommendations for system access, authentication and authorization.</cdf:description>
    <cdf:Rule id="remote-rhosts-pam" role="full" selected="false" weight="1.0">
      <cdf:title>Remove .rhosts Support In PAM Configuration Files</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:p>
            <htm:strong>Action:</htm:strong>
          </htm:p>
          <htm:code> for FILE in /etc/pam.d/*; do <htm:br/> grep -v rhosts_auth $FILE &gt; ${FILE}.tmp <htm:br/> mv -f ${FILE}.tmp $FILE
                        <htm:br/> chown root:root $FILE <htm:br/> chmod 644 $FILE done<htm:br/></htm:code>
          <htm:br/>
        </htm:p>
        <htm:br/>
        <htm:p>
          <htm:strong>Discussion:</htm:strong>
        </htm:p>
        <htm:p>Used in conjunction with the BSD-style "r-commands" (rlogin, rsh, rcp), the .rhosts files implement a weak form of
                    authentication based on the network address or host name of the remote computer (which can be spoofed by a potential attacker to
                    exploit the local system). Disabling .rhosts support helps prevent users from subverting the system's normal access control
                    mechanisms.<htm:br/><htm:br/> If .rhosts support is required for some reason, some basic precautions should be taken when creating
                    and managing .rhosts files. Never use the "+" wildcard character in .rhosts files. In fact, .rhosts entries should always specify
                    a specific trusted host name along with the user name of the trusted account on that system (e.g., "trustedhost alice" and not
                    just "trustedhost"). Avoid establishing trust relationships with systems outside of the organization's security perimeter and/or
                    systems not controlled by the local administrative staff. Firewalls and other network security elements should actually block
                    rlogin/rsh/rcp access from external hosts.<htm:br/><htm:br/> Finally, make sure that .rhosts files are only readable by the owner
                    of the file (i.e., these files should be mode 600).<htm:br/></htm:p>
        <htm:br/>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">11130</ident>
      <xccdf:complex-check operator="AND">
        <xccdf:check system="http://cisecurity.org/check">
          <!--/usr/bin/rlogin ownership and permission-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="/usr/bin/rlogin ownership and permission">
              <ecl:command>find /usr/bin/rlogin -follow -maxdepth 0 ! \( -perm u=,g=,o= \) -ls</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/usr/bin/rsh ownership and permission-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="/usr/bin/rsh ownership and permission">
              <ecl:command>find /usr/bin/rsh -follow -maxdepth 0 ! \( -perm u=,g=,o= \) -ls</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/usr/bin/rcp ownership and permission-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="/usr/bin/rcp ownership and permission">
              <ecl:command>find /usr/bin/rcp -follow -maxdepth 0 ! \( -perm u=,g=,o= \) -ls</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </cdf:Rule>
    <cdf:Rule id="create-ftpusers" role="full" selected="false" weight="1.0">
      <cdf:title>Create ftpusers file</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:p>
            <htm:strong>Action:</htm:strong>
          </htm:p>
          <htm:code> for NAME in `cut -d: -f1 /etc/passwd`; do <htm:br/> if [ `id -u $NAME` -lt 500 ]; then <htm:br/> echo $NAME
                        &gt;&gt; /etc/ftpusers <htm:br/> fi <htm:br/> done <htm:br/> chown root:root /etc/ftpusers <htm:br/> chmod 600
                        /etc/ftpusers <htm:br/> [ -e /etc/ftpusers-preCIS ] &amp;&amp; \ <htm:br/> diff /etc/ftpusers-preCIS
                        /etc/ftpusers<htm:br/><htm:br/> VSFTP_CONF="/etc/vsftpd.conf"<htm:br/> ALT_CONF="/etc/vsftpd.conf"<htm:br/> test -f $ALT_CONF
                        &amp;&amp; VSFTP_CONF=$ALT_CONF<htm:br/> if [ -e $VSFTP_CONF ] &amp;&amp; <htm:br/> ! grep -q
                        "^userlist_deny=NO" $VSFTP_CONF; then <htm:br/> cp -fp /etc/ftpusers /etc/vsftpd.ftpusers<htm:br/> [ -e
                        /etc/vsftpd.ftpusers-preCIS ] &amp;&amp; <htm:br/> diff /etc/vsftpd.ftpusers-preCIS /etc/vsftpd.ftpusers <htm:br/>
                        fi<htm:br/></htm:code>
          <htm:br/>
        </htm:p>
        <htm:br/>
        <htm:p>
          <htm:strong>Discussion:</htm:strong>
        </htm:p>
        <htm:p>
          <htm:code>/etc/ftpusers</htm:code> and <htm:code>/etc/vsftp.ftpusers</htm:code> contain a list of users who are not allowed to
                    access the system via WU-FTPd and vsftpd, respectively. Generally, only normal users should ever access the system via FTP-there
                    should be no reason for "system" type accounts to be transferring information via this mechanism. Certainly the root account
                    should never be allowed to transfer files directly via FTP.<htm:br/><htm:br/> If vsftpd is used, it may be desirable to reverse
                    the usage of the users file to be a list of users who ARE able to ftp to the server, instead of a list of users who are NOT able
                    to ftp into the server. This provides greater control and safety in denying the ftp usage by default for users NOT listed. To
                    reverse the meaning of the vsftpd users list file set <htm:code>userlist_deny=NO</htm:code> in the vsftpd.conf file. The script
                    above attempts to check for the <htm:code>userlist_deny</htm:code> vsftpd setting and will not create or modify the default vsftpd
                    user list file if the value is NO. It is important to carefully test your configuration after these changes to be sure that only
                    the expected users are allowed to login via ftp.<htm:br/></htm:p>
        <htm:br/>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">11180</ident>
      <xccdf:check system="http://cisecurity.org/check">
        <!--/etc/ftpusers ownership and permission-->
        <xccdf:check-content>
          <ecl:shell-command check="none exist" comment="/etc/ftpusers ownership and permission">
            <ecl:command>find /etc/ftpusers -follow -maxdepth 0 ! \( -user root -group root -perm u=rw,g=,o= \) -ls</ecl:command>
            <ecl:line-selection op="pm" value=".+"/>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </cdf:Rule>
    <cdf:Rule id="prevent-X-port-6000" role="full" selected="false" weight="1.0">
      <cdf:title>Prevent X Server From Listening On Port 6000/tcp</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:p>
            <htm:strong>Action:</htm:strong>
          </htm:p>
          <htm:code> if [ -e /etc/X11/xdm/Xservers ]; then <htm:br/> cd /etc/X11/xdm <htm:br/> awk '($1 !~ /^#/ &amp;&amp; $3 ==
                        "/usr/X11R6/bin/X") \ <htm:br/> { $3 = $3 " -nolisten tcp" }; <htm:br/> { print }' Xservers-preCIS &gt; Xservers <htm:br/>
                        chown root:root Xservers <htm:br/> chmod 444 Xservers <htm:br/> diff Xservers-preCIS Xservers <htm:br/> fi <htm:br/><htm:br/>
                        if [ -e /etc/X11/gdm/gdm.conf ]; then <htm:br/> cd /etc/X11/gdm <htm:br/> awk -F= '($2 ~ /\/X$/) \ <htm:br/> { printf("%s
                        -nolisten tcp\n", $0); next }; <htm:br/> { print }' gdm.conf-preCIS &gt; gdm.conf <htm:br/> diff gdm.conf-preCIS gdm.conf
                        <htm:br/> chown root:root gdm.conf <htm:br/> chmod 644 gdm.conf <htm:br/> fi <htm:br/><htm:br/> if [ -d /etc/X11/xinit ]; then
                        <htm:br/> cd /etc/X11/xinit <htm:br/> if [ -e xserverrc ]; then awk '/X/ &amp;&amp; !/^#/ \ <htm:br/> { print $0 " :0
                        -nolisten tcp \$@"; next }; \ <htm:br/> { print }' xserverrc-preCIS &gt; xserverrc <htm:br/> else <htm:br/> cat
                        &lt;&lt;END &amp; xserverrc <htm:br/> #!/bin/bash exec X :0 -nolisten tcp \$@ END <htm:br/> fi<htm:br/> chown
                        root:root xserverrc <htm:br/> chmod 755 xserverrc <htm:br/> [ -e xserverrc-preCIS ] &amp;&amp; \ <htm:br/> diff
                        xserverrc-preCIS xserverrc <htm:br/> fi<htm:br/></htm:code>
          <htm:br/>
        </htm:p>
        <htm:br/>
        <htm:p>
          <htm:strong>Discussion:</htm:strong>
        </htm:p>
        <htm:p>X servers listen on port 6000/tcp for messages from remote clients running on other systems. However, X Windows uses a
                    relatively insecure authentication protocol and an attacker who is able to gain unauthorized access to the local X server can
                    easily compromise the system. Invoking the "-nolisten tcp" option causes the X server not to listen on port 6000/tcp by default.
                    This prevents authorized remote X clients from displaying windows on the local system as well. However, the forwarding of X events
                    via SSH will still happen normally. This is the preferred and more secure method transmitting results from remote X clients in any
                    event.<htm:br/></htm:p>
        <htm:br/>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">11230</ident>
        <xccdf:complex-check operator="AND">       
            <xccdf:check system="http://cisecurity.org/check">
                <xccdf:check-content>
                    <ecl:shell-command check="none exist" comment="Port 6000 is not listening">
                        <ecl:command>netstat --numeric-ports -l | egrep '.*:6000[[:space:]]+.*LIST'</ecl:command>
                    </ecl:shell-command>
                </xccdf:check-content>
            </xccdf:check>
            <xccdf:complex-check operator="OR">
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command check="none exist" comment="/etc/X11/xinit/xserverrc does not exist" pass="fail">
                            <ecl:command>ls /etc/X11/xinit/xserverrc</ecl:command>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command check="all" comment="/etc/X11/xinit/xserverrc configured with '-nolisten'" success="pass">
                            <ecl:command>egrep '^exec[[:space:]]+X[[:space:]]+:0[[:space:]]+-nolisten[[:space:]]+tcp[[:space:]]+' /etc/X11/xinit/xserverrc</ecl:command>
                            <ecl:line-selection op="pm" value="^.*$"/>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:complex-check>
        </xccdf:complex-check>
    </cdf:Rule>
    <cdf:Rule id="restrict-at-cron" role="full" selected="false" weight="1.0">
      <cdf:title>Restrict at/cron To Authorized Users</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:p>
            <htm:strong>Action:</htm:strong>
          </htm:p>
          <htm:code> cd /etc/ <htm:br/> rm -f cron.deny at.deny <htm:br/> echo root &gt; cron.allow <htm:br/> [ -e cron.allow-preCIS ]
                        &amp;&amp; \ <htm:br/> diff cron.allow-preCIS cron.allow <htm:br/> echo root &gt; at.allow <htm:br/> [ -e
                        at.allow-preCIS ] &amp;&amp; \ <htm:br/> diff at.allow-preCIS at.allow <htm:br/> chown root:root cron.allow at.allow
                        <htm:br/> chmod 400 cron.allow at.allow<htm:br/></htm:code>
          <htm:br/>
        </htm:p>
        <htm:br/>
        <htm:p>
          <htm:strong>Discussion:</htm:strong>
        </htm:p>
        <htm:p>The <htm:code>cron.allow</htm:code> and <htm:code>at.allow</htm:code> files are a list of users who are allowed to run the
                        <htm:code>crontab</htm:code> and <htm:code>at</htm:code> commands to submit jobs to be run at scheduled intervals. On many
                    systems, only the system administrator needs the ability to schedule jobs. Note that even though a given user is not listed in
                        <htm:code>cron.allow</htm:code>, cron jobs can still be run as that user. <htm:code>cron.allow</htm:code> only controls
                    administrative access to the <htm:code>crontab</htm:code> command for scheduling and modifying <htm:code>cron
                    jobs</htm:code>.<htm:br/></htm:p>
        <htm:br/>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">11300</ident>
      <xccdf:complex-check operator="AND">
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/cron.deny does not exist-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="/etc/cron.deny does not exist" success="fail">
              <ecl:command>ls /etc/cron.deny</ecl:command>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/at.deny does not exist-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="/etc/at.deny does not exist" success="fail">
              <ecl:command>ls /etc/at.deny</ecl:command>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--command test «egrep -v root /etc/cron.allow»-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="command test «egrep -v root /etc/cron.allow»" success="fail">
              <ecl:command>egrep -v root /etc/cron.allow</ecl:command>
              <ecl:line-selection op="pm" value="^.+$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--command test «egrep -v root /etc/at.allow»-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="command test «egrep -v root /etc/at.allow»" success="fail">
              <ecl:command>egrep -v root /etc/at.allow</ecl:command>
              <ecl:line-selection op="pm" value="^.+$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/cron.allow ownership and permission-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="/etc/cron.allow ownership and permission">
              <ecl:command>find /etc/cron.allow -follow -maxdepth 0 ! \( -user root -group root -perm u=r,g=,o= \) -ls</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/at.allow ownership and permission-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="/etc/at.allow ownership and permission">
              <ecl:command>find /etc/at.allow -follow -maxdepth 0 ! \( -user root -group root -perm u=r,g=,o= \) -ls</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </cdf:Rule>
    <cdf:Rule id="restrict-crontab-files" role="full" selected="false" weight="1.0">
      <cdf:title>Restrict Permissions on crontab files</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:p>
            <htm:strong>Action:</htm:strong>
          </htm:p>
          <htm:code> chown root:root /etc/crontab <htm:br/> chmod 400 /etc/crontab <htm:br/> chown -R root:root /var/spool/cron <htm:br/>
                        chmod -R go-rwx /var/spool/cron <htm:br/> cd /etc <htm:br/> ls | grep cron | grep -v preCIS | xargs chown -R root:root
                        <htm:br/> ls | grep cron | grep -v preCIS | xargs chmod -R go-rwx<htm:br/></htm:code>
          <htm:br/>
        </htm:p>
        <htm:br/>
        <htm:p>
          <htm:strong>Discussion:</htm:strong>
        </htm:p>
        <htm:p>The system <htm:code>crontab</htm:code> files are accessed only by the cron daemon (which runs with superuser privileges) and
                    the <htm:code>crontab</htm:code> command (which is set-UID to root). Allowing unprivileged users to read or (even worse) modify
                    system <htm:code>crontab</htm:code> files can create the potential for a local user on the system to gain elevated
                    privileges.<htm:br/></htm:p>
        <htm:br/>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">11290</ident>
      <xccdf:complex-check operator="AND">
        <xccdf:complex-check operator="AND">
          <!--/etc/crontab-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--/etc/crontab ownership and permission-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="/etc/crontab ownership and permission">
                <ecl:command>find /etc/crontab -follow -maxdepth 0 ! \( -user root -group root -perm u=r,g=,o= \) -ls</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="AND">
          <!--/var/spool/cron-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--command test «find /var/spool/cron ! \( -user root -group root \) -ls»-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="command test «find /var/spool/cron ! \( -user root -group root \) -ls»">
                <ecl:command>find /var/spool/cron ! \( -user root -group root \) -ls</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="AND">
          <!--/etc/*cron*-->
          <xccdf:check system="http://cisecurity.org/check">
            <!--command test «find /etc -maxdepth 0 -name '*cron*' ! \( -user root -group root -perm g=,o= \) -ls»-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="command test «find /etc -maxdepth 0 -name '*cron*' ! \( -user root -group root -perm g=,o= \) -ls»">
                <ecl:command>find /etc -maxdepth 0 -name '*cron*' ! \( -user root -group root -perm g=,o= \) -ls</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
      </xccdf:complex-check>
    </cdf:Rule>
    <cdf:Rule id="xinetd-acls" role="unscored" selected="false" weight="0.0">
      <cdf:title>Configure xinetd Access Control</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:p>
            <htm:strong>Action:</htm:strong>
          </htm:p> Insert the following line into the "defaults" block in <htm:code>/etc/xinetd.conf</htm:code>:<htm:br/><htm:br/><htm:code> only_from = &lt;net&gt;/&lt;num_bits&gt; &lt;net&gt;/&lt;num_bits&gt;<htm:br/></htm:code><htm:br/> where each &lt;net&gt;/&lt;num_bits&gt; combination represents one network block in use by your
                    <htm:br/> organization. For example:<htm:br/><htm:br/><htm:code>only_from = 192.168.1.0/24</htm:code><htm:br/> would restrict connections to only the 192.168.1.0/24 network, with the
                    netmask 255.255.255.0.<htm:br/><htm:br/> Note: There are two &lt;TAB&gt;'s between the only_from and the = in the above
                    lines. <htm:br/></htm:p>
        <htm:br/>
        <htm:p>
          <htm:strong>Discussion:</htm:strong>
        </htm:p>
        <htm:p>This item configures <htm:code>xinetd</htm:code> to use simple IP-based access control and log connections. Just as
                        <htm:code>xinetd</htm:code>'s access control mechanisms are used to monitor illicit connection attempts, the popular
                    PortSentry tool (<htm:a href="http://www.psionic.com/products/portsentry.html">http://www.psionic.com/products/portsentry.html</htm:a>) can be used to monitor access attempts on unused ports. Note that
                    running PortSentry may result in the CIS testing tools reporting "false positives" for "active" ports that are actually being held
                    by the PortSentry daemon. Consider replacing the PortSentry daemon with PSAD, short for Port Scan Attack Detector, available from
                        <htm:a href="http://www.cipherdyne.com/psad/">http://www.cipherdyne.com/psad/</htm:a>. Unlike PortSentry, PSAD doesn't have to
                    hold open ports -- instead, it communicates directly with the kernel.<htm:br/></htm:p>
        <htm:br/>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">11260</ident>
    </cdf:Rule>
    <cdf:Rule id="restrict-root-login" role="full" selected="false" weight="1.0">
      <cdf:title>Restrict Root Logins To System Console</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:p>
            <htm:strong>Action:</htm:strong>
          </htm:p>
          <htm:code> rm -f /etc/securetty<htm:br/> echo console &gt;&gt; /etc/securetty<htm:br/> for i in `seq 1 11`; do <htm:br/>
                        echo vc/$i &gt;&gt; /etc/securetty <htm:br/> done<htm:br/> for i in `seq 1 6`; do <htm:br/> echo tty$i
                        &gt;&gt; /etc/securetty<htm:br/> done<htm:br/> chown root:root /etc/securetty <htm:br/> chmod 400 /etc/securetty
                        <htm:br/> diff /etc/securetty-preCIS /etc/securetty<htm:br/></htm:code>
          <htm:br/>
        </htm:p>
        <htm:br/>
        <htm:p>
          <htm:strong>Discussion:</htm:strong>
        </htm:p>
        <htm:p>Anonymous root logins should never be allowed, except on the system console in emergency situations. At all other times, the
                    administrator should access the system via an unprivileged account and use some authorized mechanism (such as the su command, or
                    the freely-available sudo package) to gain additional privileges. These mechanisms provide at least some audit trail in the event
                    of problems.<htm:br/><htm:br/> Many enterprises – who use serial port concentrators to connect to a server in a data center
                    without physically having to use the keyboard – consider the serial port a console. This is in keeping with the Unix server
                    tradition of controlling headless Unix machines using a serial port console. Just like the virtual consoles, this one needs
                    protected as well. If this applies to your organization, you may execute these lines:<htm:br/><htm:br/><htm:code> echo ttyS0 &gt;&gt; /etc/securetty <htm:br/> echo ttyS1 &gt;&gt; /etc/securetty<htm:br/></htm:code><htm:br/> Be advised that doing so will reduce your CIS Scoring Tool score and reduce your security posture. </htm:p>
        <htm:br/>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">11310</ident>
      <xccdf:complex-check operator="AND">
        <xccdf:complex-check operator="AND">
          <xccdf:check system="http://cisecurity.org/check">
            <!--/etc/securetty text content-->
            <xccdf:check-content>
              <ecl:file-content check="at least one" comment="/etc/securetty text content">
                <ecl:path>/etc/securetty</ecl:path>
                <ecl:line-selection op="pm" value="^(.+)$">
                  <ecl:regex-group group="1" op="eq" value="console"/>
                </ecl:line-selection>
              </ecl:file-content>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--/etc/securetty text content-->
            <xccdf:check-content>
              <ecl:file-content check="at least one" comment="/etc/securetty text content">
                <ecl:path>/etc/securetty</ecl:path>
                <ecl:line-selection op="pm" value="^(.+)$">
                  <ecl:regex-group group="1" op="eq" value="tty1"/>
                </ecl:line-selection>
              </ecl:file-content>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--/etc/securetty text content-->
            <xccdf:check-content>
              <ecl:file-content check="at least one" comment="/etc/securetty text content">
                <ecl:path>/etc/securetty</ecl:path>
                <ecl:line-selection op="pm" value="^(.+)$">
                  <ecl:regex-group group="1" op="eq" value="tty2"/>
                </ecl:line-selection>
              </ecl:file-content>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--/etc/securetty text content-->
            <xccdf:check-content>
              <ecl:file-content check="at least one" comment="/etc/securetty text content">
                <ecl:path>/etc/securetty</ecl:path>
                <ecl:line-selection op="pm" value="^(.+)$">
                  <ecl:regex-group group="1" op="eq" value="tty3"/>
                </ecl:line-selection>
              </ecl:file-content>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--/etc/securetty text content-->
            <xccdf:check-content>
              <ecl:file-content check="at least one" comment="/etc/securetty text content">
                <ecl:path>/etc/securetty</ecl:path>
                <ecl:line-selection op="pm" value="^(.+)$">
                  <ecl:regex-group group="1" op="eq" value="tty4"/>
                </ecl:line-selection>
              </ecl:file-content>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--/etc/securetty text content-->
            <xccdf:check-content>
              <ecl:file-content check="at least one" comment="/etc/securetty text content">
                <ecl:path>/etc/securetty</ecl:path>
                <ecl:line-selection op="pm" value="^(.+)$">
                  <ecl:regex-group group="1" op="eq" value="tty5"/>
                </ecl:line-selection>
              </ecl:file-content>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--/etc/securetty text content-->
            <xccdf:check-content>
              <ecl:file-content check="at least one" comment="/etc/securetty text content">
                <ecl:path>/etc/securetty</ecl:path>
                <ecl:line-selection op="pm" value="^(.+)$">
                  <ecl:regex-group group="1" op="eq" value="tty6"/>
                </ecl:line-selection>
              </ecl:file-content>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/securetty ownership and permission-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="/etc/securetty ownership and permission">
              <ecl:command>find /etc/securetty -follow -maxdepth 0 ! \( -user root -group root -perm u=r,g=,o= \) -ls</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </cdf:Rule>
    <cdf:Rule id="bootloader-password" role="full" selected="false" weight="1.0">
      <cdf:title>Set LILO/GRUB Password</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:strong>
            <htm:i>Note: Bastille configuration set to 'No'</htm:i>
          </htm:strong>
          <htm:br/>
          <htm:br/>
          <htm:p>
            <htm:strong>Action (if you have an /etc/lilo.conf file):</htm:strong>
          </htm:p>
          <htm:p>Add the following lines to the beginning of /etc/lilo.conf</htm:p>
          <htm:code> restricted<htm:br/> password=&lt;password&gt;<htm:br/></htm:code>
          <htm:br/>
          <htm:p>
            <htm:strong>Action (if you have an /boot/grub/menu.lst file):</htm:strong>
          </htm:p>
          <htm:p>Begin by executing <htm:code>grub-md5-crypt</htm:code> to generate the value provided to the <htm:code>password</htm:code>
                        parameter within menu.lst.</htm:p>
          <htm:p>Copy the value provded by <htm:code>grub-md5-crypt</htm:code> and place the following before the first uncommented line
                        within menu.lst</htm:p>
          <htm:br/>
          <htm:code> password --md5 &lt;password&gt; </htm:code>
        </htm:p>
        <htm:br/>
        <htm:p>
          <htm:strong>Discussion:</htm:strong>
        </htm:p>
        <htm:p>By default on most Linux systems, the boot loader prompt allows an attacker to subvert the normal boot process very easily. The
                    action above will allow the system to boot normally, only requiring a password when the user attempts to modify the boot process
                    by passing commands to LILO or GRUB. Make sure to replace &lt;password&gt; in the actions above with a good password.</htm:p>
        <htm:br/>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">11340</ident>
      <xccdf:complex-check operator="AND">
        <xccdf:complex-check operator="OR">
          <!--LILO -->
          <xccdf:check system="http://cisecurity.org/check">
            <!--/etc/lilo.conf does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="/etc/lilo.conf does not exist" success="fail">
                <ecl:command>/usr/bin/test -e /etc/lilo.conf</ecl:command>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
              <!--/etc/lilo.conf text content-->
              <xccdf:check-content>
                <ecl:file-content check="at least one" comment="/etc/lilo.conf text content">
                  <ecl:path>/etc/lilo.conf</ecl:path>
                  <ecl:line-selection op="pm" value="^restricted$"/>
                </ecl:file-content>
              </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
              <!--/etc/lilo.conf text content-->
              <xccdf:check-content>
                <ecl:file-content check="at least one" comment="/etc/lilo.conf text content">
                  <ecl:path>/etc/lilo.conf</ecl:path>
                  <ecl:line-selection op="pm" value="^password=.+$"/>
                </ecl:file-content>
              </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
              <!--/etc/lilo.conf ownership and permission-->
              <xccdf:check-content>
                <ecl:shell-command check="none exist" comment="/etc/lilo.conf ownership and permission">
                  <ecl:command>find /etc/lilo.conf -follow -maxdepth 0 ! \( -user root -group root -perm u=rw,g=,o= \) -ls</ecl:command>
                  <ecl:line-selection op="pm" value=".+"/>
                </ecl:shell-command>
              </xccdf:check-content>
            </xccdf:check>
          </xccdf:complex-check>
        </xccdf:complex-check>
        <!-- GRUB -->
        <xccdf:complex-check operator="OR">
          <xccdf:check system="http://cisecurity.org/check">
            <!--/boot/grub/menu.lst does not exist-->
            <xccdf:check-content>
              <ecl:shell-command check="none exist" comment="/boot/grub/menu.lst does not exist" success="fail">
                <ecl:command>/usr/bin/test -e /boot/grub/menu.lst</ecl:command>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!-- /boot/grub/menu.lst contains md5 password directive -->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="/boot/grub/menu.lst contains md5 password directive">
                <ecl:command>egrep '^[[:space:]]*password[[:space:]]+--md5[[:space:]]+[[:graph:]]+' /boot/grub/menu.lst</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
      </xccdf:complex-check>
    </cdf:Rule>
    <cdf:Rule id="auth-single-user" role="unscored" selected="false" weight="0.0">
      <cdf:title>Require Authentication For Single-User Mode</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:p>
            <htm:strong>Action:</htm:strong>
          </htm:p>
          <htm:code> cd /etc <htm:br/> if [ "`grep -l sulogin inittab`" = "" ]; then <htm:br/> awk '{ print };
                        /^id:[0123456sS]:initdefault:/ \ <htm:br/> { print "~~:S:wait:/sbin/sulogin" }' \ inittab &gt; inittab.tmp <htm:br/> mv -f
                        inittab.tmp inittab <htm:br/> chown root:root inittab <htm:br/> chmod 644 inittab <htm:br/> fi <htm:br/> diff inittab-preCIS
                        inittab<htm:br/></htm:code>
          <htm:br/>
        </htm:p>
        <htm:br/>
        <htm:p>
          <htm:strong>Discussion:</htm:strong>
        </htm:p>
        <htm:p> By default on Debian Linux, you can enter single user mode simply by typing "linux single" at the LILO prompt or in the GRUB
                    boot-editing menu. Some believe that this is left in to ease support of users with lost root passwords. In any case, it represents
                    a clear security risk – authentication should always be required for root-level access. It should be noted that it is extremely
                    difficult to prevent compromise by any attacker who has knowledge, tools, and full physical access to a system. This kind of
                    measure simply increases the difficulty of compromise by requiring more of each of these factors.<htm:br/><htm:br/> These last two
                    items have attempted to address concerns of physical/boot security. To make these preparations more complete, one should consider
                    setting the BIOS to boot only from the main hard disk and locking this setting with a BIOS password. For more information on
                    reducing the threat posed by an attacker with physical/boot access, consider the article "Anyone with a Screwdriver Can Break In,"
                    available at <htm:a href="http://www.bastille-linux.org/jay/anyone-with-a-screwdriver.html">http://www.bastille-linux.org/jay/anyone-with-a-screwdriver.html</htm:a>.<htm:br/><htm:br/> Note: Even though this topic is
                    addressed by Bastille, it performs a step not executed by Bastille and should be completed even if Bastille was used. </htm:p>
        <htm:br/>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">11350</ident>
    </cdf:Rule>
    <cdf:Rule id="nfs-client-priv-port" role="full" selected="false" weight="1.0">
      <cdf:title>Restrict NFS Client Requests To Privileged Ports</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:p>
            <htm:strong>Action:</htm:strong>
          </htm:p>
          <htm:p>
            <htm:i>Add the secure option to all entries in the /etc/exports file. The following Perl code will perform this action
                            automatically.</htm:i>
          </htm:p>
          <htm:br/>
          <htm:code> if [ -s /etc/exports ]; then <htm:br/> perl -i.orig -pe \ <htm:br/> 'next if (/^\s*#/ || /^\s*$/);<htm:br/> ($res,
                        @hst) = split(" "); <htm:br/> foreach $ent (@hst) { <htm:br/> undef(%set); <htm:br/> ($optlist) = $ent =~ /\((.*?)\)/;
                        <htm:br/> foreach $opt (split(/,/, $optlist)) { $set{$opt} = 1; } <htm:br/> delete($set{"insecure"}); <htm:br/> $set{"secure"}
                        = 1; <htm:br/> $ent =~ s/\(.*?\)//; <htm:br/> $ent .= "(" . join(",", keys(%set)) . ")"; <htm:br/> }<htm:br/> $hst[0] =
                        "(secure)" unless (@hst); <htm:br/> $_ = "$res\t" . join(" ", @hst) . "\n";' \ <htm:br/> /etc/exports <htm:br/> fi <htm:br/>
                        diff /etc/exports-preCIS /etc/exports<htm:br/></htm:code>
          <htm:br/>
        </htm:p>
        <htm:br/>
        <htm:p>
          <htm:strong>Discussion:</htm:strong>
        </htm:p>
        <htm:p> Setting the secure parameter causes the NFS server process on the local system to ignore NFS client requests that do not
                    originate from the privileged port range (ports less than 1024). This should not hinder normal NFS operations but may block some
                    automated NFS attacks that are run by unprivileged users. </htm:p>
        <htm:br/>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10680</ident>
      <xccdf:check system="http://cisecurity.org/check">
        <!--command test «egrep -v '(^#.*$)|(^$)' /etc/exports|egrep -v 'secure'»-->
        <xccdf:check-content>
          <ecl:shell-command check="none exist" comment="command test «egrep -v '(^#.*$)|(^$)' /etc/exports|egrep -v 'secure'»" success="pass">
            <ecl:command>egrep -v '(^#.*$)|(^$)' /etc/exports|egrep -v 'secure'</ecl:command>
            <ecl:line-selection op="pm" value="^.+$"/>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </cdf:Rule>
    <cdf:Rule id="syslog-accept" role="full" selected="false" weight="1.0">
      <cdf:title>Only Enable syslog To Accept Messages If Absolutely Necessary</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:p>
            <htm:strong>Question:</htm:strong>
          </htm:p>
          <htm:p>Is this machine a log server, or does it need to receive Syslog messages via the network from other systems?<htm:br/> If
                        the answer to this question is yes, then perform the action below. </htm:p>
          <htm:br/>
          <htm:p> Read syslog manpage for the <htm:code>-l</htm:code>, <htm:code>-r</htm:code> and <htm:code>-s</htm:code> options.<htm:br/>
                        Edit <htm:code>/etc/init.d/sysklogd</htm:code> and look for the line that says:<htm:br/><htm:code>SYSLOGD=""</htm:code><htm:br/> and add the entries that are appropriate for your site. An example entry would look
                        like this:<htm:br/><htm:code>SYSLOGD="-m 0 -l loghost -r -s mydomain.com"</htm:code><htm:br/></htm:p>
          <htm:br/>
        </htm:p>
        <htm:br/>
        <htm:p>
          <htm:strong>Discussion:</htm:strong>
        </htm:p>
        <htm:p> By default the system logging daemon, syslogd, does not listen for log messages from other systems on network port 514/udp
                    (Solaris, by contrast, does listen by default).<htm:br/><htm:br/> It is considered good practice to set up one or more machines as
                    central "log servers" to aggregate log traffic from all machines at a site. However, unless a system is set up to be one of these
                    "log server" systems, it should not be listening on 514/udp for incoming log messages as the protocol used to transfer these
                    messages does not include any form of authentication, so a malicious outsider could simply barrage the local system's Syslog port
                    with spurious traffic either as a denial-of- service attack on the system, or to fill up the local system's logging file systems
                    so that subsequent attacks will not be logged. </htm:p>
        <htm:br/>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">11200</ident>
      <xccdf:check system="http://cisecurity.org/check">
        <!--/etc/rc[23456].d/S??syslog text content-->
        <xccdf:check-content>
          <ecl:file-content check="none exist" comment="/etc/rc[23456].d/S??syslog text content">
            <ecl:path>/etc/rc[23456].d/S??syslog</ecl:path>
            <ecl:line-selection op="pm" value="^/usr/sbin/syslogd.+-r.*$"/>
          </ecl:file-content>
        </xccdf:check-content>
      </xccdf:check>
    </cdf:Rule>
  </cdf:Group>
  <cdf:Group id="user-account-environment">
    <cdf:title>User Accounts and Environment</cdf:title>
    <cdf:description> Note that the items in this section are tasks that the local administrator should undertake on a regular, ongoing basis
            perhaps in an automated fashion via cron. The automated host-based scanning tools provided from the Center for Internet Security can be
            used for this purpose. These scanning tools are typically provided with this document, but are also available for free download from
                <htm:a href="http://www.CISecurity.org/">http://www.CISecurity.org/</htm:a>. </cdf:description>
    <cdf:Rule id="block-system-accounts" role="full" selected="false" weight="1.0">
      <cdf:title>Block System Accounts</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:strong>Action:</htm:strong>
          <htm:br/>
          <htm:code> cd /etc<htm:br/> for NAME in `cut -d: -f1 /etc/passwd`; do <htm:br/> MyUID=`id -u $NAME` if [ $MyUID -lt 500 -a $NAME
                        != 'root' ]; then <htm:br/> usermod -L -s /dev/null $NAME <htm:br/> fi <htm:br/> done <htm:br/> diff passwd-preCIS
                        passwd<htm:br/> diff shadow-preCIS shadow<htm:br/></htm:code>
          <htm:br/>
          <htm:strong>Discussion:</htm:strong>
          <htm:br/>
          <htm:p>These accounts are non-human system accounts that should be made less useful to an attacker by locking them and setting the
                        shell to a shell not in <htm:code>/etc/shells</htm:code>. They can even be deleted if the machines does not use the
                        daemon/service that each is responsible for, though it is safest to simply deactivate them as is done here. To deactivate
                        them, lock the password and set the login shell to an invalid shell. <htm:code>/dev/null</htm:code> is a good choice because
                        it is not a valid login shell, and should an attacker attempt to replace it with a copy of a valid shell the system will not
                        operate properly.</htm:p>
        </htm:p>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">11360</ident>
      <xccdf:check system="http://cisecurity.org/check">
        <!--command test «awk -F: '($1!="root" && $3<500 && $7!="/dev/null") {print}' /etc/passwd»-->
        <xccdf:check-content>
          <ecl:shell-command check="none exist" comment="command test «awk -F: '($1!=&quot;root&quot; &amp;&amp; $3&lt;500 &amp;&amp; $7!=&quot;/dev/null&quot;) {print}' /etc/passwd»">
            <ecl:command>awk -F: '($1!="root" &amp;&amp; $3&lt;500 &amp;&amp; $7!="/dev/null") {print}' /etc/passwd</ecl:command>
            <ecl:line-selection op="pm" value=".+"/>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </cdf:Rule>
    <cdf:Rule id="no-empty-passwords" role="full" selected="false" weight="1.0">
      <cdf:title>Verify That There Are No Accounts With Empty Password Fields</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:strong>Action:</htm:strong>
          <htm:br/>
          <htm:code> awk -F: '($2 == "") { print $1 }' /etc/shadow </htm:code>
          <htm:br/> The above command should return no values<htm:br/><htm:br/><htm:strong>Discussion:</htm:strong><htm:br/><htm:p>An account with an empty password field means that anybody may log in as that user without providing a password at all. All
                        accounts should have strong passwords or should be locked by using a password string like “!!”. By using “!!”,
                            <htm:code>passwd</htm:code> will warn you if you try to unlock an account with an empty password.</htm:p></htm:p>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">11370</ident>
      <xccdf:check system="http://cisecurity.org/check">
        <!--command test «awk -F: '(!$2) {print}' /etc/shadow»-->
        <xccdf:check-content>
          <ecl:shell-command check="none exist" comment="command test «awk -F: '(!$2) {print}' /etc/shadow»">
            <ecl:command>awk -F: '(!$2) {print}' /etc/shadow</ecl:command>
            <ecl:line-selection op="pm" value=".+"/>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </cdf:Rule>
    <cdf:Rule id="set-account-expiration" role="full" selected="false" weight="1.0">
      <cdf:title>Set Account Expiration Parameters On Active Accounts</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:strong>Action:</htm:strong>
          <htm:br/>
          <htm:code> cd /etc <htm:br/> awk '($1 ~ /^PASS_MAX_DAYS/) { $2="90" } <htm:br/> ($1 ~ /^PASS_MIN_DAYS/) { $2="7" } <htm:br/> ($1 ~
                        /^PASS_WARN_AGE/) { $2="28" } <htm:br/> ($1 ~ /^PASS_MIN_LEN/) { $2="8" } <htm:br/> { print } ' login.defs-preCIS &gt;
                        login.defs <htm:br/> chown root:root login.defs <htm:br/> chmod 640 login.defs <htm:br/> diff login.defs-preCIS
                        login.defs<htm:br/><htm:br/> useradd -D -f 7 <htm:br/> diff /etc/default/useradd-preCIS /etc/default/useradd<htm:br/> for NAME
                        in `cut -d: -f1 /etc/passwd`; do <htm:br/> uid=`id -u $NAME` if [ $uid -ge 500 -a $uid != 65534 ]; then <htm:br/> chage -m 7
                        -M 90 -W 28 -I 7 $NAME <htm:br/> fi<htm:br/> done<htm:br/> diff shadow-preCIS shadow<htm:br/></htm:code>
          <htm:br/> The above command should return no values<htm:br/><htm:br/><htm:strong>Discussion:</htm:strong><htm:br/><htm:p>It is a good idea to force users to change passwords on a regular basis. The commands above will set all active accounts
                        (except system accounts) to force password changes every 90 days (-M 90), and then prevent password changes for seven days (-m
                        7) thereafter. Users will begin receiving warnings 28 days (-W 28) before their password expires. Once the password expired,
                        the account will be locked out after 7 days (-I 7). Finally, the instructions above set a minimum password length of 8
                        characters.<htm:br/> These are recommended starting values. Some regulated industries require more restrictive values – ensure
                        they comply with your enterprise security policy.</htm:p></htm:p>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">11380</ident>
      <xccdf:complex-check operator="AND">
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/login.defs text content-->
          <xccdf:check-content>
            <ecl:file-content check="all" comment="/etc/login.defs text content">
              <ecl:path>/etc/login.defs</ecl:path>
              <ecl:line-selection op="pm" value="^PASS_MAX_DAYS\s+(\d+)$">
                <ecl:regex-group dt="xs:integer" group="1" op="le" value="90"/>
              </ecl:line-selection>
            </ecl:file-content>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/login.defs text content-->
          <xccdf:check-content>
            <ecl:file-content check="all" comment="/etc/login.defs text content">
              <ecl:path>/etc/login.defs</ecl:path>
              <ecl:line-selection op="pm" value="^PASS_MIN_DAYS\s+(\d+)$">
                <ecl:regex-group dt="xs:integer" group="1" op="ge" value="7"/>
              </ecl:line-selection>
            </ecl:file-content>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/login.defs text content-->
          <xccdf:check-content>
            <ecl:file-content check="all" comment="/etc/login.defs text content">
              <ecl:path>/etc/login.defs</ecl:path>
              <ecl:line-selection op="pm" value="^PASS_WARN_AGE\s+(\d+)$">
                <ecl:regex-group dt="xs:integer" group="1" op="eq" value="28"/>
              </ecl:line-selection>
            </ecl:file-content>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/login.defs text content-->
          <xccdf:check-content>
            <ecl:file-content check="all" comment="/etc/login.defs text content">
              <ecl:path>/etc/login.defs</ecl:path>
              <ecl:line-selection op="pm" value="^PASS_MIN_LEN\s+(\d+)$">
                <ecl:regex-group dt="xs:integer" group="1" op="ge" value="6"/>
              </ecl:line-selection>
            </ecl:file-content>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/login.defs ownership and permission-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="/etc/login.defs ownership and permission">
              <ecl:command>find /etc/login.defs -follow -maxdepth 0 ! \( -user root -group root -perm u=rw,g=r,o= \) -ls</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--chage -m 7 -M 90 -W 28 -I 7 all user accounts-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="command test «for u in `awk -F: '($3&gt;500 &amp;&amp; $3&lt;65534) {print $1}' /etc/passwd`; do egrep ^$u: /etc/shadow; done|awk -F: '($2!~/[!*]+/ &amp;&amp; ($4&gt;=7 || $5&gt;90 || $6&gt;28 || $7&gt;7)) {print}'»">
              <ecl:command>for u in `awk -F: '($3&gt;500 &amp;&amp; $3&lt;65534) {print $1}' /etc/passwd`; do egrep ^$u:
                                /etc/shadow; done|awk -F: '($2!~/[!*]+/ &amp;&amp; ($4&gt;=7 || $5&gt;90 || $6&gt;28 ||
                                $7&gt;7)) {print}'</ecl:command>
              <ecl:line-selection op="pm" value="^.+$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </cdf:Rule>
    <cdf:Rule id="legacy-authn-entires" role="full" selected="false" weight="1.0">
      <cdf:title>Verify No Legacy '+' Entries Exist In passwd, shadow, And group Files</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:strong>Action:</htm:strong>
          <htm:br/> The command:<htm:br/><htm:code> grep ^+: /etc/passwd /etc/shadow /etc/group </htm:code><htm:br/><htm:br/> The above command should return no values<htm:br/><htm:br/><htm:strong>Discussion:</htm:strong><htm:br/><htm:p>'+' entries in various files used to be markers for systems to insert data from NIS maps at a certain point in a system
                        configuration file. These entries may provide an avenue for attackers to gain privileged access on the system, and should be
                        deleted if they exist.</htm:p></htm:p>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">11430</ident>
      <xccdf:check system="http://cisecurity.org/check">
        <!--/etc/^(passwd|shadow|group)$ text content-->
        <xccdf:check-content>
          <ecl:file-content check="none exist" comment="/etc/^(passwd|shadow|group)$ text content">
            <ecl:path>/etc/^(passwd|shadow|group)$</ecl:path>
            <ecl:line-selection op="pm" value="^+:.*$"/>
          </ecl:file-content>
        </xccdf:check-content>
      </xccdf:check>
    </cdf:Rule>
    <cdf:Rule id="root-path-sanity" role="full" selected="false" weight="1.0">
      <cdf:title>No '.' or Group/World-Writable Directory In Root's $PATH</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:strong>Action:</htm:strong>
          <htm:br/> To find ‘.’ in $PATH:<htm:br/><htm:code> echo $PATH | egrep '(^|:)(\.|:|$)' <htm:br/></htm:code><htm:br/> To find group- or world-writable directories in $PATH:<htm:br/><htm:code> find `echo $PATH | tr ':' ' '` -type d \ <htm:br/> \( -perm -002 -o -perm -020 \) -ls<htm:br/></htm:code><htm:br/> The above command should return no values<htm:br/><htm:br/><htm:strong>Discussion:</htm:strong><htm:br/><htm:p>'Including the current working directory ('.') or other writable directory in root's executable path makes it likely that
                        an attacker can gain superuser access by forcing an administrator operating as root to execute a trojan program.</htm:p></htm:p>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">11460</ident>
      <xccdf:complex-check operator="AND">
        <xccdf:check system="http://cisecurity.org/check">
          <!--command test «echo $PATH»-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="command test «echo $PATH»">
              <ecl:command>echo $PATH</ecl:command>
              <ecl:line-selection op="pm" value="^\.:|:\.:|:\.$"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--command test «find `echo $PATH|sed "s/:/ /g"` -prune -type d \( -perm -g+w -o -perm -o+w \) 2>/dev/null»-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="command test «find `echo $PATH|sed &quot;s/:/ /g&quot;` -prune -type d \( -perm -g+w -o -perm -o+w \) -ls 2&gt;/dev/null»">
              <ecl:command>find `echo $PATH|sed "s/:/ /g"` -prune -type d \( -perm -g+w -o -perm -o+w \) -ls 2&gt;/dev/null</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </cdf:Rule>
    <cdf:Rule id="home-dir-acls" role="full" selected="false" weight="1.0">
      <cdf:title>User Home Directories Should Be Mode 750 or More Restrictive</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:strong>Action:</htm:strong>
          <htm:br/>
          <htm:code> for DIR in \ <htm:br/> `awk -F: '($3 &gt;= 500) { print $6 }' /etc/passwd`; do <htm:br/> chmod g-w $DIR chmod o-rwx
                        $DIR <htm:br/> done<htm:br/></htm:code>
          <htm:br/>
          <htm:strong>Discussion:</htm:strong>
          <htm:br/>
          <htm:p>Group or world-writable user home directories may enable malicious users to steal or modify other users' data or to gain
                        another user's system privileges. Disabling "read" and "execute" access for users who are not members of the same group (the
                        "other" access category) allows for appropriate use of discretionary access control by each user. While the above
                        modifications are relatively benign, making global modifications to user home directories without alerting the user community
                        can result in unexpected outages and unhappy users. Also consider special case home directories such as the sftp / ftp
                        accounts used to transfer web content to a web server, typically need to be world readable (r) and searchable (x) as they
                        contain document for the web server.</htm:p>
        </htm:p>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">11470</ident>
      <xccdf:check system="http://cisecurity.org/check">
        <!--command test «find `awk -F: '($3 >= 500 && $1 != "nobody") {print $6}' /etc/passwd` -maxdepth 1 -type d -prune \( -perm -g+w -o -perm -o+r -o -perm -o+w -o -perm -o+x \) -ls»-->
        <xccdf:check-content>
          <ecl:shell-command check="none exist" comment="command test «find `awk -F: '($3 &gt;= 500 &amp;&amp; $1 != &quot;nobody&quot;) {print $6}' /etc/passwd` -maxdepth 1 -type d -prune \( -perm -g+w -o -perm -o+r -o -perm -o+w -o -perm -o+x \) -ls»">
            <ecl:command>find `awk -F: '($3 &gt;= 500 &amp;&amp; $1 != "nobody") {print $6}' /etc/passwd` -maxdepth 1 -type d
                            -prune \( -perm -g+w -o -perm -o+r -o -perm -o+w -o -perm -o+x \) -ls</ecl:command>
            <ecl:line-selection op="pm" value=".+"/>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </cdf:Rule>
    <cdf:Rule id="dot-file-acls" role="full" selected="false" weight="1.0">
      <cdf:title>No User Dot-Files Should Be World-Writable</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:strong>Action:</htm:strong>
          <htm:br/>
          <htm:code> for DIR in \ <htm:br/> `awk -F: '($3 &gt;= 500) { print $6 }' /etc/passwd`; do <htm:br/> for FILE in
                        $DIR/.[A-Za-z0-9]*; do <htm:br/> if [ ! -h "$FILE" -a -f "$FILE" ]; then <htm:br/> chmod go-w "$FILE" <htm:br/> fi<htm:br/>
                        done <htm:br/> done<htm:br/></htm:code>
          <htm:br/>
          <htm:strong>Discussion:</htm:strong>
          <htm:br/>
          <htm:p>World-writable user configuration files may enable malicious users to steal or modify other users' data or to gain another
                        user's system privileges. While the above modifications are relatively benign, making global modifications to user home
                        directories without alerting the user community can result in unexpected outages and unhappy users.</htm:p>
        </htm:p>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">11480</ident>
      <xccdf:check system="http://cisecurity.org/check">
        <!--command test «find `cut -f6 -d: /etc/passwd` -maxdepth 1 -type f -name '\.*' -prune \( -perm -g+w -o -perm -o+w \) 2>/dev/null»-->
        <xccdf:check-content>
          <ecl:shell-command check="none exist" comment="command test «find `cut -f6 -d: /etc/passwd` -maxdepth 1 -type f -name '\.*' -prune \( -perm -g+w -o -perm -o+w \) 2&gt;/dev/null»">
            <ecl:command>find `cut -f6 -d: /etc/passwd` -maxdepth 1 -type f -name '\.*' -prune \( -perm -g+w -o -perm -o+w \)
                            2&gt;/dev/null</ecl:command>
            <ecl:line-selection op="pm" value="^.+$"/>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </cdf:Rule>
    <cdf:Rule id="remove-netrc-files" role="full" selected="false" weight="1.0">
      <cdf:title>Remove User .netrc Files</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:strong>Action:</htm:strong>
          <htm:br/>
          <htm:code> find / -name .netrc<htm:br/><htm:br/></htm:code>
          <htm:strong>Stop!!! Read the discussion before proceeding.</htm:strong>
          <htm:br/>
          <htm:code> for DIR in `cut -f6 -d: /etc/passwd`; do <htm:br/> if [ -e $DIR/.netrc ]; then<htm:br/> echo "Removing $DIR/.netrc"
                        <htm:br/> rm -f $DIR/.netrc<htm:br/> fi<htm:br/> done<htm:br/></htm:code>
          <htm:br/>
          <htm:strong>Discussion:</htm:strong>
          <htm:br/>
          <htm:p>
            <htm:code>.netrc</htm:code> files may contain unencrypted passwords which may be used to attack other systems. While the
                        above modifications are relatively benign, making global modifications to user home directories without alerting the user
                        community can result in unexpected outages and unhappy users. If the first command returns any results, carefully evaluate the
                        ramifications of removing those files before executing the remaining commands as you may end up impacting an application that
                        has not had time to revise its architecture to a more secure design.</htm:p>
        </htm:p>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">11490</ident>
      <xccdf:check system="http://cisecurity.org/check">
        <!--command test «find `cut -f6 -d: /etc/passwd` -maxdepth 1 -type f -name '.netrc' 2>/dev/null»-->
        <xccdf:check-content>
          <ecl:shell-command check="none exist" comment="command test «find `cut -f6 -d: /etc/passwd` -maxdepth 1 -type f -name '.netrc' 2&gt;/dev/null»">
            <ecl:command>find `cut -f6 -d: /etc/passwd` -maxdepth 1 -type f -name '.netrc' 2&gt;/dev/null</ecl:command>
            <ecl:line-selection op="pm" value="^.+$"/>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </cdf:Rule>
    <cdf:Rule id="default-umask-users" role="full" selected="false" weight="1.0">
      <cdf:title>Set Default umask For Users</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:strong>Action:</htm:strong>
          <htm:br/>
          <htm:code> cd /etc <htm:br/> for FILE in profile csh.login csh.cshrc bash.bashrc; do <htm:br/> if ! egrep -q 'umask.*77' $FILE ;
                        then <htm:br/> echo "umask 077" &gt;&gt; $FILE <htm:br/> fi<htm:br/> chown root:root $FILE <htm:br/> chmod 444 $FILE
                        <htm:br/> diff ${FILE}-preCIS $FILE <htm:br/> done<htm:br/> cd /root <htm:br/> for FILE in .profile .bash_profile .bashrc
                        .cshrc .tcshrc; do <htm:br/> if ! egrep -q 'umask.*77' $FILE ; then <htm:br/> echo "umask 077" &gt;&gt; $FILE # See
                        description <htm:br/> fi <htm:br/> chown root:root $FILE <htm:br/> diff ${FILE}-preCIS $FILE done<htm:br/></htm:code>
          <htm:br/>
          <htm:strong>Discussion:</htm:strong>
          <htm:br/>
          <htm:p>With a default umask setting of 077 – a setting agreed to as part of the consensus process with DISA and NSA – files and
                        directories created by users will not be readable by any other user on the system. The user creating the file has the
                        discretion of making their files and directories readable by others via the chmod command. Users who wish to allow their files
                        and directories to be readable by others by default may choose a different default <htm:code>umask</htm:code> by inserting the
                        umask command into the standard shell configuration files (.profile, .cshrc, etc.) in their home directories. A
                            <htm:code>umask</htm:code> of 027 would make files and directories readable by users in the same Unix group, while a umask
                        of 022 would make files readable by every user on the system.<htm:br/><htm:br/></htm:p>
          <htm:p>We adjust root's <htm:code>umask</htm:code> setting separately in this item, as root shells don't necessarily read the
                        system-wide configuration files. For example, root sessions using <htm:code>bash</htm:code> doesn't get
                        <htm:code>umask</htm:code> settings from /etc/profile.<htm:br/><htm:br/></htm:p>
          <htm:p>Note: This is been shown to cause problems with the installation of software packages where the installation script uses
                        the default umask – the directories are owned by root with 700 permissions, and then the application and/or daemon cannot read
                        its files. A simple fix to this problem is to manually issue a less restrictive umask (such as umask 022) for the shell
                        session doing the installation, or place such a umask command in the beginning to a less restrictive value before the
                        installation, or in the beginning of the installation script.<htm:br/><htm:br/></htm:p> There are of course special cases to
                    consider, for example the recommended umask setting of 077 interfers with the sftp and ftp users who need to have the web files
                    transferred be world readable and directories world searchable. Typically the umask setting needs to be 022 or occassionally 002
                    for sftp and ftp web transfer accounts. Typically the umask can be configured in the ftp server configuration file however for
                    sftp users, a patch is required for the sftp server before umask control is available. The patch is available as part of the
                    sftplogging patch <htm:a href="http://sftplogging.sourceforge.net/">http://sftplogging.sourceforge.net/</htm:a></htm:p>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">11500</ident>
      <xccdf:complex-check operator="AND">
        <xccdf:complex-check operator="AND">
          <xccdf:check system="http://cisecurity.org/check">
            <!--command test «egrep '^umask[[:space:]]+077$' /etc/profile»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="command test «egrep '^umask[[:space:]]+077$' /etc/profile»" success="pass">
                <ecl:command>egrep '^umask[[:space:]]+077$' /etc/profile</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--command test «egrep '^umask[[:space:]]+077$' /etc/csh.login»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="command test «egrep '^umask[[:space:]]+077$' /etc/csh.login»" success="pass">
                <ecl:command>egrep '^umask[[:space:]]+077$' /etc/csh.login</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--command test «egrep '^umask[[:space:]]+077$' /etc/csh.cshrc»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="command test «egrep '^umask[[:space:]]+077$' /etc/csh.cshrc»" success="pass">
                <ecl:command>egrep '^umask[[:space:]]+077$' /etc/csh.cshrc</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--command test «egrep '^umask[[:space:]]+077$' /etc/bashrc»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="command test «egrep '^umask[[:space:]]+077$' /etc/bashrc»" success="pass">
                <ecl:command>egrep '^umask[[:space:]]+077$' /etc/bashrc</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
        <xccdf:complex-check operator="AND">
          <xccdf:check system="http://cisecurity.org/check">
            <!--command test «egrep '^umask[[:space:]]+077$' /root/.bash_profile»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="command test «egrep '^umask[[:space:]]+077$' /root/.bash_profile»" success="pass">
                <ecl:command>egrep '^umask[[:space:]]+077$' /root/.bash_profile</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--command test «egrep '^umask[[:space:]]+077$' /root/.bashrc»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="command test «egrep '^umask[[:space:]]+077$' /root/.bashrc»" success="pass">
                <ecl:command>egrep '^umask[[:space:]]+077$' /root/.bashrc</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--command test «egrep '^umask[[:space:]]+077$' /root/.cshrc»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="command test «egrep '^umask[[:space:]]+077$' /root/.cshrc»" success="pass">
                <ecl:command>egrep '^umask[[:space:]]+077$' /root/.cshrc</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
          <xccdf:check system="http://cisecurity.org/check">
            <!--command test «egrep '^umask[[:space:]]+077$' /root/.tcshrc»-->
            <xccdf:check-content>
              <ecl:shell-command check="all" comment="command test «egrep '^umask[[:space:]]+077$' /root/.tcshrc»" success="pass">
                <ecl:command>egrep '^umask[[:space:]]+077$' /root/.tcshrc</ecl:command>
                <ecl:line-selection op="pm" value=".+"/>
              </ecl:shell-command>
            </xccdf:check-content>
          </xccdf:check>
        </xccdf:complex-check>
      </xccdf:complex-check>
    </cdf:Rule>
    <cdf:Rule id="disable-core-dumps" role="full" selected="false" weight="1.0">
      <cdf:title>Disable Core Dumps</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:strong>Question:</htm:strong>
          <htm:br/>
          <htm:p> Do you have developers who need to debug crashed programs or send low-level debugging information to software
                        developers/vendors?<htm:br/><htm:br/> If the answer to this question is no, then perform the action below.<htm:br/></htm:p>
          <htm:strong>Action:</htm:strong>
          <htm:br/>
          <htm:code> cd /etc/security <htm:br/> cat &lt;&lt;END_ENTRIES &gt;&gt; limits.conf<htm:br/> # Following 2 lines
                        added by CISecurity Benchmark sec 8.11 <htm:br/> * soft core 0 <htm:br/> * hard core 0 <htm:br/> END_ENTRIES<htm:br/> diff
                        limits.conf-preCIS limits.conf<htm:br/></htm:code>
          <htm:br/>
          <htm:strong>Discussion:</htm:strong>
          <htm:br/>
          <htm:p>Core dumps can consume large amounts of disk space and may contain sensitive data. On the other hand, developers using this
                        system may require core files in order to aid in debugging. The <htm:code>limits.conf</htm:code> file can be used to grant
                        core dump ability to individual users or groups of users.<htm:br/><htm:br/></htm:p>
        </htm:p>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">10660</ident>
      <xccdf:complex-check operator="AND">
        <xccdf:check system="http://cisecurity.org/check">
          <!--command test «egrep '^ulimit[[:space:]]+\-Hc[[:space:]]+0$' /etc/profile»-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="command test «egrep '^ulimit[[:space:]]+\-Hc[[:space:]]+0$' /etc/profile»" success="pass">
              <ecl:command>egrep '^ulimit[[:space:]]+\-Hc[[:space:]]+0$' /etc/profile</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--command test «egrep '^limit[[:space:]]+\-h[[:space:]]+coredumpsize[[:space:]]+0$' /etc/security/limits.conf»-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="command test «egrep '^limit[[:space:]]+\-h[[:space:]]+coredumpsize[[:space:]]+0$' /etc/security/limits.conf»" success="pass">
              <ecl:command>egrep '^limit[[:space:]]+\-h[[:space:]]+coredumpsize[[:space:]]+0$' /etc/security/limits.conf</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </cdf:Rule>
    <cdf:Rule id="limit-su-to-root" role="full" selected="false" weight="1.0">
      <cdf:title>Limit Access To The Root Account From su</cdf:title>
      <cdf:description>
        <htm:p>
          <htm:strong>Question:</htm:strong>
          <htm:br/>
          <htm:p> Do you have developers who need to debug crashed programs or send low-level debugging information to software
                        developers/vendors?<htm:br/><htm:br/> If the answer to this question is no, then perform the action below.<htm:br/></htm:p>
          <htm:strong>Action:</htm:strong>
          <htm:br/>
          <htm:b>WARNING:</htm:b> If you do not have immediate physical access to the server, ensure you have a user in the wheel group
                    before running the below script. Failure to do so will prevent you from using <htm:code>su</htm:code> to become root. <htm:br/><htm:br/><htm:code> cd /etc/pam.d/ <htm:br/> awk '($1=="#auth" &amp;&amp; $2=="required" &amp;&amp; \ <htm:br/>
                        $3~"pam_wheel.so") \ <htm:br/> { print "auth\t\trequired\t”,$3,”\tuse_uid"; next };<htm:br/> { print }' /etc/pam.d-preCIS/su
                        &gt; su <htm:br/> diff /etc/pam.d-preCIS/su su<htm:br/></htm:code><htm:br/><htm:strong>Discussion:</htm:strong><htm:br/><htm:p>The <htm:code>su</htm:code> command allows you to become other users on the system. This is commonly used to become “root”
                        and execute commands as the super-user. If you do not want certain users to <htm:code>su</htm:code> to root then uncomment the
                        following line in <htm:code>/etc/pam.d/su</htm:code>:<htm:br/><htm:br/></htm:p><htm:code>auth required /lib/security/$ISA/pam_wheel.so use_uid</htm:code><htm:br/><htm:br/><htm:p>Uncommenting this line allows only the users in the wheel group to become root by using the su command and entering the
                        root password. All other users will receive a message stating the password is incorrect.</htm:p><htm:br/><htm:p>By limiting access to the root account, even if a user knows the root password, they will not be able to become root unless
                        that user has physical access to the server's console, or they are added to the wheel group. This adds another layer of
                        security to the system and prevents unauthorized system access.</htm:p></htm:p>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">11540</ident>
      <xccdf:complex-check operator="AND">
        <xccdf:check system="http://cisecurity.org/check">
          <!--command test «egrep '^root:ALL:DENY$' /etc/suauth»-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="command test «egrep '^root:ALL:DENY$' /etc/suauth»" success="pass">
              <ecl:command>egrep '^root:ALL:DENY$' /etc/suauth</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/suauth ownership and permission-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="/etc/suauth ownership and permission">
              <ecl:command>find /etc/suauth -follow -maxdepth 0 ! \( -user root -group root -perm u=r,g=,o= \) -ls</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </cdf:Rule>
  </cdf:Group>
  <cdf:Group id="warning-banners" selected="true">
    <cdf:title>Warning Banners</cdf:title>
    <cdf:description> Presenting some sort of statutory warning message prior to the normal user logon may assist the prosecution of trespassers
            on the computer system. Changing some of these login banners also has the side effect of hiding OS version information and other detailed
            system information from attackers attempting to target specific attacks at a system (though there are other mechanisms available for
            acquiring this information). Guidelines published by the US Department of Defense require that warning messages include at least the name
            of the organization that owns the system, the fact that the system is subject to monitoring and that such monitoring is in compliance with
            local statutes, and that use of the system implies consent to such monitoring. Clearly, the organization's local legal counsel and/or site
            security administrator should review the content of all messages before any system modifications are made, as these warning messages are
            inherently site-specific.<htm:br/> More information (including citations of relevant case law) can be found at <htm:a href="http://www.usdoj.gov/criminal/cybercrime/s&amp;sappendix2002.htm">http://www.usdoj.gov/criminal/cybercrime/s&amp;sappendix2002.htm</htm:a></cdf:description>
    <cdf:Rule id="banner-physical-network-access" role="full" selected="false" weight="1.0">
      <cdf:title>Create Warnings For Network And Physical Access Services</cdf:title>
      <cdf:description>
        <htm:strong>Action:</htm:strong>
        <htm:br/>
        <htm:p>1. Edit the banner currently in /etc/issue – this was created by Bastille and may need to be changed for your enterprise. Leave
                    the words “its owner” as this will be replaced in the next step with the name of your organization.</htm:p>
        <htm:br/>
        <htm:p>2. Create banners for console access:</htm:p>
        <htm:br/>
        <htm:i>
          <htm:strong>Important: You need to change “The Company” in the text below to an appropriate value for your
                    organization</htm:strong>
        </htm:i>
        <htm:br/>
        <htm:code> unalias cp mv <htm:br/>cd /etc # Remove OS indicators from banners<htm:br/> for FILE in issue motd; do<htm:br/> cp -f
                    ${FILE} ${FILE}.tmp <htm:br/> egrep -vi "debian" ${FILE}.tmp &gt; ${FILE} <htm:br/> rm -f ${FILE}.tmp done <htm:br/> # Change
                    name of owner <htm:br/> # Remember to enter name of your company here: <htm:br/> COMPANYNAME="The Company" <htm:br/> cp -f issue
                    issue.tmp <htm:br/> sed -e "s/its owner/${COMPANYNAME}/g" issue.tmp &gt; issue <htm:br/> rm -f issue.tmp <htm:br/> diff
                    issue-preCIS issue<htm:br/></htm:code>
        <htm:br/>
        <htm:p>
          <htm:strong>Discussion:</htm:strong>
        </htm:p>
        <htm:p>The contents of the <htm:code>/etc/issue</htm:code> file are displayed prior to the login prompt on the system's console and
                    serial devices. <htm:code>/etc/motd</htm:code> is generally displayed after all successful logins, no matter where the user is
                    logging in from, but is thought to be less useful because it only provides notification to the user after the machine has been
                    accessed. </htm:p>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">11550</ident>
      <xccdf:complex-check operator="AND">
        <xccdf:check system="http://cisecurity.org/check">
          <!--command test «cat /etc/issue»-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="command test «cat /etc/issue»" success="pass">
              <ecl:command>cat /etc/issue</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--command test «cat /etc/issue.net»-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="command test «cat /etc/issue.net»" success="pass">
              <ecl:command>cat /etc/issue.net</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--command test «cat /etc/motd»-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="command test «cat /etc/motd»" success="pass">
              <ecl:command>cat /etc/motd</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/issue ownership and permission-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="/etc/issue ownership and permission">
              <ecl:command>find /etc/issue -follow -maxdepth 0 ! \( -user root -group root -perm u=rw,g=r,o=r \) -ls</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/issue.net ownership and permission-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="/etc/issue.net ownership and permission">
              <ecl:command>find /etc/issue.net -follow -maxdepth 0 ! \( -user root -group root -perm u=rw,g=r,o=r \) -ls</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--/etc/motd ownership and permission-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="/etc/motd ownership and permission">
              <ecl:command>find /etc/motd -follow -maxdepth 0 ! \( -user root -group root -perm u=rw,g=r,o=r \) -ls</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </cdf:Rule>
    <cdf:Rule id="banner-gui-access" role="full" selected="false" weight="1.0">
      <cdf:title>Create Warnings For GUI-Based Logins</cdf:title>
      <cdf:description>
        <htm:strong>Action:</htm:strong>
        <htm:br/>
        <htm:code> if [ -e /etc/X11/xdm/Xresources ]; then <htm:br/> cd /etc/X11/xdm <htm:br/> awk '/xlogin\*greeting:/ \ <htm:br/> { print
                    "xlogin\*greeting: Authorized uses only!"; next }; <htm:br/> { print }' Xresources-preCIS &gt; Xresources <htm:br/> chown
                    root:root Xresources <htm:br/> chmod 644 Xresources <htm:br/> diff Xresources-preCIS Xresources fi<htm:br/> if [ -e
                    /etc/X11/xdm/kdmrc ]; then<htm:br/> cd /etc/X11/xdm <htm:br/> awk '/GreetString=/ \ { print "GreetString=Authorized uses only!";
                    next }; <htm:br/> { print }' kdmrc-preCIS &gt; kdmrc <htm:br/> chown root:root kdmrc <htm:br/> chmod 644 kdmrc <htm:br/> diff
                    kdmrc-preCIS kdmrc <htm:br/> fi <htm:br/> if [ -e /etc/X11/gdm/gdm.conf ]; then <htm:br/> cd /etc/X11/gdm <htm:br/> cp -pf
                    gdm.conf gdm.conf.tmp <htm:br/> awk '/^Greeter=/ &amp;&amp; /gdmgreeter/ \ <htm:br/> { printf("#%s\n", $0); next };
                    /^#Greeter=/ &amp;&amp; /gdmlogin/ \ <htm:br/> { $1 = "Greeter=gdmlogin" }; /Welcome=/ \ <htm:br/> { print
                    "Welcome=Authorized uses only!"; next }; <htm:br/> { print }' gdm.conf.tmp &gt; gdm.conf <htm:br/> rm -f gdm.conf.tmp
                    <htm:br/> chown root:root gdm.conf <htm:br/> chmod 644 gdm.conf <htm:br/> diff gdm.conf-preCIS gdm.conf <htm:br/> fi<htm:br/></htm:code>
        <htm:p>
          <htm:strong>Discussion:</htm:strong>
        </htm:p>
        <htm:p>The commands above set the warning message on xdm, kdm and gdm – in case something other than the default X login GUI was
                    installed.</htm:p>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">11560</ident>
        <xccdf:complex-check operator="AND">
            <!-- GDM -->
            <xccdf:complex-check operator="OR">
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command check="none exist" comment="Package 'gdm' not installed">
                            <ecl:command>dpkg -l | egrep "ii[[:space:]]+gdm[[:space:]]"</ecl:command>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command check="all" comment="GDM banner configured" success="pass">
                            <ecl:command>egrep '^Warning=*Authorized' /etc/gdm/gdm.conf</ecl:command>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:complex-check>
            <!-- xdm -->
            <xccdf:complex-check operator="OR">
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command check="none exist" comment="Package 'xdm' not installed">
                            <ecl:command>dpkg -l | egrep "ii[[:space:]]+xdm[[:space:]]"</ecl:command>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
                <xccdf:check system="http://cisecurity.org/check">
                    <xccdf:check-content>
                        <ecl:shell-command check="all" comment="command test «egrep '^xlogin\*greeting:[[:space:]]*Authorized' /etc/X11/xdm/Xresources»" success="pass">
                            <ecl:command>egrep '^xlogin\*greeting:[[:space:]]*Authorized' /etc/X11/xdm/Xresources</ecl:command>
                            <ecl:line-selection op="pm" value=".*"/>
                        </ecl:shell-command>
                    </xccdf:check-content>
                </xccdf:check>
            </xccdf:complex-check>
        </xccdf:complex-check>
    </cdf:Rule>
    <cdf:Rule id="banner-ftp" role="full" selected="false" weight="1.0">
      <cdf:title>Create "authorized only" Banners For vsftpd, proftpd, If Applicable</cdf:title>
      <cdf:description>
        <htm:strong>Action:</htm:strong>
        <htm:br/>
        <htm:code> cd /etc <htm:br/> if [ -d vsftpd ]; then <htm:br/> cd vsftpd <htm:br/> fi <htm:br/> if [ -e vsftpd.conf ]; then <htm:br/>
                    echo "ftpd_banner=Authorized users only. All activity \ <htm:br/> may be monitored and reported." &gt;&gt; vsftpd.conf
                    <htm:br/> diff vsftpd.conf-preCIS vsftpd.conf <htm:br/> fi<htm:br/> if [ -e proftpd.conf ]; then<htm:br/> echo -e
                    "DisplayConnect\t\t/etc/issue.net" &gt;&gt; proftpd.conf<htm:br/> echo -e "DisplayLogin\t\t/etc/motd" &gt;&gt;
                    proftpd.conf<htm:br/> diff proftpd.conf-preCIS proftpd.conf<htm:br/> fi<htm:br/></htm:code>
        <htm:p>
          <htm:strong>Discussion:</htm:strong>
        </htm:p>
        <htm:p>Whenever you make substantial changes to a system, reboot. Some System Administrators believe any change to the init scripts
                    warrant a reboot to ensure the system comes up as expected. Hours of lost productivity with extensive troubleshooting (not to
                    mention lost revenue) have occurred because a system did not start up as expected. The root cause was an init problem that would
                    have been detected had the reboot taken place.</htm:p>
      </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">11570</ident>
      <xccdf:complex-check operator="OR">
        <xccdf:check system="http://cisecurity.org/check">
          <!--Service «vsftpd» does not exist-->
          <xccdf:check-content>
            <ecl:shell-command check="none exist" comment="Service «vsftpd» does not exist">
              <ecl:command>find /etc/rc[23456].d/S??vsftpd -ls</ecl:command>
              <ecl:line-selection op="pm" value=".+"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
        <xccdf:check system="http://cisecurity.org/check">
          <!--command test «egrep '^ftpd_banner=Authorized users only. All activity may be monitored and reported\.$' /etc/vsftpd/vsftpd.conf»-->
          <xccdf:check-content>
            <ecl:shell-command check="all" comment="command test «egrep '^ftpd_banner=Authorized users only. All activity may be monitored and reported\.$' /etc/vsftpd/vsftpd.conf»" success="pass">
              <ecl:command>egrep '^ftpd_banner=Authorized users only. All activity may be monitored and reported\.$'
                                /etc/vsftpd/vsftpd.conf</ecl:command>
              <ecl:line-selection op="pm" value=".*"/>
            </ecl:shell-command>
          </xccdf:check-content>
        </xccdf:check>
      </xccdf:complex-check>
    </cdf:Rule>
    <cdf:Rule id="reboot-now" role="unscored" selected="false" weight="0.0">
      <cdf:title>Reboot</cdf:title>
      <cdf:description>
        <htm:strong>Action:</htm:strong>
        <htm:br/>
        <htm:code> init 6<htm:br/></htm:code>
        <htm:br/>
        <htm:strong>Reboot:</htm:strong>
        <htm:br/> Whenever you make substantial changes to a system, reboot. Some System Administrators
                believe any change to the init scripts warrant a reboot to ensure the system comes up as expected. Hours of lost productivity with
                extensive troubleshooting (not to mention lost revenue) have occurred because a system did not start up as expected. The root cause
                was an init problem that would have been detected had the reboot taken place. </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">11600</ident>
    </cdf:Rule>
  </cdf:Group>
  <cdf:Group id="anti-virus">
    <cdf:title>Anti-Virus Consideration</cdf:title>
    <cdf:description>
      <htm:p>
        <htm:strong>
          <htm:i>Anti-Virus Products</htm:i>
        </htm:strong>
      </htm:p> Certain systems – such as mail servers and file servers – should have anti0virus software installed to protect the Windows
            clients that use the server. The following table summarizes the popular anti-virus offerings for the Linux platform. The Center for
            Internet security makes no endorsement for any product.<htm:br/><htm:table border="1" cellpadding="1" cellspacing="1"><htm:tr><htm:th>Vendor</htm:th><htm:th>Product</htm:th></htm:tr><htm:tr><htm:td>Sophos<htm:br/><htm:a href="http://www.sophos.com/">http://www.sophos.com/</htm:a></htm:td><htm:td>Commercial</htm:td></htm:tr><htm:tr><htm:td>NAI Virus Scan<htm:br/></htm:td><htm:td>Commercial</htm:td></htm:tr><htm:tr><htm:td>ClamAV<htm:br/><htm:a href="http://www.clamav.net/">http://www.clamav.net/</htm:a></htm:td><htm:td>Open Source</htm:td></htm:tr><htm:tr><htm:td>McAfee<htm:br/><htm:a href="http://www.mcafee.com/">http://www.mcafee.com/</htm:a></htm:td><htm:td>Commercial</htm:td></htm:tr><htm:tr><htm:td>CyberSoft Vfind<htm:br/><htm:a href="http://www.cyber.com/products/masterprice.html">http://www.cyber.com/products/masterprice.html</htm:a></htm:td><htm:td/></htm:tr><htm:tr><htm:td>H+B edv (hbedv)<htm:br/></htm:td><htm:td/></htm:tr><htm:tr><htm:td>f-prot Antivirus<htm:br/><htm:a href="http://www.f-prot.com/products/corporate_users/unix/">http://www.f-prot.com/products/corporate_users/unix/</htm:a></htm:td><htm:td>Commercial</htm:td></htm:tr><htm:tr><htm:td>Trend Micro<htm:br/></htm:td><htm:td>Commercial</htm:td></htm:tr><htm:tr><htm:td>Computer Associates InoculateIT<htm:br/><htm:a href="http://www.cai.com/">http://www.cai.com/</htm:a></htm:td><htm:td>Commercial</htm:td></htm:tr></htm:table></cdf:description>
  </cdf:Group>
  <cdf:Group id="backup">
    <cdf:title>Remove Backup Files</cdf:title>
    <cdf:description>
      <htm:strong>Action:</htm:strong>
      <htm:br/>
      <htm:strong>
        <htm:i>Warning: Read discussion before performing this action.</htm:i>
      </htm:strong>
      <htm:br/>
      <htm:code>find / -xdev | grep preCIS | xargs rm -rf</htm:code>
      <htm:br/>
      <htm:br/>
      <htm:strong>Discussion:</htm:strong>
      <htm:br/>
      <htm:p> When you are certain your changes are successful, remove the backup files as they will have insecure contents and/or
                permissions/ownerships. By leaving these files on your system, an attacker can use the backup files as if they were the originals
                thereby defeating much of your efforts. </htm:p>
    </cdf:description>
  </cdf:Group>
  <cdf:Group id="appendix-aa">
    <cdf:title>Appendix A Additional Security Notes</cdf:title>
    <cdf:description> The items in this section are security configuration settings that have been suggested by several other resources and system
            hardening tools. However, given the other settings in the benchmark document, the settings presented here provide relatively little
            incremental security benefit. Nevertheless, none of these settings should have a significant impact on the functionality of the system,
            and some sites may feel that the slight security enhancement of these settings outweighs the (sometimes minimal) administrative cost of
            performing them.<htm:br/><htm:br/> None of these settings will be checked by the automated scoring tool provided with the benchmark
            document. They are purely optional and may be applied or not at the discretion of local site administrators. </cdf:description>
    <cdf:Rule id="create-symlinks-for-dangerous-files" role="unscored" selected="false" weight="0.0">
      <cdf:title>Create Symlinks For Dangerous Files</cdf:title>
      <cdf:description>
        <htm:strong>Action:</htm:strong>
        <htm:br/>
        <htm:code> for FILE in /root/.rhosts /root/.shosts /etc/hosts.equiv \ <htm:br/> /etc/shosts.equiv; do <htm:br/> rm -f $FILE <htm:br/>
                    ln -s /dev/null $FILE<htm:br/> done<htm:br/></htm:code>
        <htm:br/>
        <htm:strong>Discussion:</htm:strong>
        <htm:br/> The <htm:code>/root/.rhosts</htm:code>, <htm:code>/root/.shosts</htm:code>, and
                    <htm:code>/etc/hosts.equiv</htm:code> files enable a weak form of access control (see the discussion of .rhosts files above).
                Attackers will often target these files as part of their exploit scripts. By linking these files to /dev/null, any data that an
                attacker writes to these files is simply discarded (though an astute attacker can still remove the link prior to writing their
                malicious data). </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">11160</ident>
    </cdf:Rule>
    <cdf:Rule id="change-sendmail-greeting" role="unscored" selected="false" weight="0.0">
      <cdf:title>Change Default Greeting String For sendmail</cdf:title>
      <cdf:description>
        <htm:strong>Action:</htm:strong>
        <htm:br/>
        <htm:code> cd /etc/mail <htm:br/> awk '/O SmtpGreetingMessage=/ \ <htm:br/> { print "O SmtpGreetingMessage=mailer ready"; next}
                    <htm:br/> { print }' sendmail.cf &gt; sendmail.cf.new <htm:br/> mv -f sendmail.cf.new sendmail.cf <htm:br/> chown root:bin
                    sendmail.cf <htm:br/> chmod 444 sendmail.cf<htm:br/> /usr/sbin/sendmailconfig </htm:code>
        <htm:br/>
        <htm:br/>
        <htm:strong>Discussion:</htm:strong>
        <htm:br/> The default SMTP greeting string displays the version of the Sendmail software running
                on the remote system. Hiding this information is generally considered to be good practice, since it can help attackers target attacks
                at machines running a vulnerable version of Sendmail. However, the actions in the benchmark document completely disable Sendmail on
                the system, so changing this default greeting string is something of a moot point unless the machine happens to be an email server.
            </cdf:description>
    </cdf:Rule>
    <cdf:Rule id="enable-tcp-syn-cookies" role="unscored" selected="false" weight="0.0">
      <cdf:title>Enable TCP SYN Cookie Protection</cdf:title>
      <cdf:description>
        <htm:strong>Action:</htm:strong>
        <htm:br/>
        <htm:code> echo "echo 1 &gt; /proc/sys/net/ipv4/tcp_syncookies" \ <htm:br/> &gt;&gt; /etc/rc.local<htm:br/></htm:code>
        <htm:br/>
        <htm:strong>Discussion:</htm:strong>
        <htm:br/> A "SYN Attack" is a denial of service (DoS) attack that consumes resources on your
                system forcing you to reboot. This particular attack is performed by beginning the TCP connection handshake (sending the SYN packet),
                and then never completing the process to open the connection. This leaves your system with several (hundreds or thousands) of
                half-open connections. This is a fairly simple attack and should be blocked. </cdf:description>
    </cdf:Rule>
    <cdf:Rule id="additional-bootloader-security" role="unscored" selected="false" weight="0.0">
      <cdf:title>Additional LILO/GRUB Security</cdf:title>
      <cdf:description>
        <htm:strong>Action:</htm:strong>
        <htm:br/>
        <htm:code> chattr +i /etc/lilo.conf<htm:br/> chattr +i /boot/grub/menu.lst<htm:br/></htm:code>
        <htm:br/>
        <htm:strong>Discussion:</htm:strong>
        <htm:br/> Setting the immutable flag on the LILO and GRUB config files will prevent any changes
                (accidental or otherwise) to the lilo.conf or menu.lst files. If you wish to modify either file you will need to unset the immutable
                flag using the chattr command with -i instead of +i. </cdf:description>
    </cdf:Rule>
    <cdf:Rule id="eval-start-up-packages" role="unscored" selected="false" weight="0.0">
      <cdf:title>Evaluate Packages Associated With Startup Scripts</cdf:title>
      <cdf:description>
        <htm:strong>Question:</htm:strong>
        <htm:br/> How many of the startup scripts do you really need?<htm:br/><htm:br/><htm:strong>Action:</htm:strong><htm:br/><htm:code> cd /etc/init.d <htm:br/> ls<htm:br/></htm:code><htm:br/><htm:strong>Discussion:</htm:strong><htm:br/> The most effective way to get rid of the much of the unused software is to look in the
                startup directory /etc/init.d and evaluate which of these remaining services are not necessary. Use <htm:code>dpkg --search
                    /etc/init.d/&lt;scriptname&gt;</htm:code> to determine the package it belongs to, use <htm:code>aptitude show
                    &lt;packagename&gt; </htm:code> to read about it, then use <htm:code>aptitude remove &lt;packagename&gt;
                </htm:code> to remove it. </cdf:description>
    </cdf:Rule>
    <cdf:Rule id="eval-all-packages" role="unscored" selected="false" weight="0.0">
      <cdf:title>Evaluate Every Installed Package</cdf:title>
      <cdf:description>
        <htm:strong>Question:</htm:strong>
        <htm:br/> How much unused software was installed on your system?<htm:br/><htm:br/><htm:strong>Action:</htm:strong><htm:br/> See Discussion <htm:br/><htm:br/><htm:strong>Discussion:</htm:strong><htm:br/> Computer Security Industry Best Practices recommend removing unused services and
                software to minimize attack vectors on a system. The following references suggest removing unused software:<htm:br/><htm:ul><htm:li> Common Sense Guide to Cyber Security for Small Businesses – Recommended Actions for Information Security, 1st Edition,
                        March 2004, <htm:a href="http://www.us-cert.gov/reading_room/CSG-small-business.pdf">http://www.us-cert.gov/reading_room/CSG-small-business.pdf</htm:a></htm:li><htm:li> IUP System Administrator Security Guidelines and Best Practices, <htm:a href="http://www.iup.edu/tsc/security/">http://www.iup.edu/tsc/security/</htm:a></htm:li><htm:li> Security Engineering Awareness for Systems Engineers , <htm:a href="http://www.software.org/pub/externalpapers/SecEngAwareness.doc">http://www.software.org/pub/externalpapers/SecEngAwareness.doc</htm:a>. </htm:li></htm:ul> This task can be performed fairly quickly by logging in twice and running <htm:code>aptitude</htm:code> in GUI
                mode,selecting <htm:code>Installed Packages</htm:code>, and pressing "-" on each package that is determined unneeded.
            </cdf:description>
    </cdf:Rule>
    <cdf:Rule id="configure-sudo" role="unscored" selected="false" weight="0.0">
      <cdf:title>Install and Configure sudo</cdf:title>
      <cdf:description>
        <htm:strong>Action:</htm:strong>
        <htm:br/> Install <htm:code>sudo</htm:code> via your enterpise process, if applicable. Otherwise, run
                    <htm:code>aptitude install sudo</htm:code>. <htm:br/><htm:br/><htm:strong>Discussion:</htm:strong><htm:br/> sudo is a package that allows the System Administrator to delegate activities to groups
                of users. These activities are normally beyond the administrative capability of that user – restarting the web server, for example. If
                frequent web server configuration changes are taking place (or you have a bug and the web server keeps crashing), it becomes very
                cumbersome to continually engage the SysAdmin just to restart the web server. sudo allows the Administrator to delegate just that one
                task using root authority without allowing that group of users any other root capability.<htm:br/><htm:br/> Once
                <htm:code>sudo</htm:code> is installed, configure it using <htm:code>visudo</htm:code> – do not <htm:code>vi</htm:code> the config
                file. <htm:code>visudo</htm:code> has error checking built in. Experience has shown that if <htm:code>/etc/sudoers</htm:code> gets
                botched (from using vi without visudo's error checking feature), recovery may become very difficult. </cdf:description>
    </cdf:Rule>
    <cdf:Rule id="lockout-after-three" role="unscored" selected="false" weight="0.0">
      <cdf:title>Lockout Accounts After 3 Failures</cdf:title>
      <cdf:description>
        <htm:strong>Action:</htm:strong>
        <htm:br/>
        <htm:code> printf \ <htm:br/> "auth required \<htm:br/> /lib/security/pam_tally.so onerr=fail no_magic_root\n\<htm:br/> account
                    required \<htm:br/> /lib/security/pam_tally.so deny=3 no_magic_root reset" \<htm:br/> &gt;&gt; /etc/pam.d/common-auth
                    <htm:br/></htm:code>
        <htm:br/>
        <htm:br/>
        <htm:strong>Discussion:</htm:strong>
        <htm:br/> A system policy of locking out an account that fails several successive authentication
                attempts is an industry best practice, and is easily implemented in this Benchmark. The above value (deny=3) will cause the account to
                be locked out after 3 successive failed login attempts. This value is chosen as it is a common value used in some Federally-regulated
                industries – you are free to increase it if desired.<htm:br/><htm:br/> Note: The above command assumes account lockouts are not
                already implemented on the system. If they are already implemented, you will have to edit <htm:code>/etc/pam.d/common-auth</htm:code>
                manually.<htm:br/><htm:br/> To unlock a user that has been locked out, use the faillog command. For example, to unlock user oracle,
                issue this command:<htm:br/><htm:br/><htm:code>faillog -u oracle -r</htm:code><htm:br/><htm:br/> See also the discussion at <htm:a href="http://www.puschitz.com/SecuringLinux.shtml">http://www.puschitz.com/SecuringLinux.shtml</htm:a></cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">11320</ident>
    </cdf:Rule>
    <cdf:Rule id="additional-kernel-tunings" role="unscored" selected="false" weight="0.0">
      <cdf:title>Additional Kernel Tunings</cdf:title>
      <cdf:description>
        <htm:strong>Action:</htm:strong>
        <htm:br/>
        <htm:code> cat &lt;&lt;END_SCRIPT &gt;&gt; /etc/sysctl.conf <htm:br/> # Following 2 lines added by CISecurity
                    Benchmark sec SN.9<htm:br/> net.ipv4.tcp_max_orphans = 256 <htm:br/> net.ipv4.conf.all.log_martians = 1 <htm:br/> END_SCRIPT
                    <htm:br/> chown root:root /etc/sysctl.conf <htm:br/> chmod 0600 /etc/sysctl.conf </htm:code>
        <htm:br/>
        <htm:br/>
        <htm:strong>Discussion:</htm:strong>
        <htm:br/> Before implementing these changes, please review them with your environment in mind. The
                above value for tcp_max_orphans is much lower than the default 16,384, and may be too low, depending on the server's use and
                environment. Also be aware that logging all martians may generate an excessive amount of logs, especially on multi-homed servers with
                at least one network interface on a hostile network (i.e, your border firewalls). You should ensure you have plenty of log space
                available as well as sending your logs to a remote logging host. </cdf:description>
    </cdf:Rule>
    <cdf:Rule id="remove-compilers-assemblers" role="full" selected="false" weight="1.0">
      <cdf:title>Remove All Compilers and Assemblers</cdf:title>
      <cdf:description>
        <htm:i>Note: Bastille configuration set to remove c compiler only.</htm:i>
        <htm:br/>
        <htm:strong>Question:</htm:strong>
        <htm:br/> Is there a mission-critical reason to have a compiler or assembler on this
                machine?<htm:br/> If the answer is no, perform the action below.<htm:br/><htm:br/><htm:strong>Action:</htm:strong><htm:br/> See Discussion <htm:br/><htm:br/><htm:strong>Discussion:</htm:strong><htm:br/> The following command will help identify such packages:<htm:br/><htm:code>dpkg -l | egrep "cpp|dev|java|asm|gcc|bin86|dev86"</htm:code><htm:br/></cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">11530</ident>
      <xccdf:check system="http://cisecurity.org/check">
        <!--Package «gcc» does not exist-->
        <xccdf:check-content>
          <ecl:shell-command check="none exist" comment="Package «gcc» does not exist">
            <ecl:command>dpkg -l | egrep "cpp|dev|java|asm|gcc|bin86|dev86"</ecl:command>
            <ecl:line-selection op="pm" value=".+"/>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </cdf:Rule>
    <cdf:Rule id="verify-uid-0-accounts" role="full" selected="false" weight="1.0">
      <cdf:title>Verify That No Unauthorized UID 0 Accounts Exists</cdf:title>
      <cdf:description>
        <htm:strong>Action:</htm:strong>
        <htm:br/> getent passwd | awk -F: '$3 == "0" { print $1 }' <htm:br/><htm:br/><htm:strong>Discussion:</htm:strong><htm:br/> Any account with UID 0 has superuser privileges on the system. The preferred and best
                practice for administrators obtaining superuser privileges, is to login with an unprivileged account in the wheel group, and then use
                sudo for the operations that require root level access. </cdf:description>
      <ident xmlns="http://checklists.nist.gov/xccdf/1.1" system="http://benchmarks.cisecurity.org/">11440</ident>
      <xccdf:check system="http://cisecurity.org/check">
        <!--command test «awk -F: '($3==0 && $1!="root") {print}' /etc/passwd»-->
        <xccdf:check-content>
          <ecl:shell-command check="none exist" comment="command test «awk -F: '($3==0 &amp;&amp; $1!=&quot;root&quot;) {print}' /etc/passwd»">
            <ecl:command>awk -F: '($3==0 &amp;&amp; $1!="root") {print}' /etc/passwd</ecl:command>
            <ecl:line-selection op="pm" value="^.+$"/>
          </ecl:shell-command>
        </xccdf:check-content>
      </xccdf:check>
    </cdf:Rule>
  </cdf:Group>
  <cdf:Group id="file-backup-script">
    <cdf:title>Appendix B File Backup Script</cdf:title>
    <cdf:description>
      <htm:code> #!/bin/bash<htm:br/> # Create /root/do-restore.sh<htm:br/> cat &lt;&lt;EOF &gt; /root/do-restore.sh<htm:br/>
                #!/bin/bash<htm:br/> # This script restores the files changed by the CISecurity<htm:br/> # Linux Benchmark do-backup.sh
                script.<htm:br/> unalias rm mv cp<htm:br/> sed -n "31,9999p" /root/do-restore.sh | while read LINE; do<htm:br/> FILE=\`echo \$LINE |
                awk '{print \$1}'\`<htm:br/> PERMS=\`echo \$LINE | awk '{print \$2}'\`<htm:br/> echo "Restoring \$FILE with \$PERMS
                permissions"<htm:br/> [ -f \${FILE}-preCIS ] &amp;&amp; /bin/cp -p \${FILE}-preCIS \${FILE}<htm:br/> /bin/chmod \${PERMS}
                \${FILE}<htm:br/> [ -f \${FILE}-preCIS ] &amp;&amp; /bin/rm \${FILE}-preCIS<htm:br/> done <htm:br/><htm:br/> echo "Completed file restoration - restoring directories"<htm:br/> for DIR in \<htm:br/> /etc/xinetd.d /etc/rc.d \<htm:br/>
                /var/spool/cron /etc/cron.* \<htm:br/> /etc/pam.d /etc/skel<htm:br/> do<htm:br/> if [ -d \${DIR}-preCIS ]; then<htm:br/> echo
                "Restoring \${DIR}"<htm:br/> /bin/cp -pr \${DIR}-preCIS \${DIR}<htm:br/> /bin/rm -rf \${DIR}-preCIS<htm:br/> fi<htm:br/> done
                <htm:br/> echo "If you installed Bastille, please run "<htm:br/> echo "/usr/sbin/RevertBastille and examine its list of changed
                files."<htm:br/> exit 0<htm:br/> ### END OF SCRIPT. DYNAMIC DATA FOLLOWS. ###<htm:br/> EOF<htm:br/> /bin/chmod 700
                /root/do-restore.sh<htm:br/> echo "Backing up individual files"<htm:br/> for FILE in \<htm:br/> /etc/ssh/sshd_config
                /etc/ssh/ssh_config /etc/default/sysstat\<htm:br/> /etc/inetd.conf /etc/hosts.deny /etc/hosts.allow\<htm:br/> /etc/mail/sendmail.conf
                /etc/inittab\<htm:br/> /etc/bind/named.conf /etc/sysctl.conf /etc/syslog.conf \<htm:br/> /etc/wu-ftpd/ftpaccess /etc/vsftpd.conf
                /etc/fstab \<htm:br/> /etc/vsftpd.ftpusers /etc/X11/xdm/Xservers\<htm:br/> /etc/X11/gdm/gdm.conf /etc/X11/xinit/xserverrc\<htm:br/>
                /etc/cron.allow /etc/at.allow /etc/cron.deny\<htm:br/> /etc/at.deny /etc/crontab \<htm:br/> /etc/securetty /etc/inittab /etc/exports
                \<htm:br/> /etc/shadow /etc/passwd /etc/login.defs\<htm:br/> /etc/default/useradd /etc/profile /etc/csh.login\<htm:br/> /etc/csh.cshrc
                /etc/bash.bashrc /etc/security/limits.conf\<htm:br/> /etc/issue /etc/motd /etc/X11/xdm/kdmrc\<htm:br/> /etc/X11/xdm/Xresources \<htm:br/><!-- orig files --> /etc/proftpd.conf /etc/ftpusers \<htm:br/> /boot/grub/menu.lst /etc/issue.net\<htm:br/> /root/.tcshrc
                /etc/security/limits.conf \<htm:br/> /root/.bash_profile /root/.bashrc /root/.cshrc; do<htm:br/> if [ -f ${FILE} ]; then<htm:br/> #
                Backup file<htm:br/> /bin/cp -p ${FILE} ${FILE}-preCIS<htm:br/> # Add it to the do-restore script<htm:br/> echo ${FILE} `find ${FILE}
                -printf "%m"` &gt;&gt; /root/do-restore.sh<htm:br/> fi<htm:br/> done<htm:br/> echo "Completed file backups - backing up
                directories"<htm:br/> for DIR in \<htm:br/> /etc/init.d \<htm:br/> /var/spool/cron /etc/cron.* \<htm:br/> /etc/pam.d
                /etc/skel<htm:br/> do<htm:br/> echo ${DIR}<htm:br/> [ -d ${DIR} ] &amp;&amp; /bin/cp -pr ${DIR} ${DIR}-preCIS<htm:br/>
                done<htm:br/> echo "Recording log permissions"<htm:br/> find /var/log -printf "%h/%f %m\n" &gt;&gt;
                /root/do-restore.sh<htm:br/> echo "Backup complete."<htm:br/></htm:code>
    </cdf:description>
  </cdf:Group>
  <cdf:Group id="bastille-config">
    <cdf:title>Appendix C Bastille Configuration</cdf:title>
    <cdf:description> Here is the recommended Bastille configuration.<htm:br/> Note: Bastille has the ability to set the GRUB/LILO boot passwords
            but it is not used here to ensure the password is unique to the enterprise implementing this benchmark. Setting this password is covered
            in section X.X of the Benchmark.<htm:br/> Points to note where the CISecurity Benchmark differ from Bastille'e defaults:<htm:br/> Q: What
            umask would you like to set for users on the system? <htm:b>027</htm:b><htm:br/> Q: Would you like to disable indexes?
            <htm:b>Yes</htm:b><htm:br/> Q: Would you like to disable the gcc and/or g++ compiler? <htm:b>Yes</htm:b><htm:br/> Q: May we activate LauS?
                <htm:b>No </htm:b>(Note: There is no default answer for this question)<htm:br/> Q: Would you like to deactivate the HP OfficeJet
            (hpoj) script on this machine? <htm:b>Yes </htm:b>(Note: There is no default answer for this question)<htm:br/> Q: Would you like to
            deactivate the ISDN script on this machine? <htm:b>Yes </htm:b>(Note: There is no default answer for this question)<htm:br/> Q: Would you
            like to deactivate kudzu's run at boot? <htm:b>Yes </htm:b>(Note: There is no default answer for this question)<htm:br/> Q: Would you like
            to run sendmail via cron to process the queue? <htm:b>Yes</htm:b><htm:br/><htm:br/> Note that use of host-based firewalls may interfere
            with existing enterprise practices and the Level 1 benchmark makes no recommendation for enabling or disabling the host-based packet filter.<htm:br/><htm:br/><htm:strong><htm:i>CIS Bastille Configuration File</htm:i></htm:strong><htm:br/> Note that this configuration file is also provided in the archive containing the PDF version of this document and
            the CIS scoring tool.<htm:br/> file: bastille.CIS.conf<htm:br/><htm:br/> # Q: Would you like to restrict the use of cron to administrative
            accounts? [Y]<htm:br/> AccountSecurity.cronuser="Y"<htm:br/> # Q: Would you like to enforce password aging? [Y]<htm:br/>
            AccountSecurity.passwdage="Y"<htm:br/> # Q: Should Bastille disable clear-text r-protocols that use IP-based authentication? [Y]<htm:br/>
            AccountSecurity.protectrhost="Y"<htm:br/> # Q: Should Bastille ask you for extraneous accounts to delete?<htm:br/>
            AccountSecurity.removeaccounts="Y"<htm:br/> # Q: Which extraneous accounts should Bastille delete (space-separated) ?<htm:br/>
            AccountSecurity.removeaccounts_list="games gopher"<htm:br/> # Q: Should Bastille ask you for extraneous groups to delete?<htm:br/>
            AccountSecurity.removegroups="N"<htm:br/> # Q: Should we disallow root login on tty's 1-6? [N]<htm:br/>
            AccountSecurity.rootttylogins="N"<htm:br/> # Q: What umask would you like to set for users on the system? [077]<htm:br/>
            AccountSecurity.umask="027"<htm:br/> # Q: Do you want to set the default umask? [Y]<htm:br/> AccountSecurity.umaskyn="Y"<htm:br/> # Q:
            Would you like to disable indexes? [N]<htm:br/> Apache.apacheindex="Y"<htm:br/> # Q: Would you like to deactivate the Apache web server?
            [Y]<htm:br/> Apache.apacheoff="Y"<htm:br/> # Q: Would you like to bind the Web server to listen only to the localhost? [N]<htm:br/>
            Apache.bindapachelocal="N"<htm:br/> # Q: Would you like to bind the web server to a particular interface? [N]<htm:br/>
            Apache.bindapachenic="N"<htm:br/> # Q: Would you like to disable CGI scripts, at least for now? [Y]<htm:br/> Apache.cgi="Y"<htm:br/> # Q:
            Would you like to deactivate server-side includes? [Y]<htm:br/> Apache.ssi="Y"<htm:br/> # Q: Would you like to deactivate the following of
            symbolic links? [Y] <htm:br/> Apache.symlink="Y"<htm:br/> # Q: Would you like to reduce the LILO delay time to zero? [N]<htm:br/>
            BootSecurity.lilodelay="N"<htm:br/> # Q: Do you ever boot Linux from the hard drive? [Y]<htm:br/> BootSecurity.lilosub_drive="Y"<htm:br/>
            # Q: Would you like to write the LILO changes to a boot floppy? [N]<htm:br/> BootSecurity.lilosub_floppy="N"<htm:br/> # Q: Would you like
            to password protect single-user mode? [Y]<htm:br/> BootSecurity.passsum="Y"<htm:br/> # Q: Would you like to password-protect the GRUB
            prompt? [N]<htm:br/> BootSecurity.protectgrub="N" <htm:br/> # Q: Would you like to password-protect the LILO prompt? [N]<htm:br/>
            BootSecurity.protectlilo="N"<htm:br/> # Q: Would you like to disable CTRL-ALT-DELETE rebooting? [N]<htm:br/>
            BootSecurity.secureinittab="N"<htm:br/> # Q: Should we restrict console access to a small group of user accounts? [N]<htm:br/>
            ConfigureMiscPAM.consolelogin="N"<htm:br/> # Q: Would you like to put limits on system resource usage? [N]<htm:br/>
            ConfigureMiscPAM.limitsconf="N"<htm:br/> # Q: Would you like to chroot named and set it to run as a non-root user? [N]<htm:br/>
            DNS.chrootbind="N"<htm:br/> # Q: Would you like to deactivate named, at least for now? [Y]<htm:br/> DNS.namedoff="Y"<htm:br/> # Q: Would
            you like to disable the gcc and/or g++ compiler? [N]<htm:br/> DisableUserTools.compiler="Y"<htm:br/> # Q: Would you like to disable
            anonymous download? [N]<htm:br/> FTP.anonftp="N"<htm:br/> # Q: Would you like to disable user privileges on the FTP daemon? [N]<htm:br/>
            FTP.userftp="N"<htm:br/> # Q: Would you like to set more restrictive permissions on the administration utilities? [N]<htm:br/>
            FilePermissions.generalperms_1_1="N"<htm:br/> # Q: Would you like to disable SUID status for XFree86? [N]<htm:br/>
            FilePermissions.suidXFree86="N"<htm:br/> # Q: Would you like to disable SUID status for Xwrapper? [N]<htm:br/>
            FilePermissions.suidXwrapper="N"<htm:br/> # Q: Would you like to disable SUID status for at? [Y]<htm:br/>
            FilePermissions.suidat="Y"<htm:br/> # Q: Would you like to disable SUID status for cardctl? [Y]<htm:br/>
            FilePermissions.suidcard="Y"<htm:br/> # Q: Would you like to disable SUID status for DOSEMU? [Y]<htm:br/>
            FilePermissions.suiddos="Y"<htm:br/> # Q: Would you like to disable SUID status for dump and restore? [Y]<htm:br/>
            FilePermissions.suiddump="Y"<htm:br/> # Q: Would you like to disable SUID status for mount/umount?<htm:br/>
            FilePermissions.suidmount="Y"<htm:br/> # Q: Would you like to disable SUID status for news server tools? [Y] <htm:br/>
            FilePermissions.suidnews="Y"<htm:br/> # Q: Would you like to disable SUID status for ping? [Y]<htm:br/>
            FilePermissions.suidping="N"<htm:br/> # Q: Would you like to disable SUID status for printing utilities? [N]<htm:br/>
            FilePermissions.suidprint="N"<htm:br/> # Q: Would you like to disable the r-tools? [Y]<htm:br/> FilePermissions.suidrtool="Y"<htm:br/> #
            Q: Would you like to disable SUID status for traceroute? [Y]<htm:br/> FilePermissions.suidtrace="Y"<htm:br/> # Q: Would you like to
            disable SUID status for usernetctl? [Y]<htm:br/> FilePermissions.suidusernetctl="Y"<htm:br/> # Q: Would you like to run the packet
            filtering script? [N]<htm:br/> Firewall.ip_intro="N"<htm:br/> # Q: May we activate LAuS?<htm:br/> Logging.laus="N"<htm:br/> # Q: Would you
            like to add additional logging? [Y]<htm:br/> Logging.morelogging="Y"<htm:br/> # Q: Would you like to set up process accounting?
            [N]<htm:br/> Logging.pacct="N"<htm:br/> # Q: Do you have a remote logging host? [N]<htm:br/> Logging.remotelog="N"<htm:br/> # Q: Would you
            like to disable acpid and/or apmd? [Y]<htm:br/> MiscellaneousDaemons.apmd="Y"<htm:br/> # Q: Would you like to disable the DHCP daemon?
            [Y]<htm:br/> MiscellaneousDaemons.dhcpd="Y"<htm:br/> # Q: Would you like to deactivate gated? [Y]<htm:br/>
            MiscellaneousDaemons.disable_gated="Y"<htm:br/> # Q: Would you like to deactivate the HP OfficeJet (hpoj) script on this machine?<htm:br/>
            MiscellaneousDaemons.disable_hpoj="Y"<htm:br/> # Q: Would you like to deactivate the ISDN script on this machine?<htm:br/>
            MiscellaneousDaemons.disable_isdn="Y"<htm:br/> # Q: Would you like to deactivate kudzu's run at boot?<htm:br/>
            MiscellaneousDaemons.disable_kudzu="Y"<htm:br/> # Q: Would you like to deactivate routed? [Y]<htm:br/>
            MiscellaneousDaemons.disable_routed="Y"<htm:br/> # Q: Would you like to disable GPM? [Y]<htm:br/> MiscellaneousDaemons.gpm="Y"<htm:br/> #
            Q: Would you like to disable the news server daemon? [Y]<htm:br/> MiscellaneousDaemons.innd="Y"<htm:br/> # Q: Would you like to deactivate
            NIS client programs? [Y]<htm:br/> MiscellaneousDaemons.nis_client="Y"<htm:br/> # Q: Would you like to deactivate NIS server programs?
            [Y]<htm:br/> MiscellaneousDaemons.nis_server="Y"<htm:br/> # Q: Would you like to disable PCMCIA services? [Y]<htm:br/>
            MiscellaneousDaemons.pcmcia="Y"<htm:br/> # Q: Would you like to deactivate NFS and Samba? [Y]<htm:br/>
            MiscellaneousDaemons.remotefs="Y"<htm:br/> # Q: Would you like to disable SNMPD? [Y]<htm:br/> MiscellaneousDaemons.snmpd="Y"<htm:br/> # Q:
            Would you like to disable printing? [N]<htm:br/> Printing.printing="N"<htm:br/> # Q: Would you like to disable printing? [N]<htm:br/>
            Printing.printing_cups="N"<htm:br/> # Q: Would you like to disable CUPS' legacy LPD support? [N]<htm:br/>
            Printing.printing_cups_lpd_legacy="N"<htm:br/> # Q: Would you like to display "Authorized Use" messages at log-in time? [Y]<htm:br/>
            SecureInetd.banners="Y"<htm:br/> # Q: Should Bastille ensure inetd's FTP service does not run on this system? [y]<htm:br/>
            SecureInetd.deactivate_ftp="Y"<htm:br/> # Q: Should Bastille ensure the telnet service does not run on this system? [y]<htm:br/>
            SecureInetd.deactivate_telnet="Y"<htm:br/> # Q: Who is responsible for granting authorization to use this machine?<htm:br/>
            SecureInetd.owner="its owner"<htm:br/> # Q: Would you like to set a default-deny on TCP Wrappers and xinetd? [N]<htm:br/>
            SecureInetd.tcpd_default_deny="N"<htm:br/> # Q: Would you like to run sendmail via cron to process the queue? [N]<htm:br/>
            Sendmail.sendmailcron="Y"<htm:br/> # Q: Do you want to stop sendmail from running in daemon mode? [Y]<htm:br/>
            Sendmail.sendmaildaemon="Y"<htm:br/> # Q: Would you like to disable the VRFY and EXPN sendmail commands? [Y]<htm:br/>
            Sendmail.vrfyexpn="Y"<htm:br/> # Q: Would you like to install TMPDIR/TMP scripts? [N]<htm:br/> TMPDIR.tmpdir="N"<htm:br/></cdf:description>
  </cdf:Group>
  <cdf:Group id="change_history">
    <cdf:title>Change History</cdf:title>
    <cdf:description>
      <htm:table>
        <htm:tr>
          <htm:th>Date</htm:th>
          <htm:th>Revision</htm:th>
          <htm:th>Change</htm:th>
        </htm:tr>
        <htm:tr>
          <htm:td>2/26/2007</htm:td>
          <htm:td>0.0.1</htm:td>
          <htm:td>Fixed typos in sections 3.5, 4.18, 4.5, 5.1, 5.2, 6.4, and 7.9.</htm:td>
        </htm:tr>
        <htm:tr>
          <htm:td>2/26/2007</htm:td>
          <htm:td>0.0.1</htm:td>
          <htm:td>In dobackup.sh, removed references to /etc/xinetd.conf, /etc/xinetd.d, and /etc/rc.d. Added /etc/init.d.</htm:td>
        </htm:tr>
        <htm:tr>
          <htm:td>2/26/2007</htm:td>
          <htm:td>0.0.1</htm:td>
          <htm:td>Replaced 'question' portion in section 5.1 with "Does this machine connect to a network?"</htm:td>
        </htm:tr>
        <htm:tr>
          <htm:td>2/26/2007</htm:td>
          <htm:td>0.0.1</htm:td>
          <htm:td>In section 2.5 added "After Bastille is installed, copy the bastille.CIS.conf file provided in the archive containing the
                        PDF version of this document (and in Appendix C) to /etc/Bastille/config."</htm:td>
        </htm:tr>
        <htm:tr>
          <htm:td>3/05/2007</htm:td>
          <htm:td>0.0.1</htm:td>
          <htm:td>Updated BIOS password rule to reflect preference of requiring a BIOS password for modifying the BIOS but not for
                    boot.</htm:td>
        </htm:tr>
        <htm:tr>
          <htm:td>4/05/2007</htm:td>
          <htm:td>0.0.1</htm:td>
          <htm:td>Normalized password recommendations - eight or more characters in length</htm:td>
        </htm:tr>
        <htm:tr>
          <htm:td>4/05/2007</htm:td>
          <htm:td>0.0.1</htm:td>
          <htm:td>Updated partitioning guidance</htm:td>
        </htm:tr>
        <htm:tr>
          <htm:td>4/05/2007</htm:td>
          <htm:td>0.0.1</htm:td>
          <htm:td>Added XCCDF platform and frontmatter</htm:td>
        </htm:tr>
        <htm:tr>
          <htm:td>10/31/2008</htm:td>
          <htm:td>1.0.0</htm:td>
          <htm:td>Resolved bugs #460, #461, #462</htm:td>
        </htm:tr>
      </htm:table>
    </cdf:description>
  </cdf:Group>
<xccdf:signature><ds:Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
<ds:SignedInfo>
<ds:CanonicalizationMethod Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315"/>
<ds:SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1"/>
<ds:Reference URI="">
<ds:Transforms>
<ds:Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature"/>
<ds:Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"/>
</ds:Transforms>
<ds:DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/>
<ds:DigestValue>x8Xi7ondK8aF9D6PTzF/L6PtSQc=</ds:DigestValue>
</ds:Reference>
</ds:SignedInfo>
<ds:SignatureValue>
UEItCvluVXgGi/xBtwrTb+uBlz3sZLIF/lBTO5ocqut+9vbQWUfQePLc+vY4xcFr76AkeS00Qk4K
cnH+LV4jQJz1ivh152qb9YaU623mf6nnDJb6uihOewS/F5lcRBKk4Mo5+LfGgNcLA4o5DrfWaVVg
Z0fgDmv01vw7N7O0cMG9EPMeYwC1OGQwwQLcbAEfbL5X7LF09QfYmXW10LNaIzsZQEy8NDH8Tb9v
FICUfqdRh1WvuZhOaSUvhNc3v+wI4Vr2skAjNpnr/fJ4fwUXD67lQAuQyu6AfH7LbWC7kavq2Lay
z+ZVix5RDkL1VbmooIyhJBSDfhWuWpi51AsD1g==
</ds:SignatureValue>
<ds:KeyInfo>
<ds:X509Data>
<ds:X509Certificate>
MIIFRzCCBC+gAwIBAgIHTwpN/4tOfDANBgkqhkiG9w0BAQsFADCBtDELMAkGA1UEBhMCVVMxEDAO
BgNVBAgTB0FyaXpvbmExEzARBgNVBAcTClNjb3R0c2RhbGUxGjAYBgNVBAoTEUdvRGFkZHkuY29t
LCBJbmMuMS0wKwYDVQQLEyRodHRwOi8vY2VydHMuZ29kYWRkeS5jb20vcmVwb3NpdG9yeS8xMzAx
BgNVBAMTKkdvIERhZGR5IFNlY3VyZSBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkgLSBHMjAeFw0xNDA5
MTgxNDM0MjFaFw0xNzEwMjAxODU3NDRaMIGTMQswCQYDVQQGEwJVUzERMA8GA1UECBMITmV3IFlv
cmsxFzAVBgNVBAcTDkVhc3QgR3JlZW5idXNoMSswKQYDVQQKEyJDZW50ZXIgZm9yIEludGVybmV0
IFNlY3VyaXR5LCBJbmMuMSswKQYDVQQDEyJDZW50ZXIgZm9yIEludGVybmV0IFNlY3VyaXR5LCBJ
bmMuMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0MGnj6yX2QHklGadAfTBxssvP+2f
YegPpNGXfEmPXZXrWeME2BqIbO+hKXTuwUucRK6RvQJTjgzNgOhQx3HcclRwQB4xj/14hOoZSeQ3
haw/Xjl4WofsWizM5j/g1iWBgxi3xk/aREfKKb0ulBMtP/WYFpSRjZ/Z7m5QKii0feJPxbf+wrZ+
UvNZ8uBdO+SEmbhS/DVESsEWzXn6StbQpa2dno2aIOGZXQKcUY2d3WZ4Zk+zawFcRUYslVIrOhMb
0e3+hbJEtFwm5ekehdNimSozYyyLGZJonLlvr8PfmvQ1ceu7enWCRfZrRWAlDHFaouLdtU/OmXc+
Um7cLwz8VQIDAQABo4IBezCCAXcwDAYDVR0TAQH/BAIwADATBgNVHSUEDDAKBggrBgEFBQcDAzAO
BgNVHQ8BAf8EBAMCB4AwNQYDVR0fBC4wLDAqoCigJoYkaHR0cDovL2NybC5nb2RhZGR5LmNvbS9n
ZGlnMnM1LTAuY3JsMFMGA1UdIARMMEowSAYLYIZIAYb9bQEHFwIwOTA3BggrBgEFBQcCARYraHR0
cDovL2NlcnRpZmljYXRlcy5nb2RhZGR5LmNvbS9yZXBvc2l0b3J5LzB2BggrBgEFBQcBAQRqMGgw
JAYIKwYBBQUHMAGGGGh0dHA6Ly9vY3NwLmdvZGFkZHkuY29tLzBABggrBgEFBQcwAoY0aHR0cDov
L2NlcnRpZmljYXRlcy5nb2RhZGR5LmNvbS9yZXBvc2l0b3J5L2dkaWcyLmNydDAfBgNVHSMEGDAW
gBRAwr0njsw0gzCiM9f7bLPwtCyAzjAdBgNVHQ4EFgQU+3zn+CEg6a2xPqlBXvn64hUyoB4wDQYJ
KoZIhvcNAQELBQADggEBAEh76h1GtJ0pj04in+RUymB7fqPh6HFILkOLlTPnveyXCoHYT2M46DET
EA/NKYkoF2KA3QiZ1b+PMViuTYG2pDs71eFVPADuBCGf9IFufCDY9mPvjQiFDlLNMknXxACD8TjC
hqz+uZT2uLPw/YxkJIsCxrTQJ//ga/fHfZDrKgQfbVzxjD/4WKDe8HktjKcn+NWGPJNMgmO+IHrK
if6TB1xTo32W9QzwoXvBdLnziAUGZZghEulq6h3RCMzKPzpx5JiLlOz6JzqXHvrua+yUbr4A29Vy
vkwWgJWjyvJd2uq9MQ9l49kkrD84m41PSwpaHO99nEHRgRykopxIt8AHsIQ=
</ds:X509Certificate>
</ds:X509Data>
<ds:KeyValue>
<ds:RSAKeyValue>
<ds:Modulus>
0MGnj6yX2QHklGadAfTBxssvP+2fYegPpNGXfEmPXZXrWeME2BqIbO+hKXTuwUucRK6RvQJTjgzN
gOhQx3HcclRwQB4xj/14hOoZSeQ3haw/Xjl4WofsWizM5j/g1iWBgxi3xk/aREfKKb0ulBMtP/WY
FpSRjZ/Z7m5QKii0feJPxbf+wrZ+UvNZ8uBdO+SEmbhS/DVESsEWzXn6StbQpa2dno2aIOGZXQKc
UY2d3WZ4Zk+zawFcRUYslVIrOhMb0e3+hbJEtFwm5ekehdNimSozYyyLGZJonLlvr8PfmvQ1ceu7
enWCRfZrRWAlDHFaouLdtU/OmXc+Um7cLwz8VQ==
</ds:Modulus>
<ds:Exponent>AQAB</ds:Exponent>
</ds:RSAKeyValue>
</ds:KeyValue>
</ds:KeyInfo>
</ds:Signature></xccdf:signature></cdf:Benchmark>