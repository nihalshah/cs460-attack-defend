<?xml version="1.0" encoding="UTF-8" standalone="no"?><xccdf:Benchmark xmlns:xccdf="http://checklists.nist.gov/xccdf/1.1" xmlns="http://checklists.nist.gov/xccdf/1.1" xmlns:ae="http://benchmarks.cisecurity.org/ae/0.5" xmlns:ciscf="https://benchmarks.cisecurity.org/ciscf/1.0" xmlns:ecl="http://cisecurity.org/check" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="xccdf_org.cisecurity.benchmarks_benchmark_5.2.0_CIS_Oracle_Solaris_10_Benchmark" xsi:schemaLocation="http://checklists.nist.gov/xccdf/1.1 ../misc/xsd/xccdf-1.1.xsd http://cisecurity.org/check ../misc/xsd/ecl.xsd">
   <xccdf:status date="2015-08-27">incomplete</xccdf:status>
   <xccdf:title xml:lang="en">CIS Oracle Solaris 10 Benchmark</xccdf:title>
   <xccdf:description xml:lang="en">
      <xhtml:p>This document, Security Configuration Benchmark for Solaris 10 11/06 through 10/09, was specifically designed to address the recommended security settings included in Solaris 10 11/06 (Update 3) through Solaris 10 10/09 (Update 8) running on x86 or SPARC platforms. The Solaris 10 operating system (Solaris 10 OS) was originally released in March 2005 and has since undergone several updates. While many of the controls discussed in this document were available in earlier versions of the Solaris OS, some of the functionality discussed may not be present in those older versions. This guide was tested against Solaris 10 10/09 as installed using the SUNWCXall #x201C;Entire Distribution Plus OEM#x201D; software installation cluster. To obtain the latest version of this guide, please visit <xhtml:a href="http://benchmarks.cisecurity.org">http://benchmarks.cisecurity.org</xhtml:a>. If you have questions, comments, or have identified ways to improve this guide, please write us at <xhtml:a href="mailto:feedback@cisecurity.org">feedback@cisecurity.org</xhtml:a>.</xhtml:p>
   </xccdf:description>
   <xccdf:notice id="terms-of-use" xml:lang="en">	BACKGROUND.
	The Center for Internet Security ("CIS") provides benchmarks, scoring tools, software, data, information, suggestions, ideas, and other services and materials from the CIS website or elsewhere ("Products") as a public service to Internet users worldwide.	Recommendations contained in the Products ("Recommendations") result from a consensus-building process that involves many security experts and are generally generic in nature.	The Recommendations are intended to provide helpful information to organizations attempting to evaluate or improve the security of their networks, systems, and devices.	Proper use of the Recommendations requires careful analysis and adaptation to specific user requirements.	The Recommendations are not in any way intended to be a "quick fix" for anyone's information security needs.
	NO REPRESENTATIONS, WARRANTIES, OR COVENANTS.
	CIS makes no representations, warranties, or covenants whatsoever as to (i) the positive or negative effect of the Products or the Recommendations on the operation or the security of any particular network, computer system, network device, software, hardware, or any component of any of the foregoing or (ii) the accuracy, reliability, timeliness, or completeness of	the Products or the Recommendations.	CIS is providing the Products and the Recommendations "as is" and "as available" without representations, warranties, or covenants of any kind.	USER AGREEMENTS.
	By using the Products and/or the Recommendations, I and/or my organization ("We") agree and acknowledge that:
	1.	No network, system, device, hardware, software, or component can be made fully secure;
	2.	We are using the Products and the Recommendations solely at our own risk;
	3.	We are not compensating CIS to assume any liabilities associated with our use of the Products or the Recommendations, even risks that result from 		CIS's negligence or failure to perform; 
	4.	We have the sole responsibility to evaluate the risks and benefits of the Products and Recommendations to us and to adapt the Products and the 			Recommendations to our particular circumstances and requirements;
	5.	Neither CIS, nor any CIS Party (defined below) has any responsibility to make any corrections, updates, upgrades, or bug fixes; or to notify us of 		the need for any such corrections, updates, upgrades, or bug fixes; and
	6.	Neither CIS nor any CIS Party has or will have any liability to us whatsoever (whether based in contract, tort, strict liability or otherwise) for 		any direct, indirect, incidental, consequential, or special damages (including without limitation loss of profits, loss of sales, loss of or damage 		to reputation,loss of customers, loss of software, data, information or emails, loss of privacy, loss of use of any computer or other equipment, 	business interruption, wasted management or other staff resources or claims of any kind against us from third parties) arising out of or in any way 	Connected with our use of or our inability to use any of the Products or Recommendations (even if CIS has been advised of the possibility of such 	damages), including without limitation any liability associated with infringement of intellectual property, defects, bugs, errors, omissions, 	viruses, worms, backdoors, Trojan horses or other harmful items.
	GRANT OF LIMITED RIGHTS.
	CIS hereby grants each user the following rights, but only so long as the user complies with all of the terms of these Agreed Terms of Use:
	1.	Except to the extent that we may have received additional authorization pursuant to a written agreement with CIS, each user may download, install and 	use each of the Products on a single computer;
	2.	Each user may print one or more copies of any Product or any component of a Product that is in a .txt, .pdf, .doc, .mcw, or .rtf format, provided 		that all such copies are printed in full and are kept intact, including without limitation the text of this Agreed Terms of Use in its entirety.
	RETENTION OF INTELLECTUAL PROPERTY RIGHTS; LIMITATIONS ON DISTRIBUTION.
	The Products are protected by copyright and other intellectual property laws and by international treaties.	We acknowledge and agree that we are not acquiring title to any intellectual property rights in the Products and that full title and all ownership rights to the Products will remain the exclusive property of CIS or CIS Parties.	CIS reserves all rights not expressly granted to users in the preceding section entitled "Grant of limited rights."
	Subject to the paragraph entitled "Special Rules" (which includes a waiver, granted to some classes of CIS Members, of certain limitations in this paragraph), and except as we may have otherwise agreed in a written agreement with CIS, we agree that we will not (i) decompile, disassemble, reverse engineer, or otherwise attempt to derive the source code for any software Product that is not already in the form of source code; (ii) distribute, redistribute, encumber, sell, rent, lease, lend, sublicense, or otherwise transfer or exploit rights to any Product or any component of a Product; (iii) post any Product or any component of a Product on any website, bulletin board, ftp server, newsgroup, or other similar mechanism or device, without regard to whether such mechanism or device is internal or external, (iv) remove or alter trademark, logo, copyright or other proprietary notices, legends, symbols or labels in any Product or any component of a Product; (v) remove these Agreed Terms of Use from, or alter these Agreed Terms of Use as they appear in, any Product or any component of a Product; (vi) use any Product or any component of a Product with any derivative works based directly on a Product or any component of a Product; (vii) use any Product or any component of a Product with other products or applications that are directly and specifically dependent on such Product or any component for any part of their functionality, or (viii) represent or claim a particular level of compliance with a CIS Benchmark, scoring tool or other Product.	We will not facilitate or otherwise aid other individuals or entities in any of the activities listed in this paragraph.
	We hereby agree to indemnify, defend, and hold CIS and all of its officers, directors, members, contributors, employees, authors, developers, agents, affiliates, licensors, information and service providers, software suppliers, hardware suppliers, and all other persons who aided CIS in the creation, development, or maintenance of the Products or Recommendations ("CIS Parties") harmless from and against any and all liability, losses, costs, and expenses (including attorneys' fees and court costs) incurred by CIS or any CIS Party in connection with any claim arising out of any violation by us of the preceding paragraph, including without limitation CIS's right, at our expense, to assume the exclusive defense and control of any matter subject to this indemnification, and in such case, we agree to cooperate with CIS in its defense of such claim.	We further agree that all CIS Parties are third-party beneficiaries of our undertakings in these Agreed Terms of Use.	SPECIAL RULES.
	CIS has created and will from time to time create, special rules for its members and for other persons and organizations with which CIS has a written contractual relationship.	Those special rules will override and supersede these Agreed Terms of Use with respect to the users who are covered by the special rules.
	CIS hereby grants each CIS Security Consulting or Software Vendor Member and each CIS Organizational User Member, but only so long as such Member remains in good standing with CIS and complies with all of the terms of these Agreed Terms of Use, the right to distribute the Products and Recommendations within such Member's own organization, whether by manual or electronic means.	Each such Member acknowledges and agrees that the foregoing grant is subject to the terms of such Member's membership arrangement with CIS and may, therefore, be modified or terminated by CIS at any time.
	CHOICE OF LAW; JURISDICTION; VENUE.
	We acknowledge and agree that these Agreed Terms of Use will be governed by and construed in accordance with the laws of the State of Maryland, that any action at law or in equity arising out of or relating to these Agreed Terms of Use shall be filed only in the courts located in the State of Maryland, that we hereby consent and submit to the personal jurisdiction of such courts for the purposes of litigating any such action.	If any of these Agreed Terms of Use shall be determined to be unlawful, void, or for any reason unenforceable, then such terms shall be deemed severable and shall not affect the validity and enforceability of any remaining provisions.
	BY USING THE PRODUCTS I(WE) ACKNOWLEDGE THAT WE HAVE READ THESE AGREED TERMS OF USE IN THEIR ENTIRETY, UNDERSTAND THEM, AND I(WE) AGREE TO BE BOUND BY THEM IN ALL RESPECTS.</xccdf:notice>
   <xccdf:version>5.2.0</xccdf:version>
   <xccdf:Profile id="xccdf_org.cisecurity.benchmarks_profile_Level_1">
      <xccdf:title xml:lang="en">Level 1</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>Items in this profile intend to:</xhtml:p>
         <xhtml:ul>
            <xhtml:li>be practical and prudent;</xhtml:li>
            <xhtml:li>provide a clear security benefit; and</xhtml:li>
            <xhtml:li>not inhibit the utility of the technology beyond acceptable means.</xhtml:li>
         </xhtml:ul>
      </xccdf:description>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.1_Use_the_Latest_OS_Release" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.2_Apply_Latest_OS_Patches" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.3_Install_Solaris_Encryption_Kit" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.1.1_Disable_Local_CDE_ToolTalk_Database_Server" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.1.2_Disable_Local_CDE_Calendar_Manager" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.1.3_Disable_Local_Graphical_Login_Environment" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.1.4_Disable_Local_Web_Console" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.1.5_Disable_Local_WBEM" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.1.6_Disable_Local_BSD_Print_Protocol_Adapter" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.2.1_Disable_RPC_Encryption_Key" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.2.2_Disable_NIS_Server_Daemons" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.2.3_Disable_NIS_Client_Daemons" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.2.4_Disable_NIS_Daemons" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.2.5_Disable_LDAP_Cache_Manager" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.2.6_Disable_Kerberos_TGT_Expiration_Warning" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.2.7_Disable_Generic_Security_Services_GSS_Daemons" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.2.8_Disable_Volume_Manager" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.2.9_Disable_Samba_Support" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.2.10_Disable_automount_Daemon" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.2.11_Disable_Apache_Services" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.2.12_Disable_Solaris_Volume_Manager_Services" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.2.13_Disable_Solaris_Volume_Manager_GUI" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.2.14_Disable_Local_RPC_Port_Mapping_Service" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.3_Establish_a_Secure_Baseline" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.4_Configure_TCP_Wrappers" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.1_Modify_Network_Parameters" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.2_Disable_Source_Packet_Forwarding" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.3_Disable_Broadcast_Packet_Forwarding" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.4_Disable_Response_to_ICMP_Timestamp_Requests" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.5_Disable_Response_to_ICMP_Broadcast_Timestamp_Requests" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.6_Disable_Response_to_ICMP_Netmask_Requests" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.7_Disable_ICMPv6_Redirect_Messages" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.8_Disable_Response_to_Broadcast_ICMPv4_Echo_Request" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.9_Disable_Response_to_Multicast_Echo_Request" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.10_Set_Interval_for_Scanning_IRE_CACHE" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.11_Ignore_ICMP_Redirect_Messages" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.12_Set_Strict_Multihoming" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.13_Disable_ICMPv4_Redirect_Messages" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.14_Set_ARP_Cleanup_Interval" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.15_Disable_TCP_Reverse_IP_Source_Routing" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.16_Set_Maximum_Number_of_Half-open_TCP_Connections" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.17_Set_Maximum_Number_of_Incoming_Connections" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.18_Lock_down_dtspcd8" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.2_Restrict_Core_Dumps_to_Protected_Directory" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.3_Enable_Stack_Protection" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.4_Enable_Strong_TCP_Sequence_Number_Generation" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.5_Disable_Network_Routing" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.1_Enable_inetd_Connection_Logging" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.2_Enable_FTP_daemon_Logging" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.3_Enable_Debug_Level_Daemon_Logging" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.4_Capture_syslog_AUTH_Messages" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.5_Enable_Login_Records" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.6_Capture_All_Failed_Login_Attempts" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.7_Enable_cron_Logging" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.8_Enable_System_Accounting" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.9_Enable_Kernel_Level_Auditing" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.1_Set_daemon_umask" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.2_Restrict_Set-UID_on_User_Mounted_Devices" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.3_Set_Sticky_Bit_on_World_Writable_Directories" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.1.1_Configure_SSH" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.1.2_Set_SSH_Protocol_to_2" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.1.3_Disable_SSH_X11Forwarding" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.1.4_Set_SSH_MaxAuthTries_to_3" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.1.5_Set_SSH_MaxAuthTriesLog_to_0" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.1.6_Set_SSH_IgnoreRhosts_to_yes" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.1.7_Set_SSH_RhostsAuthentication_to_no" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.1.8_Set_SSH_RhostsRSAAuthentication_to_no" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.1.9_Disable_SSH_root_login" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.1.10_Set_SSH_PermitEmptyPasswords_to_no" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.1.11_Set_SSH_Banner" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.2_Disable_login_Prompts_on_Serial_Ports" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.3_Disable_nobody_Access_for_RPC_Encryption_Key_Storage_Service" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.4_Disable_.rhosts_Support_in_etcpam.conf" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.5_Restrict_FTP_Use" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.6_Set_Delay_between_Failed_Login_Attempts_to_4" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.7_Set_Default_Screen_Lock_for_CDE_Users" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.8_Set_Default_Screen_Lock_for_GNOME_Users" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.9_Restrict_atcron_to_Authorized_Users" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.10_Restrict_root_Login_to_System_Console" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.11_Set_Retry_Limit_for_Account_Lockout" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.12_Set_EEPROM_Security_Mode_and_Log_Failed_Access" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.13_Secure_the_GRUB_Menu" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.1_Disable_System_Accounts" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.2_Set_Password_Expiration_Parameters_on_Active_Accounts" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.3_Set_Strong_Password_Creation_Policies" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.4_Set_Default_Group_for_root_Account" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.5_Change_Home_Directory_for_root_Account" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.6_Set_Default_umask_for_Users" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.7_Set_Default_umask_for_FTP_Users" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.8_Set_mesg_n_as_Default_for_All_Users" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.9_Lock_Inactive_User_Accounts" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.10_Ensure_Password_Encryption_Uses_SHA_algorithms" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.1_Create_Warnings_for_Standard_Login_Services" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.2_Create_Warning_Banner_for_CDE_Users" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.3_Create_Warning_Banner_for_GNOME_Users" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.4_Create_Warning_Banner_for_FTP_daemon" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.5_Check_Banner_Setting_for_telnet_is_Null" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.1_Check_for_Remote_Consoles" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.2_Verify_System_File_Permissions" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.3_Ensure_Password_Fields_are_Not_Empty" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.4_Verify_No_Legacy__Entries_Exist_in_passwd_shadow_and_group_Files" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.5_Verify_No_UID_0_Accounts_Exist_Other_than_root" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.6_Ensure_root_PATH_Integrity" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.7_Check_Permissions_on_User_Home_Directories" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.8_Check_User_Dot_File_Permissions" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.9_Check_Permissions_on_User_.netrc_Files" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.10_Check_for_Presence_of_User_.rhosts_Files" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.11_Check_Groups_in_etcpasswd" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.12_Check_That_Users_Are_Assigned_Home_Directories" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.13_Check_That_Defined_Home_Directories_Exist" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.14_Check_User_Home_Directory_Ownership" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.15_Check_for_Duplicate_UIDs" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.16_Check_for_Duplicate_GIDs" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.17_Check_That_Reserved_UIDs_Are_Assigned_to_System_Accounts" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.18_Check_for_Duplicate_User_Names" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.19_Check_for_Duplicate_Group_Names" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.20_Check_for_Presence_of_User_.netrc_Files" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.21_Check_for_Presence_of_User_.forward_Files" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.22_Find_World_Writable_Files" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.23_Find_SUIDSGID_System_Executables" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.24_Find_Un-owned_Files_and_Directories" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.25_Find_Files_and_Directories_with_Extended_Attributes" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_11.9_Service_Manifest_for_libsvcmethodcis_netconfig.sh" selected="true"/>
   </xccdf:Profile>
   <xccdf:Profile id="xccdf_org.cisecurity.benchmarks_profile_Level_2">
      <xccdf:title xml:lang="en">Level 2</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>This profile extends the "Level 1" profile. Items in this profile exhibit one or more of the following characteristics:</xhtml:p>
         <xhtml:ul>
            <xhtml:li>are intended for environments or use cases where security is paramount</xhtml:li>
            <xhtml:li>acts as defense in depth measure</xhtml:li>
            <xhtml:li>may negatively inhibit the utility or performance of the technology.</xhtml:li>
         </xhtml:ul>
      </xccdf:description>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.1_Use_the_Latest_OS_Release" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.2_Apply_Latest_OS_Patches" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_1.3_Install_Solaris_Encryption_Kit" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.1.1_Disable_Local_CDE_ToolTalk_Database_Server" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.1.2_Disable_Local_CDE_Calendar_Manager" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.1.3_Disable_Local_Graphical_Login_Environment" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.1.4_Disable_Local_Web_Console" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.1.5_Disable_Local_WBEM" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.1.6_Disable_Local_BSD_Print_Protocol_Adapter" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.2.1_Disable_RPC_Encryption_Key" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.2.2_Disable_NIS_Server_Daemons" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.2.3_Disable_NIS_Client_Daemons" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.2.4_Disable_NIS_Daemons" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.2.5_Disable_LDAP_Cache_Manager" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.2.6_Disable_Kerberos_TGT_Expiration_Warning" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.2.7_Disable_Generic_Security_Services_GSS_Daemons" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.2.8_Disable_Volume_Manager" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.2.9_Disable_Samba_Support" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.2.10_Disable_automount_Daemon" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.2.11_Disable_Apache_Services" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.2.12_Disable_Solaris_Volume_Manager_Services" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.2.13_Disable_Solaris_Volume_Manager_GUI" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.2.14_Disable_Local_RPC_Port_Mapping_Service" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.3_Establish_a_Secure_Baseline" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_2.4_Configure_TCP_Wrappers" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.1_Modify_Network_Parameters" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.2_Disable_Source_Packet_Forwarding" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.3_Disable_Broadcast_Packet_Forwarding" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.4_Disable_Response_to_ICMP_Timestamp_Requests" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.5_Disable_Response_to_ICMP_Broadcast_Timestamp_Requests" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.6_Disable_Response_to_ICMP_Netmask_Requests" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.7_Disable_ICMPv6_Redirect_Messages" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.8_Disable_Response_to_Broadcast_ICMPv4_Echo_Request" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.9_Disable_Response_to_Multicast_Echo_Request" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.10_Set_Interval_for_Scanning_IRE_CACHE" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.11_Ignore_ICMP_Redirect_Messages" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.12_Set_Strict_Multihoming" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.13_Disable_ICMPv4_Redirect_Messages" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.14_Set_ARP_Cleanup_Interval" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.15_Disable_TCP_Reverse_IP_Source_Routing" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.16_Set_Maximum_Number_of_Half-open_TCP_Connections" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.17_Set_Maximum_Number_of_Incoming_Connections" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.1.18_Lock_down_dtspcd8" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.2_Restrict_Core_Dumps_to_Protected_Directory" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.3_Enable_Stack_Protection" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.4_Enable_Strong_TCP_Sequence_Number_Generation" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_3.5_Disable_Network_Routing" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.1_Enable_inetd_Connection_Logging" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.2_Enable_FTP_daemon_Logging" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.3_Enable_Debug_Level_Daemon_Logging" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.4_Capture_syslog_AUTH_Messages" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.5_Enable_Login_Records" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.6_Capture_All_Failed_Login_Attempts" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.7_Enable_cron_Logging" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.8_Enable_System_Accounting" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_4.9_Enable_Kernel_Level_Auditing" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.1_Set_daemon_umask" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.2_Restrict_Set-UID_on_User_Mounted_Devices" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_5.3_Set_Sticky_Bit_on_World_Writable_Directories" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.1.1_Configure_SSH" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.1.2_Set_SSH_Protocol_to_2" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.1.3_Disable_SSH_X11Forwarding" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.1.4_Set_SSH_MaxAuthTries_to_3" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.1.5_Set_SSH_MaxAuthTriesLog_to_0" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.1.6_Set_SSH_IgnoreRhosts_to_yes" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.1.7_Set_SSH_RhostsAuthentication_to_no" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.1.8_Set_SSH_RhostsRSAAuthentication_to_no" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.1.9_Disable_SSH_root_login" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.1.10_Set_SSH_PermitEmptyPasswords_to_no" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.1.11_Set_SSH_Banner" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.2_Disable_login_Prompts_on_Serial_Ports" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.3_Disable_nobody_Access_for_RPC_Encryption_Key_Storage_Service" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.4_Disable_.rhosts_Support_in_etcpam.conf" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.5_Restrict_FTP_Use" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.6_Set_Delay_between_Failed_Login_Attempts_to_4" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.7_Set_Default_Screen_Lock_for_CDE_Users" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.8_Set_Default_Screen_Lock_for_GNOME_Users" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.9_Restrict_atcron_to_Authorized_Users" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.10_Restrict_root_Login_to_System_Console" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.11_Set_Retry_Limit_for_Account_Lockout" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.12_Set_EEPROM_Security_Mode_and_Log_Failed_Access" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_6.13_Secure_the_GRUB_Menu" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.1_Disable_System_Accounts" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.2_Set_Password_Expiration_Parameters_on_Active_Accounts" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.3_Set_Strong_Password_Creation_Policies" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.4_Set_Default_Group_for_root_Account" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.5_Change_Home_Directory_for_root_Account" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.6_Set_Default_umask_for_Users" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.7_Set_Default_umask_for_FTP_Users" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.8_Set_mesg_n_as_Default_for_All_Users" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.9_Lock_Inactive_User_Accounts" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_7.10_Ensure_Password_Encryption_Uses_SHA_algorithms" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.1_Create_Warnings_for_Standard_Login_Services" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.2_Create_Warning_Banner_for_CDE_Users" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.3_Create_Warning_Banner_for_GNOME_Users" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.4_Create_Warning_Banner_for_FTP_daemon" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_8.5_Check_Banner_Setting_for_telnet_is_Null" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.1_Check_for_Remote_Consoles" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.2_Verify_System_File_Permissions" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.3_Ensure_Password_Fields_are_Not_Empty" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.4_Verify_No_Legacy__Entries_Exist_in_passwd_shadow_and_group_Files" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.5_Verify_No_UID_0_Accounts_Exist_Other_than_root" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.6_Ensure_root_PATH_Integrity" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.7_Check_Permissions_on_User_Home_Directories" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.8_Check_User_Dot_File_Permissions" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.9_Check_Permissions_on_User_.netrc_Files" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.10_Check_for_Presence_of_User_.rhosts_Files" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.11_Check_Groups_in_etcpasswd" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.12_Check_That_Users_Are_Assigned_Home_Directories" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.13_Check_That_Defined_Home_Directories_Exist" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.14_Check_User_Home_Directory_Ownership" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.15_Check_for_Duplicate_UIDs" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.16_Check_for_Duplicate_GIDs" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.17_Check_That_Reserved_UIDs_Are_Assigned_to_System_Accounts" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.18_Check_for_Duplicate_User_Names" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.19_Check_for_Duplicate_Group_Names" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.20_Check_for_Presence_of_User_.netrc_Files" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.21_Check_for_Presence_of_User_.forward_Files" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.22_Find_World_Writable_Files" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.23_Find_SUIDSGID_System_Executables" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.24_Find_Un-owned_Files_and_Directories" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_9.25_Find_Files_and_Directories_with_Extended_Attributes" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_10.1_Enable_process_accounting_at_boot_time" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_10.2_Use_full_path_names_in_etcdfsdfstab_file" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_10.3_Restrict_access_to_power_management_functions" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_10.4_Restrict_access_to_sys-suspend_feature" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_10.5_Create_symlinks_for_dangerous_files" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_10.6_Remove_Support_for_Internet_Services_inetd" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_11.1_Samba_Enable_SSH_Port_Forwarding_in_Web_Admin_Tool" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_11.2_Samba_Set_Secure_Permissions_on_smb.conf_File" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_11.3_Samba_Set_Group_Ownership_of_smb.conf_File" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_11.4_Samba_Set_Secure_Permissions_on_smbpasswd_File" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_11.5_Samba_Set_Group_Ownership_of_smbpasswd_File" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_11.6_Samba_Set_Secure_smb.conf_File_Options" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_11.7_sendmail_Set_Secure_Logfile_Ownership_to_the_root_User" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_11.8_sendmail_Set_Secure_Permissions_on_Log_File" selected="true"/>
      <xccdf:select idref="xccdf_org.cisecurity.benchmarks_rule_11.9_Service_Manifest_for_libsvcmethodcis_netconfig.sh" selected="true"/>
   </xccdf:Profile>
   <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_1_Install_Updates_Patches_and_Additional_Software">
      <xccdf:title xml:lang="en">Install Updates, Patches and Additional Software</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>Updating the operating system by applying software updates and patches is the first step for ensuring the security and reliability of the system. Vendors issue operating system updates when they become aware of security vulnerabilities and other serious functionality issues, but it is up to their customers to actually download and install these patches. Oracle's recommended patching strategy is covered in the document "<xhtml:a href="http://www.sun.com/blueprints/0205/819-1002.pdf">Solaris Patch Management: Recommended Strategy</xhtml:a>" available from <xhtml:a href="http://www.sun.com/bigadmin/patches/solaris/index.jsp">http://www.sun.com/bigadmin/patches/solaris/index.jsp</xhtml:a>
         </xhtml:p>
      </xccdf:description>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_1.1_Use_the_Latest_OS_Release" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Use the Latest OS Release</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Periodically, Oracle releases updates to the Solaris 10 operating system to support new hardware platforms, deliver new functionality as well as the bundle together a set of patches that can be tested as a unit.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: Zones are not applicable to this recommendation.</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Newer updates may contain security enhancements that would not be available through the standard patching process. As a result, it is recommended that the latest update of the Solaris 10 OS software be used to take advantage of the latest functionality. As with any software installation, organizations need to determine if a given update meets their requirements and verify the compatibility and supportability of any additional software against the update revision that is selected.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Obtain and install the latest update of the Solaris 10 OS software.</xhtml:p>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_1.2_Apply_Latest_OS_Patches" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Apply Latest OS Patches</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>During the patch cluster installation process, administrators may ignore individual patches that fail to install returning either code 2 (indicates that the patch has already been installed on the system) or code 8 (the patch applies to an operating system package which is not installed on the machine). If a patch install fails with any other return code, consult the patch installation log in <xhtml:span class="inline_block">/var/sadm/install_data</xhtml:span>.</xhtml:p>
            <xhtml:p>Note that in addition to installing the Patch Clusters as described above, administrators may wish to also check the <xhtml:span class="inline_block">Solaris&lt;<xhtml:em>osrel</xhtml:em>&gt;.PatchReport </xhtml:span>file (available from the same FTP site as the patch clusters) for additional security or functionality patches that may be required on the local system. Administrators are also encouraged to check the individual <xhtml:span class="inline_block">README </xhtml:span>files provided with each patch for further information and post-install instructions. Automated tools for maintaining current patch levels are also available, such as the Oracle Patch Manager tool ("<xhtml:span class="inline_block">man smpatch</xhtml:span>" for more info).</xhtml:p>
            <xhtml:p>Note that best practices recommend verifying the integrity of downloaded software and patches using file or package signatures. Failure to do so may result in the system being compromised by a "Trojan Horse" created by an attacker with unauthorized access to the archive site. Oracle provides digital signatures for its patches.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones.</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Installing the latest available patches provides protection from exploitation of known vulnerabilities that have been patched.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Create a directory to extract the patches. Make sure this directory is owned by root and mode <xhtml:span class="inline_block">755</xhtml:span>, such as <xhtml:span class="inline_block">/var/tmp/patches</xhtml:span>.  Obtain OraclePatch Cluster from <xhtml:a href="http://sunsolve.sun.com/show.do?target=patches/patch-access ">http://sunsolve.sun.com/show.do?target=patches/patch-access</xhtml:a> and look for the Recommended Patch Clusters.  The downloaded file will, by default, be named <xhtml:span class="inline_block">&lt;<xhtml:em>osrel</xhtml:em>&gt;_Recommended_CPU_YYYY.MM.zip</xhtml:span>, where <xhtml:span class="inline_block">&lt;<xhtml:em>osrel</xhtml:em>&gt;</xhtml:span> is the Solaris OS release number.  Download the Patch Cluster into <xhtml:span class="inline_block">/var/tmp/patches </xhtml:span>using the following commands:</xhtml:p>
                  <xhtml:code class="code_block"># mkdir /var/tmp/patches<xhtml:br/># chmod 755 /var/tmp/patches<xhtml:br/># cd /var/tmp/patches </xhtml:code>
                  <xhtml:p>Once the patch cluster is downloaded, extract and install the patches using the following commands:</xhtml:p>
                  <xhtml:code class="code_block"># unzip -qq *_Recommended.zip<xhtml:br/># cd *_SunAlert_Patch_Cluster<xhtml:br/># ./installcluster --&lt;passcode&gt;<xhtml:br/># cd ..<xhtml:br/># rm -rf *_Recommended* </xhtml:code>
                  <xhtml:p>The <xhtml:span class="inline_block">&lt;passcode&gt;</xhtml:span> may be found in the  patch cluster README file and is required to ensure the README has been read.</xhtml:p>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_1.3_Install_Solaris_Encryption_Kit" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Install Solaris Encryption Kit</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The Solaris 10 Encryption Kit contains kernel modules that implement various encryption<xhtml:br/>algorithms for IPsec and Kerberos, utilities that encrypt and decrypt files from the<xhtml:br/>command line, and libraries with functions that application programs call to perform<xhtml:br/>encryption. The Encryption Kit enables larger key sizes (&gt; 128) of the following<xhtml:br/>algorithms:</xhtml:p>
            <xhtml:p>AES (128, 192, and 256-bit key sizes)<xhtml:br/>Blowfish (32 to 448-bit key sizes in 8-bit increments)<xhtml:br/>RCFOUR/RC4 (8 to 2048-bit key sizes)</xhtml:p>
            <xhtml:p>Please see the documentation included with the package for more information.<xhtml:br/>Regulations on the export of encryption software are subject to change<xhtml:br/>This action is not needed for systems running Solaris 10 08/07 and newer as the Solaris 10<xhtml:br/>Encryption Kit is installed by default. Do not use this software download on systems<xhtml:br/>running Solaris 10 08/07 or newer versions of the operating system.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>Note:</xhtml:strong> If you are installing the Encryption Kit on Solaris 10 11/06 or older versions of the<xhtml:br/>Solaris OS, the package will also install <xhtml:span class="inline_block">SUNWcryman</xhtml:span>. On newer versions, the manual pages<xhtml:br/>are included in the system manual pages by default.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones.</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Stronger encryption algorithms aid in protecting data from unauthorized access or<xhtml:br/>disclosure.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>For Solaris 10 11/06 or older versions of the Solaris OS, obtain the Solaris 10 Encryption<xhtml:br/>Kit from <xhtml:a href="https://cds.sun.com/is-bin/INTERSHOP.enfinity/WFS/CDS-CDS_SMISite/ en_US/-/USD/ViewProductDetail-Start?ProductRef=Sol10-GA-Encryption-G-F@CDSCDS_ SMI">https://cds.sun.com/is-bin/INTERSHOP.enfinity/WFS/CDS-CDS_SMISite/<xhtml:br/>en_US/-/USD/ViewProductDetail-Start?ProductRef=Sol10-GA-Encryption-G-F@CDSCDS_<xhtml:br/>SMI</xhtml:a>
                  </xhtml:p>
                  <xhtml:p>After downloading the software, to implement this action, execute the following<xhtml:br/>commands:</xhtml:p>
                  <xhtml:code class="code_block"># unzip -qq sol-10-encrypt-GA-iso.zip<xhtml:br/># lofiadm -a `pwd`/sol-10-encrypt-GA.iso /dev/lofi/1<xhtml:br/># mount -F hsfs -o ro /dev/lofi/1 /mnt </xhtml:code>
                  <xhtml:p>Note that the device returned in the step above is the one to be used in the next step.</xhtml:p>
                  <xhtml:code class="code_block"># mount -F hsfs -o ro /dev/lofi/1 /mnt<xhtml:br/># cd /mnt/Encryption_10/`uname -p`/Packages<xhtml:br/># pkgadd -d . all<xhtml:br/>[respond to pkgadd questions]<xhtml:br/># cd<xhtml:br/># umount /mnt<xhtml:br/># lofiadm -d /dev/lofi/1</xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
   </xccdf:Group>
   <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_2_Restrict_Services">
      <xccdf:title xml:lang="en">Restrict Services</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>While applying system updates and patches (see Items 1.1 and 1.2 above) helps correct<xhtml:br/>known vulnerabilities, one of the best ways to protect the system against as yet unreported<xhtml:br/>vulnerabilities is to disable all services that are not required for normal system operation.<xhtml:br/>This prevents the exploitation of vulnerabilities discovered at a later date. If a service is not<xhtml:br/>enabled, it cannot be exploited. The actions in this section of the document provide<xhtml:br/>guidance on what services can be safely disabled and under which circumstances, greatly<xhtml:br/>reducing the number of possible threats to the resulting system.</xhtml:p>
      </xccdf:description>
      <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_2.1_Disable_Unnecessary_Local_Services">
         <xccdf:title xml:lang="en">Disable Unnecessary Local Services</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The "<xhtml:span class="inline_block">netservices limited</xhtml:span>" command reduces the network-accessible attack surface<xhtml:br/>of Solaris by disabling the majority of services that listened for network connections in<xhtml:br/>previous releases of the Solaris OS. Several services are not disabled, but rather are placed<xhtml:br/>into a 'local only' mode where they will accept connections only if they originate from the<xhtml:br/>local system itself. This was done to strike a balance between security and out of the box<xhtml:br/>usability. If these services are not required, it is recommended that they too be disabled to<xhtml:br/>guard against potential exploit by users and services that are operating locally on the<xhtml:br/>system.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones.</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.1.1_Disable_Local_CDE_ToolTalk_Database_Server" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Disable Local CDE ToolTalk Database Server</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The ToolTalk service enables independent CDE applications to communicate with each<xhtml:br/>other without having direct knowledge of each other. Applications create and send<xhtml:br/>ToolTalk messages to communicate with each other. The ToolTalk service receives these<xhtml:br/>messages, determines the recipients, and then delivers the messages to the appropriate<xhtml:br/>applications.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones.</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>Unless your organization is specifically using the ToolTalk service, disable it. The best<xhtml:br/>defense against a service being exploited is to disable it.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>To disable the ToolTalk service, run the following command:</xhtml:p>
                     <xhtml:code class="code_block"># svcadm disable svc:/network/rpc/cde-ttdbserver:tcp </xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="AND">
               <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/network/rpc/cde-ttdbserver:tcp' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        --><xccdf:check system="http://cisecurity.org/check">
                     <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/network/rpc/cde-ttdbserver:tcp' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/network/rpc/cde-ttdbserver:tcp 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                --><ecl:shell-command check="all" comment="PASS if svc:/network/rpc/cde-ttdbserver:tcp is not installed.">
                           <ecl:command>svcs -Ho state svc:/network/rpc/cde-ttdbserver:tcp 2&gt;&amp;1</ecl:command>
                           <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/network/rpc/cde-ttdbserver:tcp' doesn't match any instances"/>
                        </ecl:shell-command>
                     </xccdf:check-content>
                  </xccdf:check>
                  <xccdf:check system="http://cisecurity.org/check">
                     <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/network/rpc/cde-ttdbserver:tcp
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    --><ecl:shell-command check="all" comment="Ensure cde-ttdbserver is not enabled">
                           <ecl:command>svcs -Ho state svc:/network/rpc/cde-ttdbserver:tcp</ecl:command>
                           <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                        </ecl:shell-command>
                     </xccdf:check-content>
                  </xccdf:check>
               </xccdf:complex-check>
               <xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content>
                     <ecl:shell-command check="at least one" comment="Ensure cde-ttdbserver is disabled">
                        <ecl:command>svcs -Ho state svc:/network/rpc/cde-ttdbserver:tcp || echo "disabled"</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
            </xccdf:complex-check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.1.2_Disable_Local_CDE_Calendar_Manager" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Disable Local CDE Calendar Manager</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>CDE Calendar Manager is an appointment and resource scheduling tool. CDE Calendar<xhtml:br/>Manager can help you schedule and keep track of your daily appointments. Upon request,<xhtml:br/>Calendar Manager can send you reminders in advance of your appointments.<xhtml:br/>If you place the CDE Calendar Manager in local only mode, users on other computers will<xhtml:br/>not be able to attach to the system calendar manager and look at the local user's calendar.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones.</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>Unless your organization is specifically using the CDE Calendar Manager service, disable it.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>To disable the CDE Calendar Manager service, run the following command:</xhtml:p>
                     <xhtml:code class="code_block"># svcadm disable svc:/network/rpc/cde-calendar-manager:default</xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/network/rpc/cde-calendar-manager:default' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        --><xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/network/rpc/cde-calendar-manager:default' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/network/rpc/cde-calendar-manager:default 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                --><ecl:shell-command check="all" comment="PASS if svc:/network/rpc/cde-calendar-manager:default is not installed.">
                        <ecl:command>svcs -Ho state svc:/network/rpc/cde-calendar-manager:default 2&gt;&amp;1</ecl:command>
                        <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/network/rpc/cde-calendar-manager:default' doesn't match any instances"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
               <xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/network/rpc/cde-calendar-manager:default
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    --><ecl:shell-command check="all" comment="Ensure cde-calendar-manager is disabled">
                        <ecl:command>svcs -Ho state svc:/network/rpc/cde-calendar-manager:default</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
            </xccdf:complex-check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.1.3_Disable_Local_Graphical_Login_Environment" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Disable Local Graphical Login Environment</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The CDE login service provides the capability of logging into the system using an Xwindows type interface from the console. If XDMCP remote session access to a machine is not required at all, but graphical login access for the console is required, leave the service in local-only mode. If there is no requirement for graphical services on the console, disable this service. Run this command from the command-line interface as disabling it will kill any active graphical sessions.</xhtml:p>
               <xhtml:p>CDE login manager is just one of two available in the Solaris OS, the other being the GNOME Display Manager which is not enabled by default in Solaris.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones.</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>Unless your organization specifically requires graphical login access from the console, disable it.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>To disable graphical login access from the console, run the following command:</xhtml:p>
                     <xhtml:code class="code_block"># svcadm disable svc:/application/graphical-login/cde-login</xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="AND">
               <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/application/graphical-login/cde-login' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        --><xccdf:check system="http://cisecurity.org/check">
                     <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/application/graphical-login/cde-login' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/application/graphical-login/cde-login 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                --><ecl:shell-command check="all" comment="PASS if svc:/application/graphical-login/cde-login is not installed.">
                           <ecl:command>svcs -Ho state svc:/application/graphical-login/cde-login 2&gt;&amp;1</ecl:command>
                           <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/application/graphical-login/cde-login' doesn't match any instances"/>
                        </ecl:shell-command>
                     </xccdf:check-content>
                  </xccdf:check>
                  <xccdf:check system="http://cisecurity.org/check">
                     <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/application/graphical-login/cde-login
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    --><ecl:shell-command check="all" comment="Ensure cde-login is disabled">
                           <ecl:command>svcs -Ho state svc:/application/graphical-login/cde-login</ecl:command>
                           <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                        </ecl:shell-command>
                     </xccdf:check-content>
                  </xccdf:check>
               </xccdf:complex-check>
               <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/application/gdm2-login' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        --><xccdf:check system="http://cisecurity.org/check">
                     <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/application/gdm2-login' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/application/gdm2-login 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                --><ecl:shell-command check="all" comment="PASS if svc:/application/gdm2-login is not installed.">
                           <ecl:command>svcs -Ho state svc:/application/gdm2-login 2&gt;&amp;1</ecl:command>
                           <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/application/gdm2-login' doesn't match any instances"/>
                        </ecl:shell-command>
                     </xccdf:check-content>
                  </xccdf:check>
                  <xccdf:check system="http://cisecurity.org/check">
                     <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/application/gdm2-login
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    --><ecl:shell-command check="all" comment="Ensure gdm2-login is disabled">
                           <ecl:command>svcs -Ho state svc:/application/gdm2-login</ecl:command>
                           <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                        </ecl:shell-command>
                     </xccdf:check-content>
                  </xccdf:check>
               </xccdf:complex-check>
            </xccdf:complex-check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.1.4_Disable_Local_Web_Console" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Disable Local Web Console</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The Java Web Console (<xhtml:span class="inline_block">smcwebserver</xhtml:span>(1M)) provides a common location for users to access web-based system management applications.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones.</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>If there is no need to use web based management applications, disable this service.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>Perform the following to disable the Java Web Console:</xhtml:p>
                     <xhtml:code class="code_block"># svcadm disable svc:/system/webconsole:console</xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/system/webconsole:console' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        --><xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/system/webconsole:console' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/system/webconsole:console 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                --><ecl:shell-command check="all" comment="PASS if svc:/system/webconsole:console is not installed.">
                        <ecl:command>svcs -Ho state svc:/system/webconsole:console 2&gt;&amp;1</ecl:command>
                        <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/system/webconsole:console' doesn't match any instances"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
               <xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/system/webconsole:console
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    --><ecl:shell-command check="all" comment="Ensure webconsole is disabled">
                        <ecl:command>svcs -Ho state svc:/system/webconsole:console</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
            </xccdf:complex-check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.1.5_Disable_Local_WBEM" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Disable Local WBEM</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>Web-Based Enterprise Management (WBEM) is a set of management and Internet technologies. Solaris WBEM Services software provides WBEM services in the Solaris OS, including secure access and manipulation of management data. The software includes a Solaris platform provider that enables management applications to access information about managed resources such as devices and software in the Solaris OS. WBEM is used by the Solaris Management Console (SMC).</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones.</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>If your site does not use Web-Based Enterprise Management, disable this service.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>To disable Web-Based Enterprise Management, run the following command:</xhtml:p>
                     <xhtml:code class="code_block"># svcadm disable svc:/application/management/wbem </xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/application/management/wbem' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        --><xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/application/management/wbem' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/application/management/wbem 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                --><ecl:shell-command check="all" comment="PASS if svc:/application/management/wbem is not installed.">
                        <ecl:command>svcs -Ho state svc:/application/management/wbem 2&gt;&amp;1</ecl:command>
                        <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/application/management/wbem' doesn't match any instances"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
               <xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/application/management/wbem
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    --><ecl:shell-command check="all" comment="Ensure wbem is disabled">
                        <ecl:command>svcs -Ho state svc:/application/management/wbem</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
            </xccdf:complex-check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.1.6_Disable_Local_BSD_Print_Protocol_Adapter" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Disable Local BSD Print Protocol Adapter</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>RFC 1179 describes the Berkeley system based line printer protocol. The service is used to control local Berkeley system based print spooling. It listens on port 515 for incoming print jobs. Secure by default limits access to the line printers by only allowing print jobs to be initiated from the local system. If the machine does not have locally attached printers, disable this service. Note that this service is not required for printing to a network printer.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>Note:</xhtml:strong> In Solaris 10, Update 8, this service is disabled by <xhtml:span class="inline_block">netservices limited </xhtml:span>if the service <xhtml:span class="inline_block">svc:/application/print/server is disabled</xhtml:span>.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones.</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>If your site does not use local Berkeley system based print spooling, disable this service.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>To disable local Berkeley system based print spooling, run the following command:</xhtml:p>
                     <xhtml:code class="code_block"># svcadm disable svc:/application/print/rfc1179 </xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/application/print/rfc1179' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        --><xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/application/print/rfc1179' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/application/print/rfc1179 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                --><ecl:shell-command check="all" comment="PASS if svc:/application/print/rfc1179 is not installed.">
                        <ecl:command>svcs -Ho state svc:/application/print/rfc1179 2&gt;&amp;1</ecl:command>
                        <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/application/print/rfc1179' doesn't match any instances"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
               <xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/application/print/rfc1179
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    --><ecl:shell-command check="all" comment="Ensure rfc1179 is disabled">
                        <ecl:command>svcs -Ho state svc:/application/print/rfc1179</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
            </xccdf:complex-check>
         </xccdf:Rule>
      </xccdf:Group>
      <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_2.2_Disable_Other_Services">
         <xccdf:title xml:lang="en">Disable Other Services</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The "<xhtml:span class="inline_block">netservices limited</xhtml:span>" command disables a majority of services, but there are some not touched by the SBD setting that can be disabled if they are not required. It is also important to confirm that an unnecessary service has not been either explicitly or inadvertently enabled by a system administrator.</xhtml:p>
         </xccdf:description>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.2.1_Disable_RPC_Encryption_Key" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Disable RPC Encryption Key</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">keyserv </xhtml:span>process is only required for sites that are using Oracle's Secure RPC mechanism.  The most common uses for Secure RPC on Solaris machines are NIS+ and "secure NFS", which uses the Secure RPC mechanism to provide higher levels of security than the standard NFS protocols.  Do not confuse "secure NFS" with sites that use Kerberos authentication as a mechanism for providing higher levels of NFS security.  "Kerberized" NFS does not require the <xhtml:span class="inline_block">keyserv </xhtml:span>process to be running.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones.</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
               <xhtml:p> </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">keyserv </xhtml:span>process is only required for sites that are using Oracle's Secure RPC mechanism. If you are not using Oracle's Secure RPC mechanism, disable this service.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>To disable the keyserv process, run the following command:</xhtml:p>
                     <xhtml:code class="code_block"># svcadm disable svc:/network/rpc/keyserv</xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/network/rpc/keyserv' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        --><xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/network/rpc/keyserv' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/network/rpc/keyserv 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                --><ecl:shell-command check="all" comment="PASS if svc:/network/rpc/keyserv is not installed.">
                        <ecl:command>svcs -Ho state svc:/network/rpc/keyserv 2&gt;&amp;1</ecl:command>
                        <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/network/rpc/keyserv' doesn't match any instances"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
               <xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/network/rpc/keyserv
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    --><ecl:shell-command check="all" comment="Ensure keyserv is disabled">
                        <ecl:command>svcs -Ho state svc:/network/rpc/keyserv</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
            </xccdf:complex-check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.2.2_Disable_NIS_Server_Daemons" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Disable NIS Server Daemons</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>These daemons are only required on systems that are acting as an NIS server for the local site.  Typically there are only a small number of NIS servers on any given network.  These services are disabled by default unless the system has been previously configured to act as a NIS server.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones.</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>NIS server daemons are disabled by default and users are encouraged to use LDAP in place of NIS. </xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>No action is necessary to disable NIS server daemons unless they have been specifically enabled by the administrator. If so, they may be disabled using the following commands:</xhtml:p>
                     <xhtml:code class="code_block"># svcadm disable svc:/network/nis/server<xhtml:br/># svcadm disable svc:/network/nis/passwd<xhtml:br/># svcadm disable svc:/network/nis/update<xhtml:br/># svcadm disable svc:/network/nis/xfr </xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="AND">
               <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/network/nis/server' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        --><xccdf:check system="http://cisecurity.org/check">
                     <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/network/nis/server' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/network/nis/server 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                --><ecl:shell-command check="all" comment="PASS if svc:/network/nis/server is not installed.">
                           <ecl:command>svcs -Ho state svc:/network/nis/server 2&gt;&amp;1</ecl:command>
                           <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/network/nis/server' doesn't match any instances"/>
                        </ecl:shell-command>
                     </xccdf:check-content>
                  </xccdf:check>
                  <xccdf:check system="http://cisecurity.org/check">
                     <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/network/nis/server
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    --><ecl:shell-command check="all" comment="Ensure NIS Server is disabled">
                           <ecl:command>svcs -Ho state svc:/network/nis/server</ecl:command>
                           <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                        </ecl:shell-command>
                     </xccdf:check-content>
                  </xccdf:check>
               </xccdf:complex-check>
               <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/network/nis/passwd' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        --><xccdf:check system="http://cisecurity.org/check">
                     <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/network/nis/passwd' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/network/nis/passwd 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                --><ecl:shell-command check="all" comment="PASS if svc:/network/nis/passwd is not installed.">
                           <ecl:command>svcs -Ho state svc:/network/nis/passwd 2&gt;&amp;1</ecl:command>
                           <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/network/nis/passwd' doesn't match any instances"/>
                        </ecl:shell-command>
                     </xccdf:check-content>
                  </xccdf:check>
                  <xccdf:check system="http://cisecurity.org/check">
                     <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/network/nis/passwd
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    --><ecl:shell-command check="all" comment="Ensure NIS Password is disabled">
                           <ecl:command>svcs -Ho state svc:/network/nis/passwd</ecl:command>
                           <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                        </ecl:shell-command>
                     </xccdf:check-content>
                  </xccdf:check>
               </xccdf:complex-check>
               <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/network/nis/update' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        --><xccdf:check system="http://cisecurity.org/check">
                     <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/network/nis/update' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/network/nis/update 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                --><ecl:shell-command check="all" comment="PASS if svc:/network/nis/update is not installed.">
                           <ecl:command>svcs -Ho state svc:/network/nis/update 2&gt;&amp;1</ecl:command>
                           <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/network/nis/update' doesn't match any instances"/>
                        </ecl:shell-command>
                     </xccdf:check-content>
                  </xccdf:check>
                  <xccdf:check system="http://cisecurity.org/check">
                     <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/network/nis/update
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    --><ecl:shell-command check="all" comment="Ensure NIS Update is disabled">
                           <ecl:command>svcs -Ho state svc:/network/nis/update</ecl:command>
                           <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                        </ecl:shell-command>
                     </xccdf:check-content>
                  </xccdf:check>
               </xccdf:complex-check>
               <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/network/nis/xfr' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        --><xccdf:check system="http://cisecurity.org/check">
                     <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/network/nis/xfr' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/network/nis/xfr 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                --><ecl:shell-command check="all" comment="PASS if svc:/network/nis/xfr is not installed.">
                           <ecl:command>svcs -Ho state svc:/network/nis/xfr 2&gt;&amp;1</ecl:command>
                           <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/network/nis/xfr' doesn't match any instances"/>
                        </ecl:shell-command>
                     </xccdf:check-content>
                  </xccdf:check>
                  <xccdf:check system="http://cisecurity.org/check">
                     <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/network/nis/xfr
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    --><ecl:shell-command check="all" comment="Ensure NIS xfr is disabled">
                           <ecl:command>svcs -Ho state svc:/network/nis/xfr</ecl:command>
                           <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                        </ecl:shell-command>
                     </xccdf:check-content>
                  </xccdf:check>
               </xccdf:complex-check>
            </xccdf:complex-check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.2.3_Disable_NIS_Client_Daemons" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Disable NIS Client Daemons</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>If the local site is not using the NIS naming service to distribute system and user configuration information, this service may be disabled.  This service is disabled by default unless the NIS service has been configured on the system.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones.</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p class="CISNormal">NIS client daemons are disabled by default and users are encouraged to use LDAP in place of NIS.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>No action is necessary to disable NIS client daemons unless they have been specifically enabled by the administrator. If so, they may be disabled using the following command:</xhtml:p>
                     <xhtml:code class="code_block"># svcadm disable svc:/network/nis/client </xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/network/nis/client' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        --><xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/network/nis/client' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/network/nis/client 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                --><ecl:shell-command check="all" comment="PASS if svc:/network/nis/client is not installed.">
                        <ecl:command>svcs -Ho state svc:/network/nis/client 2&gt;&amp;1</ecl:command>
                        <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/network/nis/client' doesn't match any instances"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
               <xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/network/nis/client
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    --><ecl:shell-command check="all" comment="Ensure NIS Client is disabled">
                        <ecl:command>svcs -Ho state svc:/network/nis/client</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
            </xccdf:complex-check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.2.4_Disable_NIS_Daemons" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Disable NIS+ Daemons</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>NIS+ was designed to be a more secure version of NIS.  However, the use of NIS+ has been deprecated by Oracle and customers are encouraged to use LDAP as an alternative naming service.  This service is disabled by default unless the NIS+ service has been configured on the system.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones.</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>NIS+ is disabled by default and users are encouraged to use LDAP in place of NIS+.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>No action is necessary to disable NIS+ daemons unless they have been specifically enabled by the administrator. If so, they may be disabled using the following command:</xhtml:p>
                     <xhtml:code class="code_block"># svcadm disable svc:/network/rpc/nisplus </xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/network/rpc/nisplus' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        --><xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/network/rpc/nisplus' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/network/rpc/nisplus 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                --><ecl:shell-command check="all" comment="PASS if svc:/network/rpc/nisplus is not installed.">
                        <ecl:command>svcs -Ho state svc:/network/rpc/nisplus 2&gt;&amp;1</ecl:command>
                        <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/network/rpc/nisplus' doesn't match any instances"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
               <xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/network/rpc/nisplus
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    --><ecl:shell-command check="all" comment="Ensure nisplus is disabled">
                        <ecl:command>svcs -Ho state svc:/network/rpc/nisplus</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
            </xccdf:complex-check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.2.5_Disable_LDAP_Cache_Manager" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Disable LDAP Cache Manager</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>If the local site is not currently using LDAP as a naming service, there is no need to keep LDAP-related daemons running on the local machine.  This service is disabled by default unless LDAP client services have been configured on the system. If a naming service is required, users are encouraged to use LDAP instead of NIS/NIS+.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones.</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>Unless your organization specifically requires a naming service, disable it.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>No action is necessary to disable the LDAP cache manager unless it has been specifically enabled by the administrator. To disable the LDAP cache manager, run the following command:</xhtml:p>
                     <xhtml:code class="code_block"># svcadm disable svc:/network/ldap/client</xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/network/ldap/client' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        --><xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/network/ldap/client' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/network/ldap/client 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                --><ecl:shell-command check="all" comment="PASS if svc:/network/ldap/client is not installed.">
                        <ecl:command>svcs -Ho state svc:/network/ldap/client 2&gt;&amp;1</ecl:command>
                        <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/network/ldap/client' doesn't match any instances"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
               <xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/network/ldap/client
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    --><ecl:shell-command check="all" comment="Ensure ldap client is disabled">
                        <ecl:command>svcs -Ho state svc:/network/ldap/client</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
            </xccdf:complex-check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.2.6_Disable_Kerberos_TGT_Expiration_Warning" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Disable Kerberos TGT Expiration Warning</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>While Kerberos can be a security enhancement, if the local site is not currently using Kerberos then there is no need to have the Kerberos TGT expiration warning enabled.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones.</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>Unless your organization specifically requires uses Kerberos, disable it.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>To disable the Kerberos TGT expiration warning, run the following command:</xhtml:p>
                     <xhtml:code class="code_block"># svcadm disable svc:/network/security/ktkt_warn </xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/network/security/ktkt_warn' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        --><xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/network/security/ktkt_warn' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/network/security/ktkt_warn 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                --><ecl:shell-command check="all" comment="PASS if svc:/network/security/ktkt_warn is not installed.">
                        <ecl:command>svcs -Ho state svc:/network/security/ktkt_warn 2&gt;&amp;1</ecl:command>
                        <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/network/security/ktkt_warn' doesn't match any instances"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
               <xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/network/security/ktkt_warn
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    --><ecl:shell-command check="all" comment="Ensure ktkt_warn is disabled">
                        <ecl:command>svcs -Ho state svc:/network/security/ktkt_warn</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
            </xccdf:complex-check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.2.7_Disable_Generic_Security_Services_GSS_Daemons" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Disable Generic Security Services (GSS) Daemons</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The GSS API is a security abstraction layer that is designed to make it easier for developers to integrate with different authentication schemes.  It is most commonly used in applications for sites that use Kerberos for network authentication, though it can also allow applications to interoperate with other authentication schemes.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>Note:</xhtml:strong> Since this service uses Oracle's standard RPC mechanism, it is important that the system's RPC portmapper (<xhtml:span class="inline_block">rpcbind</xhtml:span>) also be enabled when this service is turned on. This daemon will be taken offline if <xhtml:span class="inline_block">rpcbind </xhtml:span>is disabled.  For more information see Item 2.3.14.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones.</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>GSS does not expose anything external to the system as it is configured to use TLI (protocol = <xhtml:span class="inline_block">ticotsord</xhtml:span>) by default. However, unless your organization is using the GSS API,  disable it.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>To disable the GSS API, run the following command:</xhtml:p>
                     <xhtml:code class="code_block"># svcadm disable svc:/network/rpc/gss </xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/network/rpc/gss' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        --><xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/network/rpc/gss' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/network/rpc/gss 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                --><ecl:shell-command check="all" comment="PASS if svc:/network/rpc/gss is not installed.">
                        <ecl:command>svcs -Ho state svc:/network/rpc/gss 2&gt;&amp;1</ecl:command>
                        <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/network/rpc/gss' doesn't match any instances"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
               <xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/network/rpc/gss
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    --><ecl:shell-command check="all" comment="Ensure gss is disabled">
                        <ecl:command>svcs -Ho state svc:/network/rpc/gss</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
            </xccdf:complex-check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.2.8_Disable_Volume_Manager" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Disable Volume Manager</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The volume manager automatically mounts external devices for users whenever the device is attached to the system. These devices include CD-R, CD-RW, floppies, DVD, USB and 1394 mass storage devices. See the <xhtml:span class="inline_block">vold</xhtml:span> (1M) manual page for more details.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>Note:</xhtml:strong> Since this service uses Oracle's standard RPC mechanism, it is important that the system's RPC portmapper (<xhtml:span class="inline_block">rpcbind</xhtml:span>) also be enabled when this service is turned on.  For more information see Item 2.3.14 Disable Local RPC Port Mapping Service</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies only to the global zone</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>Allowing users to mount and access data from removable media devices makes it easier for malicious programs and data to be imported onto your network. It also introduces the risk that sensitive data may be transferred off the system without a log record. Another alternative is to edit the <xhtml:span class="inline_block">/etc/vold.conf </xhtml:span>file and comment out any removable devices that you do not want users to be able to mount.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>To disable <xhtml:span class="inline_block">vold</xhtml:span>, run the following command:</xhtml:p>
                     <xhtml:code class="code_block"># svcadm disable svc:/system/filesystem/volfs<xhtml:br/># svcadm disable svc:/network/rpc/smserver</xhtml:code>
                     <xhtml:p>
                        <xhtml:strong>Note:</xhtml:strong> 
                        <xhtml:span class="inline_block">rmformat</xhtml:span>(1) and the CDE Filemanager  are   <xhtml:span class="inline_block">rpc.smserverd </xhtml:span>clients. If you need to support these services, but still want to disable <xhtml:span class="inline_block">vold</xhtml:span>, then do not disable <xhtml:span class="inline_block">smserver </xhtml:span>in the action above.</xhtml:p>
                     <xhtml:p> </xhtml:p>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="AND">
               <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/system/filesystem/volfs' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        --><xccdf:check system="http://cisecurity.org/check">
                     <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/system/filesystem/volfs' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/system/filesystem/volfs 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                --><ecl:shell-command check="all" comment="PASS if svc:/system/filesystem/volfs is not installed.">
                           <ecl:command>svcs -Ho state svc:/system/filesystem/volfs 2&gt;&amp;1</ecl:command>
                           <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/system/filesystem/volfs' doesn't match any instances"/>
                        </ecl:shell-command>
                     </xccdf:check-content>
                  </xccdf:check>
                  <xccdf:check system="http://cisecurity.org/check">
                     <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/system/filesystem/volfs
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    --><ecl:shell-command check="all" comment="Ensure volfs is disabled">
                           <ecl:command>svcs -Ho state svc:/system/filesystem/volfs</ecl:command>
                           <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                        </ecl:shell-command>
                     </xccdf:check-content>
                  </xccdf:check>
               </xccdf:complex-check>
               <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/network/rpc/smserver' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        --><xccdf:check system="http://cisecurity.org/check">
                     <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/network/rpc/smserver' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/network/rpc/smserver 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                --><ecl:shell-command check="all" comment="PASS if svc:/network/rpc/smserver is not installed.">
                           <ecl:command>svcs -Ho state svc:/network/rpc/smserver 2&gt;&amp;1</ecl:command>
                           <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/network/rpc/smserver' doesn't match any instances"/>
                        </ecl:shell-command>
                     </xccdf:check-content>
                  </xccdf:check>
                  <xccdf:check system="http://cisecurity.org/check">
                     <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/network/rpc/smserver
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    --><ecl:shell-command check="all" comment="Ensure smserver is disabled">
                           <ecl:command>svcs -Ho state svc:/network/rpc/smserver</ecl:command>
                           <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                        </ecl:shell-command>
                     </xccdf:check-content>
                  </xccdf:check>
               </xccdf:complex-check>
            </xccdf:complex-check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.2.9_Disable_Samba_Support" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Disable Samba Support</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>Solaris includes the popular open source Samba server for providing file and print services to Windows-based systems.  This allows a Solaris system to act as a file or print server on a Windows network, and even act as a Domain Controller (authentication server) to older Windows operating systems.  Note that on Solaris releases prior to 11/06 the file <xhtml:span class="inline_block">/etc/sfw/smb.conf </xhtml:span>does not exist and the service will not be started by default even on newer releases.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>Samba has been known to have security issues. If this functionality is not required by the site, disable this service.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>To disable Samba, run the appropriate command for your Solaris OS level:</xhtml:p>
                     <xhtml:p>Solaris 10 &lt;= 11/06</xhtml:p>
                     <xhtml:code class="code_block"># /etc/init.d/samba stop<xhtml:br/># mv /etc/sfw/smb.conf /etc/sfw/smb.conf.CIS </xhtml:code>
                     <xhtml:p>Solaris 10 &gt;= 8/07</xhtml:p>
                     <xhtml:code class="code_block"># svcadm disable svc:/network/samba </xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="AND">
               <xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content>
                     <ecl:shell-command check="none exist" comment="Ensure smbd process is not running">
                        <ecl:command>pgrep smbd</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
               <xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content>
                     <ecl:shell-command check="none exist" comment="Ensure smb.conf non-existant">
                        <ecl:command>ls -l /etc/sfw/smb.conf</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
               <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/network/samba' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        --><xccdf:check system="http://cisecurity.org/check">
                     <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/network/samba' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/network/samba 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                --><ecl:shell-command check="all" comment="PASS if svc:/network/samba is not installed.">
                           <ecl:command>svcs -Ho state svc:/network/samba 2&gt;&amp;1</ecl:command>
                           <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/network/samba' doesn't match any instances"/>
                        </ecl:shell-command>
                     </xccdf:check-content>
                  </xccdf:check>
                  <xccdf:check system="http://cisecurity.org/check">
                     <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/network/samba
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    --><ecl:shell-command check="all" comment="Ensure samba service is not enabled">
                           <ecl:command>svcs -Ho state svc:/network/samba</ecl:command>
                           <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                        </ecl:shell-command>
                     </xccdf:check-content>
                  </xccdf:check>
               </xccdf:complex-check>
            </xccdf:complex-check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.2.10_Disable_automount_Daemon" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Disable automount Daemon</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">automount </xhtml:span>daemon is normally used to automatically mount NFS file systems from remote file servers when needed.  However, the <xhtml:span class="inline_block">automount </xhtml:span>daemon can also be configured to mount local (loopback) file systems as well, which may include local user home directories, depending on the system configuration.  Sites that have local home directories configured via the <xhtml:span class="inline_block">automount </xhtml:span>daemon in this fashion will need to ensure that this daemon is running for Oracle's Solaris Management Console administrative interface to function properly. If the <xhtml:span class="inline_block">automount </xhtml:span>daemon is not running, the mount points created by SMC will not be mounted.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>Note:</xhtml:strong> Since this service uses Oracle's standard RPC mechanism, it is important that the system's RPC portmapper (<xhtml:span class="inline_block">rpcbind</xhtml:span>) also be enabled when this service is turned on.  For more information see Item 2.3.14 Disable Local RPC Portmapping Service.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>If there is no need to use <xhtml:span class="inline_block">automount</xhtml:span>, disable it.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>To disable the automount daemon, run the following command:</xhtml:p>
                     <xhtml:code class="code_block"># svcadm disable svc:/system/filesystem/autofs</xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure autofs is disabled">
                     <ecl:command>svcs -Ho state svc:/system/filesystem/autofs</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.2.11_Disable_Apache_Services" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Disable Apache Services</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The action in this section describes disabling the Apache 1.x and 2.x web servers provided with Solaris 10. Both services are disabled by default.  Run control scripts for Apache 1 and the NCA web servers still exist, but the services will only be started if the respective configuration files have been set up appropriately, and these configuration files do not exist by default.</xhtml:p>
               <xhtml:p>Even if the system is a Web server, the local site may choose not to use the Web server provided with Solaris in favor of a locally developed and supported Web environment.  If the machine is a Web server, the administrator is encouraged to search the Web for additional documentation on Web server security. </xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>Unless your organization specifically requires Apache services, disable it.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>To disable Apache, run the appropriate command for the version installed:</xhtml:p>
                     <xhtml:p>Apache 1.x:</xhtml:p>
                     <xhtml:code class="code_block"># /etc/init.d/apache stop<xhtml:br/># mv /etc/apache/httpd.conf /etc/apache/httpd.conf.CIS </xhtml:code>
                     <xhtml:p>Apache 2.x:</xhtml:p>
                     <xhtml:code class="code_block"># svcadm disable svc:/network/http:apache2 </xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="AND">
               <xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content>
                     <ecl:shell-command check="none exist" comment="Ensure httpd is not running">
                        <ecl:command>pgrep httpd</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
               <xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content>
                     <ecl:shell-command check="none exist" comment="Ensure apache config file does not exist">
                        <ecl:command>ls /etc/apache/httpd.conf</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
               <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/network/http:apache2' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        --><xccdf:check system="http://cisecurity.org/check">
                     <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/network/http:apache2' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/network/http:apache2 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                --><ecl:shell-command check="all" comment="PASS if svc:/network/http:apache2 is not installed.">
                           <ecl:command>svcs -Ho state svc:/network/http:apache2 2&gt;&amp;1</ecl:command>
                           <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/network/http:apache2' doesn't match any instances"/>
                        </ecl:shell-command>
                     </xccdf:check-content>
                  </xccdf:check>
                  <xccdf:check system="http://cisecurity.org/check">
                     <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/network/http:apache2
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    --><ecl:shell-command check="all" comment="Ensure apache2 is disabled">
                           <ecl:command>svcs -Ho state svc:/network/http:apache2</ecl:command>
                           <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                        </ecl:shell-command>
                     </xccdf:check-content>
                  </xccdf:check>
               </xccdf:complex-check>
            </xccdf:complex-check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.2.12_Disable_Solaris_Volume_Manager_Services" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Disable Solaris Volume Manager Services</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The Solaris Volume Manager, formerly known as Solstice DiskSuite, provides functionality for managing disk storage, disk arrays, etc.  However, many systems without large storage arrays do not require that these services be enabled or may be using an alternate volume manager rather than the bundled SVM functionality. This service is disabled by default in the OS.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies only to the global zone</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>Unless your organization specifically requires the Solaris Volume Manager, disable this service.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>To disable the Solaris Volume Manager, run the following commands:   </xhtml:p>
                     <xhtml:code class="code_block"># svcadm disable svc:/system/metainit<xhtml:br/># svcadm disable svc:/system/mdmonitor</xhtml:code>
                     <xhtml:p>In addition, run the appropriate command for the Solaris 10 level that you are running:</xhtml:p>
                     <xhtml:p>Solaris 10 &lt;= 11/06</xhtml:p>
                     <xhtml:code class="code_block"># svcadm disable svc:/platform/sun4u/mpxio-upgrade </xhtml:code>
                     <xhtml:p>Solaris 10 &gt;= 8/07</xhtml:p>
                     <xhtml:code class="code_block"># svcadm disable svc:/system/device/mpxio-upgrade </xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="AND">
               <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/system/metainit' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        --><xccdf:check system="http://cisecurity.org/check">
                     <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/system/metainit' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/system/metainit 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                --><ecl:shell-command check="all" comment="PASS if svc:/system/metainit is not installed.">
                           <ecl:command>svcs -Ho state svc:/system/metainit 2&gt;&amp;1</ecl:command>
                           <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/system/metainit' doesn't match any instances"/>
                        </ecl:shell-command>
                     </xccdf:check-content>
                  </xccdf:check>
                  <xccdf:check system="http://cisecurity.org/check">
                     <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/system/metainit
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    --><ecl:shell-command check="all" comment="Ensure metainit service is not enabled">
                           <ecl:command>svcs -Ho state svc:/system/metainit</ecl:command>
                           <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                        </ecl:shell-command>
                     </xccdf:check-content>
                  </xccdf:check>
               </xccdf:complex-check>
               <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/system/mdmonitor' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        --><xccdf:check system="http://cisecurity.org/check">
                     <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/system/mdmonitor' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/system/mdmonitor 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                --><ecl:shell-command check="all" comment="PASS if svc:/system/mdmonitor is not installed.">
                           <ecl:command>svcs -Ho state svc:/system/mdmonitor 2&gt;&amp;1</ecl:command>
                           <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/system/mdmonitor' doesn't match any instances"/>
                        </ecl:shell-command>
                     </xccdf:check-content>
                  </xccdf:check>
                  <xccdf:check system="http://cisecurity.org/check">
                     <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/system/mdmonitor
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    --><ecl:shell-command check="all" comment="Ensure mdmonitor service is not enabled">
                           <ecl:command>svcs -Ho state svc:/system/mdmonitor</ecl:command>
                           <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                        </ecl:shell-command>
                     </xccdf:check-content>
                  </xccdf:check>
               </xccdf:complex-check>
               <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/platform/sun4u/mpxio-upgrade' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        --><xccdf:check system="http://cisecurity.org/check">
                     <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/platform/sun4u/mpxio-upgrade' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/platform/sun4u/mpxio-upgrade 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                --><ecl:shell-command check="all" comment="PASS if svc:/platform/sun4u/mpxio-upgrade is not installed.">
                           <ecl:command>svcs -Ho state svc:/platform/sun4u/mpxio-upgrade 2&gt;&amp;1</ecl:command>
                           <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/platform/sun4u/mpxio-upgrade' doesn't match any instances"/>
                        </ecl:shell-command>
                     </xccdf:check-content>
                  </xccdf:check>
                  <xccdf:check system="http://cisecurity.org/check">
                     <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/platform/sun4u/mpxio-upgrade
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    --><ecl:shell-command check="all" comment="Ensure mpxio-upgrade service is not enabled">
                           <ecl:command>svcs -Ho state svc:/platform/sun4u/mpxio-upgrade</ecl:command>
                           <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                        </ecl:shell-command>
                     </xccdf:check-content>
                  </xccdf:check>
               </xccdf:complex-check>
               <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/system/device/mpxio-upgrade' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        --><xccdf:check system="http://cisecurity.org/check">
                     <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/system/device/mpxio-upgrade' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/system/device/mpxio-upgrade 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                --><ecl:shell-command check="all" comment="PASS if svc:/system/device/mpxio-upgrade is not installed.">
                           <ecl:command>svcs -Ho state svc:/system/device/mpxio-upgrade 2&gt;&amp;1</ecl:command>
                           <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/system/device/mpxio-upgrade' doesn't match any instances"/>
                        </ecl:shell-command>
                     </xccdf:check-content>
                  </xccdf:check>
                  <xccdf:check system="http://cisecurity.org/check">
                     <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/system/device/mpxio-upgrade
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    --><ecl:shell-command check="all" comment="Ensure mpxio-upgrade service is not enabled">
                           <ecl:command>svcs -Ho state svc:/system/device/mpxio-upgrade</ecl:command>
                           <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                        </ecl:shell-command>
                     </xccdf:check-content>
                  </xccdf:check>
               </xccdf:complex-check>
            </xccdf:complex-check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.2.13_Disable_Solaris_Volume_Manager_GUI" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Disable Solaris Volume Manager GUI</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The Solaris Volume Manager, formerly Solstice DiskSuite, provides software RAID capability for Solaris systems.  This functionality can either be controlled via the GUI administration tools provided with the operating system, or via the command line.  However, the GUI tools cannot function without several daemons listed in Item 2.3.12 Disable Solaris Volume Manager Services enabled. If you have disabled Solaris Volume Manager Services, also disable the Solaris Volume Manager GUI.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>Note:</xhtml:strong> Since these services use Oracle's standard RPC mechanism, it is important that the system's RPC portmapper (<xhtml:span class="inline_block">rpcbind</xhtml:span>) also be enabled when these services are turned on.  For more information see Item 2.3.14 Disable Local RPC Port Mapping Service.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies only to the global zone</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>Since the same functionality that is in the GUI is available from the command line interface, administrators are strongly urged to leave these daemons disabled and administer volumes directly from the command line.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>To disable the GUI administration tools for the Solaris Volume Manager, run the following commands:</xhtml:p>
                     <xhtml:code class="code_block"># svcadm disable svc:/network/rpc/mdcomm<xhtml:br/># svcadm disable svc:/network/rpc/meta<xhtml:br/># svcadm disable svc:/network/rpc/metamed<xhtml:br/># svcadm disable svc:/network/rpc/metamh </xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="AND">
               <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/network/rpc/mdcomm' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        --><xccdf:check system="http://cisecurity.org/check">
                     <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/network/rpc/mdcomm' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/network/rpc/mdcomm 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                --><ecl:shell-command check="all" comment="PASS if svc:/network/rpc/mdcomm is not installed.">
                           <ecl:command>svcs -Ho state svc:/network/rpc/mdcomm 2&gt;&amp;1</ecl:command>
                           <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/network/rpc/mdcomm' doesn't match any instances"/>
                        </ecl:shell-command>
                     </xccdf:check-content>
                  </xccdf:check>
                  <xccdf:check system="http://cisecurity.org/check">
                     <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/network/rpc/mdcomm
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    --><ecl:shell-command check="all" comment="Ensure mdcomm is disabled">
                           <ecl:command>svcs -Ho state svc:/network/rpc/mdcomm</ecl:command>
                           <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                        </ecl:shell-command>
                     </xccdf:check-content>
                  </xccdf:check>
               </xccdf:complex-check>
               <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/network/rpc/meta' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        --><xccdf:check system="http://cisecurity.org/check">
                     <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/network/rpc/meta' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/network/rpc/meta 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                --><ecl:shell-command check="all" comment="PASS if svc:/network/rpc/meta is not installed.">
                           <ecl:command>svcs -Ho state svc:/network/rpc/meta 2&gt;&amp;1</ecl:command>
                           <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/network/rpc/meta' doesn't match any instances"/>
                        </ecl:shell-command>
                     </xccdf:check-content>
                  </xccdf:check>
                  <xccdf:check system="http://cisecurity.org/check">
                     <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/network/rpc/meta
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    --><ecl:shell-command check="all" comment="Ensure RPC meta is disabled">
                           <ecl:command>svcs -Ho state svc:/network/rpc/meta</ecl:command>
                           <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                        </ecl:shell-command>
                     </xccdf:check-content>
                  </xccdf:check>
               </xccdf:complex-check>
               <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/network/rpc/metamed' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        --><xccdf:check system="http://cisecurity.org/check">
                     <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/network/rpc/metamed' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/network/rpc/metamed 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                --><ecl:shell-command check="all" comment="PASS if svc:/network/rpc/metamed is not installed.">
                           <ecl:command>svcs -Ho state svc:/network/rpc/metamed 2&gt;&amp;1</ecl:command>
                           <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/network/rpc/metamed' doesn't match any instances"/>
                        </ecl:shell-command>
                     </xccdf:check-content>
                  </xccdf:check>
                  <xccdf:check system="http://cisecurity.org/check">
                     <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/network/rpc/metamed
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    --><ecl:shell-command check="all" comment="Ensure RPC metamed is disabled">
                           <ecl:command>svcs -Ho state svc:/network/rpc/metamed</ecl:command>
                           <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                        </ecl:shell-command>
                     </xccdf:check-content>
                  </xccdf:check>
               </xccdf:complex-check>
               <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/network/rpc/metamh' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        --><xccdf:check system="http://cisecurity.org/check">
                     <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/network/rpc/metamh' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/network/rpc/metamh 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                --><ecl:shell-command check="all" comment="PASS if svc:/network/rpc/metamh is not installed.">
                           <ecl:command>svcs -Ho state svc:/network/rpc/metamh 2&gt;&amp;1</ecl:command>
                           <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/network/rpc/metamh' doesn't match any instances"/>
                        </ecl:shell-command>
                     </xccdf:check-content>
                  </xccdf:check>
                  <xccdf:check system="http://cisecurity.org/check">
                     <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/network/rpc/metamh
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    --><ecl:shell-command check="all" comment="Ensure rpc metamh is disabled">
                           <ecl:command>svcs -Ho state svc:/network/rpc/metamh</ecl:command>
                           <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                        </ecl:shell-command>
                     </xccdf:check-content>
                  </xccdf:check>
               </xccdf:complex-check>
            </xccdf:complex-check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.2.14_Disable_Local_RPC_Port_Mapping_Service" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Disable Local RPC Port Mapping Service</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>Remote Procedure Calls (RPC) is used by many services within the Solaris 10 operating system. Some of these services allow external connections to use the service (e.g. NFS, NIS).</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>RPC-based services are typically deployed to use very weak or non-existent authentication and yet may share very sensitive information.  Unless one of the services is required on this machine, it is best to disable RPC-based tools completely.  If you are unsure whether or not a particular third-party application requires RPC services, consult with the application vendor.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>To disable local RPC port mapping service, run the following command:</xhtml:p>
                     <xhtml:code class="code_block"># svcadm disable svc:/network/rpc/bind </xhtml:code>
                     <xhtml:p>If you want to restrict access to this service, but not disable it completely, consider using a host-based firewall such as <xhtml:span class="inline_block">ipfilter</xhtml:span>(5) to control what hosts are allowed to access this daemon.  Alternatively, TCP Wrappers support can be enabled in the daemon with the commands:</xhtml:p>
                     <xhtml:code class="code_block"># svccfg -s svc:/network/rpc/bind setprop \<xhtml:br/>    config/enable_tcpwrappers = true<xhtml:br/># svcadm refresh rpc/bind </xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="OR"><!--
                                        Test whether the service 'svc:/network/rpc/bind' is not enabled.
                                        
                                        Pass if either:
                                        
                                        1. The service is not installed (unknown to svcs)
                                        OR
                                        2. The service's state is "disabled"
                                        --><xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content><!--
                                                Test for an uninstalled / unknown service.
                                                
                                                Pass if the service 'svc:/network/rpc/bind' is unknown.
                                                This is indicated in the stderr of svcs.
                                                
                                                1. svcs -Ho state svc:/network/rpc/bind 2>&1
                                                2. Ensure the output conveys that the service is not enabled
                                                
                                                Note: Evidence in out_raw
                                                --><ecl:shell-command check="all" comment="PASS if svc:/network/rpc/bind is not installed.">
                        <ecl:command>svcs -Ho state svc:/network/rpc/bind 2&gt;&amp;1</ecl:command>
                        <ecl:line-selection dt="xs:string" op="eq" value="svcs: Pattern 'svc:/network/rpc/bind' doesn't match any instances"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
               <xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content><!--
                                                           
                                    1. svcs -Ho state svc:/network/rpc/bind
                                    2. Ensure the output conveys that the service is not enabled
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    --><ecl:shell-command check="all" comment="Ensure RPC bind is disabled">
                        <ecl:command>svcs -Ho state svc:/network/rpc/bind</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
            </xccdf:complex-check>
         </xccdf:Rule>
      </xccdf:Group>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.3_Establish_a_Secure_Baseline" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Establish a Secure Baseline</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Starting with Solaris 10 11/06, Oracle has provided an option for new installations to <xhtml:br/>install the system as "Secure By Default (SBD)." Use of this installation option provides a <xhtml:br/>secure system base in which the only network service that is enabled for remote access is <xhtml:br/>Secure Shell (ssh) Some services, such as sendmail(1M) and syslogd(1M), are enabled <xhtml:br/>for local connections only. Users who are upgrading to this release or who wish to establish <xhtml:br/>a secure baseline may invoke the SBD settings by running the netservices(1M) <xhtml:br/>command. SBD settings will not be reversed by applying patches.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones.</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>The best defense against a service being exploited is to disable it. Disabling unnecessary<xhtml:br/>services reduces the attack surface.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>To establish a hardened OS baseline as recommended by Oracle, run the <xhtml:span class="inline_block">netservices</xhtml:span>
                     <xhtml:br/>(1M) command as follows:</xhtml:p>
                  <xhtml:code class="code_block"># netservices limited </xhtml:code>
                  <xhtml:p>
                     <xhtml:strong>Note:</xhtml:strong> At present, there is a known bug that prevents webconsole from refreshing after<xhtml:br/>"<xhtml:span class="inline_block">netservices limited</xhtml:span>" is run:</xhtml:p>
                  <xhtml:p>6555726 svc:/system/webconsole SMF service doesn't have a refresh method</xhtml:p>
                  <xhtml:p>Until a patch is available, this bug requires that an extra step be performed to restart the webconsole as follows:</xhtml:p>
                  <xhtml:code class="code_block"># svcadm restart svc:/system/webconsole:console</xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_2.4_Configure_TCP_Wrappers" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Configure TCP Wrappers</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>TCP Wrappers is a host-based access control system that allows administrators to control who has access to various network services based on the IP address of the remote end of the connection.  TCP Wrappers also provide logging information via syslog about both successful and unsuccessful connections.  Rather than enabling TCP Wrappers for all services with "<xhtml:span class="inline_block">inetadm -M </xhtml:span>...", the administrator has the option of enabling TCP Wrappers for individual services with "<xhtml:span class="inline_block">inetadm -m <xhtml:em>&lt;svcname&gt;</xhtml:em> tcp_wrappers=TRUE</xhtml:span>", where <xhtml:em>&lt;svcname&gt;</xhtml:em> is the name of the specific service that uses TCP Wrappers.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>TCP Wrappers provides more granular control over which systems can access services which limits the attack vector. The logs show attempted access to services from non-authorized systems, which can help identify unauthorized access attempts.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>To enable TCPWrappers, run the following commands:</xhtml:p>
                  <xhtml:ol>
                     <xhtml:li>Create <xhtml:span class="inline_block">/etc/hosts.allow</xhtml:span>:<xhtml:br/>
                        <xhtml:code class="code_block"># echo "ALL: &lt;net&gt;/&lt;mask&gt;, &lt;net&gt;/&lt;mask&gt;, ..." &gt; /etc/hosts.allow </xhtml:code>where each <xhtml:em>&lt;net&gt;/&lt;mask&gt;</xhtml:em> combination  (for example, "<xhtml:span class="inline_block">192.168.1.0/255.255.255.0</xhtml:span>") represents one network block in use by your organization that requires access to this system.</xhtml:li>
                     <xhtml:li>Create <xhtml:span class="inline_block">/etc/hosts.deny</xhtml:span>:<xhtml:br/>
                        <xhtml:code class="code_block"># echo "ALL: ALL" &gt;/etc/hosts.deny </xhtml:code>
                     </xhtml:li>
                     <xhtml:li>Update default policy with <xhtml:span class="inline_block">inetadm</xhtml:span>:<xhtml:br/>
                        <xhtml:code class="code_block"># inetadm -M tcp_wrappers=TRUE</xhtml:code>
                     </xhtml:li>
                  </xhtml:ol>
                  <xhtml:p>Note that the above actions will only provide filtering on standard TCP-based services that are spawned by <xhtml:span class="inline_block">inetd</xhtml:span>.  To protect UDP and RPC-based services that are spawned from <xhtml:span class="inline_block">inetd</xhtml:span>, consider implementing a host-based firewall such as ipfilter ("<xhtml:span class="inline_block">man ipf</xhtml:span>" for further information).  The versions of SSH and <xhtml:span class="inline_block">sendmail </xhtml:span> that ship with Solaris 10 will automatically  use TCP Wrappers to filter access if a hosts.allow or hosts.deny file exists. Also, the command "<xhtml:span class="inline_block">svccfg -s rpc/bind setprop config/enable_tcpwrappers=true</xhtml:span>" will enable TCP Wrappers for the <xhtml:span class="inline_block">rpc/bind </xhtml:span>service.</xhtml:p>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure tcp_wrappers is enabled">
                     <ecl:command>inetadm -p | grep tcp_wrappers</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="tcp_wrappers=TRUE"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="none exist" comment="Ensure /etc/hosts.deny exists">
                     <ecl:command>ls /etc/hosts.deny</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="No such file or directory"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="none exist" comment="Ensure /etc/hosts.allow exists">
                     <ecl:command>ls /etc/hosts.allow</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="No such file or directory"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
   </xccdf:Group>
   <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_3_Kernel_Tuning">
      <xccdf:title xml:lang="en">Kernel Tuning</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>This section describes additional measures that may be taken to provide protection on the kernel level.</xhtml:p>
      </xccdf:description>
      <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_3.1_Modify_Network_Parameters">
         <xccdf:title xml:lang="en">Modify Network Parameters</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Network device drivers have parameters that can be set to provide stronger security settings, depending on environmental needs. This section describes modifications to network parameters for IP, ARP and TCP.</xhtml:p>
         </xccdf:description>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.1_Modify_Network_Parameters" role="unscored" selected="false" weight="0.0">
            <xccdf:title xml:lang="en">Modify Network Parameters</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>Network device drivers have parameters that can be set to provide stronger security settings, depending on environmental needs. This section describes modifications to network parameters for IP, ARP and TCP.</xhtml:p>
               <xhtml:p>The settings described in this section meet most functional needs while providing additional security against common network attacks. However, it is important to understand the needs of your particular environment to determine if these settings are appropriate for you.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>Note:</xhtml:strong>
               </xhtml:p>
               <xhtml:p>The items that are Solaris 10 defaults include:<xhtml:br/>
                  <xhtml:span class="inline_block">ip_forward_directed_broadcasts<xhtml:br/>ip_forward_src_routed <xhtml:br/>ip6_forward_src_routed<xhtml:br/>ip_respond_to_timestamp<xhtml:br/>ip_respond_to_timestamp_broadcast <xhtml:br/>ip_respond_to_address_mask_broadcast <xhtml:br/>ip6_send_redirects<xhtml:br/>tcp_rev_src_routes </xhtml:span>
               </xhtml:p>
               <xhtml:p>The items that are NOT Solaris 10 defaults include:<xhtml:br/>
                  <xhtml:span class="inline_block">arp_cleanup_interval<xhtml:br/>ip_ire_arp_interval<xhtml:br/>ip_ignore_redirect<xhtml:br/>ip6_ignore_redirect<xhtml:br/>ip_respond_to_echo_broadcast<xhtml:br/>ip_strict_dst_mutihoming<xhtml:br/>ip6_strict_dst_multihoming<xhtml:br/>ip_send_redirects<xhtml:br/>tcp_conn_req_max_q0<xhtml:br/>tcp_conn_req_max_q<xhtml:br/>tcp_extra_priv_ports_add</xhtml:span>
               </xhtml:p>
               <xhtml:p>Note that we are creating a new script that will be executed at boot time to reconfigure the network parameters described in this section.  The file <xhtml:span class="inline_block">cis_netconfig.xml </xhtml:span>is an SMF manifest for the <xhtml:span class="inline_block">cis_netconfig</xhtml:span> service. The <xhtml:span class="inline_block">cis_netconfig.sh </xhtml:span>script that follows is a compilation of all the network parameter settings in this section. Once imported into the SMF database, the <xhtml:span class="inline_block">cis_netconfig.sh </xhtml:span>script will run on every system reboot to set the network parameters appropriately. Oracle is moving away from legacy run control scripts in <xhtml:span class="inline_block">/etc/init.d</xhtml:span> in favor of using SMF services.</xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>Modifying these network parameters as recommended protects against certain common network attacks.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:code class="code_block">cat &gt; cis_netconfig.sh &lt;&lt; END<xhtml:br/>#!/sbin/sh<xhtml:br/>ndd -set /dev/ip ip_forward_src_routed 0<xhtml:br/>ndd -set /dev/ip ip6_forward_src_routed 0<xhtml:br/>ndd -set /dev/tcp tcp_rev_src_routes 0<xhtml:br/>ndd -set /dev/ip ip_forward_directed_broadcasts 0<xhtml:br/>ndd -set /dev/tcp tcp_conn_req_max_q0 4096<xhtml:br/>ndd -set /dev/tcp tcp_conn_req_max_q 1024<xhtml:br/>ndd -set /dev/ip ip_respond_to_timestamp 0<xhtml:br/>ndd -set /dev/ip ip_respond_to_timestamp_broadcast 0<xhtml:br/>ndd -set /dev/ip ip_respond_to_address_mask_broadcast 0<xhtml:br/>ndd -set /dev/ip ip_respond_to_echo_multicast 0<xhtml:br/>ndd -set /dev/ip ip6_respond_to_echo_multicast 0<xhtml:br/>ndd -set /dev/ip ip_respond_to_echo_broadcast 0<xhtml:br/>ndd -set /dev/arp arp_cleanup_interval 60000<xhtml:br/>ndd -set /dev/ip ip_ire_arp_interval 60000<xhtml:br/>ndd -set /dev/ip ip_ignore_redirect 1<xhtml:br/>ndd -set /dev/ip ip6_ignore_redirect 1<xhtml:br/>ndd -set /dev/tcp tcp_extra_priv_ports_add 6112<xhtml:br/>ndd -set /dev/ip ip_strict_dst_multihoming 1<xhtml:br/>ndd -set /dev/ip ip6_strict_dst_multihoming 1<xhtml:br/>ndd -set /dev/ip ip_send_redirects 0<xhtml:br/>ndd -set /dev/ip ip6_send_redirects 0<xhtml:br/>
                        <xhtml:br/>
                        <xhtml:br/>END<xhtml:br/>chmod +x cis_netconfig.sh </xhtml:code>
                     <xhtml:p>Place the script in <xhtml:span class="inline_block">/lib/svc/method</xhtml:span>. <xhtml:br/>Appendix 11.9 contains a script to create an SMF service to run all the network commands described in the following sub-sections. If the SMF service is created as described in Appendix 11.9, execute the following command for it to take effect:</xhtml:p>
                     <xhtml:code class="code_block">cp cis_netconfig.sh /lib/svc/method<xhtml:br/>chmod 750 /lib/svc/method/cis_netconfig.sh<xhtml:br/>svccfg import cis_netconfig.xml</xhtml:code>
                     <xhtml:p>When the service is enabled or system is rebooted, the <xhtml:span class="inline_block">cis_netconfig.sh </xhtml:span>script will be executed and the appropriate network parameters will be updated. Store the file in <xhtml:span class="inline_block">/var/svc/manifest/site </xhtml:span>if it has to be re-imported into the system at a later date. A description for each network parameter seeting is included in the following sections.</xhtml:p>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.2_Disable_Source_Packet_Forwarding" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Disable Source Packet Forwarding</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">ip_forward_src_routed </xhtml:span>and <xhtml:span class="inline_block">ip6_forward_src_routed </xhtml:span>parameters control whether IPv4/IPv6  forwards packets with source IPv4/IPv6 routing options</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>Note: </xhtml:strong>These settings will NOT persist between reboots.</xhtml:p>
               <xhtml:p>Appendix 11.9 contains a script to create an SMF service to run the commands. If the SMF service is created as described in Appendix 11.9, execute the following command for it to take effect:</xhtml:p>
               <xhtml:code class="code_block"># cp cis_netconfig.sh /lib/svc/method<xhtml:br/># chmod 750 /lib/svc/method/cis_netconfig.sh<xhtml:br/># svccfg import cis_netconfig.xml </xhtml:code>
               <xhtml:p>When the service is enabled or system is rebooted, the <xhtml:span class="inline_block">cis_netconfig.sh  </xhtml:span>script will be executed and the appropriate network parameters will be updated. Store the file in <xhtml:span class="inline_block">/var/svc/manifest/site </xhtml:span>if it has to be re-imported into the system at a later date.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span>Note: Global zone and non-global zones are configured with exclusive IP stacks</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>Keep this parameter disabled to prevent denial of service attacks through spoofed packets.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>See the notes in Item 3.4 Modify Network Parameters regarding a master script that will be executed at boot time to reconfigure various network parameters.  The file <xhtml:span class="inline_block">cis_netconfig.xml </xhtml:span>is an SMF manifest for the <xhtml:span class="inline_block">cis_netconfig </xhtml:span>service. Once imported into the SMF database, the <xhtml:span class="inline_block">cis_netconfig.sh </xhtml:span>script will run on every system reboot to set the network parameters appropriately. Shown below is the <xhtml:span class="inline_block">ndd </xhtml:span>command that controls this particular parameter, but it does not persist between system reboots, which is the reason for creating the master script. Edit the script for the particular needs of your organization and place the script in <xhtml:span class="inline_block">/lib/svc/method</xhtml:span>.</xhtml:p>
                     <xhtml:p>IPv4:</xhtml:p>
                     <xhtml:p># ndd -set /dev/ip ip_forward_src_routed 0</xhtml:p>
                     <xhtml:p>IPv6:</xhtml:p>
                     <xhtml:p># ndd -set /dev/ip ip6_forward_src_routed 0</xhtml:p>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="AND">
               <xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content>
                     <ecl:shell-command check="at least one" comment="Ensure ipv4 source packet forwarding is disabled">
                        <ecl:command>ndd -get /dev/ip ip_forward_src_routed</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="^0$"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
               <xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content>
                     <ecl:shell-command check="at least one" comment="Ensure ipv6 source packet forwarding is disabled">
                        <ecl:command>ndd -get /dev/ip ip6_forward_src_routed</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="^0$"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
            </xccdf:complex-check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.3_Disable_Broadcast_Packet_Forwarding" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Disable Broadcast Packet Forwarding</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">ip_forward_directed_broadcasts </xhtml:span>parameter controls whether or not Solaris forwards broadcast packets for a specific network if it is directly connected to the machine.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>Note: </xhtml:strong>This setting will NOT persist between reboots.</xhtml:p>
               <xhtml:p>Appendix 11.9 contains a script to create an SMF service to run the commands. If the SMF service is created as described in Appendix 11.9, execute the following command for it to take effect:</xhtml:p>
               <xhtml:code class="code_block"># cp cis_netconfig.sh /lib/svc/method<xhtml:br/># chmod 750 /lib/svc/method/cis_netconfig.sh<xhtml:br/># svccfg import cis_netconfig.xml </xhtml:code>
               <xhtml:p>When the service is enabled or system is rebooted, the <xhtml:span class="inline_block">cis_netconfig.sh  </xhtml:span>script will be executed and the appropriate network parameters will be updated. Store the file in <xhtml:span class="inline_block">/var/svc/manifest/site </xhtml:span>if it has to be re-imported into the system at a later date.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span>Note: Global zone and non-global zones are configured with exclusive IP stacks</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>The default value of 1 causes Solaris to forward broadcast packets. An attacker could send forged packets to the broadcast address of a remote network, resulting in a broadcast flood. Setting this value to 0 prevents Solaris from forwarding these packets. Note that disabling this parameter also disables broadcast pings.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>See the notes in Item 3.4 Modify Network Parameters regarding a master script that will be executed at boot time to reconfigure various network parameters.  The file <xhtml:span class="inline_block">cis_netconfig.xml </xhtml:span>is an SMF manifest for the <xhtml:span class="inline_block">cis_netconfig </xhtml:span>service. Once imported into the SMF database, the <xhtml:span class="inline_block">cis_netconfig.sh </xhtml:span>script will run on every system reboot to set the network parameters appropriately. Shown below is the <xhtml:span class="inline_block">ndd </xhtml:span>command that controls this particular parameter, but it does not persist between system reboots, which is the reason for creating the master script. Edit the script for the particular needs of your organization and place the script in <xhtml:span class="inline_block">/lib/svc/method</xhtml:span>.</xhtml:p>
                     <xhtml:code class="code_block"># ndd -set /dev/ip ip_forward_directed_broadcasts 0 </xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure Directed Broadcast Packet Forwarding is disabled">
                     <ecl:command>ndd -get /dev/ip ip_forward_directed_broadcasts</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^0$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.4_Disable_Response_to_ICMP_Timestamp_Requests" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Disable Response to ICMP Timestamp Requests</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">ip_respond_to_timestamp </xhtml:span>parameter controls whether or not to respond to ICMP timestamp requests.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>Note:</xhtml:strong> This setting will NOT persist between reboots.</xhtml:p>
               <xhtml:p>Appendix 11.9 contains a script to create an SMF service to run the commands. If the SMF service is created as described in Appendix 11.9, execute the following command for it to take effect:</xhtml:p>
               <xhtml:code class="code_block"># cp cis_netconfig.sh /lib/svc/method<xhtml:br/># chmod 750 /lib/svc/method/cis_netconfig.sh<xhtml:br/># svccfg import cis_netconfig.xml </xhtml:code>
               <xhtml:p>When the service is enabled or system is rebooted, the <xhtml:span class="inline_block">cis_netconfig.sh  </xhtml:span>script will be executed and the appropriate network parameters will be updated. Store the file in <xhtml:span class="inline_block">/var/svc/manifest/site </xhtml:span>if it has to be re-imported into the system at a later date.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span>Note: Global zone and non-global zones are configured with exclusive IP stacks</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>Reduce attack surface by restricting a vector for host discovery.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>See the notes in Item 3.4 Modify Network Parameters regarding a master script that will be executed at boot time to reconfigure various network parameters.  The file <xhtml:span class="inline_block">cis_netconfig.xml </xhtml:span>is an SMF manifest for the <xhtml:span class="inline_block">cis_netconfig </xhtml:span>service. Once imported into the SMF database, the <xhtml:span class="inline_block">cis_netconfig.sh </xhtml:span>script will run on every system reboot to set the network parameters appropriately. Shown below is the <xhtml:span class="inline_block">ndd </xhtml:span>command that controls this particular parameter, but it does not persist between system reboots, which is the reason for creating the master script. Edit the script for the particular needs of your organization and place the script in <xhtml:span class="inline_block">/lib/svc/method</xhtml:span>.</xhtml:p>
                     <xhtml:code class="code_block"># ndd -set /dev/ip ip_respond_to_timestamp 0 </xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ICMP Timestamp Response is disabled">
                     <ecl:command>ndd -get /dev/ip ip_respond_to_timestamp</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^0$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.5_Disable_Response_to_ICMP_Broadcast_Timestamp_Requests" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Disable Response to ICMP Broadcast Timestamp Requests</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">ip_respond_to_timestamp_broadcast </xhtml:span>parameter controls whether or not to respond to ICMP broadcast timestamp requests.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>Note:</xhtml:strong> This setting will NOT persist between reboots.</xhtml:p>
               <xhtml:p>Appendix 11.9 contains a script to create an SMF service to run the commands. If the SMF service is created as described in Appendix 11.9, execute the following command for it to take effect:</xhtml:p>
               <xhtml:code class="code_block"># cp cis_netconfig.sh /lib/svc/method<xhtml:br/># chmod 750 /lib/svc/method/cis_netconfig.sh<xhtml:br/># svccfg import cis_netconfig.xml </xhtml:code>
               <xhtml:p>When the service is enabled or system is rebooted, the <xhtml:span class="inline_block">cis_netconfig.sh  </xhtml:span>script will be executed and the appropriate network parameters will be updated. Store the file in <xhtml:span class="inline_block">/var/svc/manifest/site </xhtml:span>if it has to be re-imported into the system at a later date.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span>Note: Global zone and non-global zones are configured with exclusive IP stacks</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>Reduce attack surface by restricting a vector for bulk host discovery.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>See the notes in Item 3.4 Modify Network Parameters regarding a master script that will be executed at boot time to reconfigure various network parameters.  The file <xhtml:span class="inline_block">cis_netconfig.xml </xhtml:span>is an SMF manifest for the <xhtml:span class="inline_block">cis_netconfig </xhtml:span>service. Once imported into the SMF database, the <xhtml:span class="inline_block">cis_netconfig.sh </xhtml:span>script will run on every system reboot to set the network parameters appropriately. Shown below is the <xhtml:span class="inline_block">ndd </xhtml:span>command that controls this particular parameter, but it does not persist between system reboots, which is the reason for creating the master script. Edit the script for the particular needs of your organization and place the script in <xhtml:span class="inline_block">/lib/svc/method</xhtml:span>.</xhtml:p>
                     <xhtml:code class="code_block"># ndd -set /dev/ip ip_respond_to_timestamp_broadcast 0</xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ICMP Broadcast Timestamp Response is disabled">
                     <ecl:command>ndd -get /dev/ip ip_respond_to_timestamp_broadcast</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^0$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.6_Disable_Response_to_ICMP_Netmask_Requests" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Disable Response to ICMP Netmask Requests</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">ip_respond_to_address_mask_broadcast </xhtml:span>parameter controls whether or not to respond to ICMP netmask requests, typically sent by diskless clients when booting.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>Note:</xhtml:strong> This setting will NOT persist between reboots.</xhtml:p>
               <xhtml:p>Appendix 11.9 contains a script to create an SMF service to run the commands. If the SMF service is created as described in Appendix 11.9, execute the following command for it to take effect:</xhtml:p>
               <xhtml:code class="code_block"># cp cis_netconfig.sh /lib/svc/method<xhtml:br/># chmod 750 /lib/svc/method/cis_netconfig.sh<xhtml:br/># svccfg import cis_netconfig.xml </xhtml:code>
               <xhtml:p>When the service is enabled or system is rebooted, the <xhtml:span class="inline_block">cis_netconfig.sh  </xhtml:span>script will be executed and the appropriate network parameters will be updated. Store the file in <xhtml:span class="inline_block">/var/svc/manifest/site </xhtml:span>if it has to be re-imported into the system at a later date.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span>Note: Global zone and non-global zones are configured with exclusive IP stacks</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>An attacker could use the netmask information to determine network topology. The default value is 0.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>See the notes in Item 3.4 Modify Network Parameters regarding a master script that will be executed at boot time to reconfigure various network parameters.  The file <xhtml:span class="inline_block">cis_netconfig.xml </xhtml:span>is an SMF manifest for the <xhtml:span class="inline_block">cis_netconfig </xhtml:span>service. Once imported into the SMF database, the <xhtml:span class="inline_block">cis_netconfig.sh </xhtml:span>script will run on every system reboot to set the network parameters appropriately. Shown below is the <xhtml:span class="inline_block">ndd </xhtml:span>command that controls this particular parameter, but it does not persist between system reboots, which is the reason for creating the master script. Edit the script for the particular needs of your organization and place the script in <xhtml:span class="inline_block">/lib/svc/method</xhtml:span>.</xhtml:p>
                     <xhtml:code class="code_block"># ndd -set /dev/ip ip_respond_to_address_mask_broadcast 0</xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure Response to ICMP Netmask Requests disabled">
                     <ecl:command>ndd -get /dev/ip ip_respond_to_address_mask_broadcast</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^0$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.7_Disable_ICMPv6_Redirect_Messages" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Disable ICMPv6 Redirect Messages</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">ip6_send_redirects </xhtml:span>parameter controls whether or not  IPv6 sends out ICMPv6 redirect messages.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>Note:</xhtml:strong> This setting will NOT persist between reboots.</xhtml:p>
               <xhtml:p>Appendix 11.9 contains a script to create an SMF service to run the commands. If the SMF service is created as described in Appendix 11.9, execute the following command for it to take effect:</xhtml:p>
               <xhtml:code class="code_block"># cp cis_netconfig.sh /lib/svc/method<xhtml:br/># chmod 750 /lib/svc/method/cis_netconfig.sh<xhtml:br/># svccfg import cis_netconfig.xml </xhtml:code>
               <xhtml:p>When the service is enabled or system is rebooted, the <xhtml:span class="inline_block">cis_netconfig.sh  </xhtml:span>script will be executed and the appropriate network parameters will be updated. Store the file in <xhtml:span class="inline_block">/var/svc/manifest/site </xhtml:span>if it has to be re-imported into the system at a later date.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span>Note: Global zone and non-global zones are configured with exclusive IP stacks</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>A malicious user can exploit the ability of the system to send ICMP redirects by continually sending packets to the system, forcing the system to respond with ICMP redirect messages, resulting in an adverse impact on the CPU and performance of the system.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>See the notes in Item 3.4 Modify Network Parameters regarding a master script that will be executed at boot time to reconfigure various network parameters.  The file <xhtml:span class="inline_block">cis_netconfig.xml </xhtml:span>is an SMF manifest for the <xhtml:span class="inline_block">cis_netconfig </xhtml:span>service. Once imported into the SMF database, the <xhtml:span class="inline_block">cis_netconfig.sh </xhtml:span>script will run on every system reboot to set the network parameters appropriately. Shown below is the <xhtml:span class="inline_block">ndd </xhtml:span>command that controls this particular parameter, but it does not persist between system reboots, which is the reason for creating the master script. Edit the script for the particular needs of your organization and place the script in <xhtml:span class="inline_block">/lib/svc/method</xhtml:span>.</xhtml:p>
                     <xhtml:code class="code_block"># ndd -set /dev/ip ip6_send_redirects 0</xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ipv6 ICMP Redirect Messages is disabled">
                     <ecl:command>ndd -get /dev/ip ip6_send_redirects</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^0$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.8_Disable_Response_to_Broadcast_ICMPv4_Echo_Request" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Disable Response to Broadcast ICMPv4 Echo Request</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">ip_respond_to_echo_broadcast </xhtml:span>parameter controls whether or not IPv4 responds to a broadcast ICMPv4 echo request.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>Note: </xhtml:strong>This setting will NOT persist between reboots.</xhtml:p>
               <xhtml:p>Appendix 11.9 contains a script to create an SMF service to run the commands. If the SMF service is created as described in Appendix 11.9, execute the following command for it to take effect:</xhtml:p>
               <xhtml:code class="code_block"># cp cis_netconfig.sh /lib/svc/method<xhtml:br/># chmod 750 /lib/svc/method/cis_netconfig.sh<xhtml:br/># svccfg import cis_netconfig.xml </xhtml:code>
               <xhtml:p>When the service is enabled or system is rebooted, the <xhtml:span class="inline_block">cis_netconfig.sh  </xhtml:span>script will be executed and the appropriate network parameters will be updated. Store the file in <xhtml:span class="inline_block">/var/svc/manifest/site </xhtml:span>if it has to be re-imported into the system at a later date.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span>Note: Global zone and non-global zones are configured with exclusive IP stacks</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>Responding to echo requests verifies that an address is valid, which can aid attackers in mapping out targets. ICMP echo requests are often used by network monitoring applications.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>See the notes in Item 3.4 Modify Network Parameters regarding a master script that will be executed at boot time to reconfigure various network parameters.  The file <xhtml:span class="inline_block">cis_netconfig.xml </xhtml:span>is an SMF manifest for the <xhtml:span class="inline_block">cis_netconfig </xhtml:span>service. Once imported into the SMF database, the <xhtml:span class="inline_block">cis_netconfig.sh </xhtml:span>script will run on every system reboot to set the network parameters appropriately. Shown below is the <xhtml:span class="inline_block">ndd </xhtml:span>command that controls this particular parameter, but it does not persist between system reboots, which is the reason for creating the master script. Edit the script for the particular needs of your organization and place the script in <xhtml:span class="inline_block">/lib/svc/method</xhtml:span>.</xhtml:p>
                     <xhtml:code class="code_block"># ndd -set /dev/ip ip_respond_to_echo_broadcast 0</xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure Response to Broadcast ICMPv4 Echo Request is disabled">
                     <ecl:command>ndd -get /dev/ip ip_respond_to_echo_broadcast</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^0$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.9_Disable_Response_to_Multicast_Echo_Request" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Disable Response to Multicast Echo Request</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">ip6_respond_to_echo_multicast </xhtml:span>and <xhtml:span class="inline_block">ip_respond_to_echo_multicast </xhtml:span>parameters control whether or not IPv6 or IPv4 responds to a multicast IPv6 or IPv4 echo request.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>Note: </xhtml:strong>This setting will NOT persist between reboots.</xhtml:p>
               <xhtml:p>Appendix 11.9 contains a script to create an SMF service to run the commands. If the SMF service is created as described in Appendix 11.9, execute the following command for it to take effect:</xhtml:p>
               <xhtml:code class="code_block"># cp cis_netconfig.sh /lib/svc/method<xhtml:br/># chmod 750 /lib/svc/method/cis_netconfig.sh<xhtml:br/># svccfg import cis_netconfig.xml </xhtml:code>
               <xhtml:p>When the service is enabled or system is rebooted, the <xhtml:span class="inline_block">cis_netconfig.sh  </xhtml:span>script will be executed and the appropriate network parameters will be updated. Store the file in <xhtml:span class="inline_block">/var/svc/manifest/site </xhtml:span>if it has to be re-imported into the system at a later date.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span>Note: Global zone and non-global zones are configured with exclusive IP stacks</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>Responding to multicast echo requests verifies that an address is valid, which can aid attackers in mapping out targets.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>See the notes in Item 3.4 Modify Network Parameters regarding a master script that will be executed at boot time to reconfigure various network parameters.  The file <xhtml:span class="inline_block">cis_netconfig.xml </xhtml:span>is an SMF manifest for the <xhtml:span class="inline_block">cis_netconfig </xhtml:span>service. Once imported into the SMF database, the <xhtml:span class="inline_block">cis_netconfig.sh </xhtml:span>script will run on every system reboot to set the network parameters appropriately. Shown below is the <xhtml:span class="inline_block">ndd </xhtml:span>command that controls this particular parameter, but it does not persist between system reboots, which is the reason for creating the master script. Edit the script for the particular needs of your organization and place the script in <xhtml:span class="inline_block">/lib/svc/method</xhtml:span>.</xhtml:p>
                     <xhtml:p>IPv4:</xhtml:p>
                     <xhtml:code class="code_block"># ndd -set /dev/ip ip_respond_to_echo_multicast 0 </xhtml:code>
                     <xhtml:p>IPv6:</xhtml:p>
                     <xhtml:code class="code_block"># ndd -set /dev/ip ip6_respond_to_echo_multicast 0 </xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="AND">
               <xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content>
                     <ecl:shell-command check="at least one" comment="Ensure ipv4 response to multicast echo is disabled">
                        <ecl:command>ndd -get /dev/ip ip_respond_to_echo_multicast</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="^0$"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
               <xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content>
                     <ecl:shell-command check="at least one" comment="Ensure ipv6 response to multicast echo is disabled">
                        <ecl:command>ndd -get /dev/ip ip6_respond_to_echo_multicast</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="^0$"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
            </xccdf:complex-check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.10_Set_Interval_for_Scanning_IRE_CACHE" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Set Interval for Scanning IRE_CACHE</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">ip_ire_arp_interval </xhtml:span>parameter determines the intervals in which Solaris scans the IRE_CACHE (IP Resolved Entries) and deletes entries that are more than one scan old. This interval is used for solicited arp entries, not un-solicited which are handled by arp_cleanup_interval.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>Note:</xhtml:strong> This setting will NOT persist between reboots.</xhtml:p>
               <xhtml:p>Appendix 11.9 contains a script to create an SMF service to run the commands. If the SMF service is created as described in Appendix 11.9, execute the following command for it to take effect:</xhtml:p>
               <xhtml:code class="code_block"># cp cis_netconfig.sh /lib/svc/method<xhtml:br/># chmod 750 /lib/svc/method/cis_netconfig.sh<xhtml:br/># svccfg import cis_netconfig.xml </xhtml:code>
               <xhtml:p>When the service is enabled or system is rebooted, the <xhtml:span class="inline_block">cis_netconfig.sh  </xhtml:span>script will be executed and the appropriate network parameters will be updated. Store the file in <xhtml:span class="inline_block">/var/svc/manifest/site </xhtml:span>if it has to be re-imported into the system at a later date.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span>Note: Global zone and non-global zones are configured with exclusive IP stacks</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>This helps mitigate ARP attacks (ARP poisoning).  Consult with your local network team for additional security measures in this area, such as using static ARP, or fixing MAC addresses to switch ports.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>See the notes in Item 3.4 Modify Network Parameters regarding a master script that will be executed at boot time to reconfigure various network parameters.  The file <xhtml:span class="inline_block">cis_netconfig.xml </xhtml:span>is an SMF manifest for the <xhtml:span class="inline_block">cis_netconfig </xhtml:span>service. Once imported into the SMF database, the <xhtml:span class="inline_block">cis_netconfig.sh </xhtml:span>script will run on every system reboot to set the network parameters appropriately. Shown below is the <xhtml:span class="inline_block">ndd </xhtml:span>command that controls this particular parameter, but it does not persist between system reboots, which is the reason for creating the master script. Edit the script for the particular needs of your organization and place the script in <xhtml:span class="inline_block">/lib/svc/method</xhtml:span>.</xhtml:p>
                     <xhtml:code class="code_block"># ndd -set /dev/ip ip_ire_arp_interval 60000</xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure IRE_Cache scanning interval is 60000">
                     <ecl:command>ndd -get /dev/ip ip_ire_arp_interval</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^60000$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.11_Ignore_ICMP_Redirect_Messages" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Ignore ICMP Redirect Messages</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">ip_ignore_redirect </xhtml:span>and <xhtml:span class="inline_block">ip6_ignore_redirect </xhtml:span>parameters determine if redirect messages will be ignored. ICMP redirect messages cause a host to re-route packets and could be used in a DoS attack. The default value for this is 0. Setting this parameter to 1 causes redirect messages to be ignored.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>Note:</xhtml:strong> This setting will NOT persist between reboots.</xhtml:p>
               <xhtml:p>Appendix 11.9 contains a script to create an SMF service to run the commands. If the SMF service is created as described in Appendix 11.9, execute the following command for it to take effect:</xhtml:p>
               <xhtml:code class="code_block"># cp cis_netconfig.sh /lib/svc/method<xhtml:br/># chmod 750 /lib/svc/method/cis_netconfig.sh<xhtml:br/># svccfg import cis_netconfig.xml </xhtml:code>
               <xhtml:p>When the service is enabled or system is rebooted, the <xhtml:span class="inline_block">cis_netconfig.sh  </xhtml:span>script will be executed and the appropriate network parameters will be updated. Store the file in <xhtml:span class="inline_block">/var/svc/manifest/site </xhtml:span>if it has to be re-imported into the system at a later date.</xhtml:p>
               <xhtml:p>
                  <xhtml:span>
                     <xhtml:strong>Note: Global zone and non-global zones are configured with exclusive IP stacks</xhtml:strong>
                  </xhtml:span>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>IP redirects should not be necessary in a well-designed, well maintained network. Set to a value of 1 if there is a high risk for a DoS attack. Otherwise, the default value of 0 is sufficient.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>See the notes in Item 3.4 Modify Network Parameters regarding a master script that will be executed at boot time to reconfigure various network parameters.  The file <xhtml:span class="inline_block">cis_netconfig.xml </xhtml:span>is an SMF manifest for the <xhtml:span class="inline_block">cis_netconfig </xhtml:span>service. Once imported into the SMF database, the <xhtml:span class="inline_block">cis_netconfig.sh </xhtml:span>script will run on every system reboot to set the network parameters appropriately. Shown below is the <xhtml:span class="inline_block">ndd </xhtml:span>command that controls this particular parameter, but it does not persist between system reboots, which is the reason for creating the master script. Edit the script for the particular needs of your organization and place the script in <xhtml:span class="inline_block">/lib/svc/method</xhtml:span>.</xhtml:p>
                     <xhtml:p>IPv4:</xhtml:p>
                     <xhtml:code class="code_block"># ndd -set /dev/ip ip_ignore_redirect 1 </xhtml:code>
                     <xhtml:p>IPv6:</xhtml:p>
                     <xhtml:code class="code_block"># ndd -set /dev/ip ip6_ignore_redirect 1 </xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="AND">
               <xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content>
                     <ecl:shell-command check="at least one" comment="Ensure ipv4 ignore ICMP redirect messages is enabled">
                        <ecl:command>ndd -get /dev/ip ip_ignore_redirect</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="^1$"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
               <xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content>
                     <ecl:shell-command check="at least one" comment="Ensure ipv6 ignore ICMP redirect messages is enabled">
                        <ecl:command>ndd -get /dev/ip ip6_ignore_redirect</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="^1$"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
            </xccdf:complex-check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.12_Set_Strict_Multihoming" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Set Strict Multihoming</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">ip_strict_dst_multihoming </xhtml:span>and <xhtml:span class="inline_block">ip6_strict_dst_multihoming </xhtml:span>parameters determines whether a packet arriving on a non -forwarding interface can be accepted for an IP address that is not explicitly configured on that interface. If ip_forwarding is enabled, or xxx:ip_forwarding (where xxx is the interface name) for the appropriate interfaces is enabled, then this parameter is ignored because the packet is actually forwarded.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>Note:</xhtml:strong> This setting will NOT persist between reboots.</xhtml:p>
               <xhtml:p>Appendix 11.9 contains a script to create an SMF service to run the commands. If the SMF service is created as described in Appendix 11.9, execute the following command for it to take effect:</xhtml:p>
               <xhtml:code class="code_block"># cp cis_netconfig.sh /lib/svc/method<xhtml:br/># chmod 750 /lib/svc/method/cis_netconfig.sh<xhtml:br/># svccfg import cis_netconfig.xml </xhtml:code>
               <xhtml:p>When the service is enabled or system is rebooted, the <xhtml:span class="inline_block">cis_netconfig.sh  </xhtml:span>script will be executed and the appropriate network parameters will be updated. Store the file in <xhtml:span class="inline_block">/var/svc/manifest/site </xhtml:span>if it has to be re-imported into the system at a later date.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span>Note: Global zone and non-global zones are configured with exclusive IP stacks</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>Set this parameter to 1 for systems that have interfaces that cross strict networking domains (for example, a firewall or a VPN node).</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>See the notes in Item 3.4 Modify Network Parameters regarding a master script that will be executed at boot time to reconfigure various network parameters.  The file <xhtml:span class="inline_block">cis_netconfig.xml </xhtml:span>is an SMF manifest for the <xhtml:span class="inline_block">cis_netconfig </xhtml:span>service. Once imported into the SMF database, the <xhtml:span class="inline_block">cis_netconfig.sh </xhtml:span>script will run on every system reboot to set the network parameters appropriately. Shown below is the <xhtml:span class="inline_block">ndd </xhtml:span>command that controls this particular parameter, but it does not persist between system reboots, which is the reason for creating the master script. Edit the script for the particular needs of your organization and place the script in <xhtml:span class="inline_block">/lib/svc/method</xhtml:span>.</xhtml:p>
                     <xhtml:p>IPv4:</xhtml:p>
                     <xhtml:code class="code_block"># ndd -set /dev/ip ip_strict_dst_multihoming 1 </xhtml:code>
                     <xhtml:p>IPv6:</xhtml:p>
                     <xhtml:code class="code_block"># ndd -set /dev/ip ip6_strict_dst_multihoming 1</xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:complex-check operator="AND">
               <xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content>
                     <ecl:shell-command check="at least one" comment="Ensure ipv4 Strict Multihoming is enabled">
                        <ecl:command>ndd -get /dev/ip ip_strict_dst_multihoming</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="^1$"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
               <xccdf:check system="http://cisecurity.org/check">
                  <xccdf:check-content>
                     <ecl:shell-command check="at least one" comment="Ensure ipv6 Strict Multihoming is enabled">
                        <ecl:command>ndd -get /dev/ip ip6_strict_dst_multihoming</ecl:command>
                        <ecl:line-selection dt="xs:string" op="pm" value="^1$"/>
                     </ecl:shell-command>
                  </xccdf:check-content>
               </xccdf:check>
            </xccdf:complex-check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.13_Disable_ICMPv4_Redirect_Messages" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Disable ICMPv4 Redirect Messages</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">ip_send_redirects </xhtml:span>parameter controls whether or not IPv4 sends out ICMPv4 redirect messages.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>Note:</xhtml:strong> This setting will NOT persist between reboots.</xhtml:p>
               <xhtml:p>Appendix 11.9 contains a script to create an SMF service to run the commands. If the SMF service is created as described in Appendix 11.9, execute the following command for it to take effect:</xhtml:p>
               <xhtml:code class="code_block"># cp cis_netconfig.sh /lib/svc/method<xhtml:br/># chmod 750 /lib/svc/method/cis_netconfig.sh<xhtml:br/># svccfg import cis_netconfig.xml </xhtml:code>
               <xhtml:p>When the service is enabled or system is rebooted, the <xhtml:span class="inline_block">cis_netconfig.sh  </xhtml:span>script will be executed and the appropriate network parameters will be updated. Store the file in <xhtml:span class="inline_block">/var/svc/manifest/site </xhtml:span>if it has to be re-imported into the system at a later date.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span>Note: Global zone and non-global zones are configured with exclusive IP stacks</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>A malicious user can exploit the ability of the system to send ICMP redirects by continually sending packets to the system, forcing the system to respond with ICMP redirect messages, resulting in an adverse impact on the CPU performance of the system.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>See the notes in Item 3.4 Modify Network Parameters regarding a master script that will be executed at boot time to reconfigure various network parameters.  The file <xhtml:span class="inline_block">cis_netconfig.xml </xhtml:span>is an SMF manifest for the <xhtml:span class="inline_block">cis_netconfig </xhtml:span>service. Once imported into the SMF database, the <xhtml:span class="inline_block">cis_netconfig.sh </xhtml:span>script will run on every system reboot to set the network parameters appropriately. Shown below is the <xhtml:span class="inline_block">ndd </xhtml:span>command that controls this particular parameter, but it does not persist between system reboots, which is the reason for creating the master script. Edit the script for the particular needs of your organization and place the script in <xhtml:span class="inline_block">/lib/svc/method</xhtml:span>.</xhtml:p>
                     <xhtml:code class="code_block"># ndd -set /dev/ip ip_send_redirects 0</xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ipv4 ignore ICMP redirect messages is enabled">
                     <ecl:command>ndd -get /dev/ip ip_send_redirects</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^0$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.14_Set_ARP_Cleanup_Interval" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Set ARP Cleanup Interval</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">arp_cleanup_interval </xhtml:span>parameter controls the length of time, in milliseconds, that an unsolicited Address Resolution Protocal (ARP) request remains in the ARP cache.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>Note:</xhtml:strong> This setting will NOT persist between reboots.</xhtml:p>
               <xhtml:p>Appendix 11.9 contains a script to create an SMF service to run the commands. If the SMF service is created as described in Appendix 11.9, execute the following command for it to take effect:</xhtml:p>
               <xhtml:code class="code_block"># cp cis_netconfig.sh /lib/svc/method<xhtml:br/># chmod 750 /lib/svc/method/cis_netconfig.sh<xhtml:br/># svccfg import cis_netconfig.xml </xhtml:code>
               <xhtml:p>When the service is enabled or system is rebooted, the <xhtml:span class="inline_block">cis_netconfig.sh  </xhtml:span>script will be executed and the appropriate network parameters will be updated. Store the file in <xhtml:span class="inline_block">/var/svc/manifest/site </xhtml:span>if it has to be re-imported into the system at a later date.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span>Note: Global zone and non-global zones are configured with exclusive IP stacks</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>If unsolicited ARP requests are allowed to remain in the ARP cache for long periods an attacker could fill up the ARP cache with bogus entries. Set this parameter to 60000 ms (1 minute) to reduce the effectiveness of ARP attacks. The default value is 300000.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>See the notes in Item 3.4 Modify Network Parameters regarding a master script that will be executed at boot time to reconfigure various network parameters.  The file <xhtml:span class="inline_block">cis_netconfig.xml </xhtml:span>is an SMF manifest for the <xhtml:span class="inline_block">cis_netconfig </xhtml:span>service. Once imported into the SMF database, the <xhtml:span class="inline_block">cis_netconfig.sh </xhtml:span>script will run on every system reboot to set the network parameters appropriately. Shown below is the <xhtml:span class="inline_block">ndd </xhtml:span>command that controls this particular parameter, but it does not persist between system reboots, which is the reason for creating the master script. Edit the script for the particular needs of your organization and place the script in <xhtml:span class="inline_block">/lib/svc/method</xhtml:span>.</xhtml:p>
                     <xhtml:code class="code_block"># ndd -set /dev/arp arp_cleanup_interval 60000</xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ARP cleapup interval is set">
                     <ecl:command>ndd -get /dev/arp arp_cleanup_interval</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^60000$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.15_Disable_TCP_Reverse_IP_Source_Routing" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Disable TCP Reverse IP Source Routing</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">tcp_rev_src_routes </xhtml:span>parameter determines if TCP reverses the IP source routing option for incoming connections. If set to 0, TCP does not reverse IP source. If set to 1, TCP does the normal reverse source routing. The default setting is 0.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>Note:</xhtml:strong> This setting will NOT persist between reboots.</xhtml:p>
               <xhtml:p>Appendix 11.9 contains a script to create an SMF service to run the commands. If the SMF service is created as described in Appendix 11.9, execute the following command for it to take effect:</xhtml:p>
               <xhtml:code class="code_block"># cp cis_netconfig.sh /lib/svc/method<xhtml:br/># chmod 750 /lib/svc/method/cis_netconfig.sh<xhtml:br/># svccfg import cis_netconfig.xml </xhtml:code>
               <xhtml:p>When the service is enabled or system is rebooted, the <xhtml:span class="inline_block">cis_netconfig.sh  </xhtml:span>script will be executed and the appropriate network parameters will be updated. Store the file in <xhtml:span class="inline_block">/var/svc/manifest/site </xhtml:span>if it has to be re-imported into the system at a later date.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span>Note: Global zone and non-global zones are configured with exclusive IP stacks</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>If IP source routing is needed for diagnostic purposes, enable it. Otherwise leave it disabled.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>See the notes in Item 3.4 Modify Network Parameters regarding a master script that will be executed at boot time to reconfigure various network parameters.  The file <xhtml:span class="inline_block">cis_netconfig.xml </xhtml:span>is an SMF manifest for the <xhtml:span class="inline_block">cis_netconfig </xhtml:span>service. Once imported into the SMF database, the <xhtml:span class="inline_block">cis_netconfig.sh </xhtml:span>script will run on every system reboot to set the network parameters appropriately. Shown below is the <xhtml:span class="inline_block">ndd </xhtml:span>command that controls this particular parameter, but it does not persist between system reboots, which is the reason for creating the master script. Edit the script for the particular needs of your organization and place the script in <xhtml:span class="inline_block">/lib/svc/method</xhtml:span>.</xhtml:p>
                     <xhtml:code class="code_block"># ndd -set /dev/tcp tcp_rev_src_routes 0</xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure TCP Reverse IP Source Routing is disabled">
                     <ecl:command>ndd -get /dev/tcp tcp_rev_src_routes</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^0$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.16_Set_Maximum_Number_of_Half-open_TCP_Connections" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Set Maximum Number of Half-open TCP Connections</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">tcp_conn_req_max_q0 </xhtml:span>parameter determines how many half-open TCP connections can exist for a port. This setting is closely related with <xhtml:span class="inline_block">tcp_conn_req_max_q</xhtml:span>.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>Note:</xhtml:strong> This setting will NOT persist between reboots.</xhtml:p>
               <xhtml:p>Appendix 11.9 contains a script to create an SMF service to run the commands. If the SMF service is created as described in Appendix 11.9, execute the following command for it to take effect:</xhtml:p>
               <xhtml:code class="code_block"># cp cis_netconfig.sh /lib/svc/method<xhtml:br/># chmod 750 /lib/svc/method/cis_netconfig.sh<xhtml:br/># svccfg import cis_netconfig.xml </xhtml:code>
               <xhtml:p>When the service is enabled or system is rebooted, the <xhtml:span class="inline_block">cis_netconfig.sh  </xhtml:span>script will be executed and the appropriate network parameters will be updated. Store the file in <xhtml:span class="inline_block">/var/svc/manifest/site </xhtml:span>if it has to be re-imported into the system at a later date.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span>Note: Global zone and non-global zones are configured with exclusive IP stacks</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>It is necessary to control the number of completed connections to the system to provide some protection against Denial of Service attacks. Note that the value of 4096 is a minimum to establish a good security posture for this setting. In environments where connections numbers are high, such as a busy webserver, this value may need to be increased.  </xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>See the notes in Item 3.4 Modify Network Parameters regarding a master script that will be executed at boot time to reconfigure various network parameters.  The file <xhtml:span class="inline_block">cis_netconfig.xml </xhtml:span>is an SMF manifest for the <xhtml:span class="inline_block">cis_netconfig </xhtml:span>service. Once imported into the SMF database, the <xhtml:span class="inline_block">cis_netconfig.sh </xhtml:span>script will run on every system reboot to set the network parameters appropriately. Shown below is the <xhtml:span class="inline_block">ndd </xhtml:span>command that controls this particular parameter, but it does not persist between system reboots, which is the reason for creating the master script. Edit the script for the particular needs of your organization and place the script in <xhtml:span class="inline_block">/lib/svc/method</xhtml:span>.</xhtml:p>
                     <xhtml:code class="code_block"># ndd -set /dev/tcp tcp_conn_req_max_q0 4096 </xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure Maximum Number of Half-Open TCP COnnections is configured">
                     <ecl:command>ndd -get /dev/tcp tcp_conn_req_max_q0</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^4096$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.17_Set_Maximum_Number_of_Incoming_Connections" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Set Maximum Number of Incoming Connections</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">tcp_conn_req_max_q </xhtml:span>parameter determines the maximum number of incoming connections that can be accepted on a port. This setting is closely related with <xhtml:span class="inline_block">tcp_conn_req_max_q0</xhtml:span>.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>Note:</xhtml:strong> This setting will NOT persist between reboots.</xhtml:p>
               <xhtml:p>Appendix 11.9 contains a script to create an SMF service to run the commands. If the SMF service is created as described in Appendix 11.9, execute the following command for it to take effect:</xhtml:p>
               <xhtml:code class="code_block"># cp cis_netconfig.sh /lib/svc/method<xhtml:br/># chmod 750 /lib/svc/method/cis_netconfig.sh<xhtml:br/># svccfg import cis_netconfig.xml </xhtml:code>
               <xhtml:p>When the service is enabled or system is rebooted, the <xhtml:span class="inline_block">cis_netconfig.sh  </xhtml:span>script will be executed and the appropriate network parameters will be updated. Store the file in <xhtml:span class="inline_block">/var/svc/manifest/site </xhtml:span>if it has to be re-imported into the system at a later date.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span>Note: Global zone and non-global zones are configured with exclusive IP stacks</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>Restricting the number of "half open" connections limits the damage of DOS attacks where the attacker floods the network with "SYNs". Having this split from the <xhtml:span class="inline_block">tcp_conn_req_max_q </xhtml:span>parameter allows the administrator some discretion in this area.</xhtml:p>
               <xhtml:p>Note that the value of 1024 is a minimum to establish a good security posture for this setting. In environments where connections numbers are high, such as a busy webserver, this value may need to be increased.  </xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>See the notes in Item 3.4 Modify Network Parameters regarding a master script that will be executed at boot time to reconfigure various network parameters.  The file <xhtml:span class="inline_block">cis_netconfig.xml </xhtml:span>is an SMF manifest for the <xhtml:span class="inline_block">cis_netconfig </xhtml:span>service. Once imported into the SMF database, the <xhtml:span class="inline_block">cis_netconfig.sh </xhtml:span>script will run on every system reboot to set the network parameters appropriately. Shown below is the <xhtml:span class="inline_block">ndd </xhtml:span>command that controls this particular parameter, but it does not persist between system reboots, which is the reason for creating the master script. Edit the script for the particular needs of your organization and place the script in <xhtml:span class="inline_block">/lib/svc/method</xhtml:span>.</xhtml:p>
                     <xhtml:code class="code_block"># ndd -set /dev/tcp tcp_conn_req_max_q 1024</xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure Maximum Number of Incomming Connections is Configured">
                     <ecl:command>ndd -get /dev/tcp tcp_conn_req_max_q</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^1024$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.1.18_Lock_down_dtspcd8" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Lock down dtspcd(8)</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">tcp_extra_priv_ports_add </xhtml:span>parameter adds a non privileged port to the privileged port list.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>Note:</xhtml:strong> This setting will NOT persist between reboots.</xhtml:p>
               <xhtml:p>Appendix 11.9 contains a script to create an SMF service to run the commands. If the SMF service is created as described in Appendix 11.9, execute the following command for it to take effect:</xhtml:p>
               <xhtml:code class="code_block"># cp cis_netconfig.sh /lib/svc/method<xhtml:br/># chmod 750 /lib/svc/method/cis_netconfig.sh<xhtml:br/># svccfg import cis_netconfig.xml </xhtml:code>
               <xhtml:p>When the service is enabled or system is rebooted, the <xhtml:span class="inline_block">cis_netconfig.sh  </xhtml:span>script will be executed and the appropriate network parameters will be updated. Store the file in <xhtml:span class="inline_block">/var/svc/manifest/site </xhtml:span>if it has to be re-imported into the system at a later date.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span>Note: Global zone and non-global zones are configured with exclusive IP stacks</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>Lock down <xhtml:span class="inline_block">dtspcd</xhtml:span>(8) (CDE Subprocess Control Service). This optional service is seldom used. It has historically been associated with malicious scans. Making it a privileged port prevents users from opening up the service on a Solaris machine.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>See the notes in Item 3.4 Modify Network Parameters regarding a master script that will be executed at boot time to reconfigure various network parameters.  The file <xhtml:span class="inline_block">cis_netconfig.xml </xhtml:span>is an SMF manifest for the <xhtml:span class="inline_block">cis_netconfig </xhtml:span>service. Once imported into the SMF database, the <xhtml:span class="inline_block">cis_netconfig.sh </xhtml:span>script will run on every system reboot to set the network parameters appropriately. Shown below is the <xhtml:span class="inline_block">ndd </xhtml:span>command that controls this particular parameter, but it does not persist between system reboots, which is the reason for creating the master script. Edit the script for the particular needs of your organization and place the script in <xhtml:span class="inline_block">/lib/svc/method</xhtml:span>.</xhtml:p>
                     <xhtml:code class="code_block"># ndd -set /dev/tcp tcp_extra_priv_ports_add 6112</xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure dtspcd locked down">
                     <ecl:command>ndd -get /dev/tcp tcp_extra_priv_ports</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^6112"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:Rule>
      </xccdf:Group>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.2_Restrict_Core_Dumps_to_Protected_Directory" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Restrict Core Dumps to Protected Directory</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The action described in this section creates a protected directory to store core dumps and also causes the system to create a log entry whenever a regular process dumps core. </xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Core dumps, particularly those from set-UID and set-GID processes, may contain sensitive data. </xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>To restrict core files to a protected directory, run the following commands:</xhtml:p>
                  <xhtml:code class="code_block"># mkdir -p /var/cores<xhtml:br/># chown root:root /var/cores<xhtml:br/># chmod 700 /var/cores<xhtml:br/># coreadm -g /var/cores/core_%n_%f_%u_%g_%t_%p \<xhtml:br/>        -e log -e global -e global-setid \<xhtml:br/>        -d process -d proc-setid</xhtml:code>
                  <xhtml:p>If the local site chooses, dumping of core files can be completely disabled with the following command:</xhtml:p>
                  <xhtml:code class="code_block"># coreadm -d global -d global-setid -d process \<xhtml:br/>-d proc-setid</xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure Core Dump File Pattern is configured">
                     <ecl:command>coreadm | grep "global core file pattern"</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="core_%n_%f_%u_%g_%t_%p"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure Core Dumps Global Core File Content set to default">
                     <ecl:command>coreadm | grep "global core file content"</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="default"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure Core Dumps  Init Core File Pattern set to core">
                     <ecl:command>coreadm | grep "init core file pattern"</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="core"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure Core Dumps Init Core File Content set to default">
                     <ecl:command>coreadm | grep "init core file content"</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="default"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure Core Dumps Global Core Dumps is enabled">
                     <ecl:command>coreadm | grep "global core dumps"</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="enabled"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure Core Dumps Per-Process Core Dumps is disabled">
                     <ecl:command>coreadm | grep "per-process core dumps"</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure Core Dumps Global setid Core Dumps is enabled">
                     <ecl:command>coreadm | grep "global setid core dumps"</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="enabled"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure Core Dumps Per-Process setid Core Dumps is disabled">
                     <ecl:command>coreadm | grep "per-process setid core dumps"</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure Core Dumps Global Core Dump Logging is enabled">
                     <ecl:command>coreadm | grep "global core dump logging"</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="enabled"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.3_Enable_Stack_Protection" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Enable Stack Protection</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Buffer overflow exploits have been the basis for many highly publicized compromises and defacements of large numbers of Internet connected systems.  Many of the automated tools in use by system attackers exploit well-known buffer overflow problems in vendor-supplied and third-party software. </xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies only to the global zone</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Enabling stack protection prevents certain classes of buffer overflow attacks and is a significant security enhancement. However, this does not protect against buffer overflow attacks that do not execute code on the stack (such as <xhtml:span class="inline_block">return-to-libc </xhtml:span>exploits).</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>To enable stack protection, run the following commands to edit the /etc/system file:</xhtml:p>
                  <xhtml:code class="code_block"># if [ ! "`grep noexec_user_stack= /etc/system`"]; then<xhtml:br/>    cat &lt;&lt;END_CFG &gt;&gt;/etc/system<xhtml:br/>* Attempt to prevent and log stack-smashing attacks<xhtml:br/>set noexec_user_stack=1<xhtml:br/>set noexec_user_stack_log=1<xhtml:br/>
                     <xhtml:br/>END_CFG<xhtml:br/>fi</xhtml:code>
                  <xhtml:p>
                     <xhtml:strong>Note:</xhtml:strong> A reboot is necessary for this change to take effect.</xhtml:p>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:file-content check="at least one" comment="Ensure stack protection is enabled in /etc/system">
                     <ecl:path>/etc/system</ecl:path>
                     <ecl:line-selection op="pm" value="^set noexec_user_stack\s*=\s*1"/>
                  </ecl:file-content>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:file-content check="at least one" comment="Ensure stack protection log is enabled in /etc/system">
                     <ecl:path>/etc/system</ecl:path>
                     <ecl:line-selection op="pm" value="^set noexec_user_stack_log\s*=\s*1"/>
                  </ecl:file-content>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure stack protection is enabled in the running kernel">
                     <ecl:command>echo "noexec_user_stack/D" | mdb -k</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="^.*\s(\d+)"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.4_Enable_Strong_TCP_Sequence_Number_Generation" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Enable Strong TCP Sequence Number Generation</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The variable <xhtml:span class="inline_block">TCP_STRONG_ISS </xhtml:span>sets the mechanism for generating the order of TCP packets. If an attacker can predict the next sequence number, it is possible to inject fraudulent packets into the data stream to hijack the session. Solaris supports three sequence number methods:</xhtml:p>
            <xhtml:p>0 = Old-fashioned sequential initial sequence number generation.<xhtml:br/>1 = Improved sequential generation, with random variance in increment.<xhtml:br/>2 = RFC 1948 sequence number generation, unique-per-connection-ID.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: Global zone and non-global zones are configured with exclusive IP stacks</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>The RFC 1948 method is widely accepted as the strongest mechanism for TCP packet generation.  This makes remote session hijacking attacks more difficult, as well as any other network-based attack that relies on predicting TCP sequence number information. It is theoretically possible that there may be a small performance hit in connection setup time when this setting is used, but there are no benchmarks that establish this.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Run the following commands to set <xhtml:span class="inline_block">TCP_STRONG_ISS </xhtml:span>to use RFC 1948 sequence number generation:</xhtml:p>
                  <xhtml:code class="code_block"># cd /etc/default<xhtml:br/># awk '/TCP_STRONG_ISS=/ { $1 = "TCP_STRONG_ISS=2" }; \<xhtml:br/>{ print }' inetinit &gt; inetinit.new<xhtml:br/># mv inetinit.new inetinit<xhtml:br/># pkgchk -f -n -p /etc/default/inetinit<xhtml:br/># ndd -set /dev/tcp tcp_strong_iss 2</xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="at least one" comment="Ensure strong TCP sequence number generation is enabled">
                  <ecl:command>ndd -get /dev/tcp tcp_strong_iss</ecl:command>
                  <ecl:line-selection dt="xs:integer" op="eq" value="2"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_3.5_Disable_Network_Routing" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Disable Network Routing</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The network routing daemon, <xhtml:span class="inline_block">in.routed</xhtml:span>, manages network routing tables. If enabled, it periodically supplies copies of the system's routing tables to any directly connected hosts and networks and picks up routes supplied to it from other networks and hosts.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: Global zone and non-global zones are configured with exclusive IP stacks</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Routing Internet Protocol (RIP) is a legacy protocol with a number of security issues (e.g. no authentication, no zoning, and no pruning).</xhtml:p>
            <xhtml:p>Routing (in.routed) is disabled by default in all Solaris 10 systems, if there is a default router defined. If no default gateway is defined during system installation, network routing is enabled.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Run the following commands to disable routing. This action is unnecessary unless it was manually enabled by the administrator or the system was previously used as a network gateway. </xhtml:p>
                  <xhtml:code class="code_block"># routeadm -d ipv4-forwarding -d ipv6-forwarding<xhtml:br/># routeadm -d ipv4-routing -d ipv6-routing<xhtml:br/># routeadm -u</xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ipv4 Network Routing is disabled">
                     <ecl:command>routeadm -p | egrep "^ipv[46]-routing |^ipv[46]-forwarding" |awk '{ printf("%s %s
", $1, $NF); }'|grep "ipv4-routing current"</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ipv6 Network Routing is disabled">
                     <ecl:command>routeadm -p | egrep "^ipv[46]-routing |^ipv[46]-forwarding" |awk '{ printf("%s %s
", $1, $NF); }'|grep "ipv6-routing current"</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ipv4 Network Forwarding disabled">
                     <ecl:command>routeadm -p | egrep "^ipv[46]-routing |^ipv[46]-forwarding" |awk '{ printf("%s %s
", $1, $NF); }'|grep "ipv4-forwarding current"</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure ipv6 Network Forwarding disabled">
                     <ecl:command>routeadm -p | egrep "^ipv[46]-routing |^ipv[46]-forwarding" |awk '{ printf("%s %s
", $1, $NF); }'|grep "ipv6-forwarding current"</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="disabled"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
   </xccdf:Group>
   <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_4_Logging">
      <xccdf:title xml:lang="en">Logging</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>The items in this section describe enabling various different forms of system logging to track system activity.  Tools such as Swatch (<xhtml:a href="http://swatch.sourceforge.net/">http://swatch.sourceforge.net/</xhtml:a>) can be used to automatically monitor logs for intrusion attempts and other suspicious system behavior.  Note that these tools are not officially supported by Oracle and that log formats and messages used by these tools may be added or changed in patches, updates and new releases.</xhtml:p>
         <xhtml:p>In addition to the local log files created by the steps in this section, it is also recommended that sites collect copies of their system logs on a secure, centralized log server via an encrypted connection. Not only does centralized logging help sites correlate events that may be occurring on multiple systems, but having a second copy of the system log information may be critical after a system compromise where the attacker has modified the local log files on the affected system(s). If a log correlation system is deployed, configure it to process the logs described in this section.</xhtml:p>
         <xhtml:p>Because it is often necessary to correlate log information from many different systems (particularly after a security incident) it is recommended that the time be synchronized among systems and devices connected to the local network.  The standard Internet protocol for time synchronization is the Network Time Protocol (NTP), which is supported by most network-ready devices.  More information on NTP can be found at http://www.sun.com/blueprints and <xhtml:a href="http://www.ntp.org">http://www.ntp.org</xhtml:a>.</xhtml:p>
         <xhtml:p>It is important that all logs described in this section be monitored on a regular basis and correlated to determine trends. A seemingly innocuous entry in one log could be more significant when compared to an entry in another log.</xhtml:p>
         <xhtml:p>If using the Solaris Security Toolkit, run the script <xhtml:span class="inline_block">set-log-file-permissions.fin </xhtml:span>to ensure appropriate permissions of log files.</xhtml:p>
      </xccdf:description>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.1_Enable_inetd_Connection_Logging" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Enable inetd Connection Logging</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The inetd process starts Internet  standard  services and the "tracing" feature can be used to log information about the source of any network connections seen by the daemon. </xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Rather than enabling inetd tracing for all services with "<xhtml:span class="inline_block">inetadm -M </xhtml:span>...", the administrator has the option of enabling tracing for individual services with "<xhtml:span class="inline_block">inetadm -m <xhtml:em>&lt;svcname&gt;</xhtml:em> tcp_trace=TRUE</xhtml:span>", where <xhtml:em>&lt;svcname&gt;</xhtml:em> is the name of the specific service that uses tracing.</xhtml:p>
            <xhtml:p>This information is logged via <xhtml:span class="inline_block">syslogd </xhtml:span>(1M) and is deposited by default in <xhtml:span class="inline_block">/var/adm/messages </xhtml:span>with other system log messages.  If the administrator wants to capture this information in a separate file, simply modify <xhtml:span class="inline_block">/etc/syslog.conf </xhtml:span>to log daemon.notice to some other log file destination. For further configuration information, see  4.3 Enable Debug Level Daemon Logging.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Run the following commands to enable inetd connection logging:</xhtml:p>
                  <xhtml:code class="code_block"># inetadm -M tcp_trace=true<xhtml:br/># svcadm refresh svc:/network/inetd</xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="at least one" comment="Ensure inetd Connection Logging enabled">
                  <ecl:command>svcprop -p defaults/tcp_trace svc:/network/inetd:default</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value="true"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.2_Enable_FTP_daemon_Logging" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Enable FTP daemon Logging</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Information about FTP sessions will be logged via <xhtml:span class="inline_block">syslogd </xhtml:span>(1M), but the system must be configured to capture these messages.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>If the FTP daemon is installed and enabled, it is recommended that the "debugging" (-d) and connection logging (-l) flags also be enabled to track FTP activity on the system. Note that enabling debugging on the FTP daemon can cause user passwords to appear in clear-text form in the system logs, if users accidentally type their passwords at the username prompt. For further configuration information, see  4.3 Enable Debug Level Daemon Logging.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Run the following command to enable FTP daemon logging:</xhtml:p>
                  <xhtml:code class="code_block"># inetadm -m svc:/network/ftp \<xhtml:br/>    exec="/usr/sbin/in.ftpd -a -l -d"</xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="at least one" comment="Ensure FTP Daemon Logging enabled">
                  <ecl:command>svcprop -p inetd_start/exec svc:/network/ftp:default</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value="/usr/sbin/in.ftpd\\ -a\\ -l\\ -d"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.3_Enable_Debug_Level_Daemon_Logging" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Enable Debug Level Daemon Logging</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>If the FTP service is installed and enabled on the system, Item 4.2 Enable FTP daemon Logging enables the "debugging" (-d) and connection logging (-l) flags to track FTP activity on the system.  Similarly, the tracing (-t) option to <xhtml:span class="inline_block">inetd </xhtml:span>was enabled in Item 4.1 Enable inetd Connection Logging. </xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>All of this information is logged by <xhtml:span class="inline_block">syslogd </xhtml:span>(1M), but <xhtml:span class="inline_block">syslogd </xhtml:span>(1M) must be configured to capture this information to a separate file so it may be more easily reviewed.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>The commands listed below direct <xhtml:span class="inline_block">syslogd </xhtml:span>(1M),  to send the log information for these services to a log file named <xhtml:span class="inline_block">connlog</xhtml:span>.  Review the <xhtml:span class="inline_block">connlog </xhtml:span>file on a regular basis. It is important to note that use of the debugging option can generate very large log files.</xhtml:p>
                  <xhtml:code class="code_block"># if [ ! "`grep -v '^#' /etc/syslog.conf | \<xhtml:br/>         grep /var/log/connlog`" ]; then<xhtml:br/>    echo "daemon.debug\t\t\t/var/log/connlog" \<xhtml:br/>        &gt;&gt;/etc/syslog.conf<xhtml:br/>fi<xhtml:br/># touch /var/log/connlog<xhtml:br/># chown root:root /var/log/connlog<xhtml:br/># chmod 600 /var/log/connlog<xhtml:br/># logadm -w connlog -C 13 -a 'pkill -HUP syslogd' \<xhtml:br/>       /var/log/connlog<xhtml:br/># svcadm refresh svc:/system/system-log</xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure Debug Level Daemon Loging enabled">
                     <ecl:command>svcs -Ho state svc:/system/system-log</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="online"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure Debug Level Daemon Loging enabled">
                     <ecl:command>grep -v "^#" /etc/syslog.conf | grep /var/log/connlog</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="/var/log/connlog"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.4_Capture_syslog_AUTH_Messages" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Capture syslog AUTH Messages</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>By default, Solaris systems do not capture logging information that is sent to the <xhtml:span class="inline_block">LOG_AUTH </xhtml:span>facility. </xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>A great deal of important security-related information is sent via the <xhtml:span class="inline_block">LOG_AUTH </xhtml:span>facility (e.g., successful and failed su attempts, failed login attempts, <xhtml:span class="inline_block">root </xhtml:span>login attempts, etc.). </xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>The commands below will cause information generated by the <xhtml:span class="inline_block">LOG_AUTH </xhtml:span>facility to be captured in the <xhtml:span class="inline_block">/var/log/authlog </xhtml:span>file (which is only readable by the superuser).</xhtml:p>
                  <xhtml:code class="code_block"># if [ ! "`grep -v '^#' /etc/syslog.conf | \<xhtml:br/>         grep /var/log/authlog`" ]; then<xhtml:br/>    echo "auth.info\t\t\t/var/log/authlog" \<xhtml:br/>        &gt;&gt;/etc/syslog.conf<xhtml:br/>fi<xhtml:br/># logadm -w authlog -C 13 -a 'pkill -HUP syslogd' \<xhtml:br/>       /var/log/authlog<xhtml:br/># pkgchk -f -n -p /var/log/authlog<xhtml:br/># svcadm refresh svc:/system/system-log </xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure syslog AUTH Messages are captured">
                     <ecl:command>svcs -Ho state svc:/system/system-log</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="online"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure syslog AUTH Messages are captured">
                     <ecl:command>grep -v "^#" /etc/syslog.conf | grep /var/log/authlog</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="/var/log/authlog"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.5_Enable_Login_Records" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Enable Login Records</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>If the file <xhtml:span class="inline_block">/var/adm/loginlog </xhtml:span>exists, it will capture failed login attempt messages with the login name, tty specification, and time. This file does not exist by default and must be manually created.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Tracking failed login attempts is critical to determine when an attacker is attempting a brute force attack on user accounts. Note that this is only for login-based such as login, telnet, rlogin, etc. and does not include SSH. Review the <xhtml:span class="inline_block">loginlog </xhtml:span>file on a regular basis.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="code_block"># touch /var/adm/loginlog<xhtml:br/># chown root:sys /var/adm/loginlog<xhtml:br/># chmod 600 /var/adm/loginlog<xhtml:br/># logadm -w loginlog -C 13 /var/adm/loginlog</xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="none exist" comment="Ensure /var/adm/loginlog exists">
                     <ecl:command>ls /var/adm/loginlog</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="No such file or directory"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure /var/adm/loginlog configured">
                     <ecl:command>grep loginlog /etc/logadm.conf</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="/var/adm/loginlog"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.6_Capture_All_Failed_Login_Attempts" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Capture All Failed Login Attempts</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The <xhtml:span class="inline_block">SYS_FAILED_LOGINS </xhtml:span>variable is used to determine how many failed login attempts occur before a failed login message is logged. Setting the value to 0 will cause a failed login message on every failed login attempt.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>The <xhtml:span class="inline_block">SYSLOG_FAILED_LOGINS </xhtml:span>parameter in the <xhtml:span class="inline_block">/etc/default/login </xhtml:span>file is used to control how many login failures are allowed before log messages are generated-if set to zero then all failed logins will be logged. </xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="code_block"># cd /etc/default<xhtml:br/># awk '/SYSLOG_FAILED_LOGINS=/ \<xhtml:br/>   { $1 = "SYSLOG_FAILED_LOGINS=0" }; \<xhtml:br/>   { print }' login &gt;login.new<xhtml:br/>
                     <xhtml:br/># mv login.new login<xhtml:br/># pkgchk -f -n -p /etc/default/login</xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:file-content check="at least one" comment="Ensure All Failed Login Attempts are Captured">
                  <ecl:path>/etc/default/login</ecl:path>
                  <ecl:line-selection op="pm" value="^SYSLOG_FAILED_LOGINS=0"/>
               </ecl:file-content>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.7_Enable_cron_Logging" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Enable cron Logging</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Setting the CRONLOG parameter to YES in the <xhtml:span class="inline_block">/etc/default/cron </xhtml:span>file causes information to be logged for every <xhtml:span class="inline_block">cron </xhtml:span>job that gets executed on the system.  This setting is the default for Solaris. </xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>A common attack vector is for programs that are run out of <xhtml:span class="inline_block">cron </xhtml:span>to be subverted to execute commands as the owner of the <xhtml:span class="inline_block">cron </xhtml:span>job. Log data on commands that are executed out of <xhtml:span class="inline_block">cron </xhtml:span>can be found in the <xhtml:span class="inline_block">/var/cron/log </xhtml:span>file. Review this file on a regular basis.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="code_block"># cd /etc/default<xhtml:br/># awk '/CRONLOG=/ { $1 = "CRONLOG=YES" }; \<xhtml:br/>                { print }' cron &gt; cron.new<xhtml:br/># mv cron.new cron<xhtml:br/># pkgchk -f -n -p /etc/default/cron<xhtml:br/># chown root:root /var/cron/log<xhtml:br/># chmod go-rwx /var/cron/log</xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:file-content check="at least one" comment="Ensure Cron Logging is enabled">
                     <ecl:path>/etc/default/cron</ecl:path>
                     <ecl:line-selection op="pm" value="^CRONLOG=YES"/>
                  </ecl:file-content>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="none exist" comment="Ensure /var/cron/log exists">
                     <ecl:command>ls /var/cron/log</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="No such file or directory"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.8_Enable_System_Accounting" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Enable System Accounting</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>System accounting gathers baseline system data (CPU utilization, disk I/O, etc.) every 20 minutes.  The data may be accessed with the <xhtml:span class="inline_block">sar </xhtml:span>command, or by reviewing the nightly report files named <xhtml:span class="inline_block">/var/adm/sa/sar*</xhtml:span>. </xhtml:p>
            <xhtml:p>
               <xhtml:strong>Note:</xhtml:strong> The sys id must be added to <xhtml:span class="inline_block">/etc/cron.allow </xhtml:span>to run the system accounting commands..</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Once a normal baseline for the system has been established, abnormalities can be investigated to detect unauthorized activity such as CPU-intensive jobs and activity outside of normal usage hours.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="code_block"># svcadm enable -r svc:/system/sar<xhtml:br/># EDITOR=ed crontab -e sys &lt;&lt; END_ENTRIES<xhtml:br/>\$a<xhtml:br/>0,20,40 * * * * /usr/lib/sa/sa1<xhtml:br/>45 23 * * * /usr/lib/sa/sa2 -s 0:00 -e 23:59 -i 1200 -A<xhtml:br/>.<xhtml:br/>w<xhtml:br/>q<xhtml:br/>END_ENTRIES<xhtml:br/># chown sys:sys /var/adm/sa/*<xhtml:br/># chmod go-wx /var/adm/sa/* </xhtml:code>
                  <xhtml:p>
                     <xhtml:strong>Note:</xhtml:strong> This data is only archived for one week before being automatically removed by the regular nightly <xhtml:span class="inline_block">cron </xhtml:span>job.  Administrators may wish to archive the <xhtml:span class="inline_block">/var/adm/sa </xhtml:span>directory on a regular basis to preserve this data for longer periods.</xhtml:p>
                  <xhtml:p>The sys account must be permitted to use the <xhtml:span class="inline_block">cron</xhtml:span>(1M) facility for system accounting to function properly. See Item 6.9 Restrict at/cron to Authorized Users.</xhtml:p>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure system accounting is enabled">
                     <ecl:command>svcs -Ho state svc:/system/sar</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="online"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="none exist" comment="Ensure /var/adm/sa exists">
                     <ecl:command>ls /var/adm/sa</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="No such file or directory"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="/usr/lib/sa/sa1 cron configured">
                     <ecl:command>crontab -l sys | grep -v "^#" | egrep '(sa1|sa2)'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="/usr/lib/sa/sa1"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure /usr/lib/sa/sa2 cron configured">
                     <ecl:command>crontab -l sys | grep -v "^#" | egrep '(sa1|sa2)'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="/usr/lib/sa/sa2"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_4.9_Enable_Kernel_Level_Auditing" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Enable Kernel Level Auditing</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Kernel-level auditing provides information on commands and system calls that are executed on the local system.  The audit trail may be reviewed with the <xhtml:span class="inline_block">praudit </xhtml:span>command.  Note that enabling kernel-level auditing on Solaris disables the automatic mounting of external devices via the Solaris volume manager daemon (<xhtml:span class="inline_block">vold</xhtml:span>).</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Kernel-level auditing can consume a large amount of disk space and even cause system performance impact, particularly on heavily used machines.  The consensus settings described in this section are an effort to log interesting system events without consuming excessive amounts of resources logging significant but usually uninteresting system calls. The document <xhtml:em>Auditing in the Solaris(tm) Operating Environment</xhtml:em> published by Oracle as part of the Blueprints On-Line series contains additional information on reducing the amount of logging produced by the administrative (<xhtml:span class="inline_block">ad</xhtml:span>) audit class (see http://www.sun.com/blueprints for more details).</xhtml:p>
            <xhtml:p>Note that DoD installations have much more stringent auditing requirements than those listed here.  DoD guidelines require <xhtml:span class="inline_block">flags:lo,ad,cc,fw,-fc,-fd,-fr </xhtml:span>to be set in the <xhtml:span class="inline_block">audit_control </xhtml:span>file.  Note that "<xhtml:span class="inline_block">-fr</xhtml:span>" in particular can cause extremely large audit trails to be generated.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="code_block">if [ ! "`grep c2audit:audit_load /etc/system`" ]<xhtml:br/>then<xhtml:br/>
                     <xhtml:br/># Turn on auditing<xhtml:br/>  echo y | /etc/security/bsmconv<xhtml:br/>  cd /etc/security<xhtml:br/>
                     <xhtml:br/># Create a CIS custom class (cc) to audit_class. Apply this class to the<xhtml:br/># following event types in audit_event:<xhtml:br/>#<xhtml:br/>#       fm - file attribute modify<xhtml:br/>#       ps - process start/stop<xhtml:br/>#       pm - process modify<xhtml:br/>#       pc - process (meta-class)<xhtml:br/>
                     <xhtml:br/>  echo "0x08000000:cc:CIS custom class" &gt;&gt;audit_class<xhtml:br/>  awk 'BEGIN { FS = ":"; OFS = ":" }<xhtml:br/>     ($4 ~ /fm/) &amp;&amp; ! ($2 ~ /MCTL|FCNTL|FLOCK|UTIME/) \<xhtml:br/>{ $4 = $4 ",cc" }<xhtml:br/>     ($4 ~ /p[cms]/) &amp;&amp; \<xhtml:br/>     ! ($2 ~ /FORK|CHDIR|KILL|VTRACE|SETGROUPS|SETPGRP/) \<xhtml:br/>{ $4 = $4 ",cc" }<xhtml:br/>     { print }' audit_event &gt;audit_event.new<xhtml:br/>
                     <xhtml:br/>  mv audit_event.new audit_event<xhtml:br/># Set Audit Control parameters<xhtml:br/># Audit Control directory - /var/audit<xhtml:br/># User attributable event flags - login/logout, old administrative (meta class)<xhtml:br/>#     and CIS Custom class (cc)<xhtml:br/># Non-user attributable (cannot determine user) event flags - login/logout,<xhtml:br/>#     old administrative (meta class), exec<xhtml:br/># Set minimum space percentage to 20% to force an audit warning.<xhtml:br/>  cat &lt;&lt;END_PARAMS &gt;audit_control<xhtml:br/>dir:/var/audit<xhtml:br/>flags:lo,ad,cc<xhtml:br/>naflags:lo,ad,ex<xhtml:br/>minfree:20<xhtml:br/>END_PARAMS<xhtml:br/># Set up Audit to monitor root for login/logout and old administrative (meta cla<xhtml:br/>ss). Do not audit invalid class (e.g. obsolete) events.<xhtml:br/>  echo root:lo,ad:no &gt;audit_user<xhtml:br/>
                     <xhtml:br/># Force /usr/sbin to be prepeneded to any naked auditconfig commands<xhtml:br/>
                     <xhtml:br/>  awk '/^auditconfig/ { $1 = "/usr/sbin/auditconfig" }; \<xhtml:br/> { print }' audit_startup &gt;audit_startup.new<xhtml:br/>
                     <xhtml:br/># Set the audit policy to log exec argv and environment parameters to<xhtml:br/># the audit file<xhtml:br/>  echo '/usr/sbin/auditconfig -setpolicy +argv,arge' \<xhtml:br/>  &gt;&gt;audit_startup.new<xhtml:br/>  mv audit_startup.new audit_startup<xhtml:br/>
                     <xhtml:br/># Verify and set the appropriate permissions/owner/group to the event, control<xhtml:br/># and startup file<xhtml:br/>
                     <xhtml:br/>  pkgchk -f -n -p /etc/security/audit_event<xhtml:br/>  pkgchk -f -n -p /etc/security/audit_control<xhtml:br/>  pkgchk -f -n -p /etc/security/audit_startup<xhtml:br/>
                     <xhtml:br/># Add the command to have cron close the current audit file at the start of<xhtml:br/># each day.<xhtml:br/>  EDITOR=ed crontab -e root &lt;&lt; END_CRON<xhtml:br/>\$a<xhtml:br/>0 * * * * /usr/sbin/audit -n<xhtml:br/>.<xhtml:br/>w<xhtml:br/>q<xhtml:br/>END_CRON<xhtml:br/>fi<xhtml:br/>
                     <xhtml:br/># Set the owner/group/permissions to /var/audit<xhtml:br/>chown root:root /var/audit/*<xhtml:br/>chmod go-rwx /var/audit/* </xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure getcond configured">
                     <ecl:command>auditconfig -getcond</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="auditing"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure auditconfig getpolicy is configured">
                     <ecl:command>auditconfig -getpolicy</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="arge,argv,cnt"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure auditconfig getpolicy is configured">
                     <ecl:command>ls -l /var/audit/*.not_terminated.*</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value=".*"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
   </xccdf:Group>
   <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_5_FileDirectory_PermissionsAccess">
      <xccdf:title xml:lang="en">File/Directory Permissions/Access</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>File and directory permission control is one of the greatest challenges of secure system administration. This section provides guidance on how to secure system files and directories and set secure defaults for users.  Guidance for monitoring user and system files on an on-going basis is provided in Section 9 System Maintenance.</xhtml:p>
      </xccdf:description>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.1_Set_daemon_umask" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Set daemon umask</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The <xhtml:span class="inline_block">umask </xhtml:span>(1) utility overrides the file mode creation mask as specified by the CMASK value in the <xhtml:span class="inline_block">/etc/default/init </xhtml:span>file. The most permissive file permission is mode 666 ( 777 for executable files). The CMASK value subtracts from this value. For example, if CMASK is set to a value of 022, files created will have a default permission of 644 (755 for executables). See the <xhtml:span class="inline_block">umask </xhtml:span>(1) manual page for a more detailed description.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>Note:</xhtml:strong> There are some known bugs in the following daemons that are impacted by changing the <xhtml:span class="inline_block">CMASK </xhtml:span>parameter from its default setting: (Note: Current or future patches may have resolved these issues. Consult with your Oracle Support representative)</xhtml:p>
            <xhtml:p>6299083 picld i initialise picld_door file with wrong permissions after JASS</xhtml:p>
            <xhtml:p>4791006 ldap_cachemgr initialise i ldap_cache_door file with wrong permissions</xhtml:p>
            <xhtml:p>6299080 nscd i initialise name_service_door file with wrong permissions after JASS</xhtml:p>
            <xhtml:p>The <xhtml:span class="inline_block">ldap_cachemgr </xhtml:span>issue has been fixed but the others are still unresolved.  While not directly related to this, there is another issue related to <xhtml:span class="inline_block">077 umask </xhtml:span>settings:</xhtml:p>
            <xhtml:p>2125481 in.lpd failed to print files when the umask is set 077</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Set the system default file creation mask (<xhtml:span class="inline_block">umask</xhtml:span>) to at least <xhtml:span class="inline_block">022 </xhtml:span>to prevent daemon processes from creating world-writable files by default.  The NSA and DISA recommend a more restrictive <xhtml:span class="inline_block">umask </xhtml:span>values of  <xhtml:span class="inline_block">077 </xhtml:span>(Note: The execute bit only applies to executable files). This may cause problems for certain applications- consult vendor documentation for further information.  The default setting for Solaris is <xhtml:span class="inline_block">022</xhtml:span>.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:   </xhtml:p>
                  <xhtml:code class="code_block"># cd /etc/default<xhtml:br/># awk '/^CMASK=/ { $1 = "CMASK=022" }<xhtml:br/>               { print }' init &gt;init.new<xhtml:br/># mv init.new init<xhtml:br/># pkgchk -f -n -p /etc/default/init </xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:file-content check="at least one" comment="Ensure Daemon Umask is configured">
                  <ecl:path>/etc/default/init</ecl:path>
                  <ecl:line-selection op="pm" value="^CMASK=[0-7][2367][2367]"/>
               </ecl:file-content>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.2_Restrict_Set-UID_on_User_Mounted_Devices" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Restrict Set-UID on User Mounted Devices</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>If the volume manager (<xhtml:span class="inline_block">vold</xhtml:span>) is enabled to permit users to mount external devices, the administrator can force these file systems to be mounted with the <xhtml:span class="inline_block">nosuid </xhtml:span>option to prevent users from bringing set-UID programs onto the system via CD-ROMs, floppy disks, USB drives or other removable media. </xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies only to the global zone</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Removable media is one vector by which malicious software can be introduced onto the system. The risk can be mitigated by forcing use of the <xhtml:span class="inline_block">nosuid </xhtml:span>option. Note that this setting is included in the default <xhtml:span class="inline_block">rmmount.conf </xhtml:span>file for Solaris 8 and later.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="code_block"># if [ ! "`grep -v "^#" /etc/rmmount.conf |\<xhtml:br/>    grep -- '-o nosuid'`" ]; then<xhtml:br/>    fs=`awk '($1 == "ident") &amp;&amp; ($2 != "pcfs") \<xhtml:br/>
                     <xhtml:br/>        { print $2 }' /etc/rmmount.conf`<xhtml:br/>
                     <xhtml:br/>    echo mount \* $fs -o nosuid &gt;&gt;/etc/rmmount.conf<xhtml:br/>fi</xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="at least one" comment="Ensure Set-UID on User Mounted Devices is restricted">
                  <ecl:command>grep -v "^#" /etc/rmmount.conf | grep -- "-o nosuid" /etc/rmmount.conf</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".*"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_5.3_Set_Sticky_Bit_on_World_Writable_Directories" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Set Sticky Bit on World Writable Directories</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>When the so-called sticky bit (set with <xhtml:span class="inline_block">chmod +t</xhtml:span>) is set on a directory, then only the owner of a file may remove that file from the directory (as opposed to the usual behavior where anybody with write access to that directory may remove the file). </xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Setting the sticky bit prevents users from overwriting each others files, whether accidentally or maliciously, and is generally appropriate for most world-writable directories (e.g. /tmp).  However, consult appropriate vendor documentation before blindly applying the sticky bit to any world writable directories found in order to avoid breaking any application dependencies on a given directory.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>To set the sticky bit on a directory, run the following command:</xhtml:p>
                  <xhtml:code class="code_block"># chmod +t [directory name] </xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
   </xccdf:Group>
   <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_6_System_Access_Authentication_and_Authorization">
      <xccdf:title xml:lang="en">System Access, Authentication, and Authorization</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>Access control is a huge security issue that relies on an organization's policies and procedures to manage. The actions described in this section are just a few measures that can be taken on a system level to control access to services. It is strongly advised that organizations have a process in place to authorize access privileges and to revoke authorizations when they are no longer required.</xhtml:p>
      </xccdf:description>
      <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_6.1_Configure_SSH">
         <xccdf:title xml:lang="en">Configure SSH</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>SSH is a secure, encrypted replacement for common login services such as <xhtml:span class="inline_block">telnet</xhtml:span>, <xhtml:span class="inline_block">ftp</xhtml:span>, <xhtml:span class="inline_block">rlogin</xhtml:span>, <xhtml:span class="inline_block">rsh</xhtml:span>, and <xhtml:span class="inline_block">rcp</xhtml:span>. </xhtml:p>
         </xccdf:description>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.1.1_Configure_SSH" role="unscored" selected="false" weight="0.0">
            <xccdf:title xml:lang="en">Configure SSH</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>SSH is a secure, encrypted replacement for common login services such as <xhtml:span class="inline_block">telnet</xhtml:span>, <xhtml:span class="inline_block">ftp</xhtml:span>, <xhtml:span class="inline_block">rlogin</xhtml:span>, <xhtml:span class="inline_block">rsh</xhtml:span>, and <xhtml:span class="inline_block">rcp</xhtml:span>. </xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>It is strongly recommended that sites abandon older clear-text login protocols and use SSH to prevent session hijacking and sniffing of sensitive data off the network. Most of these settings are the default in Solaris 10 with the following exceptions:</xhtml:p>
               <xhtml:p style="margin-left: 30px;">
                  <xhtml:span class="inline_block">MaxAuthTries </xhtml:span>(default is 6)<xhtml:br/>
                  <xhtml:span class="inline_block">MaxAuthTriesLog </xhtml:span>(default is 3)<xhtml:br/>
                  <xhtml:span class="inline_block">Banner </xhtml:span>(commented out)<xhtml:br/>
                  <xhtml:span class="inline_block">X11Forwarding </xhtml:span>(default is "yes")</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>The individual SSH settings are described in the following subsections. For convenience, they are all consolidated in the following script. Edit this script based on your site's particular needs.</xhtml:p>
                     <xhtml:code class="code_block">#!/sbin/sh<xhtml:br/>echo "Host *" &gt;&gt; /etc/ssh/sshd_config <xhtml:br/>/usr/bin/awk '/^Protocol/                { $2 = "2" };   \<xhtml:br/>     /^X11Forwarding/           { $2 = "no" }; \<xhtml:br/>     /^MaxAuthTries/            { $2 = "3" };   \<xhtml:br/>     /^MaxAuthTriesLog/         { $2 = "0" };   \<xhtml:br/>     /^IgnoreRhosts/            { $2 = "yes" }; \<xhtml:br/>     /^RhostsAuthentication/    { $2 = "no" };  \<xhtml:br/>     /^RhostsRSAAuthentication/ { $2 = "no" };  \<xhtml:br/>     /^PermitRootLogin/         { $2 = "no" };  \<xhtml:br/>     /^PermitEmptyPasswords/    { $2 = "no" };  \<xhtml:br/>     /^#Banner/                 { $1 = "Banner" } \<xhtml:br/>     { print }' /etc/ssh/sshd_config &gt; /etc/ssh/sshd_config.new<xhtml:br/># /usr/bin/mv /etc/ssh/sshd_config.new /etc/ssh/sshd_config<xhtml:br/># /usr/sbin/pkgchk -f -n -p /etc/ssh/sshd_config<xhtml:br/># /usr/sbin/svcadm restart svc:/network/ssh </xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.1.2_Set_SSH_Protocol_to_2" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Set SSH Protocol to 2</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>SSH supports two different and incompatible protocols: SSH1 and SSH2. SSH1 was the original protocol and was subject to security issues. SSH2 is more advanced and secure.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>Note:</xhtml:strong> If you will be editing all the SSH parameters, use the script in section 6.1 Configure SSH.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>Secure Shell version 2 (SSH2) is more secure than the legacy SSH1 version, which is being deprecated.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>Edit the <xhtml:span class="inline_block">/etc/ssh/sshd_config </xhtml:span>file to set the parameter as follows:</xhtml:p>
                     <xhtml:code class="code_block"># awk '/^Protocol/                { $2 = "2" }   \<xhtml:br/>
                        <xhtml:br/>     { print }' /etc/ssh/sshd_config &gt; /etc/ssh/sshd_config.new<xhtml:br/># /usr/bin/mv /etc/ssh/sshd_config.new /etc/ssh/sshd_config<xhtml:br/># /usr/sbin/pkgchk -f -n -p /etc/ssh/sshd_config<xhtml:br/># /usr/sbin/svcadm restart svc:/network/ssh </xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content><!--
                                                           
                                    1. Read contents of /etc/ssh/sshd_config
                                    2. Find first line (SSHD respects first occurrence only) that starts with 0 or more spaces (uncommented) 
                                    3.    and is followed by Protocol  
                                    3.    and is followed by a value that is equals 2
                                    4. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    --><ecl:shell-command check="all" comment="Ensure sshd Protocol is set to 2">
                     <ecl:command>grep '^[ ]*Protocol[ ]' /etc/ssh/sshd_config | head -1</ecl:command>
                     <ecl:line-selection op="pm" value="\s*\S+\s+(.+?)\s*(#.*)?$">
                        <ecl:regex-group dt="xs:integer" group="1" op="eq" value="2"/>
                     </ecl:line-selection>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.1.3_Disable_SSH_X11Forwarding" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Disable SSH X11Forwarding</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">X11Forwarding </xhtml:span>parameter provides the ability to tunnel X11 traffic through the connection to enable remote graphic connections.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>Note:</xhtml:strong> If you will be editing all the SSH parameters, use the script in section 6.1 Configure SSH.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>Disable X11 forwarding unless there is an operational requirement to use X11 applications directly. There is a small risk that the remote X11 servers of users who are logged in via SSH with X11 forwarding could be compromised by other users on the X11 server. Note that even if X11 forwarding is disabled that users can may be able to install their own forwarders.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>Edit the <xhtml:span class="inline_block">/etc/ssh/sshd_config </xhtml:span>file to set the parameter as follows:</xhtml:p>
                     <xhtml:code class="code_block"># awk '/^ X11Forwarding /                { $2 = "no" }   \<xhtml:br/>     { print }' /etc/ssh/sshd_config &gt; /etc/ssh/sshd_config.new<xhtml:br/># /usr/bin/mv /etc/ssh/sshd_config.new /etc/ssh/sshd_config<xhtml:br/># /usr/sbin/pkgchk -f -n -p /etc/ssh/sshd_config<xhtml:br/># /usr/sbin/svcadm restart svc:/network/ssh </xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content><!--
                                                           
                                    1. Read contents of /etc/ssh/sshd_config
                                    2. Find first line (SSHD respects first occurrence only) that starts with 0 or more spaces (uncommented) 
                                    3.    and is followed by X11Forwarding  
                                    3.    and is followed by a value that is equals no
                                    4. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    --><ecl:shell-command check="all" comment="Ensure sshd X11Forwarding set to no">
                     <ecl:command>grep '^[ ]*X11Forwarding[ ]' /etc/ssh/sshd_config | head -1</ecl:command>
                     <ecl:line-selection op="pm" value="\s*\S+\s+(.+?)\s*(#.*)?$">
                        <ecl:regex-group dt="xs:string" group="1" op="eq" value="no"/>
                     </ecl:line-selection>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.1.4_Set_SSH_MaxAuthTries_to_3" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Set SSH MaxAuthTries to 3</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">MaxAuthTries </xhtml:span>paramener specifies the maximum number of authentication attempts permitted per connection. The default value is 6.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>Note:</xhtml:strong> If you will be editing all the SSH parameters, use the script in section 6.1 Configure SSH.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>Setting the <xhtml:span class="inline_block">MaxAuthTries </xhtml:span>parameter to a low number will minimize the risk of successful brute force attacks to the SSH server.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>Edit the <xhtml:span class="inline_block">/etc/ssh/sshd_config </xhtml:span>file to set the parameter as follows:</xhtml:p>
                     <xhtml:code class="code_block"># awk '/^ MaxAuthTries/                { $2 = "3" }   \<xhtml:br/>
                        <xhtml:br/>     { print }' /etc/ssh/sshd_config &gt; /etc/ssh/sshd_config.new<xhtml:br/># /usr/bin/mv /etc/ssh/sshd_config.new /etc/ssh/sshd_config<xhtml:br/># /usr/sbin/pkgchk -f -n -p /etc/ssh/sshd_config<xhtml:br/># /usr/sbin/svcadm restart svc:/network/ssh </xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content><!--
                                                           
                                    1. Read contents of /etc/ssh/sshd_config
                                    2. Find first line (SSHD respects first occurrence only) that starts with 0 or more spaces (uncommented) 
                                    3.    and is followed by MaxAuthTries  
                                    3.    and is followed by a value that is less than or equal 3
                                    4. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    --><ecl:shell-command check="all" comment="Ensure sshd MaxAuthTries set to 3 or less">
                     <ecl:command>grep '^[ ]*MaxAuthTries[ ]' /etc/ssh/sshd_config | head -1</ecl:command>
                     <ecl:line-selection op="pm" value="\s*\S+\s+(.+?)\s*(#.*)?$">
                        <ecl:regex-group dt="xs:integer" group="1" op="le" value="3"/>
                     </ecl:line-selection>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.1.5_Set_SSH_MaxAuthTriesLog_to_0" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Set SSH MaxAuthTriesLog to 0</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">MaxAuthTriesLog </xhtml:span>parameter specifies the maximum number of failed authorization attempts before a syslog error message is generated.  The default value is 3.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>Note:</xhtml:strong> If you will be editing all the SSH parameters, use the script in section 6.1 Configure SSH.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>Setting this parameter to 0 ensures that every failed authorization is logged.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>Edit the <xhtml:span class="inline_block">/etc/ssh/sshd_config </xhtml:span>file to set the parameter as follows:   </xhtml:p>
                     <xhtml:code class="code_block"># awk '/^ MaxAuthTriesLog/                { $2 = "0" }   \<xhtml:br/>
                        <xhtml:br/>     { print }' /etc/ssh/sshd_config &gt; /etc/ssh/sshd_config.new<xhtml:br/># /usr/bin/mv /etc/ssh/sshd_config.new /etc/ssh/sshd_config<xhtml:br/># /usr/sbin/pkgchk -f -n -p /etc/ssh/sshd_config<xhtml:br/># /usr/sbin/svcadm restart svc:/network/ssh </xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content><!--
                                                           
                                    1. Read contents of /etc/ssh/sshd_config
                                    2. Find first line (SSHD respects first occurrence only) that starts with 0 or more spaces (uncommented) 
                                    3.    and is followed by MaxAuthTriesLog  
                                    3.    and is followed by a value that is equals 0
                                    4. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    --><ecl:shell-command check="all" comment="Ensure sshd MaxAuthTriesLog is set to 0">
                     <ecl:command>grep '^[ ]*MaxAuthTriesLog[ ]' /etc/ssh/sshd_config | head -1</ecl:command>
                     <ecl:line-selection op="pm" value="\s*\S+\s+(.+?)\s*(#.*)?$">
                        <ecl:regex-group dt="xs:integer" group="1" op="eq" value="0"/>
                     </ecl:line-selection>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.1.6_Set_SSH_IgnoreRhosts_to_yes" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Set SSH IgnoreRhosts to yes</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">IgnoreRhosts </xhtml:span>parameter specifies that .rhosts and .shosts files will not be used in <xhtml:span class="inline_block">RhostsRSAAuthentication </xhtml:span>or <xhtml:span class="inline_block">HostbasedAuthentication</xhtml:span>.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>Note:</xhtml:strong> If you will be editing all the SSH parameters, use the script in section 6.1 Configure SSH.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>Setting this parameter forces users to enter a password when authenticating with SSH.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>Edit the <xhtml:span class="inline_block">/etc/ssh/sshd_config </xhtml:span>file to set the parameter as follows:</xhtml:p>
                     <xhtml:code class="code_block"># awk '/^ IgnoreRhosts/                { $2 = "yes" }   \<xhtml:br/>
                        <xhtml:br/>     { print }' /etc/ssh/sshd_config &gt; /etc/ssh/sshd_config.new<xhtml:br/># /usr/bin/mv /etc/ssh/sshd_config.new /etc/ssh/sshd_config<xhtml:br/># /usr/sbin/pkgchk -f -n -p /etc/ssh/sshd_config<xhtml:br/># /usr/sbin/svcadm restart svc:/network/ssh </xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content><!--
                                                           
                                    1. Read contents of /etc/ssh/sshd_config
                                    2. Find first line (SSHD respects first occurrence only) that starts with 0 or more spaces (uncommented) 
                                    3.    and is followed by IgnoreRhosts  
                                    3.    and is followed by a value that is equals yes
                                    4. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    --><ecl:shell-command check="all" comment="Ensure sshd IgnoreRhosts is set to yes">
                     <ecl:command>grep '^[ ]*IgnoreRhosts[ ]' /etc/ssh/sshd_config | head -1</ecl:command>
                     <ecl:line-selection op="pm" value="\s*\S+\s+(.+?)\s*(#.*)?$">
                        <ecl:regex-group dt="xs:string" group="1" op="eq" value="yes"/>
                     </ecl:line-selection>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.1.7_Set_SSH_RhostsAuthentication_to_no" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Set SSH RhostsAuthentication to no</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">RhostsAuthentication </xhtml:span>parameter specifies if authentication   using   rhosts   or <xhtml:span class="inline_block">/etc/hosts.equiv </xhtml:span>is permitted.  The default is no.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>Note:</xhtml:strong> If you will be editing all the SSH parameters, use the script in section 6.1 Configure SSH.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>Rhosts authentication is insecure and should not be permitted.</xhtml:p>
               <xhtml:p>Note that this parameter only applies to SSH protocol version 1.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>Edit the <xhtml:span class="inline_block">/etc/ssh/sshd_config </xhtml:span>file to set the parameter as follows:</xhtml:p>
                     <xhtml:code class="code_block"># awk '/^RhostsAuthentication/                { $2 = "no" }   \<xhtml:br/>
                        <xhtml:br/>     { print }' /etc/ssh/sshd_config &gt; /etc/ssh/sshd_config.new<xhtml:br/># /usr/bin/mv /etc/ssh/sshd_config.new /etc/ssh/sshd_config<xhtml:br/># /usr/sbin/pkgchk -f -n -p /etc/ssh/sshd_config<xhtml:br/># /usr/sbin/svcadm restart svc:/network/ssh </xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content><!--
                                                           
                                    1. Read contents of /etc/ssh/sshd_config
                                    2. Find first line (SSHD respects first occurrence only) that starts with 0 or more spaces (uncommented) 
                                    3.    and is followed by RhostsAuthentication  
                                    3.    and is followed by a value that is equals no
                                    4. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    --><ecl:shell-command check="all" comment="Ensure SSH RhostsAuthentication set to no">
                     <ecl:command>grep '^[ ]*RhostsAuthentication[ ]' /etc/ssh/sshd_config | head -1</ecl:command>
                     <ecl:line-selection op="pm" value="\s*\S+\s+(.+?)\s*(#.*)?$">
                        <ecl:regex-group dt="xs:string" group="1" op="eq" value="no"/>
                     </ecl:line-selection>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.1.8_Set_SSH_RhostsRSAAuthentication_to_no" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Set SSH RhostsRSAAuthentication to no</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">RhostsRSAAuthentication </xhtml:span>parameter specifies if rhosts or <xhtml:span class="inline_block">/etc/hosts.equiv </xhtml:span>authentication together with successful RSA host authentication is permitted. The default is no.</xhtml:p>
               <xhtml:p>Note that this parameter only applies to SSH protocol version 1.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>Note:</xhtml:strong> If you will be editing all the SSH parameters, use the script in section 6.1 Configure SSH.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>Rhosts authentication is insecure and should not be permitted, even with RSA host authentication.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>Edit the <xhtml:span class="inline_block">/etc/ssh/sshd_config </xhtml:span>file to set the parameter as follows:</xhtml:p>
                     <xhtml:code class="code_block"># awk '/^ RhostsRSAAuthentication/                { $2 = "no" }   \<xhtml:br/>    
                        <xhtml:br/>     { print }' /etc/ssh/sshd_config &gt; /etc/ssh/sshd_config.new<xhtml:br/># /usr/bin/mv /etc/ssh/sshd_config.new /etc/ssh/sshd_config<xhtml:br/># /usr/sbin/pkgchk -f -n -p /etc/ssh/sshd_config<xhtml:br/># /usr/sbin/svcadm restart svc:/network/ssh </xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content><!--
                                                           
                                    1. Read contents of /etc/ssh/sshd_config
                                    2. Find first line (SSHD respects first occurrence only) that starts with 0 or more spaces (uncommented) 
                                    3.    and is followed by RhostsRSAAuthentication  
                                    3.    and is followed by a value that is equals no
                                    4. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    --><ecl:shell-command check="all" comment="Ensure sshd RhostsRSAAuthentication is set to no">
                     <ecl:command>grep '^[ ]*RhostsRSAAuthentication[ ]' /etc/ssh/sshd_config | head -1</ecl:command>
                     <ecl:line-selection op="pm" value="\s*\S+\s+(.+?)\s*(#.*)?$">
                        <ecl:regex-group dt="xs:string" group="1" op="eq" value="no"/>
                     </ecl:line-selection>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.1.9_Disable_SSH_root_login" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Disable SSH root login</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">PermitRootLogin </xhtml:span>parameter specifies if the root  user can log in using <xhtml:span class="inline_block">ssh</xhtml:span>(1). The default is no.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>Note:</xhtml:strong> If you will be editing all the SSH parameters, use the script in section 6.1 Configure SSH.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>The root user must be restricted from directly logging in from any location other than the console.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>Edit the <xhtml:span class="inline_block">/etc/ssh/sshd_config </xhtml:span>file to set the parameter as follows:   </xhtml:p>
                     <xhtml:code class="code_block"># awk '/^PermitRootLogin/                { $2 = "no" }   \<xhtml:br/>
                        <xhtml:br/>     { print }' /etc/ssh/sshd_config &gt; /etc/ssh/sshd_config.new<xhtml:br/># /usr/bin/mv /etc/ssh/sshd_config.new /etc/ssh/sshd_config<xhtml:br/># /usr/sbin/pkgchk -f -n -p /etc/ssh/sshd_config<xhtml:br/># /usr/sbin/svcadm restart svc:/network/ssh </xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content><!--
                                                           
                                    1. Read contents of /etc/ssh/sshd_config
                                    2. Find first line (SSHD respects first occurrence only) that starts with 0 or more spaces (uncommented) 
                                    3.    and is followed by PermitRootLogin  
                                    3.    and is followed by a value that is equals no
                                    4. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    --><ecl:shell-command check="all" comment="Ensure sshd PermitRootLogin set to no">
                     <ecl:command>grep '^[ ]*PermitRootLogin[ ]' /etc/ssh/sshd_config | head -1</ecl:command>
                     <ecl:line-selection op="pm" value="\s*\S+\s+(.+?)\s*(#.*)?$">
                        <ecl:regex-group dt="xs:string" group="1" op="eq" value="no"/>
                     </ecl:line-selection>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.1.10_Set_SSH_PermitEmptyPasswords_to_no" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Set SSH PermitEmptyPasswords to no</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">PermitEmptyPasswords </xhtml:span>parameter specifies if the  server allows login to accounts with empty password strings.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>Note:</xhtml:strong> If you will be editing all the SSH parameters, use the script in section 6.1 Configure SSH.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>All users must be required to have a password.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>Edit the <xhtml:span class="inline_block">/etc/ssh/sshd_config </xhtml:span>file to set the parameter as follows:</xhtml:p>
                     <xhtml:code class="code_block"># awk '/^PermitEmptyPasswords/                { $2 = "no" }   \<xhtml:br/>
                        <xhtml:br/>     { print }' /etc/ssh/sshd_config &gt; /etc/ssh/sshd_config.new<xhtml:br/># /usr/bin/mv /etc/ssh/sshd_config.new /etc/ssh/sshd_config<xhtml:br/># /usr/sbin/pkgchk -f -n -p /etc/ssh/sshd_config<xhtml:br/># /usr/sbin/svcadm restart svc:/network/ssh </xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content><!--
                                                           
                                    1. Read contents of /etc/ssh/sshd_config
                                    2. Find first line (SSHD respects first occurrence only) that starts with 0 or more spaces (uncommented) 
                                    3.    and is followed by PermitEmptyPasswords  
                                    3.    and is followed by a value that is equals no
                                    4. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    --><ecl:shell-command check="all" comment="Ensure sshd PermitEmptyPasswords is set to no">
                     <ecl:command>grep '^[ ]*PermitEmptyPasswords[ ]' /etc/ssh/sshd_config | head -1</ecl:command>
                     <ecl:line-selection op="pm" value="\s*\S+\s+(.+?)\s*(#.*)?$">
                        <ecl:regex-group dt="xs:string" group="1" op="eq" value="no"/>
                     </ecl:line-selection>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:Rule>
         <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.1.11_Set_SSH_Banner" role="full" selected="false" weight="1.0">
            <xccdf:title xml:lang="en">Set SSH Banner</xccdf:title>
            <xccdf:description xml:lang="en">
               <xhtml:p>The <xhtml:span class="inline_block">Banner </xhtml:span>parameter specifies a file whose contents must sent to the remote user before authentication is permitted. By default, no banner is displayed.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>Note:</xhtml:strong> If you will be editing all the SSH parameters, use the script in section 6.1 Configure SSH.</xhtml:p>
               <xhtml:p>
                  <xhtml:strong>
                     <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
                  </xhtml:strong>
               </xhtml:p>
            </xccdf:description>
            <xccdf:rationale xml:lang="en">
               <xhtml:p>Banners are used to warn connecting users of the particular site's policy regarding connection. Consult with your legal department for the appropriate warning banner for your site.</xhtml:p>
            </xccdf:rationale>
            <xccdf:fixtext xml:lang="en">
               <xhtml:div>
                  <xhtml:p>
                     <xhtml:p>Edit the <xhtml:span class="inline_block">/etc/ssh/sshd_config </xhtml:span>file to set the parameter as follows:</xhtml:p>
                     <xhtml:code class="code_block"># awk '/^#Banner/                { $1 = "Banner" }   \<xhtml:br/>
                        <xhtml:br/>     { print }' /etc/ssh/sshd_config &gt; /etc/ssh/sshd_config.new<xhtml:br/># /usr/bin/mv /etc/ssh/sshd_config.new /etc/ssh/sshd_config<xhtml:br/># /usr/sbin/pkgchk -f -n -p /etc/ssh/sshd_config<xhtml:br/># /usr/sbin/svcadm restart svc:/network/ssh </xhtml:code>
                     <xhtml:p> </xhtml:p>
                  </xhtml:p>
               </xhtml:div>
            </xccdf:fixtext>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content><!--
                                                           
                                    1. Read contents of /etc/ssh/sshd_config
                                    2. Find first line (SSHD respects first occurrence only) that starts with 0 or more spaces (uncommented) 
                                    3.    and is followed by Banner  
                                    3.    and is followed by a value that is pattern match .+
                                    4. If no such lines are found, fail.
                                    
                                    Note: Evidence in out_raw                        
                                        
                                    --><ecl:shell-command check="all" comment="Ensure sshd Banner set">
                     <ecl:command>grep '^[ ]*Banner[ ]' /etc/ssh/sshd_config | head -1</ecl:command>
                     <ecl:line-selection op="pm" value="\s*\S+\s+(.+?)\s*(#.*)?$">
                        <ecl:regex-group dt="xs:string" group="1" op="pm" value=".+"/>
                     </ecl:line-selection>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:Rule>
      </xccdf:Group>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.2_Disable_login_Prompts_on_Serial_Ports" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Disable login: Prompts on Serial Ports</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The <xhtml:span class="inline_block">pmadm </xhtml:span>command provides service administration for the lower level of the  Service Access Facility hierarchy and can be used to disable the ability to login on a particular port.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies only to the global zone</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>By disabling the <xhtml:span class="inline_block">login:</xhtml:span> prompt on the system serial devices, unauthorized users are limited in their ability to gain access by attaching modems, terminals, and other remote access devices to these ports.  Note that this action may safely be performed even if console access to the system is provided via the serial ports, because the <xhtml:span class="inline_block">login:</xhtml:span> prompt on the console device is provided through a different mechanism.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="code_block"># pmadm -d -p zsmon -s ttya<xhtml:br/># pmadm -d -p zsmon -s ttyb </xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure Prompts on Serial Port ttya is disabled">
                     <ecl:command>pmadm -L | awk -F: '($4 == "ux") { print $3 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="ttya"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure Prompts on Serial Port ttyb is disabled">
                     <ecl:command>pmadm -L | awk -F: '($4 == "ux") { print $3 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="ttyb"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.3_Disable_nobody_Access_for_RPC_Encryption_Key_Storage_Service" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Disable "nobody" Access for RPC Encryption Key Storage Service</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The <xhtml:span class="inline_block">keyserv </xhtml:span>process, if enabled, stores user keys that are utilized with Sun's Secure RPC mechanism. </xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>The action listed prevents keyserv from using default keys for the nobody user, effectively stopping this user from accessing information via Secure RPC.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="code_block"># cd /etc/default<xhtml:br/># awk '/ENABLE_NOBODY_KEYS=/ \<xhtml:br/>        { $1 = "ENABLE_NOBODY_KEYS=NO" }<xhtml:br/>        { print }' keyserv &gt;keyserv.new<xhtml:br/># mv keyserv.new keyserv<xhtml:br/># pkgchk -f -n -p /etc/default/keyserv </xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:file-content check="at least one" comment="Ensure ENABLE_NOBODY_KEYS=NO in /etc/default/keyserv">
                  <ecl:path>/etc/default/keyserv</ecl:path>
                  <ecl:line-selection op="pm" value="^ENABLE_NOBODY_KEYS=NO"/>
               </ecl:file-content>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.4_Disable_.rhosts_Support_in_etcpam.conf" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Disable .rhosts Support in /etc/pam.conf</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Used in conjunction with the BSD-style "r-commands" (<xhtml:span class="inline_block">rlogin</xhtml:span>, <xhtml:span class="inline_block">rsh</xhtml:span>, <xhtml:span class="inline_block">rcp</xhtml:span>), .<xhtml:span class="inline_block">rhosts </xhtml:span>files implement a weak form of authentication based on the network address or host name of the remote computer (which can be spoofed by a potential attacker to exploit the local system). </xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Disabling .rhosts support helps prevent users from subverting the system's normal access control mechanisms.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="code_block"># cd /etc<xhtml:br/># sed -e 's/^.*pam_rhosts_auth/#&amp;/' &lt; /etc/pam.conf &gt; pam.conf.new<xhtml:br/># mv pam.conf.new pam.conf<xhtml:br/># pkgchk -f -n -p /etc/pam.conf</xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure rhosts support in /etc/pam.conf disabled">
                     <ecl:command>grep "^#" /etc/pam.conf | grep  "pam_rhosts_auth"|grep rlogin</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="pam_rhosts_auth.so.1$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure rhosts support in /etc/pam.conf disabled">
                     <ecl:command>grep "^#" /etc/pam.conf | grep  "pam_rhosts_auth"|grep rsh</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="pam_rhosts_auth.so.1$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.5_Restrict_FTP_Use" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Restrict FTP Use</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>If FTP is permitted to be used on the system, the file <xhtml:span class="inline_block">/etc/ftpd/ftpusers </xhtml:span>is used to specify a list of users who are not allowed to access the system via FTP. </xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>FTP is an old and insecure protocol that transfers files and credentials in clear text and is better replaced by using <xhtml:span class="inline_block">sftp </xhtml:span>instead. However, if it is permitted for use in your environment, it is important to ensure that the default "system" accounts are not permitted to transfer files via FTP, especially the <xhtml:span class="inline_block">root </xhtml:span>account.  Consider also adding the names of other privileged or shared accounts that may exist on your system such as user oracle and the account which your Web server process runs under.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Add the system accounts to the /etc/ftpd/ftpusers file as shown below:</xhtml:p>
                  <xhtml:code class="code_block"># cd /etc/ftpd<xhtml:br/># for user in adm bin daemon gdm listen lp noaccess \<xhtml:br/>    nobody nobody4 nuucp postgres root smmsp svctag \<xhtml:br/>    sys uucp webservd<xhtml:br/>do<xhtml:br/>    echo $user &gt;&gt; ftpusers<xhtml:br/>done<xhtml:br/># sort -u ftpusers &gt; ftpusers.new<xhtml:br/># mv ftpusers.new ftpusers<xhtml:br/># pkgchk -f -n -p /etc/ftpd/ftpusers </xhtml:code>
                  <xhtml:p>If your site policy states that users have to be authorized to use FTP, consider placing all your users in the <xhtml:span class="inline_block">/etc/ftpusers </xhtml:span>file and then explicitly removing those who are permitted to use the service. For example:</xhtml:p>
                  <xhtml:code class="code_block"># getent passwd | cut -f1 -d":" &gt; /etc/ftpd/ftpusers   </xhtml:code>
                  <xhtml:p>This prohibits any user on the system from using <xhtml:span class="inline_block">ftp </xhtml:span>unless they are explicitly removed from the file. Note that this file will need to be updated as users are added to or removed from the system.</xhtml:p>
                  <xhtml:p>Note that the above script adds users from the local password file.  If a naming service such as LDAP is being used, modify the <xhtml:span class="inline_block">/etc/ftpd/ftpusers </xhtml:span>file to include those users (listed in the naming service) who are prohibited from using FTP.</xhtml:p>
                  <xhtml:p>More granular security settings can be specified through use of the <xhtml:span class="inline_block">ftpservers</xhtml:span>(4), <xhtml:span class="inline_block">ftpaccess</xhtml:span>(4), <xhtml:span class="inline_block">ftpgroups</xhtml:span>(4), <xhtml:span class="inline_block">ftphosts</xhtml:span>(4) and <xhtml:span class="inline_block">ftpconversions</xhtml:span>(4) files in the <xhtml:span class="inline_block">/etc/ftpd </xhtml:span>directory. For more details on these files, please refer to the respective manual pages.</xhtml:p>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure FTP use restricted">
                  <ecl:command>for user in `awk -F: '{ print $1 }' /etc/passwd`; do grep -w "${user}" /etc/ftpd/ftpusers &gt;/dev/null 2&gt;&amp;1; if [ $? != 0 ]; then echo "User ${user} not in /etc/ftpd/ftpusers."; fi; done</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.6_Set_Delay_between_Failed_Login_Attempts_to_4" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Set Delay between Failed Login Attempts to 4</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The <xhtml:span class="inline_block">SLEEPTIME </xhtml:span>variable in the <xhtml:span class="inline_block">/etc/default/login </xhtml:span>file controls the number of seconds to wait before printing the "login incorrect" message when a bad password is provided.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Delaying the "login incorrect" message can help to slow down brute force password-cracking attacks.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="code_block"># cd /etc/default<xhtml:br/># awk '/SLEEPTIME=/ { $1 = "SLEEPTIME=4" }<xhtml:br/>     { print }' login &gt;login.new<xhtml:br/># mv login.new login<xhtml:br/># pkgchk -f -n -p /etc/default/login </xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:file-content check="at least one" comment="Ensure delay between failed login attempts is configured">
                  <ecl:path>/etc/default/login</ecl:path>
                  <ecl:line-selection op="pm" value="^SLEEPTIME=4"/>
               </ecl:file-content>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.7_Set_Default_Screen_Lock_for_CDE_Users" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Set Default Screen Lock for CDE Users</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The default timeout for keyboard/mouse inactivity is 30 minutes before a password-protected screen saver is invoked by the CDE session manager. </xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Many organizations prefer to set the default timeout value to 10 minutes, though this setting can still be overridden by individual users in their own environment.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Run the following commands to set the default inactivity timeout to a value appropriate for your environment.</xhtml:p>
                  <xhtml:code class="code_block"># for file in /usr/dt/config/*/sys.resources; do<xhtml:br/>
                     <xhtml:br/>    dir=`dirname $file | sed s/usr/etc/`<xhtml:br/>
                     <xhtml:br/>    mkdir -m 755 -p $dir<xhtml:br/>
                     <xhtml:br/>    echo 'dtsession*saverTimeout: 10' &gt;&gt;$dir/sys.resources<xhtml:br/>
                     <xhtml:br/>    echo 'dtsession*lockTimeout: 10' &gt;&gt;$dir/sys.resources<xhtml:br/>
                     <xhtml:br/>    chown root:sys $dir/sys.resources<xhtml:br/>
                     <xhtml:br/>    chmod 444 $dir/sys.resources<xhtml:br/>done </xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="none exist" comment="Ensure saverTimeout configured correctly">
                     <ecl:command>for file in /usr/dt/config/*/sys.resources; do dir=`dirname $file | sed s/usr/etc/`; egrep "dtsession\*saverTimeout:" $dir/sys.resources; done </ecl:command>
                     <ecl:line-selection dt="xs:string" op="pn" value="dtsession\*saverTimeout:\s+10\s*$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="none exist" comment="Ensure saverTimeout configured correctly">
                     <ecl:command>for file in /usr/dt/config/*/sys.resources; do dir=`dirname $file | sed s/usr/etc/`; egrep "dtsession\*lockTimeout:" $dir/sys.resources; done </ecl:command>
                     <ecl:line-selection dt="xs:string" op="pn" value="sys.resources:dtsession\*lockTimeout:\s+10\s*$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.8_Set_Default_Screen_Lock_for_GNOME_Users" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Set Default Screen Lock for GNOME Users</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The default timeout is 30 minutes of keyboard and mouse inactivity before a password-protected screen saver is invoked by the <xhtml:span class="inline_block">Xscreensaver </xhtml:span>application used in the GNOME windowing environment.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>Note:</xhtml:strong> Presently, the file <xhtml:span class="inline_block">/usr/openwin/lib/app-defaults/XScreenSaver </xhtml:span>is not marked volatile, so the <xhtml:span class="inline_block">pkgchk</xhtml:span> command produces an error for this item. The following bug has been filed in relation to this:</xhtml:p>
            <xhtml:p>6255740 XScreenSaver global property file should be marked as volatile</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Many organizations prefer to set the default timeout value to 10 minutes, though this setting can still be overridden by individual users in their own environment.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="code_block"># cd /usr/openwin/lib/app-defaults<xhtml:br/># awk '/^\*timeout:/     { $2 = "0:10:00" }<xhtml:br/>     /^\*lockTimeout:/ { $2 = "0:00:00" }<xhtml:br/>     /^\*lock:/        { $2 = "True" }<xhtml:br/>     { print }' XScreenSaver &gt;XScreenSaver.new<xhtml:br/>
                     <xhtml:br/># mv XScreenSaver.new XScreenSaver<xhtml:br/># pkgchk -f -n -p /usr/openwin/lib/app-defaults/XScreenSaver </xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:file-content check="at least one" comment="Ensure XScreensaver Timeout Configured">
                     <ecl:path>/usr/openwin/lib/app-defaults/XScreenSaver</ecl:path>
                     <ecl:line-selection op="pm" value="^\*timeout:\s+0:10:00"/>
                  </ecl:file-content>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:file-content check="at least one" comment="Ensure XScreensaver Lock Timeout Configured">
                     <ecl:path>/usr/openwin/lib/app-defaults/XScreenSaver</ecl:path>
                     <ecl:line-selection op="pm" value="^\*lockTimeout:\s+0:00:00"/>
                  </ecl:file-content>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:file-content check="at least one" comment="Ensure XScreensaver Lock Configured">
                     <ecl:path>/usr/openwin/lib/app-defaults/XScreenSaver</ecl:path>
                     <ecl:line-selection op="pm" value="^\*lock:\s+True"/>
                  </ecl:file-content>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.9_Restrict_atcron_to_Authorized_Users" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Restrict at/cron to Authorized Users</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The <xhtml:span class="inline_block">cron.allow </xhtml:span>and <xhtml:span class="inline_block">at.allow </xhtml:span>files are a list of users who are allowed to run the <xhtml:span class="inline_block">crontab </xhtml:span>and <xhtml:span class="inline_block">at</xhtml:span> commands to submit jobs to be run at scheduled intervals. </xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>On many systems, only the system administrator needs the ability to schedule jobs.</xhtml:p>
            <xhtml:p>Note that even though a given user is not listed in <xhtml:span class="inline_block">cron.allow</xhtml:span>, <xhtml:span class="inline_block">cron </xhtml:span>jobs can still be run as that user.  The <xhtml:span class="inline_block">cron.allow </xhtml:span>file only controls administrative access to the <xhtml:span class="inline_block">crontab </xhtml:span>command for scheduling and modifying <xhtml:span class="inline_block">cron </xhtml:span>jobs.  Much more effective access controls for the <xhtml:span class="inline_block">cron </xhtml:span>system can be obtained by using Role-Based Access Controls (RBAC).</xhtml:p>
            <xhtml:p>Note that if System Accounting is enabled in Item 4.8 Enable System Accounting, add the user <xhtml:span class="inline_block">sys </xhtml:span>to the <xhtml:span class="inline_block">cron.allow </xhtml:span>file in addition to the <xhtml:span class="inline_block">root </xhtml:span>account.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="code_block"># cd /etc/cron.d<xhtml:br/># mv cron.deny cron.deny.cis<xhtml:br/># mv at.deny at.deny.cis<xhtml:br/># echo root &gt; cron.allow<xhtml:br/># cp /dev/null at.allow<xhtml:br/># chown root:root cron.allow at.allow<xhtml:br/># chmod 400 cron.allow at.allow </xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="none exist" comment="Ensure /etc/cron.d/cron.deny does not exist">
                     <ecl:command>ls /etc/cron.d/cron.deny</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="none exist" comment="Ensure /etc/cron.d/at.deny does not exist">
                     <ecl:command>ls /etc/cron.d/at.deny</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:file-content check="at least one" comment="Ensure /etc/cron.d/cron.allow includes root">
                     <ecl:path>/etc/cron.d/cron.allow</ecl:path>
                     <ecl:line-selection op="pm" value="root"/>
                  </ecl:file-content>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="none exist" comment="Ensure /etc/cron.d/at.allow is empty">
                     <ecl:command>cat /etc/cron.d/at.allow</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value=".*"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.10_Restrict_root_Login_to_System_Console" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Restrict root Login to System Console</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Privileged access to the system via the <xhtml:span class="inline_block">root </xhtml:span>account must be accountable to a particular user. The system console is supposed to be protected from unauthorized access and is the only location where it is considered acceptable to permit the <xhtml:span class="inline_block">root </xhtml:span>account to login directly, in the case of system emergencies. This is the default configuration for Solaris. </xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Use an authorized mechanism such as RBAC, the <xhtml:span class="inline_block">su </xhtml:span>command or the freely available <xhtml:span class="inline_block">sudo </xhtml:span>package to provide administrative access through unprivileged accounts. These mechanisms provide at least some limited audit trail in the event of problems.</xhtml:p>
            <xhtml:p>Note that in addition to the configuration steps included here, there may be other login services (such as SSH in Item 6.3 Configure SSH) that require additional configuration to prevent <xhtml:span class="inline_block">root </xhtml:span>logins via these services.</xhtml:p>
            <xhtml:p>A more secure practice is to make <xhtml:span class="inline_block">root </xhtml:span>a "role" instead of a user account. Role Based Access Control (RBAC) is similar in function to <xhtml:span class="inline_block">sudo</xhtml:span>, but provides better logging ability and additional authentication requirements. With <xhtml:span class="inline_block">root </xhtml:span>defined as a role, administrators would have to login under their account and provide <xhtml:span class="inline_block">root </xhtml:span>credentials to invoke privileged commands. This restriction also includes logging in to the console, except for single user mode.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="code_block"># cd /etc/default<xhtml:br/># awk '/CONSOLE=/ { print "CONSOLE=/dev/console"; next }; \<xhtml:br/>                { print }' login &gt;login.new<xhtml:br/># mv login.new login<xhtml:br/># pkgchk -f -n -p /etc/default/login</xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:file-content check="at least one" comment="Ensure root login is restricted to system console">
                  <ecl:path>/etc/default/login</ecl:path>
                  <ecl:line-selection op="pm" value="^CONSOLE=/dev/console"/>
               </ecl:file-content>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.11_Set_Retry_Limit_for_Account_Lockout" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Set Retry Limit for Account Lockout</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The <xhtml:span class="inline_block">RETRIES </xhtml:span>parameter is the number of failed login attempts a user is allowed before being disconnected from the system and forced to reconnect. When <xhtml:span class="inline_block">LOCK_AFTER_RETRIES </xhtml:span>is set in <xhtml:span class="inline_block">/etc/security/policy.conf</xhtml:span>, then the user's account is locked after this many failed retries (the account can only be unlocked by the administrator using the command:<xhtml:span class="inline_block">passwd -u <xhtml:em>&lt;username&gt;</xhtml:em>
               </xhtml:span>
            </xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span class="inline_block">
                     <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
                  </xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Setting these values helps discourage brute force password guessing attacks.  The action specified here sets the lockout limit at 3, which complies with NSA and DISA recommendations. This may be too restrictive for some operations with large user populations.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="code_block"># cd /etc/default<xhtml:br/># awk '/RETRIES=/ { $1 = "RETRIES=3" }<xhtml:br/>     { print }' login &gt;login.new<xhtml:br/># mv login.new login<xhtml:br/># pkgchk -f -n -p /etc/default/login<xhtml:br/>
                     <xhtml:br/># cd /etc/security<xhtml:br/># awk '/LOCK_AFTER_RETRIES=/ \<xhtml:br/>        { $1 = "LOCK_AFTER_RETRIES=YES" }<xhtml:br/>     { print }' policy.conf &gt;policy.conf.new<xhtml:br/># mv policy.conf.new policy.conf<xhtml:br/># pkgchk -f -n -p /etc/security/policy.conf </xhtml:code>
                  <xhtml:p>Be careful when enabling these settings as they can create a denial-of-service situation for legitimate users and applications.  Account lockout can be disabled for specific users via the usermod command.  For example, the following command disables account lock specifically for the oracle account:</xhtml:p>
                  <xhtml:code class="code_block"># usermod -K lock_after_retries=no oracle </xhtml:code>
                  <xhtml:p>By default the root account is exempt from account lockout.</xhtml:p>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:file-content check="at least one" comment="Ensure Retry Limit for Account Lockout is configured">
                     <ecl:path>/etc/default/login</ecl:path>
                     <ecl:line-selection op="pm" value="^RETRIES=3"/>
                  </ecl:file-content>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:file-content check="at least one" comment="Ensure Retry Limit for Account Lockout is configured">
                     <ecl:path>/etc/security/policy.conf</ecl:path>
                     <ecl:line-selection op="pm" value="^LOCK_AFTER_RETRIES=YES"/>
                  </ecl:file-content>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.12_Set_EEPROM_Security_Mode_and_Log_Failed_Access" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Set EEPROM Security Mode and Log Failed Access</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Oracle SPARC systems support the use of a EEPROM password for the console.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies only to the global zone</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Setting the <xhtml:span class="inline_block">EEPROM </xhtml:span>password helps prevent attackers with physical access to the system console from booting off some external device (such as a CD-ROM or floppy) and subverting the security of the system.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Create a script and store it in a local directory (e.g. <xhtml:span class="inline_block">/opt/local/bin</xhtml:span>). In this example, <xhtml:span class="inline_block">/opt/local/bin </xhtml:span>will be used as the storage directory for the script. The script will be called <xhtml:span class="inline_block">eeprom_badlogin.ksh</xhtml:span>:</xhtml:p>
                  <xhtml:code class="code_block"># /bin/ed /opt/local/bin/eeprom_badlogin.ksh<xhtml:br/>a<xhtml:br/>#!/bin/ksh<xhtml:br/>badCount=`eeprom security-#badlogins |\<xhtml:br/>    awk -F= '{ print $2 }'`<xhtml:br/>if [ -z "${badCount}" ]; then<xhtml:br/>   exit 0<xhtml:br/>elif [ ${badCount} != 0 ]; then<xhtml:br/>    logger -p auth.notice "EEPROM Security Bad Logins is ${badCount}." <xhtml:br/>fi<xhtml:br/>.<xhtml:br/>w<xhtml:br/>q<xhtml:br/># chmod +x /opt/local/bin/eeprom_badlogin.ksh<xhtml:br/># /opt/local/bin/eeprom_badlogin.ksh<xhtml:br/># eeprom security-#badlogins=0<xhtml:br/># if [ ! "`crontab -l | grep eeprom_badlogin`" ]; then<xhtml:br/>    cd /var/spool/cron/crontabs<xhtml:br/>    crontab -l &gt; root.tmp<xhtml:br/>    echo "0 0,8,16 * * * /opt/local/bin/eeprom_badlogin.ksh" &gt;&gt; root.tmp<xhtml:br/>    crontab root.tmp<xhtml:br/>    rm -f root.tmp<xhtml:br/>fi<xhtml:br/># eeprom security-mode=command </xhtml:code>
                  <xhtml:p>After entering the last command above, the administrator will be prompted for a password.  This password will be required to authorize any future command issued at boot-level on the system (the <xhtml:span class="inline_block">ok </xhtml:span>or <xhtml:span class="inline_block">&gt;</xhtml:span> prompt) <xhtml:em>except</xhtml:em> for the normal multi-user <xhtml:span class="inline_block">boot </xhtml:span>command (i.e., the system will be able to reboot unattended). </xhtml:p>
                  <xhtml:p>Write down the password and store it in a sealed envelope in a secure location (note that locked desk drawers are typically <xhtml:em>not</xhtml:em> secure).  If the password is lost or forgotten, simply run the command:</xhtml:p>
                  <xhtml:code class="code_block"># eeprom security-mode=none </xhtml:code>
                  <xhtml:p>This will erase the forgotten password.  To set a new password, run the command:</xhtml:p>
                  <xhtml:code class="code_block"># eeprom security-mode=command</xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_6.13_Secure_the_GRUB_Menu" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Secure the GRUB Menu</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>GRUB is a boot loader for x86/x64 based systems that permits loading an OS image from any location. Oracle x86 systems support the use of a GRUB Menu password for the console.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies only to the global zone</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>The flexibility that GRUB provides creates a security risk if its configuration is modified by an unauthorized user. The failsafe menu entry needs to be secured in the same environments that require securing the systems firmware to avoid unauthorized removable media boots. Setting the GRUB Menu password helps prevent attackers with physical access to the system console from booting off some external device (such as a CD-ROM or floppy) and subverting the security of the system.</xhtml:p>
            <xhtml:p>The actions described in this section will ensure you cannot get to failsafe or any of the GRUB command line options without first entering the password. Note that you can still boot into the default OS selection without a password.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="code_block"># /boot/grub/bin/grub<xhtml:br/>grub&gt; md5crypt<xhtml:br/>
                     <xhtml:br/>Password: [enter desired boot loader password]<xhtml:br/>Encrypted: [enter md5 password string]<xhtml:br/>grub&gt; [enter control-C (^C)]</xhtml:code>
                  <xhtml:p>The actual <xhtml:span class="inline_block">menu.lst </xhtml:span>file to be used varies depending upon whether ZFS or UFS is used as the root file system.  If a ZFS filesystem is being used, then edit the file <xhtml:span class="inline_block">/rpool/boot/grub/menu.lst</xhtml:span>. Otherwise edit the file <xhtml:span class="inline_block">/boot/grub/menu.lst</xhtml:span>.  Add the following line to the <xhtml:span class="inline_block">menu.lst </xhtml:span>file above the entries added by bootadm:</xhtml:p>
                  <xhtml:code class="code_block"># password -md5 [enter md5 password string generated above] </xhtml:code>
                  <xhtml:p>Next, add the keyword lock to the Solaris failsafe boot entry as in the following example:</xhtml:p>
                  <xhtml:code class="code_block">title Solaris failsafe<xhtml:br/>lock </xhtml:code>
                  <xhtml:p>Last, ensure the menu.lst file can only be read by the root user:</xhtml:p>
                  <xhtml:code class="code_block">(UFS)  # chmod 600 /boot/grub/menu.lst<xhtml:br/>(ZFS)  # chmod 600 /rpool/boot/grub/menu.lst </xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
   </xccdf:Group>
   <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_7_User_Accounts_and_Environment">
      <xccdf:title xml:lang="en">User Accounts and Environment</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>This section provides guidance on setting up secure defaults for system and user accounts and their environment. Guidance for monitoring these settings and others that may change over time is provided in Section 9 System Maintenance.</xhtml:p>
      </xccdf:description>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.1_Disable_System_Accounts" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Disable System Accounts</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>There are a number of accounts provided with the Solaris OS that are used to manage applications and are not intended to provide an interactive shell.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span>Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>It is important to make sure that accounts that are not being used by regular users are locked to prevent them from logging in or running an interactive shell.  By default, Solaris sets the password field for these accounts to an invalid string, but it is also recommended that the shell field in the password file be set to "false." This prevents the account from potentially being used to run any commands.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Accounts that have been locked are prohibited from running commands on the system.  Such accounts are not able to login to the system nor are they able to use scheduled execution facilities such as <xhtml:span class="inline_block">cron</xhtml:span>.  To lock an account, use the command:</xhtml:p>
                  <xhtml:code class="code_block"># passwd -l [username] </xhtml:code>
                  <xhtml:p>An example</xhtml:p>
                  <xhtml:code class="code_block"># /usr/bin/passwd -l daemon<xhtml:br/># for user in bin nuucp smmsp listen gdm webservd nobody noaccess nobody4 svctag; do<xhtml:br/>    /usr/bin/getent passwd $user &gt; /dev/null 2&gt;&amp;1<xhtml:br/>    if [ $? -eq 0 ]<xhtml:br/>    then<xhtml:br/>        /usr/bin/passwd -l $user<xhtml:br/>        /usr/sbin/passmgmt -m -s /usr/bin/false $user<xhtml:br/>    fi<xhtml:br/>done<xhtml:br/>
                     <xhtml:br/># passwd -N sys<xhtml:br/># for user in postgresadm lp uucp; do<xhtml:br/>    /usr/bin/getent passwd $user &gt; /dev/null 2&gt;&amp;1<xhtml:br/>    if [ $? -eq 0 ]<xhtml:br/>    then<xhtml:br/>        /usr/bin/passwd -N $user<xhtml:br/>        /usr/sbin/passmgmt -m -s /usr/bin/false $user<xhtml:br/>    fi<xhtml:br/>done</xhtml:code>
                  <xhtml:p> </xhtml:p>
                  <xhtml:code>
                     <xhtml:br/>Some Solaris 10 machines don't honor the passwd switches. This script can be used<xhtml:br/>for the last set of changes:<xhtml:br/>#!/bin/bash<xhtml:br/>date=`date +%y%m%d`<xhtml:br/>
                     <xhtml:br/>if [ ! -f /etc/shadow.$date ] ; then<xhtml:br/>  cp /etc/shadow /etc/shadow.$date<xhtml:br/>fi<xhtml:br/>
                     <xhtml:br/>awk '/sys/ { $1= "sys:*LK*NP:::::::" } \<xhtml:br/>  /adm/ { $1= "adm:*LK*NP:::::::" } \<xhtml:br/>  /lp/ { $1= "lp:*LK*NP:::::::" } \<xhtml:br/>  /uucp/ { $1= "uucp:*LK*NP:::::::" } \<xhtml:br/>  /postgres/ { $1= "postgres:*LK*NP:::::::" } \<xhtml:br/>  { print }' /etc/shadow &gt;/etc/shadow.new<xhtml:br/>mv /etc/shadow.new /etc/shadow<xhtml:br/>chmod 400 /etc/shadow</xhtml:code>
                  <xhtml:p> </xhtml:p>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure system accounts are locked or non-login">
                  <ecl:command>for user in daemon bin nuucp smmsp listen gdm webservd nobody noaccess nobody4 svctag sys adm lp uucp postgres; do /usr/bin/getent passwd $user &gt; /dev/null 2&gt;/dev/null; if [ $? -eq 0 ]; then stat=`passwd -s ${user} | awk '{ print $2 }'`; if [ "${stat}" != "LK" ] &amp;&amp; [ "${stat}" != "NL" ]; then echo "Account ${user} is not locked or non-login."; fi; fi; done</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.2_Set_Password_Expiration_Parameters_on_Active_Accounts" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Set Password Expiration Parameters on Active Accounts</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Many organizations require users to change passwords on a regular basis.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>Note:</xhtml:strong> Since <xhtml:span class="inline_block">/etc/default/passwd </xhtml:span>sets defaults in terms of number of weeks (even though the actual values on user accounts are kept in terms of days), it is probably best to choose interval values that are multiples of 7.</xhtml:p>
            <xhtml:p>Actions for this item do not work on accounts stored on network directories such as LDAP.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>The commands for this item set all active accounts (except the <xhtml:span class="inline_block">root </xhtml:span>account) to force password changes every 91 days (13 weeks), and then prevent password changes for seven days (one week) thereafter.  Users will begin receiving warnings 28 days (4 weeks) before their password expires.  Sites also have the option of expiring idle accounts after a certain number of days (see the on-line manual page for the <xhtml:span class="inline_block">usermod </xhtml:span>command, particularly the <xhtml:span class="inline_block">-f</xhtml:span> option).</xhtml:p>
            <xhtml:p>These are recommended starting values, but sites may choose to make them more restrictive depending on local policies. </xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="code_block"># logins -ox |\<xhtml:br/>    awk -F: '($1 == "root" || $8 == "LK" || $8 == "NL") { next } ; \<xhtml:br/>        { $cmd = "passwd" } ;\<xhtml:br/>        ($11 &lt;= 0 || $11 &gt; 91)    { $cmd = $cmd " -x 91" } \<xhtml:br/>        ($10 &lt; 7)        { $cmd = $cmd " -n 7" } \<xhtml:br/>        ($12 &lt; 28)            { $cmd = $cmd " -w 28" } \<xhtml:br/>        ($cmd != "passwd")        { print $cmd " " $1 }' \<xhtml:br/>        &gt; /etc/CISupd_accounts<xhtml:br/># /sbin/sh /etc/CISupd_accounts<xhtml:br/># rm -f /etc/CISupd_accounts<xhtml:br/># cd /etc/default<xhtml:br/># /usr/bin/grep -v WEEKS passwd &gt; passwd.new<xhtml:br/># cat &lt;&lt;EODefaults &gt;&gt; passwd.new<xhtml:br/>MAXWEEKS=13<xhtml:br/>MINWEEKS=1<xhtml:br/>WARNWEEKS=4<xhtml:br/>EODefaults<xhtml:br/># /usr/bin/mv passwd.new passwd<xhtml:br/># /usr/sbin/pkgchk -f -n -p /etc/default/passwd </xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="none exist" comment="Ensure Password Expiration Parameters on Active Accounts are configured">
                     <ecl:command>/usr/bin/logins -ox | awk -F: '( $1 != "root" &amp;&amp; $8 != "LK" &amp;&amp; $8 != "NL") &amp;&amp; ( $10 != "7" || $11 != "91" || $12 != "28") { print }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure MAXWEEKS set to 13 or less">
                     <ecl:command>/usr/bin/grep "MAXWEEKS=" /etc/default/passwd | awk -F= '($2 &lt;= 13 &amp;&amp; $2 != "") { print $0 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure MINWEEKS set to 1 or more">
                     <ecl:command>/usr/bin/grep "MINWEEKS=" /etc/default/passwd | awk -F= '($2 &gt;= 1 &amp;&amp; $2 != "") { print $0 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure WARNWEEKS set to 4 or more">
                     <ecl:command>/usr/bin/grep "WARNWEEKS=" /etc/default/passwd | awk -F= '($2 &gt;= 4 &amp;&amp; $2 != "") { print $0 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.3_Set_Strong_Password_Creation_Policies" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Set Strong Password Creation Policies</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Password policies are designed to force users to make better password choices when selecting their passwords. </xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Administrators may wish to change some of the parameters in this remediation step (particularly <xhtml:span class="inline_block">PASSLENGTH</xhtml:span> and <xhtml:span class="inline_block">MINDIFF</xhtml:span>) if changing their systems to use MD5, SHA-256, SHA-512 or Blowfish password hashes ("<xhtml:span class="inline_block">man crypt.conf</xhtml:span>" for more information).  Similarly, administrators may wish to add site-specific dictionaries to the <xhtml:span class="inline_block">DICTIONLIST </xhtml:span>parameter.</xhtml:p>
            <xhtml:p>Sites often have differing opinions on the optimal value of the <xhtml:span class="inline_block">HISTORY </xhtml:span>parameter (how many previous passwords to remember per user in order to prevent re-use).  The values specified here are in compliance with DISA requirements. If this is too restrictive for your site, you may wish to set a HISTORY value of 4 and a MAXREPEATS of 2. Consult your local security policy for guidance. </xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="code_block"># cd /etc/default<xhtml:br/># awk '/PASSLENGTH=/   { $1 = "PASSLENGTH=8" };<xhtml:br/>     /NAMECHECK=/    { $1 = "NAMECHECK=YES" };<xhtml:br/>     /HISTORY=/      { $1 = "HISTORY=10" };<xhtml:br/>     /MINDIFF=/      { $1 = "MINDIFF=3" };<xhtml:br/>     /MINALPHA=/     { $1 = "MINALPHA=2" };<xhtml:br/>     /MINUPPER=/     { $1 = "MINUPPER=1" };<xhtml:br/>     /MINLOWER=/     { $1 = "MINLOWER=1" };<xhtml:br/>     /MINNONALPHA=/  { $1 = "MINNONALPHA=1" };<xhtml:br/>     /MAXREPEATS=/   { $1 = "MAXREPEATS=0" };<xhtml:br/>     /WHITESPACE=/   { $1 = "WHITESPACE=YES" };<xhtml:br/>     /DICTIONDBDIR=/ { $1 = "DICTIONDBDIR=/var/passwd" };<xhtml:br/>     /DICTIONLIST=/ \<xhtml:br/>        { $1 = "DICTIONLIST=/usr/share/lib/dict/words" };<xhtml:br/>     { print }' passwd &gt; passwd.new<xhtml:br/># mv passwd.new passwd<xhtml:br/># pkgchk -f -n -p /etc/default/passwd </xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure PASSLENGTH set to 8 or more">
                     <ecl:command>grep "^PASSLENGTH=" /etc/default/passwd | awk -F= '($2 &gt;= 8 &amp;&amp; $2 != "") { print $0 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:file-content check="at least one" comment="Ensure NAMECHECK set to YES">
                     <ecl:path>/etc/default/passwd</ecl:path>
                     <ecl:line-selection op="pm" value="^NAMECHECK=YES$"/>
                  </ecl:file-content>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure HISTORY set to 10 or more">
                     <ecl:command>grep "^HISTORY=" /etc/default/passwd | awk -F= '($2 &gt;= 10 &amp;&amp; $2 != "") { print $0 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure MINDIFF set to 3 or more">
                     <ecl:command>grep "^MINDIFF=" /etc/default/passwd | awk -F= '($2 &gt;= 3 &amp;&amp; $2 != "") { print $0 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure MINALPHA set to 2 or more">
                     <ecl:command>grep "^MINALPHA=" /etc/default/passwd | awk -F= '($2 &gt;= 2 &amp;&amp; $2 != "") { print $0 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure MINUPPER set to 1 or more">
                     <ecl:command>grep "^MINUPPER=" /etc/default/passwd | awk -F= '($2 &gt;= 1 &amp;&amp; $2 != "") { print $0 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure MINLOWER set to 1 or more">
                     <ecl:command>grep "^MINLOWER=" /etc/default/passwd | awk -F= '($2 &gt;= 1 &amp;&amp; $2 != "") { print $0 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure MINNONALPHA set to 1 or more">
                     <ecl:command>grep "^MINNONALPHA=" /etc/default/passwd | awk -F= '($2 &gt;= 1 &amp;&amp; $2 != "") { print $0 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure MAXREPEATS set to 0">
                     <ecl:command>grep "^MAXREPEATS=0" /etc/default/passwd</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:file-content check="at least one" comment="Ensure WHITESPACE set to YES">
                     <ecl:path>/etc/default/passwd</ecl:path>
                     <ecl:line-selection op="pm" value="^WHITESPACE=YES$"/>
                  </ecl:file-content>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:file-content check="at least one" comment="Ensure DICTIONDBDIR set to /var/passwd">
                     <ecl:path>/etc/default/passwd</ecl:path>
                     <ecl:line-selection op="pm" value="^DICTIONDBDIR=/var/passwd$"/>
                  </ecl:file-content>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:file-content check="at least one" comment="Ensure DICTIONLIST set to /usr/share/lib/dict/words">
                     <ecl:path>/etc/default/passwd</ecl:path>
                     <ecl:line-selection op="pm" value="^DICTIONLIST=/usr/share/lib/dict/words$"/>
                  </ecl:file-content>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.4_Set_Default_Group_for_root_Account" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Set Default Group for root Account</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>For Solaris 9 and earlier, the default group for the <xhtml:span class="inline_block">root </xhtml:span>account  is the "<xhtml:span class="inline_block">other</xhtml:span>" group, which may be shared by many other accounts on the system.  Solaris 10 has adopted GID 0 (group "<xhtml:span class="inline_block">root</xhtml:span>") as default group for the <xhtml:span class="inline_block">root </xhtml:span>account.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>If your system has been upgraded from an earlier version of Solaris, the password file may contain the older group classification for the root user. Using GID 0 for the root account helps prevent root-owned files from accidentally becoming accessible to non-privileged users.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="code_block"># passmgmt -m -g 0 root </xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="at least one" comment="Ensure default group for root set">
                  <ecl:command>grep root /etc/passwd | cut -f4 -d:</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value="^0$"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.5_Change_Home_Directory_for_root_Account" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Change Home Directory for root Account</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>By default, the Solaris OS <xhtml:em>root</xhtml:em> user's home directory is "/".</xhtml:p>
            <xhtml:p>
               <xhtml:strong>Note:</xhtml:strong> If the user logs into GNOME, the directories #x201C;Desktop#x201D; and #x201C;Documents#x201D; will also be created under /. Move these directories into <xhtml:span class="inline_block">/root</xhtml:span>, if they exist.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Changing the home directory for the <xhtml:span class="inline_block">
                  <xhtml:em>root</xhtml:em> 
               </xhtml:span>account provides segregation from the OS distribution and activities performed by the <xhtml:span class="inline_block">root </xhtml:span>user. A further benefit is that the <xhtml:span class="inline_block">
                  <xhtml:em>root</xhtml:em> 
               </xhtml:span>home directory can have more restricted permissions, preventing viewing of the <xhtml:span class="inline_block">
                  <xhtml:em>root</xhtml:em> 
               </xhtml:span>system account files by non-<xhtml:span class="inline_block">
                  <xhtml:em>root</xhtml:em> 
               </xhtml:span>users.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="code_block"># mkdir -m 700 /root<xhtml:br/># mv -i /.?* /root/<xhtml:br/># passmgmt -m -h /root root </xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="at least one" comment="Ensure root home directory set">
                  <ecl:command>grep root /etc/passwd | cut -f6 -d:</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value="^/root$"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.6_Set_Default_umask_for_Users" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Set Default umask for Users</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The default <xhtml:span class="inline_block">umask</xhtml:span>(1) determines the permissions of files created by users. The user creating the file has the discretion of making their files and directories readable by others via the <xhtml:span class="inline_block">chmod</xhtml:span>(1) command.  Users who wish to allow their files and directories to be readable by others by default may choose a different default <xhtml:span class="inline_block">umask </xhtml:span>by inserting the <xhtml:span class="inline_block">umask </xhtml:span>command into the standard shell configuration files (<xhtml:span class="inline_block">.profile</xhtml:span>, <xhtml:span class="inline_block">.cshrc</xhtml:span>, etc.) in their home directories.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Setting a very secure default value for <xhtml:span class="inline_block">umask </xhtml:span>ensures that users make a conscious choice about their file permissions. A default <xhtml:span class="inline_block">umask </xhtml:span>setting of <xhtml:span class="inline_block">077 </xhtml:span>causes files and directories created by users to not be readable by any other user on the system. A <xhtml:span class="inline_block">umask </xhtml:span>of <xhtml:span class="inline_block">027 </xhtml:span>would make files and directories readable by users in the same Unix group, while a <xhtml:span class="inline_block">umask </xhtml:span>of <xhtml:span class="inline_block">022 </xhtml:span>would make files readable by every user on the system.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="code_block"># cd /etc/default<xhtml:br/># awk '/UMASK=/ { $1 = "UMASK=077" }<xhtml:br/>    { print }' login &gt;login.new<xhtml:br/># mv login.new login<xhtml:br/># cd /etc<xhtml:br/># for file in profile .login ; do<xhtml:br/>    if [ "`grep umask $file`" ]; then<xhtml:br/>
                     <xhtml:br/>        awk '$1 == "umask" { $2 = "077" }<xhtml:br/>
                     <xhtml:br/>            { print }' $file &gt; $file.new<xhtml:br/>
                     <xhtml:br/>        mv $file.new $file<xhtml:br/>
                     <xhtml:br/>    else<xhtml:br/>
                     <xhtml:br/>        echo umask 077 &gt;&gt; $file<xhtml:br/>
                     <xhtml:br/>    fi<xhtml:br/>done<xhtml:br/># pkgchk -f -n -p /etc/default/login<xhtml:br/># pkgchk -f -n -p /etc/profile<xhtml:br/># pkgchk -f -n -p /etc/.login </xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:file-content check="at least one" comment="Ensure Default umask for users is configured">
                     <ecl:path>/etc/default/login</ecl:path>
                     <ecl:line-selection op="pm" value="^UMASK=077"/>
                  </ecl:file-content>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:file-content check="at least one" comment="Ensure Default umask for users is configured">
                     <ecl:path>/etc/.login</ecl:path>
                     <ecl:line-selection op="pm" value="^umask 077"/>
                  </ecl:file-content>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:file-content check="at least one" comment="Ensure Default umask for users is configured">
                     <ecl:path>/etc/profile</ecl:path>
                     <ecl:line-selection op="pm" value="^umask 077"/>
                  </ecl:file-content>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.7_Set_Default_umask_for_FTP_Users" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Set Default umask for FTP Users</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>If FTP is permitted, set the <xhtml:span class="inline_block">umask </xhtml:span>value to apply to files created by the FTP server.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Many users assume that files transmitted over FTP inherit their system umask value when they do not. This setting ensures that files transmitted over FTP are protected. See Item 6.5 Restrict FTP Use for a more complete description of FTP and Item 7.6 Set Default umask for Users for a description of <xhtml:span class="inline_block">umask</xhtml:span>.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="code_block"># cd /etc/ftpd<xhtml:br/>
                     <xhtml:br/># if [ "`grep '^defumask' ftpaccess`" ]; then<xhtml:br/>    awk '/^defumask/ { $2 = "077" }<xhtml:br/>
                     <xhtml:br/>        { print }' ftpaccess &gt; ftpaccess.new<xhtml:br/>
                     <xhtml:br/>    mv ftpaccess.new ftpaccess<xhtml:br/>else<xhtml:br/>
                     <xhtml:br/>    echo defumask 077 &gt;&gt;ftpaccess<xhtml:br/>fi<xhtml:br/># pkgchk -f -n -p /etc/ftpd/ftpaccess </xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:file-content check="at least one" comment="Ensure default umask for FTP users is configured">
                  <ecl:path>/etc/ftpd/ftpaccess</ecl:path>
                  <ecl:line-selection op="pm" value="^defumask\s+077"/>
               </ecl:file-content>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.8_Set_mesg_n_as_Default_for_All_Users" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Set "mesg n" as Default for All Users</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The "<xhtml:span class="inline_block">mesg n</xhtml:span>" command blocks attempts to use the <xhtml:span class="inline_block">write </xhtml:span>or <xhtml:span class="inline_block">talk </xhtml:span>commands to contact users at their terminals, but has the side effect of slightly strengthening permissions on the user's tty device. </xhtml:p>
            <xhtml:p>
               <xhtml:strong>Note:</xhtml:strong> Setting <xhtml:span class="inline_block">mesg n </xhtml:span>for all users may cause "mesg: cannot change mode" to be displayed when using <xhtml:span class="inline_block">su - <xhtml:em>&lt;user&gt;</xhtml:em>
               </xhtml:span>.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Since <xhtml:span class="inline_block">write </xhtml:span>and <xhtml:span class="inline_block">talk </xhtml:span>are no longer widely used at most sites, the incremental security increase is worth the loss of functionality.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="code_block"># cd /etc<xhtml:br/># for file in profile .login; do<xhtml:br/>    if [ "`grep mesg $file`" ]; then<xhtml:br/>        awk '$1 == "mesg" { $2 = "n" }<xhtml:br/>            { print }' $file &gt; $file.new<xhtml:br/>        mv $file.new $file<xhtml:br/>    else<xhtml:br/>        echo mesg n &gt;&gt;$file<xhtml:br/>    fi<xhtml:br/>    pkgchk -f -n -p /etc/$file<xhtml:br/>done </xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:file-content check="at least one" comment="Ensure &quot;mesg n&quot; is Default for All Users">
                     <ecl:path>/etc/.login</ecl:path>
                     <ecl:line-selection op="pm" value="^mesg n"/>
                  </ecl:file-content>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:file-content check="at least one" comment="Ensure &quot;mesg n&quot; is Default for All Users">
                     <ecl:path>/etc/profile</ecl:path>
                     <ecl:line-selection op="pm" value="^mesg n"/>
                  </ecl:file-content>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.9_Lock_Inactive_User_Accounts" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Lock Inactive User Accounts</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Guidelines published by the U.S. Department of Defense specify that user accounts must be locked out after 35 days of inactivity. This number may vary based on the particular site's policy.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>Note:</xhtml:strong> To set the default for creating user accounts to expire after 35 days of inactivity, use the command:</xhtml:p>
            <xhtml:code class="code_block"># useradd #x2013;D #x2013;f 35 </xhtml:code>
            <xhtml:p>This will create or modify the file <xhtml:span class="inline_block">/usr/sadm/defadduser </xhtml:span>with an entry <xhtml:span class="inline_block">definact=35 </xhtml:span>(or whatever you set it to for your site#x2019;s policy).</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Inactive accounts pose a threat to system security since the users are not logging in to notice failed login attempts or other anomalies. </xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Create a shell script as follows:</xhtml:p>
                  <xhtml:code class="code_block">#!/bin/sh<xhtml:br/>
                     <xhtml:br/>if [ ! -f /usr/sadm/defadduser ]; then<xhtml:br/>    echo "Default inactivity lockout not set."<xhtml:br/>    echo "Run useradd -D -f 35 to create the file"<xhtml:br/>    exit 1<xhtml:br/>fi<xhtml:br/>
                     <xhtml:br/>x=`grep definact /usr/sadm/defadduser` 2&gt;&amp;1<xhtml:br/>if [ $? -ne 0 ]; then<xhtml:br/>    echo "Default lockout variable not set."<xhtml:br/>    echo "Run useradd -D -f 35 to set the lockout to 35 days"<xhtml:br/>    exit 1<xhtml:br/>fi<xhtml:br/>
                     <xhtml:br/>y=`echo $x | sed -e 's/.*=//'`<xhtml:br/>if [ $y -ne 35 ]; then<xhtml:br/>
                     <xhtml:br/>    echo "Default lock variable set to $y."<xhtml:br/>    echo "Run useradd -D -f 35 to set the lockout to 35 days"<xhtml:br/>fi<xhtml:br/>
                     <xhtml:br/>/bin/cp /etc/shadow /etc/shadow.$$<xhtml:br/>/bin/ed /etc/shadow.$$ &lt;&lt; END<xhtml:br/>1,/nobody4/d<xhtml:br/>w<xhtml:br/>q<xhtml:br/>END<xhtml:br/>
                     <xhtml:br/>/bin/cat /etc/shadow.$$ | while : ; do<xhtml:br/>    x=`line`<xhtml:br/>    if [ "$x" = "" ]; then<xhtml:br/>        break<xhtml:br/>    fi<xhtml:br/>    num=`echo $x | cut -f7 -d":"`<xhtml:br/>    user=`echo $x | cut -f1 -d":"`<xhtml:br/>    if [ "$num" = "" ]; then<xhtml:br/>        echo "User $user lockout not set"<xhtml:br/>    else<xhtml:br/>        if [ $num -ne 35 ]; then<xhtml:br/>            echo "User $user lockout set to $num instead of 35."<xhtml:br/>        fi<xhtml:br/>    fi<xhtml:br/>done<xhtml:br/>/bin/rm /etc/shadow.$$</xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:file-content check="at least one" comment="Ensure Inactive accounts are locked after 35 days">
                  <ecl:path>/usr/sadm/defadduser</ecl:path>
                  <ecl:line-selection op="pm" value="^definact=35"/>
               </ecl:file-content>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_7.10_Ensure_Password_Encryption_Uses_SHA_algorithms" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Ensure Password Encryption Uses SHA algorithms</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Solaris supports several different algorithms for password storage, including unix crypt, SHA256 and SHA512.  The <xhtml:span class="inline_block">CRYPT_DEFAULT</xhtml:span> determines the default encryption algorithm used, while <xhtml:span class="inline_block">CRYPT_ALGORITHMS_ALLOW</xhtml:span> determines algorithms allowed by the system for new passwords.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>By default Solaris uses the old unix crypt algorithm for password storage. Unix crypt is easy to crack with readily available tools.  Using a more advanced algorithm decreases the capability of cracking passwords on the system.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Edit the <xhtml:span class="inline_block">/etc/security/policy.conf</xhtml:span> file and set the <xhtml:span class="inline_block">CRYPT_DEFAULT</xhtml:span> and <xhtml:span class="inline_block">CRYPT_ALGORITHMS_ALLOW</xhtml:span> settings as follows:</xhtml:p>
                  <xhtml:p> </xhtml:p>
                  <xhtml:code class="code_block">CRYPT_DEFAULT=6<xhtml:br/>CRYPT_ALGORITHMS_ALLOW=5,6</xhtml:code>
                  <xhtml:p> </xhtml:p>
                  <xhtml:p>Run the following commands:</xhtml:p>
                  <xhtml:code>chmod 644 policy.conf<xhtml:br/>pkgchk -f -n -p /etc/security/policy.conf</xhtml:code>
                  <xhtml:p class="bold">Impact:</xhtml:p>
                  <xhtml:p>
                     <xhtml:p>Crypt algorithm #6 is The SHA512 algorithm. The password field will be a lot longer in /etc/shadow.<xhtml:br/>Crypt algorithm #5 is The SHA256 algorithm. SHA256 supports 255-character passwords.</xhtml:p>
                  </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:file-content check="at least one" comment="Ensure 'CRYPT_DEFAULT' set to '6' in /etc/security/policy.conf">
                     <ecl:path>/etc/security/policy.conf</ecl:path>
                     <ecl:line-selection op="pm" value="^\s*CRYPT_DEFAULT\s*=\s*6\s*(#.*)?$"/>
                  </ecl:file-content>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:file-content check="at least one" comment="Ensure 'CRYPT_ALGORITHMS_ALLOW' set to '5,6' in /etc/security/policy.conf">
                     <ecl:path>/etc/security/policy.conf</ecl:path>
                     <ecl:line-selection op="pm" value="^\s*CRYPT_ALGORITHMS_ALLOW\s*=\s*5,6\s*(#.*)?$"/>
                  </ecl:file-content>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
   </xccdf:Group>
   <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_8_Warning_Banners">
      <xccdf:title xml:lang="en">Warning Banners</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>Presenting a warning message prior to the normal user login may assist the prosecution of trespassers on the computer system.  Changing some of these login banners also has the side effect of hiding OS version information and other detailed system information from attackers attempting to target specific exploits at a system. </xhtml:p>
         <xhtml:p>Guidelines published by the US Department of Defense require that warning messages include at least the name of the organization that owns the system, the fact that the system is subject to monitoring and that such monitoring is in compliance with local statutes, and that use of the system implies consent to such monitoring.  It is important that the organization's legal counsel review the content of all messages before any system modifications are made, as these warning messages are inherently site-specific.   More information (including citations of relevant case law) can be found at http://www.justice.gov/criminal/cybercrime/</xhtml:p>
         <xhtml:p>
            <xhtml:strong>Important Note:</xhtml:strong> The text provided in the remediation actions for these items is intended as an example only. Please edit to include the specific text for your organization as approved by your legal department.</xhtml:p>
      </xccdf:description>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.1_Create_Warnings_for_Standard_Login_Services" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Create Warnings for Standard Login Services</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The contents of the <xhtml:span class="inline_block">/etc/issue </xhtml:span>file are displayed prior to the login prompt on the system's console and serial devices, and also prior to logins via <xhtml:span class="inline_block">telnet</xhtml:span>.  <xhtml:span class="inline_block">/etc/motd </xhtml:span>is generally displayed after all successful logins, no matter where the user is logging in from, but is thought to be less useful because it only provides notification to the user after the machine has been accessed.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Consult with your organization's legal counsel for the appropriate wording for your specific organization. </xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="code_block"># echo "Authorized uses only. All activity may be \<xhtml:br/>monitored and reported." &gt; /etc/motd<xhtml:br/># echo "Authorized uses only. All activity may be \<xhtml:br/>monitored and reported." &gt; /etc/issue<xhtml:br/># pkgchk -f -n -p /etc/motd<xhtml:br/># chown root:root /etc/issue<xhtml:br/># chmod 644 /etc/issue</xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure /etc/motd exists">
                     <ecl:command>ls /etc/motd</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure /etc/issue exists">
                     <ecl:command>ls /etc/issue</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure /etc/motd is owned by root">
                     <ecl:command>ls -l /etc/motd | awk '{ print $3 ":" $4 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="eq" value="root:root"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="at least one" comment="Ensure /etc/issue is owned by root">
                     <ecl:command>ls -l /etc/issue | awk '{ print $3 ":" $4 }'</ecl:command>
                     <ecl:line-selection dt="xs:string" op="eq" value="root:root"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command comment="Ensure /etc/motd is mode 0644" success="pass">
                     <ecl:command>ls -l /etc/motd | grep '^-rw-r--r--'</ecl:command>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command comment="Ensure /etc/issue is mode 0644" success="pass">
                     <ecl:command>ls -l /etc/issue | grep '^-rw-r--r--'</ecl:command>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.2_Create_Warning_Banner_for_CDE_Users" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Create Warning Banner for CDE Users</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The Common Desktop Environment (CDE) provides a uniform desktop environment for users across diverse Unix platforms.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Consult with your organization's legal counsel for the appropriate wording for your specific organization. </xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="code_block"># for file in /usr/dt/config/*/Xresources ; do<xhtml:br/>    dir=`dirname $file | sed s/usr/etc/`<xhtml:br/>    mkdir -m 755 -p $dir<xhtml:br/>    if [ ! -f $dir/Xresources ]; then<xhtml:br/>        cp $file $dir/Xresources<xhtml:br/>    fi<xhtml:br/>    echo "Dtlogin*greeting.labelString: \<xhtml:br/>Authorized uses only!" \<xhtml:br/>        &gt;&gt; $dir/Xresources<xhtml:br/>
                     <xhtml:br/>    echo "Dtlogin*greeting.persLabelString: \<xhtml:br/>All activity may be monitored and reported." \<xhtml:br/>        &gt;&gt; $dir/Xresources<xhtml:br/>done<xhtml:br/># chown root:sys /etc/dt/config/*/Xresources<xhtml:br/># chmod 644 /etc/dt/config/*/Xresources </xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="at least one" comment="Ensure warning banner for CDE configured, or desktop environment uninstalled">
                  <ecl:command>if ( pkginfo -q SUNWdtdte ); then found1=0; found2=0; for file in /usr/dt/config/*/Xresources; do file2=`dirname $file | sed s/usr/etc/`"/Xresources"; egrep -s "^Dtlogin\*greeting\.labelString:" $file2 &amp;&amp; found1=1; done; for file in /usr/dt/config/*/Xresources; do file2=`dirname $file | sed s/usr/etc/`"/Xresources"; egrep -s "^Dtlogin\*greeting\.persLabelString:" $file2 &amp;&amp; found2=1; done; if ([ $found1 -eq 1 ] &amp;&amp; [ $found2 -eq 1 ]); then echo "System configured correctly"; fi; else echo "Desktop login environment not installed"; fi</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.3_Create_Warning_Banner_for_GNOME_Users" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Create Warning Banner for GNOME Users</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The GNOME Display Manager is used for login session management. See the manual page <xhtml:span class="inline_block">gdm</xhtml:span>(1) for more information.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>The remediation action for this item sets a warning message for GDM users before they log in.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="code_block"># cd /etc/X11/gdm<xhtml:br/># awk '/^#?Greeter=/ \<xhtml:br/>    { print "Greeter=/usr/bin/gdmlogin"; next }<xhtml:br/>    /^#?Welcome=/ \<xhtml:br/>    { print "Welcome=Authorized uses only!\\n" \<xhtml:br/>        "All activity may be monitored " \<xhtml:br/>        "and reported." <xhtml:br/>        next }<xhtml:br/> { print }' gdm.conf &gt; gdm.conf.new<xhtml:br/># mv gdm.conf.new gdm.conf<xhtml:br/># pkgchk -f -n -p /etc/X11/gdm/gdm.conf </xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="at least one" comment="Ensure GDM uninstalled, disabled, or warning banner configured correctly">
                  <ecl:command>svcsOut=`svcs -Ho state svc:/application/gdm2-login 2&gt;&amp;1` ; if [ "$svcsOut" = "svcs: Pattern 'svc:/application/gdm2-login' doesn't match any instances" ]; then echo "GDM not installed"; elif [ "$svcsOut" = "disabled" ]; then echo "GDM disabled"; else grep -s "^Greeter=/usr/bin/gdmlogin" /etc/X11/gdm/gdm.conf &amp;&amp; grep -s "^Welcome=Authorized uses only\!" /etc/X11/gdm/gdm.conf &amp;&amp; echo "GDM warning banner configured"; fi</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.4_Create_Warning_Banner_for_FTP_daemon" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Create Warning Banner for FTP daemon</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The action for this item sets a warning message for FTP users before they log in.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Warning messages inform users who are attempting to access the system of their legal status regarding the system. Consult with your organization's legal counsel for the appropriate wording for your specific organization. </xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="code_block"># echo Authorized uses only.  All activity may \<xhtml:br/>be monitored and reported. &gt; /etc/ftpd/banner.msg<xhtml:br/># chown root:root /etc/ftpd/banner.msg<xhtml:br/># chmod 444 /etc/ftpd/banner.msg </xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="at least one" comment="Ensure warning banner for FTP Daemon exists">
                  <ecl:command>ls /etc/ftpd/banner.msg</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_8.5_Check_Banner_Setting_for_telnet_is_Null" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Check Banner Setting for telnet is Null</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The <xhtml:span class="inline_block">BANNER </xhtml:span>variable in the file <xhtml:span class="inline_block">/etc/default/telnetd </xhtml:span>can be used to display text before the telnet login prompt. Traditionally, it has been used to display the OS level of the target system.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>The warning banner provides information that can be used in reconnaissance for an attack. By default, Oracle distributes this file with the BANNER variable set to null. It is not necessary to create a separate warning banner for telnet if a warning is set in the /etc/issue file.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="code_block"># cd /etc/default<xhtml:br/>awk '/BANNER=/ { $1 = "BANNER=" }; \<xhtml:br/>                { print }' telnetd &gt;telnetd.new<xhtml:br/># mv telnetd.new telnetd<xhtml:br/># pkgchk -f -n -p /etc/default/telnetd </xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command comment="Telnet Server is uninstalled OR Telnet Banner is null OR Telnet Banner is empty" success="pass">
                     <ecl:command>test 0 -eq `pkginfo | grep -c "Telnet Server"` || grep '^BANNER=$' /etc/default/telnetd || grep '^BANNER=\"\"' /etc/default/telnetd</ecl:command>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command comment="Telnet Server is uninstalled OR Telnet Banner is null OR Telnet Banner is empty" success="pass">
                     <ecl:command>test 0 -eq `pkginfo | grep -c "Telnet Server"` || grep '^BANNER=$' /etc/default/telnetd || grep '^BANNER=\"\"' /etc/default/telnetd</ecl:command>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
   </xccdf:Group>
   <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_9_System_Maintenance">
      <xccdf:title xml:lang="en">System Maintenance</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>No matter how securely a system has been installed and hardened, administrator and user activity over time can introduce security exposures. The section describes tasks to be performed on a regular, ongoing basis-perhaps in an automated fashion via the <xhtml:span class="inline_block">cron </xhtml:span>utility.  The automated host-based scanning tools provided from the Center for Internet Security can be used for this purpose.  These scanning tools are typically provided with this document, but are also available for free download from <xhtml:a href="http://www.CISecurity.org/">http://www.CISecurity.org/</xhtml:a>
         </xhtml:p>
         <xhtml:p>Note that, unlike other sections, the items in this section specify an Audit action followed by a Remediation action since it is necessary to determine what the current setting is before determining remediation measures, which will vary depending on the site's policy.</xhtml:p>
      </xccdf:description>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.1_Check_for_Remote_Consoles" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Check for Remote Consoles</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The <xhtml:span class="inline_block">consadm </xhtml:span>command can be used to select or display alternate console devices.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies only to the global zone</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Since the system console has special properties to handle emergency situations, it is important to ensure that the console is in a physically secure location and that unauthorized consoles have not been defined. The "<xhtml:span class="inline_block">consadm -p</xhtml:span>" command displays any alternate consoles that have been defined as auxiliary across reboots. If no remote consoles have been defined, there will be no output from this command.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code># /usr/sbin/consadm [-d device...] </xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure no remote consoles exist">
                  <ecl:command>/usr/sbin/consadm -p</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.2_Verify_System_File_Permissions" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Verify System File Permissions</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The <xhtml:span class="inline_block">pkgchk </xhtml:span>command checks the accuracy of installed files as well as the integrity  of  directory  structures  and files.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>It is important to ensure that system files and directories are maintained with the permissions they were intended to have from the OS vendor (Oracle).</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>To force the default setting, use the <xhtml:span class="inline_block">-f</xhtml:span> option as follows:</xhtml:p>
                  <xhtml:code class="code_block"># pkgchk -f -n -p /etc/shadow</xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.3_Ensure_Password_Fields_are_Not_Empty" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Ensure Password Fields are Not Empty</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>An account with an empty password field means that anybody may log in as that user without providing a password at all (assuming that PASSREQ=NO in /etc/default/login).</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>All accounts must have passwords or be locked.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Use the <xhtml:span class="inline_block">passwd -l </xhtml:span>command to lock accounts that are not permitted to execute commands (shown by <xhtml:span class="inline_block">*LK*</xhtml:span> in the password field). Use the  <xhtml:span class="inline_block">passwd -N </xhtml:span>command for accounts that do not use a password to login but must execute commands (shown by <xhtml:span class="inline_block">NP </xhtml:span>in the password field).</xhtml:p>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure no users have empty passwords">
                  <ecl:command>logins -p</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.4_Verify_No_Legacy__Entries_Exist_in_passwd_shadow_and_group_Files" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Verify No Legacy "+" Entries Exist in passwd, shadow, and group Files</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The character + in various files used to be markers for systems to insert data from NIS maps at a certain point in a system configuration file.  These entries are no longer required on Solaris systems, but may exist in files that have been imported from other platforms.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>These entries may provide an avenue for attackers to gain privileged access on the system.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Delete these entries if they exist.</xhtml:p>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Verify No Legacy &quot;+&quot; Entries Exist in passwd, shadow, and group Files">
                  <ecl:command>grep '^+' /etc/passwd /etc/shadow /etc/group</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.5_Verify_No_UID_0_Accounts_Exist_Other_than_root" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Verify No UID 0 Accounts Exist Other than root</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Any account with UID 0 has superuser privileges on the system.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>This access must be limited to only the default <xhtml:span class="inline_block">root </xhtml:span>account and only from the system console. Administrative access must be through an unprivileged account using an approved mechanism as noted in Item 6.10 Restrict root Login to System Console.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Delete any other entries that are displayed.</xhtml:p>
                  <xhtml:p>Finer granularity access control for administrative access can be obtained by using Oracle's Role-Based Access Control (RBAC) system.</xhtml:p>
                  <xhtml:p>RBAC configurations can be monitored via the <xhtml:span class="inline_block">/etc/user_attr </xhtml:span>file to make sure that privileges are managed appropriately.</xhtml:p>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Verify No UID 0 Accounts Exist Other than root">
                  <ecl:command>logins -o | awk -F: '($1 != "root" &amp;&amp; $2 == 0) { print $1 }'</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.6_Ensure_root_PATH_Integrity" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Ensure root PATH Integrity</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The <xhtml:span class="inline_block">root </xhtml:span>user can execute any command on the system and could be fooled into executing programs unemotionally if the PATH is not set correctly.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Including the current working directory (.) or other writable directory in <xhtml:span class="inline_block">root</xhtml:span>'s executable path makes it likely that an attacker can gain superuser access by forcing an administrator operating as <xhtml:span class="inline_block">root </xhtml:span>to execute a Trojan horse program.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Correct or justify any items discovered in the Audit step.</xhtml:p>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:complex-check operator="AND">
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="none exist" comment="Ensure no empty entries in root's $PATH">
                     <ecl:command>echo $PATH</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="(^|:):"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="none exist" comment="Ensure no empty entries in root's $PATH">
                     <ecl:command>echo $PATH</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value=":$"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
            <xccdf:check system="http://cisecurity.org/check">
               <xccdf:check-content>
                  <ecl:shell-command check="none exist" comment="Ensure no empty entries in root's $PATH">
                     <ecl:command>echo $PATH</ecl:command>
                     <ecl:line-selection dt="xs:string" op="pm" value="(^|:|/)\.+($|:|/)"/>
                  </ecl:shell-command>
               </xccdf:check-content>
            </xccdf:check>
         </xccdf:complex-check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.7_Check_Permissions_on_User_Home_Directories" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Check Permissions on User Home Directories</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>While the system administrator can establish secure permissions for users' home directories, the users can easily override these.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Group or world-writable user home directories may enable malicious users to steal or modify other users' data or to gain another user's system privileges.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Making global modifications to user home directories without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user file permissions and determine the action to be taken in accordance with site policy.</xhtml:p>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure permissions on user home directories are correct">
                  <ecl:command>for dir in `logins -ox | awk -F: '($8 == "PS") { print $6 }'`; do find ${dir} -type d -prune \( -perm -g+w -o  -perm -o+r -o -perm -o+w -o -perm -o+x \) -ls; done</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.8_Check_User_Dot_File_Permissions" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Check User Dot File Permissions</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>While the system administrator can establish secure permissions for users' "dot" files, the users can easily override these.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Group or world-writable user configuration files may enable malicious users to steal or modify other users' data or to gain another user's system privileges. </xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user dot file permissions and determine the action to be taken in accordance with site policy.</xhtml:p>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure permissions on user dot files are correct">
                  <ecl:command>for dir in `logins -ox | awk -F: '($8 == "PS") { print $6 }'`; do find ${dir}/.[A-Za-z0-9]* \! -type l \( -perm -20 -o -perm -02 \) -ls; done</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.9_Check_Permissions_on_User_.netrc_Files" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Check Permissions on User .netrc Files</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>While the system administrator can establish secure permissions for users' <xhtml:span class="inline_block">.netrc</xhtml:span> files, the users can easily override these.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Users' <xhtml:span class="inline_block">.netrc</xhtml:span> files may contain unencrypted passwords that may be used to attack other systems. </xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user <xhtml:span class="inline_block">.netrc</xhtml:span> file permissions and determine the action to be taken in accordance with site policy.</xhtml:p>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure permissions on user .netrc files are correct">
                  <ecl:command>for dir in `logins -ox | awk -F: '($8 == "PS") { print $6 }'`; do find ${dir}/.netrc -type f \( -perm -g+r -o -perm -g+w -o -perm -g+x -o -perm -o+r -o -perm -o+w -o -perm -o+x \) -ls 2&gt;/dev/null; done</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.10_Check_for_Presence_of_User_.rhosts_Files" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Check for Presence of User .rhosts Files</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>While no <xhtml:span class="inline_block">.rhosts</xhtml:span> files are shipped with Solaris, users can easily create them.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>This action is only meaningful if <xhtml:span class="inline_block">.rhosts</xhtml:span> support is permitted in the file <xhtml:span class="inline_block">/etc/pam.conf</xhtml:span>. Even though the <xhtml:span class="inline_block">.rhosts </xhtml:span>files are ineffective if support is disabled in <xhtml:span class="inline_block">/etc/pam.conf</xhtml:span>, they may have been brought over from other systems and could contain information useful to an attacker for those other systems.</xhtml:p>
            <xhtml:p>Please see Item 6.4 Disable <xhtml:span class="inline_block">.rhosts </xhtml:span>support in <xhtml:span class="inline_block">/etc/pam.conf </xhtml:span>for more information.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>It may be useful to run this audit check and, if any users have <xhtml:span class="inline_block">.rhosts </xhtml:span>files, determine why they have them.</xhtml:p>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure no users have .rhosts files">
                  <ecl:command>for dir in `logins -ox |awk -F: '($8 == "PS") { print $6 }'`; do for file in $dir/.rhosts; do if [ ! -h "$file" -a -f "$file" ]; then echo ".rhosts file in $dir"; fi ;done; done</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.11_Check_Groups_in_etcpasswd" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Check Groups in /etc/passwd</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Over time, system administration errors and changes can lead to groups being defined in <xhtml:span class="inline_block">/etc/passwd </xhtml:span>but not in <xhtml:span class="inline_block">/etc/group</xhtml:span>.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Groups defined in the <xhtml:span class="inline_block">/etc/passwd </xhtml:span>file but not in the <xhtml:span class="inline_block">/etc/group </xhtml:span>file pose a threat to system security since group permissions are not properly managed.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Analyze the output of the Audit step above and perform the appropriate action to correct any discrepancies found.</xhtml:p>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure no groups in passwd that are not in group">
                  <ecl:command>for line in `getent passwd | awk -F: '{ printf("%s:%s\n", $1, $4) '}`; do user=`echo $line | awk -F: '{ print $1 '}`; gid=`echo $line | awk -F: '{ print $2 '}`; getent group $gid &gt;/dev/null; if [ $? -eq 2 ]; then echo "Groupid $gid does not exist but is used by $user"; fi; done</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.12_Check_That_Users_Are_Assigned_Home_Directories" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Check That Users Are Assigned Home Directories</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The <xhtml:span class="inline_block">/etc/passwd </xhtml:span>file defines a home directory that the user is placed in upon login. If there is no defined home directory, the user will be placed in "/" and will not be able to write any files or have local environment variables set.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>All users must be assigned a home directory in the <xhtml:span class="inline_block">/etc/passwd </xhtml:span>file.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Based on the results of the Audit script, perform the appropriate action for your environment (e.g. delete unneeded users or assign them a home directory).</xhtml:p>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure all users have defined home directories">
                  <ecl:command>getent passwd | awk -F: '{ print $1" "$6 }' | while read user dir; do found=0; for tUser in root daemon bin sys adm lp uucp nuucp smmsp listen gdm webservd postgres svctag nobody noaccess nobody4 unknown; do if [ "$user" = "$tUser" ]; then found=1; fi; done; if [ $found -eq 0 ]; then if ([ -z "${dir}" ] || [ "$dir" = "/" ]); then echo "User $user has no home directory defined"; fi; fi; done</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.13_Check_That_Defined_Home_Directories_Exist" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Check That Defined Home Directories Exist</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Users can be defined to have a home directory in <xhtml:span class="inline_block">/etc/passwd</xhtml:span>, even if the directory does not actually exist.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>If the user's home directory does not exist, the user will be placed in "<xhtml:span class="inline_block">/</xhtml:span>" and will not be able to write any files or have local environment variables set.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>If any users' home directories do not exist, create them and make sure the respective user owns the directory.</xhtml:p>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure defined home directories exist">
                  <ecl:command>getent passwd | awk -F: '{ print $1" "$6 }' | while read user dir; do found=0; for tUser in root daemon bin sys adm lp uucp nuucp smmsp listen gdm webservd postgres svctag nobody noaccess nobody4 unknown; do if [ "$user" = "$tUser" ]; then found=1; fi; done; if [ $found -eq 0 ]; then if ([ -z "${dir}" ] || [ "$dir" = "/" ]); then echo "User $user has no home directory defined"; elif [ ! -d $dir ]; then echo "User $user home directory not found"; fi; fi; done</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.14_Check_User_Home_Directory_Ownership" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Check User Home Directory Ownership</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The user home directory is space defined for the particular user to set local environment variables and to store personal files.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Since the user is accountable for files stored in the user home directory, the user must be the owner of the directory.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Change the ownership any home directories that are not owned by the defined user to the correct user.</xhtml:p>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure permissions on user home directories are correct">
                  <ecl:command>getent passwd | awk -F: '{ print $1" "$6 }' | while read user dir; do found=0; for tUser in root daemon bin sys adm lp uucp nuucp smmsp listen gdm webservd postgres svctag nobody noaccess nobody4 unknown; do if [ "$user" = "$tUser" ]; then found=1; fi; done; if [ $found -eq 0 ]; then if [ -d $dir ]; then owner=`ls -ld $dir/. | awk '{ print $3 }'`; if [ "$owner" != "$user" ]; then echo "Home directory for $user is owned by $owner"; fi; else echo "$user has no home directory"; fi; fi; done</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.15_Check_for_Duplicate_UIDs" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Check for Duplicate UIDs</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Although the <xhtml:span class="inline_block">useradd </xhtml:span>program will not let you create a duplicate User ID (UID), it is possible for an administrator to manually edit the <xhtml:span class="inline_block">/etc/passwd </xhtml:span>file and change the UID field.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Users must be assigned unique UIDs for accountability and to ensure appropriate access protections.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Based on the results of the script, establish unique UIDs and review all files owned by the shared UID to determine which UID they are supposed to belong to.</xhtml:p>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure no users have duplicate UIDs">
                  <ecl:command>getent passwd | cut -f1,3 -d":" | awk -F: '{ printf("%s %s\n", $1, $2) '} | sort -k2n | uniq | uniq -d -f 1 | awk '{ print "UID " $2 " is used by multiple users." '}</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.16_Check_for_Duplicate_GIDs" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Check for Duplicate GIDs</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Although the <xhtml:span class="inline_block">groupadd </xhtml:span>program will not let you create a duplicate Group ID (GID), it is possible for an administrator to manually edit the <xhtml:span class="inline_block">/etc/group </xhtml:span>file and change the GID field.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>User groups must be assigned unique GIDs for accountability and to ensure appropriate access protections.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Based on the results of the script, establish unique GIDs and review all files owned by the shared GID to determine which group they are supposed to belong to.</xhtml:p>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure no groups have duplicate GIDs">
                  <ecl:command>cat /etc/group | cut -f3 -d":" | sort -n | uniq -c | awk '{ if ($1 != 1) { print "Duplicate GUID found: " $2 } }'</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.17_Check_That_Reserved_UIDs_Are_Assigned_to_System_Accounts" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Check That Reserved UIDs Are Assigned to System Accounts</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Traditionally, Unix systems establish "reserved" UIDs (0-99 range) that are intended for system accounts.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>If a user is assigned a UID that is in the reserved range, even if it is not presently in use, security exposures can arise if a subsequently installed application uses the same UID.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Based on the results of the script, change any UIDs that are in the reserved range to one that is in the user range. Review all files owned by the reserved UID to determine which UID they are supposed to belong to.</xhtml:p>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure reserved UIDS assigned to system accounts">
                  <ecl:command>getent passwd | awk -F: '($3 &lt; 100) { print $1" "$3 }' | while read user uid; do found=0; for tUser in root daemon bin sys adm lp uucp nuucp smmsp listen gdm webservd postgres svctag nobody noaccess nobody4 unknown; do if [ ${user} = ${tUser} ]; then found=1; fi; done; if [ $found -eq 0 ]; then echo "User $user has a reserved UID ($uid)."; fi; done</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.18_Check_for_Duplicate_User_Names" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Check for Duplicate User Names</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Although the <xhtml:span class="inline_block">useradd </xhtml:span>program will not let you create a duplicate user name, it is possible for an administrator to manually edit the <xhtml:span class="inline_block">/etc/passwd </xhtml:span>file and change the user name.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>If a user is assigned a duplicate user name, it will create and have access to files with the first UID for that username in /etc/passwd. For example, if "test4" has a UID of 1000 and a subsequent "test4" entry has a UID of 2000, logging in as "test4" will use UID 1000. Effectively, the UID is shared, which is a security problem.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Based on the results of the script, establish unique user names for the users. File ownerships will automatically reflect the change as long as the users have unique UIDs.</xhtml:p>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure no users have duplicate user names">
                  <ecl:command>getent passwd | cut -f1 -d":" | sort | uniq -d</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.19_Check_for_Duplicate_Group_Names" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Check for Duplicate Group Names</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Although the <xhtml:span class="inline_block">groupadd </xhtml:span>program will not let you create a duplicate group name, it is possible for an administrator to manually edit the <xhtml:span class="inline_block">/etc/group </xhtml:span>file and change the group name.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>If a group is assigned a duplicate group name, it will create and have access to files with the first GID for that group in /etc/groups. Effectively, the GID is shared, which is a security problem.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Based on the results of the script, establish unique names for the user groups. File group ownerships will automatically reflect the change as long as the groups have unique GIDs.</xhtml:p>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure no groups have duplicate group names">
                  <ecl:command>cat /etc/group | cut -f1 -d":" | sort -n | uniq -c | awk '{ if ($1 != 1) { print "Duplicate Group name Found: " $2 } }'</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.20_Check_for_Presence_of_User_.netrc_Files" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Check for Presence of User .netrc Files</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The <xhtml:span class="inline_block">.netrc </xhtml:span>file contains data for logging into a remote host for file transfers via FTP.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>The <xhtml:span class="inline_block">.netrc </xhtml:span>file presents a significant security risk since it stores passwords in unencrypted form.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user <xhtml:span class="inline_block">.netrc </xhtml:span>files and determine the action to be taken in accordance with site policy.</xhtml:p>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure no users have .netrc files">
                  <ecl:command>for dir in `logins -ox |awk -F: '($8 == "PS") { print $6 }'`; do for file in $dir/.netrc; do if [ ! -h "$file" -a -f "$file" ]; then echo ".netrc file $file exists" ;fi; done; done</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.21_Check_for_Presence_of_User_.forward_Files" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Check for Presence of User .forward Files</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The <xhtml:span class="inline_block">.forward </xhtml:span>file specifies an email address to forward the user's mail to.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Use of the <xhtml:span class="inline_block">.forward </xhtml:span>file poses a security risk in that sensitive data may be inadvertently transferred outside the organization. The <xhtml:span class="inline_block">.forward </xhtml:span>file also poses a risk as it can be used to execute commands that may perform unintended actions.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Making global modifications to users' files without alerting the user community can result in unexpected outages and unhappy users. Therefore, it is recommended that a monitoring policy be established to report user <xhtml:span class="inline_block">.forward </xhtml:span>files and determine the action to be taken in accordance with site policy.</xhtml:p>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure no users have .forward files">
                  <ecl:command>for dir in `logins -ox | awk -F: '($8 == "PS") { print $6 }'`; do for file in $dir/.forward; do if [ ! -h "$file" -a -f "$file" ]; then echo ".forward file $file exists"; fi; done; done</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.22_Find_World_Writable_Files" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Find World Writable Files</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Unix-based systems support variable settings to control access to files. World writable files are the least secure. See the <xhtml:span class="inline_block">chmod</xhtml:span>(2) man page for more information.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Data in world-writable files can be modified and compromised by any user on the system.  World writable files may also indicate an incorrectly written script or program that could potentially be the cause of a larger compromise to the system's integrity.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Removing write access for the "other" category (<xhtml:span class="inline_block">chmod o-w <xhtml:em>&lt;filename&gt;</xhtml:em>
                     </xhtml:span>
                     <xhtml:em>)</xhtml:em> is advisable, but always consult relevant vendor documentation to avoid breaking any application dependencies on a given file.</xhtml:p>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.23_Find_SUIDSGID_System_Executables" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Find SUID/SGID System Executables</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The owner of a file can set the file's permissions to run with the owner's or group's permissions, even if the user running the program is not the owner or a member of the group. The most common reason for a SUID/SGID program is to enable users to perform functions (such as changing their password) that require root privileges.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>There are valid reasons for SUID/SGID programs, but it is important to identify and review such programs to ensure they are legitimate.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Ensure that no rogue set-UID programs have been introduced into the system. Digital signatures on Solaris set-UID binaries can be verified with the <xhtml:span class="inline_block">elfsign </xhtml:span>utility:</xhtml:p>
                  <xhtml:code class="code_block"># elfsign verify -e /usr/bin/su </xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.24_Find_Un-owned_Files_and_Directories" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Find Un-owned Files and Directories</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Sometimes when administrators delete users from the password file they neglect to remove all files owned by those users from the system. </xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>A new user who is assigned the deleted user's user ID or group ID may then end up "owning" these files, and thus have more access on the system than was intended. </xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Locate files that are owned by users or groups not listed in the system configuration files, and reset the ownership of these files to some active user on the system as appropriate. Note that the Solaris OS distribution is shipped with all files appropriately owned.</xhtml:p>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure no un-owned files and directories exist">
                  <ecl:command>find / \( -fstype nfs -o -fstype cachefs -o -fstype autofs -o -fstype ctfs -o -fstype mntfs -o -fstype objfs -o -fstype proc \) -prune -o \( -nouser -o -nogroup \) -print</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_9.25_Find_Files_and_Directories_with_Extended_Attributes" role="full" selected="false" weight="1.0">
         <xccdf:title xml:lang="en">Find Files and Directories with Extended Attributes</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Extended attributes are implemented as files in a "shadow" file system that is not generally visible via normal administration commands without special arguments.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Attackers or malicious users could "hide" information, exploits, etc. in extended attribute areas.  Since extended attributes are rarely used, it is important to find files with extended attributes set.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Investigate any files found. Note that Solaris does not ship with files that have extended attributes.</xhtml:p>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
         <xccdf:check system="http://cisecurity.org/check">
            <xccdf:check-content>
               <ecl:shell-command check="none exist" comment="Ensure no files and directories have extended attributes">
                  <ecl:command>find / \( -fstype nfs -o -fstype cachefs -o -fstype autofs -o -fstype ctfs -o -fstype mntfs -o -fstype objfs -o -fstype proc \) -prune -o -xattr -print</ecl:command>
                  <ecl:line-selection dt="xs:string" op="pm" value=".+"/>
               </ecl:shell-command>
            </xccdf:check-content>
         </xccdf:check>
      </xccdf:Rule>
   </xccdf:Group>
   <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_10_Appendix_Additional_Security_Notes">
      <xccdf:title xml:lang="en">Appendix: Additional Security Notes</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>The items in this section are security configuration settings that have been suggested by several other resources and system hardening tools.  However, compared to the other settings in this document, the settings presented here provide relatively little incremental security benefit.  Nevertheless, none of these settings should have a significant impact on the functionality of the system, and some sites may feel that the slight security enhancement of these settings outweighs the (sometimes minimal) administrative cost of performing them. </xhtml:p>
         <xhtml:p>None of these settings will be checked by the automated scoring tool provided with the benchmark document.  They are purely optional and may be applied or not at the discretion of local site administrators.</xhtml:p>
      </xccdf:description>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_10.1_Enable_process_accounting_at_boot_time" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Enable process accounting at boot time</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Process accounting logs information about every process that runs to completion on the system, including the amount of CPU time, memory, etc. consumed by each process. </xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>While process accounting data would seem like useful information in the wake of a potential security incident on the system, kernel-level auditing with the "<xhtml:span class="inline_block">+argv,arge</xhtml:span>" policy (as enabled in Item 4.9 Enable Kernel Level Auditing) provides more information about each process execution in general (although kernel-level auditing does not capture system resource usage information).  Both process accounting and kernel-level auditing can be a significant performance drain on the system, so enabling both seems excessive given the large amount of overlap in the information each provides.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="code_block"># ln -s /etc/init.d/acct /etc/rc3.d/S99acct <xhtml:br/># /etc/init.d/acct start</xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_10.2_Use_full_path_names_in_etcdfsdfstab_file" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Use full path names in /etc/dfs/dfstab file</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The commands in the <xhtml:span class="inline_block">dfstab </xhtml:span>file are executed via the <xhtml:span class="inline_block">/usr/sbin/shareall </xhtml:span>script at boot time, as well as by administrators executing the <xhtml:span class="inline_block">shareall </xhtml:span>command during the uptime of the machine. </xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>It seems prudent to use the absolute pathname to the <xhtml:span class="inline_block">share </xhtml:span>command to protect against any exploits stemming from an attack on the administrator's PATH environment, etc.  However, if an attacker is able to corrupt <xhtml:span class="inline_block">
                  <xhtml:em>root</xhtml:em>
               </xhtml:span>'s path to this extent, other attacks seem more likely and more damaging to the integrity of the system.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="code_block"># cd /etc/dfs<xhtml:br/># awk '($1 == "share") { $1 = "/usr/sbin/share" }; { print }' dfstab  \ &gt;dfstab.new<xhtml:br/># mv dfstab.new dfstab<xhtml:br/># pkgchk -f -n -p /etc/dfs/dfstab</xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_10.3_Restrict_access_to_power_management_functions" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Restrict access to power management functions</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The settings in <xhtml:span class="inline_block">/etc/default/power </xhtml:span>control which users have access to the configuration settings for the system power management and checkpoint and resume features.  By setting both values to -, configuration changes are restricted to only the root user. </xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Given that the benchmark document disables the power management daemon by default, the effect of these settings is essentially zero, but sites may wish to make this configuration change as a "defense in depth" measure.</xhtml:p>
            <xhtml:p>At present, the file <xhtml:span class="inline_block">/etc/default/power </xhtml:span>is not marked as volatile in the package database, so the <xhtml:span class="inline_block">pkgchk</xhtml:span> command in this item returns an error. The following bug has been filed in relation to this:</xhtml:p>
            <xhtml:p>4503253 several ON configuration files should be type `e', not `f'</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="code_block"># cd /etc/default<xhtml:br/># awk '/^PMCHANGEPERM=/  { $1 = "PMCHANGEPERM=-" }<xhtml:br/>       /^CPRCHANGEPERM=/ { $1 = "CPRCHANGEPERM=-" }<xhtml:br/>                         { print }' power &gt;power.new<xhtml:br/># mv power.new power<xhtml:br/># pkgchk -f -n -p /etc/default/power </xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_10.4_Restrict_access_to_sys-suspend_feature" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Restrict access to sys-suspend feature</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The <xhtml:span class="inline_block">/etc/default/sys-suspend </xhtml:span>settings control which users are allowed to use the <xhtml:span class="inline_block">sys-suspend </xhtml:span>command to shut down the system.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Bear in mind that  users with physical access to the system can simply remove power from the machine if they are truly motivated to take the system off-line, and granting <xhtml:span class="inline_block">sys-suspend </xhtml:span>access may be a more graceful way of allowing normal users to shut down their own machines.</xhtml:p>
            <xhtml:p>At present, the file <xhtml:span class="inline_block">/etc/default/sys-suspend </xhtml:span>is not marked as volatile in the package database, so the <xhtml:span class="inline_block">pkgchk </xhtml:span>command in this item returns an error. The following bug has been filed in relation to this:</xhtml:p>
            <xhtml:p>6555732 /etc/default/sys-suspend is an editable file</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="code_block"># cd /etc/default<xhtml:br/># awk '/^PERMS=/ { $1 = "PERMS=-" }<xhtml:br/>               { print }' sys-suspend &gt;sys-suspend.new<xhtml:br/># mv sys-suspend.new sys-suspend<xhtml:br/># pkgchk -f -n -p /etc/default/sys-suspend </xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_10.5_Create_symlinks_for_dangerous_files" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Create symlinks for dangerous files</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The <xhtml:span class="inline_block">/.rhosts</xhtml:span>, <xhtml:span class="inline_block">/.shosts</xhtml:span>, and <xhtml:span class="inline_block">/etc/hosts.equiv </xhtml:span>files enable a weak form of access control.  Attackers will often target these files as part of their exploit scripts.  By linking these files to <xhtml:span class="inline_block">/dev/null</xhtml:span>, any data that an attacker writes to these files is simply discarded (though an astute attacker can still remove the link prior to writing their malicious data). </xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>The benchmark already disables <xhtml:span class="inline_block">.rhosts</xhtml:span>-style authentication in several ways, so the additional security provided by creating these symlinks is minimal.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="code_block"># for file in /.rhosts /.shosts /etc/hosts.equiv; do <xhtml:br/>    rm -f $file<xhtml:br/>
                     <xhtml:br/>    ln -s /dev/null $file<xhtml:br/>done </xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_10.6_Remove_Support_for_Internet_Services_inetd" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Remove Support for Internet Services (inetd)</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>If the actions in this section result in disabling all <xhtml:span class="inline_block">inetd</xhtml:span>-based services, then there is no point in running <xhtml:span class="inline_block">inetd</xhtml:span> at boot time. </xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>If <xhtml:span class="inline_block">inetd</xhtml:span>-based services are ever re-enabled in the future it will be necessary to re-enable the <xhtml:span class="inline_block">inetd </xhtml:span>daemon as well ("<xhtml:span class="inline_block">svcadm enable svc:/network/inetd:default</xhtml:span>").</xhtml:p>

         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="code_block"># svcadm disable svc:/network/inetd </xhtml:code>
                  <xhtml:p>
Note:  As stated at the  beginning of this Appendix, this item is not checked by the automated scoring tool provided with the benchmark document.  However, if inetd is disabled, then after a system restart other disabled services which utilize inetd as a restarter will begin reporting their status as "uninitialized" rather than "disabled".  The security of the system in regard to those services will not have been diminished.  However, the automated scoring tool checks only for "disabled" status as returned from the svcs command,  so there will be a negative effect on the overall score.
</xhtml:p>
                  <xhtml:p>
The Solaris command inetadm (without arguments) may be used to list the services using inetd as a restarter.
</xhtml:p>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
   </xccdf:Group>
   <xccdf:Group id="xccdf_org.cisecurity.benchmarks_group_11_Appendix_Application_Notes">
      <xccdf:title xml:lang="en">Appendix: Application Notes</xccdf:title>
      <xccdf:description xml:lang="en">
         <xhtml:p>The items in this section are specific to applications that are not enabled by default. If you are using these applications, follow the guidance in this section.</xhtml:p>
      </xccdf:description>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_11.1_Samba_Enable_SSH_Port_Forwarding_in_Web_Admin_Tool" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Samba: Enable SSH Port Forwarding in Web Admin Tool</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Samba supports use of SSH to secure the client server connection.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>The Samba Web Admin Tool (SWAT) must be utilized with SSH to ensure a secure connection between the client and the server.  The SSH daemon on the server must be configured to allow port forwarding.  If SWAT is being utilized to administer Samba on the server, perform the following command:</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="code_block"># awk '/^AllowTcpForwarding/                { $2 = "yes" }   \<xhtml:br/>     { print }' /etc/ssh/sshd_config &gt; /etc/ssh/sshd_config.new<xhtml:br/># /usr/bin/mv /etc/ssh/sshd_config.new /etc/ssh/sshd_config<xhtml:br/># /usr/sbin/pkgchk -f -n -p /etc/ssh/sshd_config<xhtml:br/># /usr/sbin/svcadm restart svc:/network/ssh</xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_11.2_Samba_Set_Secure_Permissions_on_smb.conf_File" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Samba: Set Secure Permissions on smb.conf File</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The <xhtml:span class="inline_block">smb.conf </xhtml:span>file is only to be writeable by root to prevent unauthorized changes of the configuration file</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>With root the only uid able to write the configuration file, the <xhtml:span class="inline_block">smb.conf </xhtml:span>will be protected from unauthorized changes.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>The default location for <xhtml:span class="inline_block">smb.conf </xhtml:span>is <xhtml:span class="inline_block">/usr/local/samba/lib</xhtml:span>. However, the file can be installed in other places by samba installation packages. If the configuration is not placed in the <xhtml:span class="inline_block">/usr/local/samba/lib </xhtml:span>directory, change the remediation and audit commands to reflect the correct location.</xhtml:p>
                  <xhtml:code class="code_block"># chmod 644 /usr/local/samba/lib/smb.conf </xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_11.3_Samba_Set_Group_Ownership_of_smb.conf_File" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Samba: Set Group Ownership of smb.conf File</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The owner smb.conf is to be set to root, so that root can properly control the file.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>By setting root as the owner, only root can manipulate the permissions on the file, and thus, only root can alter the file.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="code_block"># chown root /usr/local/samba/lib/smb.conf </xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_11.4_Samba_Set_Secure_Permissions_on_smbpasswd_File" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Samba: Set Secure Permissions on smbpasswd File</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Set the permissions of the smbpasswd file to 600, so that the contents of the file can not be viewed by any user other than root</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>If the smbpasswd file were set to read access for other users, the lanman hashes could be accessed by an unauthorized user and cracked using various password cracking tools. Setting the file to 600 limits access to the file by users other than root.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="code_block"># chmod 600 /etc/sfw/private/smbpasswd </xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_11.5_Samba_Set_Group_Ownership_of_smbpasswd_File" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Samba: Set Group Ownership of smbpasswd File</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The <xhtml:span class="inline_block">smbpasswd </xhtml:span>file contains the encrypted passwords for Samba users.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>It is important to protect the encrypted passwords from unauthorized access to prevent the use of password cracking tools to gain access.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="code_block"># chgrp root /etc/sfw/private/smbpasswd </xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_11.6_Samba_Set_Secure_smb.conf_File_Options" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Samba: Set Secure smb.conf File Options</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The <xhtml:span class="inline_block">smb.conf </xhtml:span>file is the configuration file for the Samba suite and contains runtime configuration information for Samba.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>All configuration files must be protected from tampering.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="code_block"># chmod 644 /etc/samba/smb.conf<xhtml:br/># chown root /etc/samba/smb.conf<xhtml:br/># chgrp root /etc/samba/smb.conf </xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_11.7_sendmail_Set_Secure_Logfile_Ownership_to_the_root_User" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">sendmail: Set Secure Logfile Ownership to the root User</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>Set the ownership of the sendmail log file (by default on Solaris 10, /var/log/syslog) to be owned by root.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>By setting the ownership of the sendmail log file to root, only root can change the permissions of the log file.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="code_block"># chown root /var/log/syslog </xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_11.8_sendmail_Set_Secure_Permissions_on_Log_File" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">sendmail: Set Secure Permissions on Log File</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>The log file for sendmail (by default in Solaris 10, <xhtml:span class="inline_block">/var/log/syslog</xhtml:span>) is set to 644 so that sendmail (running as root) can write to the file and anyone can read the file.</xhtml:p>
            <xhtml:p>
               <xhtml:strong>
                  <xhtml:span style="font-size: 11pt; font-family: Calibri, sans-serif;">Note: This recommendation applies to all zones</xhtml:span>
               </xhtml:strong>
            </xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en">
            <xhtml:p>Setting the log file <xhtml:span class="inline_block">/var/log/syslog </xhtml:span>to 644 allows sendmail (running as root) to create entries, but prevents anyone (other than root) from modifying the log file, thus rendering the log data worthless.</xhtml:p>
         </xccdf:rationale>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:p>Perform the following to implement the recommended state:</xhtml:p>
                  <xhtml:code class="code_block"># chmod 644 /var/log/syslog </xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
      <xccdf:Rule id="xccdf_org.cisecurity.benchmarks_rule_11.9_Service_Manifest_for_libsvcmethodcis_netconfig.sh" role="unscored" selected="false" weight="0.0">
         <xccdf:title xml:lang="en">Service Manifest for /lib/svc/method/cis_netconfig.sh</xccdf:title>
         <xccdf:description xml:lang="en">
            <xhtml:p>This script is to be used for the Action described in Item 3.4 Modify IP Parameters.</xhtml:p>
         </xccdf:description>
         <xccdf:rationale xml:lang="en"/>
         <xccdf:fixtext xml:lang="en">
            <xhtml:div>
               <xhtml:p>
                  <xhtml:code># cat &gt; cis_netconfig.xml &lt;&lt; END
&lt;?xml version="1.0"?&gt;
&lt;!DOCTYPE service_bundle SYSTEM
"/usr/share/lib/xml/dtd/service_bundle.dtd.1"&gt;<xhtml:br/>
&lt;service_bundle type='manifest' name='CIS:cis_netconfig'&gt;
<xhtml:br/>&lt;service
    name='site/cis_netconfig'
    type='service'
    version='1'&gt;
<xhtml:br/>    &lt;create_default_instance enabled='true' /&gt;
<xhtml:br/>    &lt;single_instance /&gt;
<xhtml:br/>    &lt;dependency
        name='usr'
        type='service'
        grouping='require_all'
        restart_on='none'&gt;
        &lt;service_fmri value='svc:/system/filesystem/minimal' /&gt;
    &lt;/dependency&gt;
<xhtml:br/>&lt;!-- Run ndd commands after network/physical is plumbed. --&gt;
    &lt;dependency
        name='network-physical'
        grouping='require_all'
        restart_on='none'
        type='service'&gt;
        &lt;service_fmri value='svc:/network/physical' /&gt;
    &lt;/dependency&gt;
<xhtml:br/>&lt;!-- but run the commands before network/initial --&gt;
    &lt;dependent
        name='ndd_network-initial'
        grouping='optional_all'
        restart_on='none'&gt;
        &lt;service_fmri value='svc:/network/initial' /&gt;
    &lt;/dependent&gt;
<xhtml:br/>    &lt;exec_method
        type='method'
        name='start'
        exec='/lib/svc/method/cis_netconfig.sh'
        timeout_seconds='60' /&gt;
<xhtml:br/>    &lt;exec_method
        type='method'
        name='stop'143 | P a g e
        exec=':true'
        timeout_seconds='60' /&gt;
<xhtml:br/>    &lt;property_group name='startd' type='framework'&gt;
        &lt;propval name='duration' type='astring'
            value='transient' /&gt;
    &lt;/property_group&gt;
<xhtml:br/>    &lt;stability value='Unstable' /&gt;
<xhtml:br/>    &lt;template&gt;
        &lt;common_name&gt;
            &lt;loctext xml:lang='C'&gt;
                CIS IP Network Parameter Set
            &lt;/loctext&gt;
        &lt;/common_name&gt;
    &lt;/template&gt;
<xhtml:br/>&lt;/service&gt;
<xhtml:br/>&lt;/service_bundle&gt;
END</xhtml:code>
                  <xhtml:p> </xhtml:p>
               </xhtml:p>
            </xhtml:div>
         </xccdf:fixtext>
      </xccdf:Rule>
   </xccdf:Group>
<xccdf:signature><ds:Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
<ds:SignedInfo>
<ds:CanonicalizationMethod Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315"/>
<ds:SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1"/>
<ds:Reference URI="">
<ds:Transforms>
<ds:Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature"/>
<ds:Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"/>
</ds:Transforms>
<ds:DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/>
<ds:DigestValue>oFd6pSYiYRx30ga7bqGUflPd6Eg=</ds:DigestValue>
</ds:Reference>
</ds:SignedInfo>
<ds:SignatureValue>
FSQ2O/E4mb/AfickxtmUQvk1K9csPp2sM7PARbyyAOFvHcCg/ZRCoS1gKQKS0LwGSfGdFC1FNaJx
zPovj63B7lfAFCFxlj99+SFaiPYqJ9NabySc5BipkgPeGC9MlGy0V93FUDWFco6u48p7ydHiRHt5
KCbsJW5ylZFl7zF0rCjvm57PTGu68lbXwjJRuzN/W3KLhFcpR30XNYD2hXIX1sNpxaUcXV956fJd
TBIkgv9zn5kOKgBvrciqJx4sJlVIxsKZmlOvh/V1mdZ29sswRKK4PzXtHDaR13KHGLr2NQ/h9KQS
AJ6lyER5YpV5jincstIiZ56ZDU6M6Vsg0iA8DQ==
</ds:SignatureValue>
<ds:KeyInfo>
<ds:X509Data>
<ds:X509Certificate>
MIIFRzCCBC+gAwIBAgIHTwpN/4tOfDANBgkqhkiG9w0BAQsFADCBtDELMAkGA1UEBhMCVVMxEDAO
BgNVBAgTB0FyaXpvbmExEzARBgNVBAcTClNjb3R0c2RhbGUxGjAYBgNVBAoTEUdvRGFkZHkuY29t
LCBJbmMuMS0wKwYDVQQLEyRodHRwOi8vY2VydHMuZ29kYWRkeS5jb20vcmVwb3NpdG9yeS8xMzAx
BgNVBAMTKkdvIERhZGR5IFNlY3VyZSBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkgLSBHMjAeFw0xNDA5
MTgxNDM0MjFaFw0xNzEwMjAxODU3NDRaMIGTMQswCQYDVQQGEwJVUzERMA8GA1UECBMITmV3IFlv
cmsxFzAVBgNVBAcTDkVhc3QgR3JlZW5idXNoMSswKQYDVQQKEyJDZW50ZXIgZm9yIEludGVybmV0
IFNlY3VyaXR5LCBJbmMuMSswKQYDVQQDEyJDZW50ZXIgZm9yIEludGVybmV0IFNlY3VyaXR5LCBJ
bmMuMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0MGnj6yX2QHklGadAfTBxssvP+2f
YegPpNGXfEmPXZXrWeME2BqIbO+hKXTuwUucRK6RvQJTjgzNgOhQx3HcclRwQB4xj/14hOoZSeQ3
haw/Xjl4WofsWizM5j/g1iWBgxi3xk/aREfKKb0ulBMtP/WYFpSRjZ/Z7m5QKii0feJPxbf+wrZ+
UvNZ8uBdO+SEmbhS/DVESsEWzXn6StbQpa2dno2aIOGZXQKcUY2d3WZ4Zk+zawFcRUYslVIrOhMb
0e3+hbJEtFwm5ekehdNimSozYyyLGZJonLlvr8PfmvQ1ceu7enWCRfZrRWAlDHFaouLdtU/OmXc+
Um7cLwz8VQIDAQABo4IBezCCAXcwDAYDVR0TAQH/BAIwADATBgNVHSUEDDAKBggrBgEFBQcDAzAO
BgNVHQ8BAf8EBAMCB4AwNQYDVR0fBC4wLDAqoCigJoYkaHR0cDovL2NybC5nb2RhZGR5LmNvbS9n
ZGlnMnM1LTAuY3JsMFMGA1UdIARMMEowSAYLYIZIAYb9bQEHFwIwOTA3BggrBgEFBQcCARYraHR0
cDovL2NlcnRpZmljYXRlcy5nb2RhZGR5LmNvbS9yZXBvc2l0b3J5LzB2BggrBgEFBQcBAQRqMGgw
JAYIKwYBBQUHMAGGGGh0dHA6Ly9vY3NwLmdvZGFkZHkuY29tLzBABggrBgEFBQcwAoY0aHR0cDov
L2NlcnRpZmljYXRlcy5nb2RhZGR5LmNvbS9yZXBvc2l0b3J5L2dkaWcyLmNydDAfBgNVHSMEGDAW
gBRAwr0njsw0gzCiM9f7bLPwtCyAzjAdBgNVHQ4EFgQU+3zn+CEg6a2xPqlBXvn64hUyoB4wDQYJ
KoZIhvcNAQELBQADggEBAEh76h1GtJ0pj04in+RUymB7fqPh6HFILkOLlTPnveyXCoHYT2M46DET
EA/NKYkoF2KA3QiZ1b+PMViuTYG2pDs71eFVPADuBCGf9IFufCDY9mPvjQiFDlLNMknXxACD8TjC
hqz+uZT2uLPw/YxkJIsCxrTQJ//ga/fHfZDrKgQfbVzxjD/4WKDe8HktjKcn+NWGPJNMgmO+IHrK
if6TB1xTo32W9QzwoXvBdLnziAUGZZghEulq6h3RCMzKPzpx5JiLlOz6JzqXHvrua+yUbr4A29Vy
vkwWgJWjyvJd2uq9MQ9l49kkrD84m41PSwpaHO99nEHRgRykopxIt8AHsIQ=
</ds:X509Certificate>
</ds:X509Data>
<ds:KeyValue>
<ds:RSAKeyValue>
<ds:Modulus>
0MGnj6yX2QHklGadAfTBxssvP+2fYegPpNGXfEmPXZXrWeME2BqIbO+hKXTuwUucRK6RvQJTjgzN
gOhQx3HcclRwQB4xj/14hOoZSeQ3haw/Xjl4WofsWizM5j/g1iWBgxi3xk/aREfKKb0ulBMtP/WY
FpSRjZ/Z7m5QKii0feJPxbf+wrZ+UvNZ8uBdO+SEmbhS/DVESsEWzXn6StbQpa2dno2aIOGZXQKc
UY2d3WZ4Zk+zawFcRUYslVIrOhMb0e3+hbJEtFwm5ekehdNimSozYyyLGZJonLlvr8PfmvQ1ceu7
enWCRfZrRWAlDHFaouLdtU/OmXc+Um7cLwz8VQ==
</ds:Modulus>
<ds:Exponent>AQAB</ds:Exponent>
</ds:RSAKeyValue>
</ds:KeyValue>
</ds:KeyInfo>
</ds:Signature></xccdf:signature></xccdf:Benchmark>